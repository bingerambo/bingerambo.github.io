<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>斌哥的小站|Binge Blog</title><link>http://bingerambo.com/</link><description>斌哥的小站 | 这里是 @BingeRambo斌哥兰博的个人博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>feibinge@163.com (Binge)</managingEditor><webMaster>feibinge@163.com (Binge)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 08 Oct 2021 08:43:17 +0800</lastBuildDate><atom:link href="http://bingerambo.com/index.xml" rel="self" type="application/rss+xml"/><item><title>lxcfs的k8s部署方式，实现容器资源隔离视图</title><link>http://bingerambo.com/posts/2021/10/lxcfs%E7%9A%84k8s%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0%E5%AE%B9%E5%99%A8%E8%B5%84%E6%BA%90%E9%9A%94%E7%A6%BB%E8%A7%86%E5%9B%BE/</link><pubDate>Fri, 08 Oct 2021 08:43:17 +0800</pubDate><author>作者</author><guid>http://bingerambo.com/posts/2021/10/lxcfs%E7%9A%84k8s%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0%E5%AE%B9%E5%99%A8%E8%B5%84%E6%BA%90%E9%9A%94%E7%A6%BB%E8%A7%86%E5%9B%BE/</guid><description>&lt;p>本文通过lxcfs的k8s部署方式，实现容器资源隔离视图；并通过k8s参数设置了容器的shm大小&lt;/p></description></item><item><title>K8S go-client 源码分析</title><link>http://bingerambo.com/posts/2021/08/k8s-go-client-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link><pubDate>Tue, 31 Aug 2021 08:43:17 +0800</pubDate><author>作者</author><guid>http://bingerambo.com/posts/2021/08/k8s-go-client-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid><description>&lt;p>K8S go-client 源码分析，k8s controller开发所需&lt;/p></description></item><item><title>K8S获取客户端ip[client ip]方法</title><link>http://bingerambo.com/posts/2021/07/k8s%E8%8E%B7%E5%8F%96%E5%AE%A2%E6%88%B7%E7%AB%AFipclient-ip%E6%96%B9%E6%B3%95/</link><pubDate>Thu, 01 Jul 2021 08:43:17 +0800</pubDate><author>作者</author><guid>http://bingerambo.com/posts/2021/07/k8s%E8%8E%B7%E5%8F%96%E5%AE%A2%E6%88%B7%E7%AB%AFipclient-ip%E6%96%B9%E6%B3%95/</guid><description>&lt;p>一种测试验证K8S获取客户端ip[client ip]的方法&lt;/p></description></item><item><title>Anaconda配置python虚拟环境</title><link>http://bingerambo.com/posts/2021/06/anaconda%E9%85%8D%E7%BD%AEpython%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/</link><pubDate>Wed, 16 Jun 2021 08:43:17 +0800</pubDate><author>作者</author><guid>http://bingerambo.com/posts/2021/06/anaconda%E9%85%8D%E7%BD%AEpython%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/</guid><description>&lt;p>Anaconda是一个打包的集合，里面预装好了conda、某个版本的python、各种packages如：numpy，pandas，scipy，scikit-learn等。
&lt;br>
conda将几乎所有的工具、第三方包都当作package进行管理，甚至包括python 和conda自身。&lt;/p></description></item><item><title>Ingress介绍</title><link>http://bingerambo.com/posts/2021/06/ingress%E4%BB%8B%E7%BB%8D/</link><pubDate>Wed, 02 Jun 2021 08:43:17 +0800</pubDate><author>作者</author><guid>http://bingerambo.com/posts/2021/06/ingress%E4%BB%8B%E7%BB%8D/</guid><description>&lt;p>Ingress概念和原理介绍&lt;/p></description></item><item><title>KubeEdge介绍和设计原理</title><link>http://bingerambo.com/posts/2021/05/kubeedge%E4%BB%8B%E7%BB%8D%E5%92%8C%E8%AE%BE%E8%AE%A1%E5%8E%9F%E7%90%86/</link><pubDate>Wed, 26 May 2021 08:43:17 +0800</pubDate><author>作者</author><guid>http://bingerambo.com/posts/2021/05/kubeedge%E4%BB%8B%E7%BB%8D%E5%92%8C%E8%AE%BE%E8%AE%A1%E5%8E%9F%E7%90%86/</guid><description>&lt;p>KubeEdge架构和组件介绍
KubeEdge提供了一个容器化的边缘计算平台，该平台具有内在的可伸缩性。由于模块化和优化的设计，它是轻量级的(较小的占用空间和运行内存)，可以部署在低资源的设备上。同样，边缘节点可以具有不同的硬件结构和不同的硬件配置。对于设备连接，它可以支持多个协议，并使用标准的基于MQTT的通信.这有助于有效地扩展具有新节点和设备的边缘集群。&lt;/p></description></item><item><title>K8S中的CRD开发</title><link>http://bingerambo.com/posts/2021/05/k8s%E4%B8%AD%E7%9A%84crd%E5%BC%80%E5%8F%91/</link><pubDate>Tue, 04 May 2021 08:43:17 +0800</pubDate><author>作者</author><guid>http://bingerambo.com/posts/2021/05/k8s%E4%B8%AD%E7%9A%84crd%E5%BC%80%E5%8F%91/</guid><description>&lt;p>介绍K8S使用CRD进行开发的操作步骤。&lt;/p></description></item><item><title>Go程序性能分析pprof</title><link>http://bingerambo.com/posts/2021/04/go%E7%A8%8B%E5%BA%8F%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90pprof/</link><pubDate>Mon, 05 Apr 2021 08:43:17 +0800</pubDate><author>作者</author><guid>http://bingerambo.com/posts/2021/04/go%E7%A8%8B%E5%BA%8F%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90pprof/</guid><description><![CDATA[<p>Golang作为一门高效的语言，性能监控和调试非常重要，如何进行性能监控和分析是优化的关键。</p>
<p>Go语言项目中的性能优化主要有以下几个方面：</p>
<ul>
<li>CPU profile：报告程序的 CPU 使用情况，按照一定频率去采集应用程序在 CPU 和寄存器上面的数据</li>
<li>Memory Profile（Heap Profile）：报告程序的内存使用情况</li>
<li>Block Profiling：报告 goroutines 不在运行状态的情况，可以用来分析和查找死锁等性能瓶颈</li>
<li>Goroutine Profiling：报告 goroutines 的使用情况，有哪些 goroutine，它们的调用关系是怎样的</li>
</ul>]]></description></item><item><title>编译kube-batch和density</title><link>http://bingerambo.com/posts/2021/03/%E7%BC%96%E8%AF%91kube-batch%E5%92%8Cdensity/</link><pubDate>Wed, 31 Mar 2021 08:43:17 +0800</pubDate><author>作者</author><guid>http://bingerambo.com/posts/2021/03/%E7%BC%96%E8%AF%91kube-batch%E5%92%8Cdensity/</guid><description>&lt;p>编译kube-batch项目和自己开发的压测工具density。&lt;/p></description></item><item><title>Docker常用操作命令集合</title><link>http://bingerambo.com/posts/2021/03/docker%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%E9%9B%86%E5%90%88/</link><pubDate>Fri, 12 Mar 2021 08:43:17 +0800</pubDate><author>作者</author><guid>http://bingerambo.com/posts/2021/03/docker%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%E9%9B%86%E5%90%88/</guid><description>&lt;p>Docker常用操作命令集合，持续更新~~~&lt;/p></description></item></channel></rss>