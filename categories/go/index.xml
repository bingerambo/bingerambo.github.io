<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Go - 分类 - 斌哥的小站|Binge Blog</title><link>http://bingerambo.com/categories/go/</link><description>Go - 分类 - 斌哥的小站|Binge Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>feibinge@163.com (Binge)</managingEditor><webMaster>feibinge@163.com (Binge)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 29 May 2023 08:43:17 +0800</lastBuildDate><atom:link href="http://bingerambo.com/categories/go/" rel="self" type="application/rss+xml"/><item><title>GO编程陷阱和常见错误</title><link>http://bingerambo.com/posts/2023/05/go%E7%BC%96%E7%A8%8B%E9%99%B7%E9%98%B1%E5%92%8C%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/</link><pubDate>Mon, 29 May 2023 08:43:17 +0800</pubDate><author>作者</author><guid>http://bingerambo.com/posts/2023/05/go%E7%BC%96%E7%A8%8B%E9%99%B7%E9%98%B1%E5%92%8C%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/</guid><description>&lt;p>Go 是一种简单而有趣的语言，但是，与任何其他语言一样，它也有一些陷阱……其中许多陷阱并不完全是 Go 的错。其中一些错误是自然陷阱。其他是由于错误的假设和缺少细节。&lt;/p></description></item><item><title>【转载】gin介绍</title><link>http://bingerambo.com/posts/2022/07/%E8%BD%AC%E8%BD%BDgin%E4%BB%8B%E7%BB%8D/</link><pubDate>Sat, 09 Jul 2022 08:43:17 +0800</pubDate><author>作者</author><guid>http://bingerambo.com/posts/2022/07/%E8%BD%AC%E8%BD%BDgin%E4%BB%8B%E7%BB%8D/</guid><description>介绍 gin 框架基于 httprouter 实现最重要的路由模块,采用类似字典树一样的数据结构来存储路由与handle方法的映射.也是框架高性能的原因,有兴趣的同学可以</description></item><item><title>Go module介绍</title><link>http://bingerambo.com/posts/2022/04/go-module%E4%BB%8B%E7%BB%8D/</link><pubDate>Sun, 03 Apr 2022 08:43:17 +0800</pubDate><author>作者</author><guid>http://bingerambo.com/posts/2022/04/go-module%E4%BB%8B%E7%BB%8D/</guid><description>&lt;p>Go module相关知识点介绍。&lt;/p></description></item><item><title>Golang交叉编译工具Gox的安装</title><link>http://bingerambo.com/posts/2022/03/golang%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7gox%E7%9A%84%E5%AE%89%E8%A3%85/</link><pubDate>Thu, 03 Mar 2022 08:43:17 +0800</pubDate><author>作者</author><guid>http://bingerambo.com/posts/2022/03/golang%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7gox%E7%9A%84%E5%AE%89%E8%A3%85/</guid><description>&lt;p>本文介绍Golang交叉编译工具Gox的安装&lt;/p></description></item><item><title>go-map源码介绍</title><link>http://bingerambo.com/posts/2022/02/go-map%E6%BA%90%E7%A0%81%E4%BB%8B%E7%BB%8D/</link><pubDate>Mon, 21 Feb 2022 08:43:17 +0800</pubDate><author>作者</author><guid>http://bingerambo.com/posts/2022/02/go-map%E6%BA%90%E7%A0%81%E4%BB%8B%E7%BB%8D/</guid><description>[转载] go-map源码简单分析 map遍历为什么时随机的？ 文章从这里搬运：https://www.helloworld.net/p/3714</description></item><item><title>Go程序性能分析pprof</title><link>http://bingerambo.com/posts/2021/04/go%E7%A8%8B%E5%BA%8F%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90pprof/</link><pubDate>Mon, 05 Apr 2021 08:43:17 +0800</pubDate><author>作者</author><guid>http://bingerambo.com/posts/2021/04/go%E7%A8%8B%E5%BA%8F%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90pprof/</guid><description><![CDATA[<p>Golang作为一门高效的语言，性能监控和调试非常重要，如何进行性能监控和分析是优化的关键。</p>
<p>Go语言项目中的性能优化主要有以下几个方面：</p>
<ul>
<li>CPU profile：报告程序的 CPU 使用情况，按照一定频率去采集应用程序在 CPU 和寄存器上面的数据</li>
<li>Memory Profile（Heap Profile）：报告程序的内存使用情况</li>
<li>Block Profiling：报告 goroutines 不在运行状态的情况，可以用来分析和查找死锁等性能瓶颈</li>
<li>Goroutine Profiling：报告 goroutines 的使用情况，有哪些 goroutine，它们的调用关系是怎样的</li>
</ul>]]></description></item></channel></rss>